
((((#<edge486 268 near 269> #<edge487 269 HYPHEN 270> #<edge488 270 cognate 271>)
   (:LOWER :HYPHEN :LOWER))
  "near-cognate" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge253 141 number 142> #<edge254 142 bio-entity 143>) (:DIGITS :LOWER)) "63nt"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge34 5 terminate 6> #<edge35 6 HYPHEN 7> #<edge36 7 reinitiation 8>)
   (:LOWER :HYPHEN :LOWER))
  "termination-reinitiation" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge922 inactive, resource 922> #<edge923 inactive, resource 923>
    #<edge924 inactive, resource 924>)
   (:LOWER :HYPHEN :LOWER))
  "termination-reinitiation" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge721 388 "of" 389> #<edge722 388 of 389> #<edge723 389 downstream-segment 390>)
   (:LOWER :HYPHEN :LOWER))
  "termination-reinitiation" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge560 310 bio-complex 311> #<edge561 311 always 312> #<edge563 313 "the" 314>)
   (:LOWER :HYPHEN :LOWER))
  "stem-loop" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge254 142 bio-entity 143> #<edge255 143 downstream-segment 144> #<edge257 144 "of" 145>)
   (:LOWER :HYPHEN :LOWER))
  "stem-loop" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge116 29 of 36> #<edge117 27 start 29> #<edge118 21 of 25>) (:LOWER :HYPHEN :LOWER))
  "base-paired" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge524 271 bio-entity 273> #<edge525 268 bio-entity 273> #<edge526 267 bio-entity 273>)
   (:LOWER :HYPHEN :LOWER))
  "base-pairing" MAKE-HYPHENATED-STRUCTURE)
 (((:MIXED #<edge522 256 bio-entity 259> #<edge523 255 bio-entity 259>) (:MIXED :HYPHEN :MIXED))
  "fMet-tRNA" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge28 2 study-bio-method 3> #<edge521 257 bio-entity 259>) (:PHOSPHORYLATE :LOWER)) "P-site"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge490 272 bio-entity 273> #<edge491 276 "the" 277> :CAPITALIZED)
   (:CAPITALIZED :HYPHEN :CAPITALIZED))
  "Shine-Dalgarno" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge24 415 "eif3" 417> #<edge435 223 point-mutation 225> #<edge436 220 point-mutation 222>
    #<edge437 220 point-mutation 225> #<edge26 415 bio-complex 417>)
   (:BIO-COMPLEX :FORWARD-SLASH :NUCLEOTIDE :FORWARD-SLASH :BIO-ENTITY))
  "eIF2/GTP/Met-tRNAi" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge256 143 downstream 144> #<edge257 144 "of" 145> #<edge258 144 of 145>)
   (:LOWER :HYPHEN :LOWER))
  "base-pairing" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge295 103 to 110> #<edge281 137 move-something-somewhere 139> #<edge283 145 position 148>
    #<edge285 104 efficiency 110> #<edge286 144 of 152> #<edge21 376 wild-type 379>)
   (:POINT-MUTATION :FORWARD-SLASH :PROTEIN :SINGLE-DIGIT :FORWARD-SLASH :BIO-COMPLEX))
  "40S/eIF1/eIF3" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge41 11 the 12> #<edge42 12 importance 13> #<edge43 13 "of" 14>) (:LOWER :HYPHEN :LOWER))
  "termination-reinitiation" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge6 184 "by virtue of" 187> #<edge90 50 digit-sequence 51> #<edge91 50 number 51>
    #<edge92 52 COMMA 53> #<edge93 54 digit-sequence 55> #<edge94 54 number 55> :MIXED)
   (:BIO-COMPLEX :FORWARD-SLASH :NUCLEOTIDE :FORWARD-SLASH :CAPITALIZED :HYPHEN :MIXED))
  "eIF2/GTP/Met-tRNAi" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge38 9 have 10> #<edge39 10 suggest 11> #<edge40 11 "the" 12>)
   (:CAPITALIZED :HYPHEN :MIXED))
  "Met-tRNA" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge545 298 "of" 299> #<edge546 298 of 299> #<edge547 299 "a" 300>) (:LOWER :HYPHEN :LOWER))
  "termination-reinitiation" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge468 254 at 255> #<edge469 255 "a" 256> #<edge493 277 HYPHEN 278>)
   (:SINGLE-DIGIT :COLON :POINT-MUTATION))
  "1:18S" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge5 174 but-rather 176> #<edge301 87 show 90>) (:PROTEIN :LOWER)) "BM2yeast"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge284 145 position 152> #<edge285 104 efficiency 110> #<edge286 144 of 152>)
   (:LOWER :HYPHEN :LOWER))
  "termination-reinitiation" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge143 68 bio-complex 69> #<edge144 69 semicolon 70> #<edge145 70 "that" 71>)
   (:LOWER :HYPHEN :LOWER))
  "termination-reinitiation" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge27 1 sequencer 2> #<edge28 2 study-bio-method 3> #<edge29 2 study-data 3>)
   (:LOWER :HYPHEN :LOWER))
  "termination-reinitiation" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge752 411 bio-entity 412> #<edge753 412 "in" 413> #<edge754 412 in 413>)
   (:LOWER :HYPHEN :LOWER))
  "termination-reinitiation" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge582 332 digit-sequence 333> #<edge583 332 number 333> #<edge584 333 amino-acid 334>)
   (:LOWER :HYPHEN :LOWER))
  "termination-reinitiation" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge292 123 downstream 128> #<edge7 184 by-virtue-of 187>) (:FULL :-LIKE)) "IRES-like"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge463 250 COMMA 251> #<edge464 251 bio-complex 252> #<edge465 252 modal 253>)
   (:LOWER :HYPHEN :LOWER))
  "termination-reinitiation" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge446 231 bio-use 233> #<edge447 230 bio-use 233> #<edge448 236 bio-entity 238>)
   (:LOWER :HYPHEN :LOWER))
  "base-pairing" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge436 220 point-mutation 222> #<edge438 219 figure 225>) (:FORWARD-SLASH :SINGLE-DIGIT))
  "/2" NIL)
 (((#<edge433 244 efficiency 245> #<edge435 223 point-mutation 225>) (:SINGLE-CAP :SINGLE-DIGIT))
  "A1" REIFY-TWO-PART-LABEL)
 (((#<edge342 179 bio-complex 180> #<edge344 181 be 182>) (:SINGLE-CAP :SINGLE-DIGIT)) "A1"
  REIFY-TWO-PART-LABEL)
 (((#<edge17 314 wild-type 317> #<edge254 142 bio-entity 143> #<edge256 143 downstream 144>)
   (:CELL-LINE :FORWARD-SLASH :SINGLE-DIGIT))
  "A1-2/3" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge239 130 be 131> #<edge241 132 even 133>) (:SINGLE-CAP :SINGLE-DIGIT)) "A1"
  REIFY-TWO-PART-LABEL)
 (((#<edge188 91 "the" 92> #<edge190 92 distance 93>) (:FORWARD-SLASH :SINGLE-DIGIT)) "/2" NIL)
 (((#<edge13 285 close-to 287> #<edge183 87 pronoun/first/plural 88> #<edge15 300 wild-type 303>
    #<edge185 89 deictic-location 90> #<edge187 90 that 91>)
   (:BIO-ENTITY :HYPHEN :PROTEIN :SINGLE-CAP :SINGLE-DIGIT))
  "p2luc-BM2A1" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge5 174 but-rather 176> #<edge153 76 ability 77> #<edge7 184 by-virtue-of 187>
    #<edge155 77 to 78> #<edge157 79 only 80>)
   (:BIO-ENTITY :HYPHEN :PROTEIN :SINGLE-CAP :SINGLE-DIGIT))
  "p2luc-BM2A2" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge1 118 protein 120> #<edge146 70 that 71> #<edge3 139 up-to 141> #<edge148 72 COMMA 73>
    #<edge150 73 pronoun/inanimate 74>)
   (:BIO-ENTITY :HYPHEN :PROTEIN :SINGLE-CAP :SINGLE-DIGIT))
  "p2luc-BM2A1" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:LOWER #<edge579 329 window 330> #<edge581 331 article-figure 332>) (:LOWER :HYPHEN :PROTEIN))
  "pseudowild-type" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge543 297 choice-endurant 298> #<edge544 297 modifier 298> #<edge545 298 "of" 299>)
   (:LOWER :HYPHEN :LOWER))
  "termination-reinitiation" MAKE-HYPHENATED-STRUCTURE)
 (((:LOWER #<edge484 267 "a" 268> #<edge486 268 near 269>) (:LOWER :HYPHEN :PROTEIN))
  "pseudowild-type" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge23 393 due-to 395> #<edge447 230 bio-use 233> #<edge449 235 bio-entity 238>)
   (:PROTEIN :HYPHEN :DIGITS))
  "BM2-204" MAKE-HYPHENATED-PAIR)
 (((#<edge413 230 modal 231> #<edge414 231 be 232> #<edge415 232 bio-use 233>)
   (:LOWER :HYPHEN :LOWER))
  "termination-reinitiation" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge358 196 bio-entity 197> #<edge359 191 bio-complex 193> #<edge360 195 bio-entity 197>)
   (:LOWER :HYPHEN :LOWER))
  "base-pairing" MAKE-HYPHENATED-STRUCTURE)
 (((:LOWER #<edge352 191 the 192> #<edge354 193 terminate 194>) (:LOWER :HYPHEN :PROTEIN))
  "pseudowild-type" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge344 181 be 182> #<edge15 300 wild-type 303> #<edge345 182 tethere 183>
    #<edge346 187 "the" 188>)
   (:SINGLE-CAP :BIO-ENTITY :HYPHEN :PROTEIN))
  "A1/2-xnt" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge13 285 close-to 287> #<edge296 101 critical 103> #<edge298 98 critical 103>
    #<edge299 93 between 97> #<edge300 88 show 90>)
   (:BIO-ENTITY :SINGLE-CAP :SINGLE-DIGIT :HYPHEN :PROTEIN))
  "p2luc-BM2A2-xnt" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge9 214 wild-type 217> #<edge285 104 efficiency 110> #<edge287 139 up-to 143>
    #<edge288 135 start 137> #<edge289 130 detect 132>)
   (:BIO-ENTITY :SINGLE-CAP :SINGLE-DIGIT :HYPHEN :PROTEIN))
  "p2luc-BM2A1-xnt" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge211 110 and 111> #<edge212 111 "that" 112> #<edge213 111 that 112>)
   (:LOWER :HYPHEN :LOWER))
  "termination-reinitiation" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge43 13 "of" 14> #<edge44 13 of 14> #<edge45 14 "the" 15>) (:LOWER :HYPHEN :LOWER))
  "termination-reinitiation" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge300 88 show 90> #<edge301 87 show 90> #<edge303 90 that 91>) (:LOWER :HYPHEN :LOWER))
  "stem-loop" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge158 80 limit 81> #<edge159 81 movement 82> #<edge160 82 following-adj 83>)
   (:LOWER :HYPHEN :LOWER))
  "base-paired" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge54 19 stop 20> #<edge55 19 stop-endurant 20> #<edge56 20 bio-entity 21>)
   (:LOWER :HYPHEN :LOWER))
  "base-paired" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge576 327 "the" 328> #<edge578 328 reinitiation 329>) (:SINGLE-CAP :SINGLE-DIGIT)) "S1"
  REIFY-TWO-PART-LABEL)
 (((#<edge55 19 stop-endurant 20> #<edge479 262 amino-acid 263> #<edge481 265 or 266>)
   (:PROTEIN :HYPHEN :DIGITS))
  "BM2-210" MAKE-HYPHENATED-PAIR)
 (((#<edge374 170 lambda-expression 172> #<edge375 168 per 172> #<edge376 157 be 159>)
   (:LOWER :HYPHEN :LOWER))
  "termination-reinitiation" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge33 4 the 5> #<edge296 101 critical 103> #<edge298 98 critical 103>)
   (:PROTEIN :HYPHEN :DIGITS))
  "BM2-210" MAKE-HYPHENATED-PAIR)
 (((#<edge31 3 on 4> #<edge292 123 downstream 128> #<edge294 114 start 116>)
   (:PROTEIN :HYPHEN :DIGITS))
  "BM2-207" MAKE-HYPHENATED-PAIR)
 (((#<edge27 1 sequencer 2> #<edge282 146 position 148> #<edge284 145 position 152>)
   (:PROTEIN :HYPHEN :DIGITS))
  "BM2-204" MAKE-HYPHENATED-PAIR)
 (((#<edge79 34 number 35> #<edge80 36 COMMA 37> #<edge81 38 digit-sequence 39>)
   (:LOWER :HYPHEN :LOWER))
  "termination-reinitiation" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge340 178 "the" 179> #<edge264 149 article-figure 150> #<edge266 150 number 151>
    #<edge268 141 bio-entity 143> #<edge269 106 parentheses 110> #<edge270 148 parentheses 152>)
   (:PROTEIN :FORWARD-SLASH :SINGLE-DIGIT :SINGLE-CAP :HYPHEN :LOWER))
  "eIF4G/4A-dependent" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge203 103 "to" 104> #<edge204 103 to 104> #<edge205 104 reinitiation 105>)
   (:LOWER :HYPHEN :FULL))
  "non-AUG" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge548 299 a 300> #<edge549 303 bio-entity 304> #<edge31 3 on 4> #<edge550 304 and 305>)
   (:MIXED :HYPHEN :PROTEIN :LOWER))
  "CrPV-BM2start" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge544 297 modifier 298> #<edge545 298 "of" 299> #<edge29 2 study-data 3>
    #<edge546 298 of 299>)
   (:MIXED :HYPHEN :PROTEIN :WILD-TYPE))
  "CrPV-BM2wt" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge25 415 protein 417> #<edge440 202 reinitiation 204>) (:PROTEIN :WILD-TYPE)) "BM2wt"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge17 314 wild-type 317> #<edge259 145 pronoun/inanimate 146>) (:PROTEIN :WILD-TYPE))
  "BM2wt" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge244 133 when 134> #<edge245 134 "the" 135> #<edge13 285 close-to 287>
    #<edge246 134 the 135> #<edge15 300 wild-type 303>)
   (:MIXED :HYPHEN :PROTEIN :LOWER :BIO-ENTITY))
  "CrPV-BM2start+63" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge240 131 detect 132> #<edge241 132 even 133> #<edge11 274 such-as 276>
    #<edge242 132 even 133>)
   (:MIXED :HYPHEN :PROTEIN :WILD-TYPE))
  "CrPV-BM2wt" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge3 139 up-to 141> #<edge165 62 mobility 65>) (:PROTEIN :LOWER)) "BM2start"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge1 118 protein 120> #<edge163 58 believe 60>) (:PROTEIN :WILD-TYPE)) "BM2wt"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:TILDA #<edge412 229 site 230>) (:TILDA :PERCENT)) "∼20%" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge317 162 between 163> #<edge318 163 "the" 164> #<edge319 163 the 164>)
   (:LOWER :HYPHEN :FULL))
  "non-AUG" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge24 415 "eif3" 417> #<edge25 415 protein 417> #<edge26 415 bio-complex 417>)
   (:LOWER :HYPHEN :FULL))
  "non-AUG" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge452 213 site 226> #<edge453 242 at 245> #<edge454 238 modifier 240>)
   (:LOWER :HYPHEN :FULL))
  "non-AUG" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge162 83 terminate 84> #<edge164 60 reflect 62>) (:PLUS-SIGN :DIGITS)) "+63"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge158 80 limit 81> #<edge160 82 following-adj 83>) (:PLUS-SIGN :DIGITS)) "+48"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge154 77 "to" 78> #<edge156 78 undergo 79>) (:PLUS-SIGN :DIGITS)) "+36"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge150 73 pronoun/inanimate 74> #<edge152 75 be 76>) (:PLUS-SIGN :DIGITS)) "+24"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge146 70 that 71> #<edge148 72 COMMA 73>) (:PLUS-SIGN :DIGITS)) "+12"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:MIXED #<edge77 32 open-reading-frame 33>) (:MIXED :SINGLE-DIGIT)) "rlucM1"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge43 13 "of" 14> #<edge44 13 of 14> #<edge45 14 "the" 15>) (:LOWER :HYPHEN :LOWER))
  "termination-reinitiation" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge812 inactive, resource 812> #<edge813 inactive, resource 813>
    #<edge814 inactive, resource 814>)
   (:LOWER :HYPHEN :LOWER))
  "post-termination" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge568 321 the 322> #<edge570 323 artificially 324>) (:PLUS-SIGN :SINGLE-DIGIT)) "+4"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge284 145 position 152> #<edge285 104 efficiency 110> #<edge286 144 of 152>)
   (:LOWER :HYPHEN :LOWER))
  "termination-reinitiation" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge140 66 "the" 67> #<edge141 66 the 67> #<edge142 67 tethere 68>) (:LOWER :HYPHEN :LOWER))
  "termination-reinitiation" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge28 2 study-bio-method 3> #<edge29 2 study-data 3> #<edge30 3 "on" 4>)
   (:LOWER :HYPHEN :LOWER))
  "termination-reinitiation" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge36 7 reinitiation 8> #<edge603 347 "to" 348> #<edge604 347 to 348>
    #<edge605 348 SINGLE-QUOTE 349> #<edge606 349 snap 350>)
   (:BIO-ENTITY :HYPHEN :LOWER :HYPHEN :LOWER))
  "pAC99-yeast-ps" MAKE-HYPHENATED-TRIPLE)
 (((#<edge30 3 "on" 4> :FULL) (:BIO-ENTITY :FULL)) "pAC99-BM2IFC" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge564 313 the 314> #<edge565 317 bio-entity 318> #<edge567 321 "the" 322>)
   (:LOWER :HYPHEN :LOWER))
  "in-frame" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge530 267 bio-entity 285> #<edge531 255 bio-entity 264> #<edge532 285 close-to 291>)
   (:CAPITALIZED :HYPHEN :LOWER))
  "Termination-reinitiation" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge26 415 bio-complex 417> #<edge449 235 bio-entity 238> #<edge450 234 bio-entity 238>)
   (:BIO-ENTITY :HYPHEN :LOWER))
  "pAC99-BM2-yeast" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge20 376 "wild-type" 379> #<edge374 170 lambda-expression 172> #<edge375 168 per 172>)
   (:BIO-ENTITY :HYPHEN :LOWER))
  "pAC99-BM2-ps" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge349 189 between 190> #<edge350 190 where 191> #<edge351 191 "the" 192>)
   (:LOWER :HYPHEN :LOWER))
  "termination-reinitiation" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge10 274 "such as" 276> #<edge276 118 open-reading-frame 121>) (:BIO-ENTITY :WILD-TYPE))
  "pAC99-BM2wt" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge168 66 bio-complex 69> #<edge169 74 be 76> #<edge170 77 undergo 79>)
   (:LOWER :HYPHEN :LOWER))
  "termination-reinitiation" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge87 46 digit-sequence 47> #<edge88 46 number 47> #<edge89 48 COMMA 49>)
   (:LOWER :HYPHEN :LOWER))
  "termination-reinitiation" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge75 31 downstream 32> #<edge76 32 protein 33> #<edge116 29 of 36>)
   (:SINGLE-DIGIT :COLON :POINT-MUTATION))
  "1∶18S" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge297 100 critical 103> #<edge298 98 critical 103> #<edge299 93 between 97>)
   (:MIXED :COLON :MIXED))
  "rRNA:mRNA" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge253 141 number 142> #<edge254 142 bio-entity 143> #<edge255 143 downstream-segment 144>)
   (:CAPITALIZED :HYPHEN :LOWER))
  "Termination-reinitiation" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge798 384 copular-predication 400> #<edge799 inactive, resource 799>
    #<edge801 inactive, resource 801>)
   (:LOWER :HYPHEN :LOWER))
  "loop-in" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge722 388 of 389> #<edge723 389 downstream-segment 390> #<edge724 389 downstream 390>)
   (:LOWER :HYPHEN :LOWER))
  "termination-reinitiation" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge632 323 terminate 325> #<edge633 328 window 330> #<edge634 327 window 330>)
   (:LOWER :HYPHEN :LOWER))
  "termination-reinitiation" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge378 153 suggest 155> #<edge379 155 that 156> #<edge380 199 however 200>)
   (:MIXED :COLON :MIXED))
  "mRNA:rRNA" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge368 181 tethere 183> #<edge369 180 tethere 183> #<edge370 180 tethere 198>)
   (:LOWER :HYPHEN :LOWER))
  "termination-reinitiation" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge40 11 "the" 12> #<edge41 11 the 12> #<edge42 12 importance 13>) (:LOWER :HYPHEN :LOWER))
  "termination-reinitiation" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge173 82 following 84> #<edge174 74 ability 77> #<edge175 73 ability 77>)
   (:LOWER :HYPHEN :LOWER))
  "termination-reinitiation" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge151 74 modal 75> #<edge152 75 be 76> #<edge153 76 ability 77> #<edge154 77 "to" 78>
    #<edge155 77 to 78>)
   (:SINGLE-DIGIT :HYPHEN :SINGLE-CAP :HYPHEN :LOWER))
  "2-O-methyl" MAKE-HYPHENATED-TRIPLE)
 (((#<edge138 65 "of" 66> #<edge139 65 of 66> #<edge202 102 critical 103>)
   (:MIXED :HYPHEN :POINT-MUTATION))
  "mRNA-18S" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge23 393 due-to 395> #<edge24 415 "eif3" 417> #<edge25 415 protein 417>)
   (:CAPITALIZED :HYPHEN :LOWER))
  "Termination-reinitiation" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge805 inactive, resource 805> #<edge806 inactive, resource 806>
    #<edge807 inactive, resource 807>)
   (:LOWER :HYPHEN :LOWER))
  "termination-reinitiation" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge794 387 location-of 391> #<edge827 inactive, resource 827>)
   (:DIGITS :RESIDUE-ON-PROTEIN))
  "6.4r2" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge771 418 transcription-factor 420> #<edge826 inactive, resource 826>)
   (:DIGITS :RESIDUE-ON-PROTEIN))
  "6.4r1" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge581 331 article-figure 332> #<edge582 332 digit-sequence 333> #<edge583 332 number 333>)
   (:LOWER :HYPHEN :LOWER))
  "termination-reinitiation" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge487 269 HYPHEN 270> #<edge488 270 cognate 271> #<edge489 271 initiate 272>)
   (:LOWER :HYPHEN :LOWER))
  "termination-reinitiation" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge21 376 wild-type 379> :LOWER) (:BIO-ENTITY :LOWER)) "BM2fluc"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge399 219 figure 220> #<edge400 219 article-figure 220> #<edge402 220 number 221>)
   (:LOWER :HYPHEN :LOWER))
  "in-frame" MAKE-HYPHENATED-STRUCTURE)
 (((:TILDA #<edge388 206 bio-entity 207>) (:TILDA :DIGITS)) "∼33" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge17 314 wild-type 317> #<edge383 202 modifier 203>) (:BIO-ENTITY :LOWER)) "p2luc-BM2ps"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:TILDA #<edge328 169 bio-entity 170>) (:TILDA :DIGITS)) "∼62" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge15 300 wild-type 303> :LOWER) (:BIO-ENTITY :LOWER)) "BM2fluc"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge323 166 stop-endurant 167> #<edge324 167 bio-entity 168> #<edge325 167 bio-entity 168>)
   (:LOWER :HYPHEN :LOWER))
  "termination-reinitiation" MAKE-HYPHENATED-STRUCTURE)
 (((:TILDA #<edge318 163 "the" 164>) (:TILDA :DIGITS)) "∼36" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:MIXED #<edge316 161 distance 162>) (:MIXED :HYPHENATED-NUMBER)) "rlucM1-204"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge13 285 close-to 287> #<edge295 103 to 110> #<edge297 100 critical 103>)
   (:BIO-ENTITY :HYPHEN :DIGITS))
  "BM2-204" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge247 135 start 136> #<edge248 136 bio-entity 137> #<edge249 137 be 138>)
   (:LOWER :HYPHEN :LOWER))
  "termination-reinitiation" MAKE-HYPHENATED-STRUCTURE)
 (((:TILDA #<edge121 15 close 16>) (:TILDA :DIGITS)) "∼45" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge115 30 open-reading-frame 36> #<edge116 29 of 36> #<edge117 27 start 29>)
   (:LOWER :HYPHEN :LOWER))
  "termination-reinitiation" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge134 62 "a" 63> #<edge135 62 a 63> #<edge136 63 restrict 64>)
   (:CAPITALIZED :HYPHEN :LOWER))
  "Termination-reinitiation" MAKE-HYPHENATED-STRUCTURE)
 (((:MIXED #<edge21 376 wild-type 379> #<edge22 393 "due to" 395> #<edge23 393 due-to 395>
    #<edge24 415 "eif3" 417>)
   (:MIXED :FORWARD-SLASH :MIXED :FORWARD-SLASH :PROTEIN))
  "LiOAc/ssDNA/PEG" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge57 21 "of" 22> #<edge59 22 "the" 23> #<edge61 23 upstream-segment 24>
    #<edge62 23 upstream 24> #<edge76 32 protein 33>)
   (:PROTEIN :SINGLE-DIGIT :SINGLE-CAP :HYPHEN :POINT-MUTATION))
  "eIF4A-R362Q" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge272 95 lambda-expression 96> #<edge273 94 bio-complex 97>) (:SINGLE-DIGIT :SINGLE-CAP))
  "4X" REIFY-TWO-PART-LABEL)
 (((:CAPITALIZED :REGISTERED_SIGN :FULL) (:CAPITALIZED :REGISTERED_SIGN :FULL)) "Flexi®RRL"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge100 49 square-brackets 52> #<edge101 53 square-brackets 56> #<edge103 5 bio-process 9>)
   (:MIXED :HYPHEN :DIGITS))
  "mM–160" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge88 46 number 47> #<edge89 48 COMMA 49>) (:SINGLE-DIGIT :SINGLE-CAP)) "5U"
  REIFY-TWO-PART-LABEL)
 (((:CAPITALIZED :REGISTERED_SIGN :FULL) (:CAPITALIZED :REGISTERED_SIGN :FULL)) "Flexi®RRL"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:CAPITALIZED :REGISTERED_SIGN :FULL) (:CAPITALIZED :REGISTERED_SIGN :FULL)) "Flexi®RRL"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:CAPITALIZED :REGISTERED_SIGN) (:CAPITALIZED :REGISTERED_SIGN)) "Flexi®"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge67 26 the 27> #<edge68 27 start 28> #<edge70 29 "of" 30>)
   (:SINGLE-DIGIT :COLON :SINGLE-DIGIT))
  "1∶1" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge21 376 wild-type 379> #<edge22 393 "due to" 395> #<edge23 393 due-to 395>)
   (:LOWER :HYPHEN :LOWER))
  "run-off" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge104 4 bio-process 9> #<edge106 11 importance 13> #<edge107 15 proximity 17>
    #<edge5 174 but-rather 176>)
   (:PROTEIN :DIGITS :HYPHEN :BIO-ENTITY))
  "pAC99-BM2" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge48 15 close 16> #<edge49 16 proximity 17> #<edge50 17 "of" 18>) (:LOWER :HYPHEN :LOWER))
  "termination-reinitiation" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge24 415 "eif3" 417> #<edge26 415 bio-complex 417>) (:PROTEIN :DIGITS)) "pAC99"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge20 376 "wild-type" 379> #<edge21 376 wild-type 379> #<edge22 393 "due to" 395>)
   (:LOWER :HYPHEN :LOWER))
  "dual-reporter" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge6 184 "by virtue of" 187> #<edge7 184 by-virtue-of 187> #<edge8 214 "wild-type" 217>)
   (:CAPITALIZED :HYPHEN :LOWER))
  "Termination-reinitiation" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge109 19 bio-entity 21> #<edge110 18 bio-entity 21> #<edge111 23 open-reading-frame 25>
    #<edge113 31 open-reading-frame 33> #<edge114 30 open-reading-frame 33>)
   (:MIXED :FORWARD-SLASH :PLUS-SIGN :SINGLE-DIGIT :LOWER))
  "CrPV/+8norm" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge117 27 start 29> #<edge97 37 square-brackets 40> #<edge98 41 square-brackets 44>)
   (:RESIDUE-ON-PROTEIN :HYPHEN :MIXED))
  "T7-CrPV" MAKE-HYPHENATED-STRUCTURE)
 (((:MIXED #<edge12 285 "close to" 287> #<edge1 118 protein 120>) (:MIXED :HYPHEN :BIO-ENTITY))
  "CrPV-p2luc-BM2" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge17 314 wild-type 317> #<edge141 66 the 67> #<edge142 67 tethere 68>
    #<edge19 319 even-if 321> #<edge143 68 bio-complex 69> #<edge145 70 "that" 71>)
   (:PROTEIN :PROTEIN :HYPHEN :BIO-ENTITY :HYPHEN :DIGITS))
  "p2luc-BM2-204" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge13 285 close-to 287> #<edge137 64 mobility 65> #<edge138 65 "of" 66>
    #<edge15 300 wild-type 303> #<edge139 65 of 66>)
   (:PROTEIN :PROTEIN :HYPHEN :BIO-ENTITY :WILD-TYPE))
  "p2luc-BM2wt" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge150 73 pronoun/inanimate 74> #<edge116 29 of 36> #<edge118 21 of 25>)
   (:POINT-MUTATION :HYPHEN :FULL))
  "18S-AT" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge11 274 such-as 276> #<edge102 1 study-bio-method 3> #<edge103 5 bio-process 9>
    #<edge104 4 bio-process 9> #<edge149 73 "it" 74> #<edge109 19 bio-entity 21>
    #<edge110 18 bio-entity 21>)
   (:PROTEIN :PROTEIN :HYPHEN :FULL :POINT-MUTATION :HYPHEN :PROTEIN))
  "p2luc-BM218S-AG" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge9 214 wild-type 217> #<edge54 19 stop 20>) (:PROTEIN :PROTEIN)) "p2luc"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge41 11 the 12> #<edge42 12 importance 13> #<edge43 13 "of" 14>) (:LOWER :HYPHEN :LOWER))
  "termination-reinitiation" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge1 118 protein 120> #<edge22 393 "due to" 395> #<edge23 393 due-to 395>
    #<edge3 139 up-to 141>)
   (:PROTEIN :PROTEIN :HYPHEN :BIO-ENTITY))
  "p2luc-BM2" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge479 262 amino-acid 263> #<edge480 264 COMMA 265> #<edge481 265 or 266>)
   (:MIXED :HYPHEN :MIXED))
  "mRNA-rRNA" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge474 258 bio-entity 259> #<edge475 260 figure 261> #<edge476 260 article-figure 261>)
   (:LOWER :HYPHEN :LOWER))
  "termination-reinitiation" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge414 231 be 232> #<edge415 232 bio-use 233> #<edge416 233 when 234>)
   (:LOWER :HYPHEN :LOWER))
  "termination-reinitiation" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge599 344 number 345> #<edge600 345 direction 346> #<edge601 345 amino-acid 346>)
   (:LOWER :HYPHEN :LOWER))
  "termination-reinitiation" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge311 157 be 158> #<edge312 158 not 159> #<edge314 160 "the" 161>) (:LOWER :HYPHEN :LOWER))
  "stem-loop" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge39 10 suggest 11> #<edge40 11 "the" 12> #<edge41 11 the 12>) (:LOWER :HYPHEN :LOWER))
  "post-termination" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge32 4 "the" 5> #<edge33 4 the 5> #<edge34 5 terminate 6>) (:LOWER :HYPHEN :LOWER))
  "termination-reinitiation" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge1257 inactive, resource 1257> #<edge1258 inactive, resource 1258>
    #<edge1259 inactive, resource 1259>)
   (:LOWER :HYPHEN :LOWER))
  "termination-reinitiation" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge1244 inactive, resource 1244> #<edge1245 inactive, resource 1245>
    #<edge1247 inactive, resource 1247>)
   (:LOWER :HYPHEN :LOWER))
  "stem-loop" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge1159 inactive, resource 1159> #<edge1160 inactive, resource 1160>
    #<edge1161 inactive, resource 1161>)
   (:LOWER :HYPHEN :LOWER))
  "termination-reinitiation" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge1088 inactive, resource 1088> #<edge1089 inactive, resource 1089>
    #<edge1090 inactive, resource 1090>)
   (:LOWER :HYPHEN :LOWER))
  "post-termination" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge808 inactive, resource 808> #<edge809 inactive, resource 809>
    #<edge810 inactive, resource 810>)
   (:LOWER :HYPHEN :LOWER))
  "termination-reinitiation" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge733 397 direction 398> #<edge735 398 fragment 399>) (:PROTEIN :DIGITS)) "VP10"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge522 256 bio-entity 259> #<edge524 271 bio-entity 273>) (:FULL :SINGLE-DIGIT)) "BM2"
  #:PSR-271173)
 (((#<edge437 220 point-mutation 225> #<edge439 218 parentheses 226>) (:FULL :SINGLE-DIGIT)) "BM2"
  #:PSR-271173)
 (((#<edge416 233 when 234> #<edge418 234 "the" 235>) (:FULL :SINGLE-DIGIT)) "BM2" #:PSR-271173)
 (((#<edge390 207 at 208> #<edge392 209 or 210>) (:FULL :SINGLE-DIGIT)) "BM2" #:PSR-271173)
 (((#<edge324 167 bio-entity 168> #<edge326 168 "per" 169>) (:FULL :SINGLE-DIGIT)) "BM2"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge302 85 show 90> #<edge303 90 that 91> #<edge304 153 "this" 154>) (:LOWER :HYPHEN :LOWER))
  "termination-reinitiation" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge1 118 protein 120> #<edge28 2 study-bio-method 3>) (:BIO-ENTITY :LOWER)) "co-morbidities"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge404 221 a 222> #<edge405 222 and 223> #<edge407 223 number 224>)
   (:SINGLE-DIGIT :FORWARD-SLASH :DIGITS))
  "6/33" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge395 212 COMMA 213> #<edge396 213 "the" 214> #<edge398 217 site 218>)
   (:SINGLE-DIGIT :FORWARD-SLASH :DIGITS))
  "4/27" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge5 174 but-rather 176> #<edge311 157 be 158>) (:BIO-ENTITY :LOWER)) "co-infection"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge3 139 up-to 141> #<edge231 124 of 125>) (:BIO-ENTITY :LOWER)) "co-infection"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge98 41 square-brackets 44> #<edge99 45 square-brackets 48>
    #<edge101 53 square-brackets 56>)
   (:DIGITS :FORWARD-SLASH :DIGITS))
  "51/60" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge253 141 number 142> #<edge255 143 downstream-segment 144>) (:SINGLE-CAP :SINGLE-DIGIT))
  "O2" REIFY-TWO-PART-LABEL)
 (((#<edge218 114 start 115> #<edge219 115 bio-entity 116>) (:LOWER :HYPHEN)) "co-"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge152 75 be 76> #<edge153 76 ability 77> #<edge155 77 to 78>)
   (:SINGLE-DIGIT :FORWARD-SLASH :DIGITS))
  "2/33" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge112 22 open-reading-frame 25> #<edge113 31 open-reading-frame 33>
    #<edge115 30 open-reading-frame 36>)
   (:DIGITS :FORWARD-SLASH :DIGITS))
  "27/27" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge67 26 the 27> #<edge68 27 start 28> #<edge70 29 "of" 30>)
   (:SINGLE-DIGIT :FORWARD-SLASH :DIGITS))
  "9/33" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge209 108 digit-sequence 109> #<edge210 108 number 109> #<edge211 110 and 111>)
   (:LOWER :FORWARD-SLASH :PROTEIN))
  "mg/dL" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge125 9 suggest 13> #<edge126 3 on 9> #<edge128 57 this 58>)
   (:SINGLE-DIGIT :FORWARD-SLASH :DIGITS))
  "2/27" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge117 27 start 29> #<edge118 21 of 25> #<edge120 14 proximity 21>)
   (:SINGLE-DIGIT :FORWARD-SLASH :DIGITS))
  "4/33" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge45 14 "the" 15> #<edge46 14 the 15> #<edge48 15 close 16>)
   (:SINGLE-DIGIT :FORWARD-SLASH :SINGLE-DIGIT))
  "2/5" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:OPEN-ANGLE-BRACKET #<edge33 4 the 5> #<edge34 5 terminate 6> #<edge36 7 reinitiation 8>
    #<edge38 9 have 10>)
   (:OPEN-ANGLE-BRACKET :DIGITS :FORWARD-SLASH :LOWER :SINGLE-DIGIT))
  "<4,000/mm3" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:GREATER-THAN_OR_EQUAL_TO #<edge28 2 study-bio-method 3>) (:GREATER-THAN_OR_EQUAL_TO :DIGITS))
  "≥2,500" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge340 178 "the" 179> #<edge341 178 the 179> #<edge343 180 modal 181>)
   (:SINGLE-DIGIT :FORWARD-SLASH :DIGITS))
  "7/27" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:LESS-THAN_OR_EQUAL_TO #<edge287 139 up-to 143>) (:LESS-THAN_OR_EQUAL_TO :DIGITS)) "≤60"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge96 33 square-brackets 36> #<edge97 37 square-brackets 40>
    #<edge99 45 square-brackets 48>)
   (:SINGLE-LOWER :HYPHEN :LOWER))
  "x-ray" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge38 9 have 10> #<edge39 10 suggest 11> #<edge40 11 "the" 12> #<edge41 11 the 12>
    #<edge42 12 importance 13>)
   (:LOWER :PLUS-SIGN :LOWER :FORWARD-SLASH :LOWER))
  "ceftriaxone+moxifloxacin/ciprofloxacin" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge34 5 terminate 6> #<edge35 6 HYPHEN 7> #<edge36 7 reinitiation 8>)
   (:LOWER :PLUS-SIGN :LOWER))
  "acid+azithromycin" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:CLOSE-ANGLE-BRACKET #<edge32 4 "the" 5>) (:CLOSE-ANGLE-BRACKET :DIGITS)) ">106"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge488 270 cognate 271> #<edge489 271 initiate 272> #<edge491 276 "the" 277>)
   (:SINGLE-LOWER :HYPHEN :LOWER))
  "x-ray" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge427 242 "at" 243> #<edge428 242 at 243> #<edge430 243 lower-adj 244>)
   (:DIGITS :FORWARD-SLASH :DIGITS))
  "10/27" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge418 234 "the" 235> #<edge419 234 the 235> #<edge421 236 reinitiation 237>)
   (:SINGLE-DIGIT :FORWARD-SLASH :DIGITS))
  "7/33" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:CLOSE-ANGLE-BRACKET #<edge414 231 be 232> :ASTERISK #<edge47 15 close-bio-process 16>)
   (:CLOSE-ANGLE-BRACKET :DIGITS :ASTERISK :INITIAL))
  ">37.5°C." REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge381 200 COMMA 201> #<edge382 201 whilst 202> #<edge383 202 modifier 203>)
   (:LOWER :FORWARD-SLASH :LOWER))
  "azithromycin/moxifloxacin" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge314 160 "the" 161> #<edge315 160 the 161> #<edge317 162 between 163>)
   (:SINGLE-DIGIT :FORWARD-SLASH :DIGITS))
  "8/33" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge177 65 of 69> #<edge178 62 mobility 69>) (:LOWER :COLON)) "disease:" :NO-EDGE)
 (((#<edge137 64 mobility 65> #<edge138 65 "of" 66>) (:LOWER :COLON)) "disease:" :NO-EDGE)
 (((#<edge116 29 of 36> #<edge117 27 start 29> #<edge119 17 of 21>)
   (:DIGITS :FORWARD-SLASH :DIGITS))
  "18/27" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge107 15 proximity 17> #<edge108 14 proximity 17> #<edge110 18 bio-entity 21>)
   (:DIGITS :FORWARD-SLASH :DIGITS))
  "25/33" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge83 40 COMMA 41> #<edge84 42 digit-sequence 43> #<edge86 44 COMMA 45>)
   (:DIGITS :FORWARD-SLASH :DIGITS))
  "17/27" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge63 24 protein 25> #<edge64 24 open-reading-frame 25> #<edge66 26 "the" 27>)
   (:DIGITS :FORWARD-SLASH :DIGITS))
  "23/33" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge9 214 wild-type 217> #<edge10 274 "such as" 276>) (:PLUS-MINUS :PROTEIN)) "±SD"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge187 90 that 91> #<edge188 91 "the" 92> #<edge190 92 distance 93>)
   (:DIGITS :FORWARD-SLASH :DIGITS))
  "49/60" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge127 57 "this" 58> #<edge128 57 this 58> #<edge130 59 believe 60>)
   (:DIGITS :FORWARD-SLASH :DIGITS))
  "15/27" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge118 21 of 25> #<edge119 17 of 21> #<edge121 15 close 16>)
   (:DIGITS :FORWARD-SLASH :DIGITS))
  "12/33" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge1 118 protein 120> #<edge24 415 "eif3" 417> #<edge26 415 bio-complex 417>)
   (:PROTEIN :FORWARD-SLASH :DIGITS))
  "group A/26" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:OPEN-ANGLE-BRACKET #<edge196 97 and 98> :ASTERISK #<edge197 98 "the" 99>)
   (:OPEN-ANGLE-BRACKET :DIGITS :ASTERISK :SINGLE-CAP))
  "<37°C" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge189 91 the 92> #<edge190 92 distance 93> #<edge192 94 "the" 95>)
   (:SINGLE-LOWER :HYPHEN :LOWER))
  "x-ray" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge402 220 number 221> #<edge403 221 amino-acid 222> #<edge404 221 a 222>)
   (:FULL :HYPHEN :FULL))
  "II-IV" MAKE-HYPHENATED-PAIR)
 (((:TILDA #<edge228 123 downstream-segment 124>) (:TILDA :PERCENT)) "~100%"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:TILDA #<edge227 122 place 123>) (:TILDA :PERCENT)) "~80%" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge10 274 "such as" 276> #<edge148 72 COMMA 73> #<edge149 73 "it" 74>
    #<edge150 73 pronoun/inanimate 74> #<edge152 75 be 76> #<edge153 76 ability 77>
    #<edge154 77 "to" 78>)
   (:PROTEIN :HYPHEN :PROTEIN :HYPHEN :LOWER :HYPHEN :LOWER))
  "reverse-transcriptase-polymerase-chain-reaction" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:CLOSE-ANGLE-BRACKET #<edge100 49 square-brackets 52> :ASTERISK
    #<edge101 53 square-brackets 56>)
   (:CLOSE-ANGLE-BRACKET :DIGITS :ASTERISK :SINGLE-CAP))
  ">37.5°C" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge76 32 protein 33> #<edge77 32 open-reading-frame 33> #<edge78 34 digit-sequence 35>)
   (:LOWER :HYPHEN :LOWER))
  "triple-reassortant" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge168 66 bio-complex 69> #<edge169 74 be 76> #<edge173 82 following 84>)
   (:PROTEIN :HYPHEN :SINGLE-CAP))
  "MHC-I" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge86 44 COMMA 45> #<edge87 46 digit-sequence 47> #<edge91 50 number 51>)
   (:PROTEIN :HYPHEN :SINGLE-CAP))
  "MHC-I" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge35 6 HYPHEN 7> #<edge37 8 bio-process 9>) (:INITIAL :INITIAL)) "T.D."
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge30 3 "on" 4> #<edge32 4 "the" 5>) (:INITIAL :INITIAL)) "I.R."
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge108 14 proximity 17> #<edge109 19 bio-entity 21> #<edge110 18 bio-entity 21>)
   (:LOWER :HYPHEN :LOWER))
  "surface-expressed" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge29 2 study-data 3> #<edge252 141 digit-sequence 142> #<edge254 142 bio-entity 143>)
   (:PROTEIN :HYPHEN :FULL))
  "CD80-MFI" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge19 319 even-if 321> #<edge164 60 reflect 62> #<edge166 67 bio-complex 69>)
   (:PROTEIN :HYPHEN :FULL))
  "CD54-MFI" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge131 60 "to" 61> #<edge132 60 to 61>) (:LOWER :COLON)) "ranges:" :NO-EDGE)
 (((#<edge74 31 downstream-segment 32> #<edge75 31 downstream 32>
    #<edge77 32 open-reading-frame 33>)
   (:DIGITS :FORWARD-SLASH :DIGITS))
  "24/48" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge44 13 of 14> #<edge45 14 "the" 15> #<edge46 14 the 15>) (:LOWER :HYPHEN :LOWER))
  "flat-bottomed" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge151 74 modal 75> #<edge152 75 be 76> #<edge153 76 ability 77>) (:LOWER :HYPHEN :LOWER))
  "short-term" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge139 65 of 66> #<edge39 10 suggest 11>) (:SINGLE-DIGIT :BIO-ENTITY)) "1C3"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge37 8 bio-process 9> #<edge134 62 "a" 63> #<edge135 62 a 63>) (:PROTEIN :HYPHEN :FULL))
  "CD58-FITC" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge118 21 of 25> #<edge29 2 study-data 3>) (:SINGLE-DIGIT :BIO-ENTITY)) "5C3"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge27 1 sequencer 2> #<edge113 31 open-reading-frame 33>
    #<edge114 30 open-reading-frame 33>)
   (:PROTEIN :HYPHEN :FULL))
  "CD40-FITC" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge145 70 "that" 71> #<edge107 15 proximity 17> #<edge108 14 proximity 17>
    #<edge23 393 due-to 395>)
   (:POINT-MUTATION :SINGLE-DIGIT :FORWARD-SLASH :PROTEIN))
  "2D3/B7-H2" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge284 145 position 152> #<edge285 104 efficiency 110> #<edge286 144 of 152>)
   (:FULL :HYPHEN :PROTEIN))
  "DC-LAMP" MAKE-HYPHENATED-PAIR)
 (((#<edge225 120 open-reading-frame 121> #<edge226 121 be 122> #<edge227 122 place 123>)
   (:FULL :HYPHEN :PROTEIN))
  "DC-LAMP" MAKE-HYPHENATED-PAIR)
 (((#<edge191 93 between 94> #<edge192 94 "the" 95> #<edge193 94 the 95>) (:FULL :HYPHEN :PROTEIN))
  "DC-LAMP" MAKE-HYPHENATED-PAIR)
 (((#<edge173 82 following 84> #<edge175 73 ability 77>) (:FULL :DIGITS)) "CD208"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge167 67 lambda-expression 68> #<edge168 66 bio-complex 69> #<edge169 74 be 76>
    #<edge170 77 undergo 79> #<edge172 79 movement 82>)
   (:FULL :HYPHEN :PROTEIN :HYPHEN :PROTEIN))
  "DC-LAMP-PE" MAKE-HYPHENATED-TRIPLE)
 (((:MIXED #<edge107 15 proximity 17>) (:MIXED :SINGLE-DIGIT)) "MphiP9"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge91 50 number 51> #<edge92 52 COMMA 53> #<edge94 54 number 55>
    #<edge95 5 hyphenated-pair 8> #<edge97 37 square-brackets 40>)
   (:SINGLE-CAP :HYPHEN :PROTEIN :HYPHEN :SINGLE-DIGIT))
  "S-HCL-3" MAKE-HYPHENATED-TRIPLE)
 (((#<edge7 184 by-virtue-of 187> #<edge70 29 "of" 30> #<edge71 29 of 30>)
   (:PROTEIN :HYPHEN :MIXED))
  "CD45-PerCp" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge111 23 open-reading-frame 25> #<edge65 25 and 26>) (:POINT-MUTATION :SINGLE-DIGIT)) "4G7"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge3 139 up-to 141> #<edge57 21 "of" 22> #<edge58 21 of 22>) (:PROTEIN :HYPHEN :FULL))
  "CD19-FITC" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge202 102 critical 103> #<edge203 103 "to" 104> #<edge204 103 to 104>)
   (:LOWER :HYPHEN :LOWER))
  "inter-quartile" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge128 57 this 58> #<edge129 58 be 59> #<edge130 59 believe 60>) (:LOWER :HYPHEN :LOWER))
  "flat-bottomed" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge48 15 close 16> #<edge22 393 "due to" 395> #<edge24 415 "eif3" 417>)
   (:RESIDUE-ON-PROTEIN :FORWARD-SLASH :DIGITS))
  "P2007/175" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:CAPITALIZED #<edge15 300 wild-type 303> #<edge16 314 "wild-type" 317>)
   (:CAPITALIZED :HYPHEN :CAPITALIZED))
  "Ethique-Hôpital" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge33 4 the 5> #<edge34 5 terminate 6> #<edge36 7 reinitiation 8> :TRADE_MARK_SIGN)
   (:FULL :HYPHEN :DIGITS :TRADE_MARK_SIGN))
  "CCL-185™" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge27 1 sequencer 2> #<edge28 2 study-bio-method 3> #<edge29 2 study-data 3>
    :REGISTERED_SIGN)
   (:FULL :FORWARD-SLASH :FULL :REGISTERED_SIGN))
  "UK/ATCC®" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge7 184 by-virtue-of 187> #<edge8 214 "wild-type" 217> #<edge10 274 "such as" 276>
    #<edge11 274 such-as 276> #<edge12 285 "close to" 287>)
   (:PROTEIN :HYPHEN :FULL :HYPHEN :LOWER))
  "MBP-BLV-hairpin" MAKE-HYPHENATED-TRIPLE)
 (((#<edge242 132 even 133> #<edge254 142 bio-entity 143>) (:PLUS-SIGN :PERCENT)) "+0.1%"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge205 104 reinitiation 105> #<edge206 105 efficiency 106>
    #<edge209 108 digit-sequence 109>)
   (:SINGLE-DIGIT :FORWARD-SLASH :DIGITS))
  "1/1,000" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge102 1 study-bio-method 3> #<edge103 5 bio-process 9> #<edge105 9 suggest 11>)
   (:PROTEIN :HYPHEN :SINGLE-DIGIT))
  "gml−1" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge74 31 downstream-segment 32> :MULTIPLICATION-SIGN #<edge76 32 protein 33>)
   (:DIGITS :MULTIPLICATION-SIGN :DIGITS))
  "5.0×105" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge36 7 reinitiation 8> #<edge38 9 have 10>) (:PLUS-SIGN :SINGLE-DIGIT)) "+2"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge13 285 close-to 287> #<edge14 300 "wild-type" 303> #<edge15 300 wild-type 303>)
   (:LOWER :HYPHEN :LOWER))
  "surface-expressed" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge92 52 COMMA 53> #<edge93 54 digit-sequence 55> #<edge96 33 square-brackets 36>)
   (:SINGLE-DIGIT :COLON :DIGITS))
  "1∶10,000" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge261 147 position-bio-process 148> #<edge262 147 position 148>) (:DIGITS :SINGLE-LOWER))
  "20x" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge119 17 of 21> :MULTIPLICATION-SIGN #<edge121 15 close 16>)
   (:DIGITS :MULTIPLICATION-SIGN :DIGITS))
  "7.0×105" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge56 20 bio-entity 21> #<edge57 21 "of" 22> #<edge59 22 "the" 23>) (:LOWER :HYPHEN :LOWER))
  "high-pressure" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge52 18 "the" 19> #<edge53 18 the 19> #<edge55 19 stop-endurant 20>)
   (:LOWER :HYPHEN :LOWER))
  "reverse-phase" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge17 314 wild-type 317> #<edge18 319 "even if" 321> #<edge20 376 "wild-type" 379>)
   (:LOWER :HYPHEN :LOWER))
  "solid-phase" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge424 239 modifier 240> :FULL #<edge426 241 albeit 242>)
   (:SINGLE-DIGIT :FULL :SINGLE-DIGIT))
  "2XZ3" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge377 157 be 160> #<edge379 155 that 156>) (:PROTEIN :SINGLE-DIGIT)) "REFMAC5"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge339 177 well 178> #<edge11 274 such-as 276>) (:SINGLE-DIGIT :PROTEIN-DOMAIN)) "1MG1"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge331 171 affect 172> #<edge332 172 reinitiation 173> #<edge333 173 efficiency 174>)
   (:PROTEIN :HYPHEN :FULL))
  "MBP-HTLV" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge284 145 position 152> #<edge286 144 of 152>) (:FULL :DIGITS)) "BM14"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge198 98 the 99> #<edge199 99 bio-entity 100> #<edge201 101 comparative 102>)
   (:PROTEIN :HYPHEN :DIGITS))
  "PEG-4000" MAKE-HYPHENATED-PAIR)
 (((#<edge80 36 COMMA 37> #<edge81 38 digit-sequence 39> #<edge82 38 number 39>)
   (:FULL :HYPHEN :MIXED))
  "TCEP-HCl" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge51 17 of 18> #<edge52 18 "the" 19> #<edge54 19 stop 20>) (:LOWER :HYPHEN :SINGLE-DIGIT))
  "ml−1" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge20 376 "wild-type" 379> #<edge21 376 wild-type 379> #<edge23 393 due-to 395>
    #<edge24 415 "eif3" 417> #<edge25 415 protein 417>)
   (:PROTEIN :HYPHEN :FULL :HYPHEN :LOWER))
  "MBP-BLV-hairpin" MAKE-HYPHENATED-TRIPLE)
 (((#<edge362 189 between 191> #<edge363 183 parentheses 198> #<edge364 166 bio-entity 168>)
   (:LOWER :HYPHEN :LOWER))
  "pre-equilibrated" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge345 182 tethere 183> #<edge346 187 "the" 188> #<edge348 188 distance 189>)
   (:SINGLE-DIGIT :COLON :SINGLE-DIGIT))
  "1∶5" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge321 165 and 166> :MULTIPLICATION-SIGN #<edge322 166 stop 167>)
   (:DIGITS :MULTIPLICATION-SIGN :SINGLE-LOWER))
  "9,000×g" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge228 123 downstream-segment 124> #<edge229 123 downstream 124> #<edge232 125 "the" 126>)
   (:SINGLE-CAP :FORWARD-SLASH :SINGLE-CAP))
  "O/N" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge221 116 of 117> #<edge222 117 "the" 118> #<edge224 120 protein 121>)
   (:PROTEIN :HYPHEN :SINGLE-DIGIT))
  "gml−1" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge194 95 terminate 96> #<edge195 96 bio-complex 97> #<edge196 97 and 98>)
   (:PROTEIN :HYPHEN :MIXED))
  "Tris-HCl" MAKE-HYPHENATED-STRUCTURE)
 (((:CAPITALIZED #<edge148 72 COMMA 73> #<edge3 139 up-to 141>) (:CAPITALIZED :HYPHEN :MOLECULE))
  "Isopropylthio-β-D-galactoside" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:TILDA #<edge104 4 bio-process 9>) (:TILDA :DIGITS)) "∼0.6" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge85 42 number 43> #<edge86 44 COMMA 45> #<edge88 46 number 47>)
   (:PROTEIN :HYPHEN :SINGLE-DIGIT))
  "gml−1" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge55 19 stop-endurant 20> #<edge56 20 bio-entity 21> #<edge58 21 of 22>
    #<edge59 22 "the" 23> #<edge60 22 the 23>)
   (:PROTEIN :HYPHEN :FULL :HYPHEN :LOWER))
  "MBP-BLV-hairpin" MAKE-HYPHENATED-TRIPLE)
 (((#<edge294 114 start 116> #<edge295 103 to 110> #<edge13 285 close-to 287>
    #<edge296 101 critical 103>)
   (:PROTEIN :HYPHEN :PROTEIN :LOWER))
  "pMAL-gp30hairpin" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge290 130 detect 133> #<edge291 124 of 128> :MIXED #<edge292 123 downstream 128> :FULL)
   (:MIXED :HYPHEN :MIXED :HYPHEN :FULL))
  "pCMV-BLVenv-RRE" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge254 142 bio-entity 143> #<edge255 143 downstream-segment 144> #<edge257 144 "of" 145>
    #<edge259 145 pronoun/inanimate 146>)
   (:PROTEIN :HYPHEN :SINGLE-LOWER :SINGLE-DIGIT))
  "pMAL-c2" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge134 62 "a" 63> #<edge135 62 a 63> #<edge137 64 mobility 65> #<edge139 65 of 66>)
   (:PROTEIN :HYPHEN :SINGLE-LOWER :SINGLE-DIGIT))
  "pMAL-c2" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge116 29 of 36> #<edge117 27 start 29> #<edge119 17 of 21> #<edge120 14 proximity 21>
    #<edge121 15 close 16>)
   (:PROTEIN :HYPHEN :FULL :HYPHEN :LOWER))
  "MBP-BLV-hairpin" MAKE-HYPHENATED-TRIPLE)
 (((#<edge113 31 open-reading-frame 33> #<edge114 30 open-reading-frame 33> #<edge3 139 up-to 141>
    #<edge115 30 open-reading-frame 36>)
   (:PROTEIN :HYPHEN :PROTEIN :LOWER))
  "pMAL-gp30hairpin" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:MIXED #<edge77 32 open-reading-frame 33> #<edge79 34 number 35>)
   (:MIXED :HYPHEN :SINGLE-DIGIT))
  "pHTE-1" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge57 21 "of" 22> #<edge58 21 of 22> :MIXED #<edge59 22 "the" 23> :FULL)
   (:MIXED :HYPHEN :MIXED :HYPHEN :FULL))
  "pCMV-BLVenv-RRE" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge45 14 "the" 15> #<edge46 14 the 15> :MIXED #<edge47 15 close-bio-process 16> :FULL)
   (:MIXED :HYPHEN :MIXED :HYPHEN :FULL))
  "pCMV-HTLVenv-RRE" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:MIXED #<edge21 376 wild-type 379> #<edge22 393 "due to" 395>) (:MIXED :HYPHEN :PROTEIN))
  "pRSV-Rev" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge17 314 wild-type 317> #<edge18 319 "even if" 321> :MIXED #<edge19 319 even-if 321> :FULL)
   (:MIXED :HYPHEN :MIXED :HYPHEN :FULL))
  "pCMV-BLVenv-RRE" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:LOWER #<edge56 20 bio-entity 21> #<edge57 21 "of" 22>) (:LOWER :FORWARD-SLASH :LOWER))
  "myelopathy/tropical" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge36 7 reinitiation 8> #<edge1 118 protein 120>) (:LOWER :-LIKE)) "drug-like"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge31 3 on 4> #<edge759 419 factor 420>) (:PROTEIN :LOWER)) "anti-retroviral"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge747 407 "to" 408> #<edge748 407 to 408> #<edge749 408 "the" 409>)
   (:LOWER :HYPHEN :LOWER))
  "charge-surrounded" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge644 327 window 335> #<edge645 356 of 358> #<edge646 352 to 356> #<edge647 340 cause 347>
    #<edge648 338 cause 347>)
   (:SINGLE-CAP :HYPHEN :LOWER :HYPHEN :LOWER))
  "C-helix-based" MAKE-HYPHENATED-TRIPLE)
 (((#<edge631 321 bio-complex 323> #<edge632 323 terminate 325> #<edge634 327 window 330>
    #<edge635 338 bio-entity 340> #<edge637 344 fragment 347>)
   (:LOWER :HYPHEN :LOWER :HYPHEN :PROTEIN))
  "trimer-of-hairpins" MAKE-HYPHENATED-TRIPLE)
 (((#<edge405 222 and 223> #<edge406 223 digit-sequence 224> #<edge407 223 number 224>)
   (:PROTEIN :HYPHEN :LOWER))
  "LHR-based" PACKAGE-QUALIFYING-PAIR)
 (((:TILDA #<edge616 356 "of" 357>) (:TILDA :PERCENT)) "∼10%" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge409 226 COMMA 227> #<edge410 227 modifier 228> #<edge411 228 reinitiation 229>)
   (:LOWER :HYPHEN :LOWER))
  "fusion-activated" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge56 20 bio-entity 21> #<edge57 21 "of" 22> #<edge59 22 "the" 23> #<edge60 22 the 23>
    #<edge62 23 upstream 24>)
   (:LOWER :HYPHEN :LOWER :HYPHEN :PROTEIN))
  "trimer-of-hairpins" MAKE-HYPHENATED-TRIPLE)
 (((#<edge334 176 how 177> #<edge335 177 well-bio-process 178> #<edge25 415 protein 417>)
   (:PROTEIN :FORWARD-SLASH :BIO-ENTITY))
  "LHR/coiled-coil" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge148 72 COMMA 73> #<edge149 73 "it" 74> #<edge150 73 pronoun/inanimate 74>)
   (:PROTEIN :HYPHEN :LOWER))
  "LHR-based" PACKAGE-QUALIFYING-PAIR)
 (((#<edge1202 inactive, resource 1202> #<edge1203 inactive, resource 1203>
    #<edge1204 inactive, resource 1204>)
   (:LOWER :HYPHEN :LOWER))
  "chloride-interacting" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge1087 inactive, resource 1087> #<edge1088 inactive, resource 1088>
    #<edge1090 inactive, resource 1090>)
   (:LOWER :HYPHEN :PROTEIN))
  "coiled-coil" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge1066 inactive, resource 1066> #<edge1067 inactive, resource 1067>
    #<edge1068 inactive, resource 1068> #<edge1069 inactive, resource 1069>
    #<edge1071 inactive, resource 1071>)
   (:LOWER :HYPHEN :LOWER :HYPHEN :LOWER))
  "knobs-into-holes" MAKE-HYPHENATED-TRIPLE)
 (((#<edge917 inactive, resource 917> #<edge918 inactive, resource 918>
    #<edge919 inactive, resource 919>)
   (:LOWER :HYPHEN :LOWER))
  "pre-hairpin" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge765 423 rna 424> #<edge766 424 HYPHEN 425> #<edge767 425 loop 426>)
   (:LOWER :HYPHEN :LOWER))
  "pre-fusion" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge747 407 "to" 408> #<edge748 407 to 408> #<edge749 408 "the" 409>)
   (:LOWER :HYPHEN :LOWER))
  "post-fusion" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge235 126 stop-endurant 127> #<edge236 127 bio-entity 128> #<edge238 129 reinitiation 130>
    #<edge239 130 be 131> #<edge241 132 even 133>)
   (:LOWER :HYPHEN :LOWER :HYPHEN :PROTEIN))
  "trimer-of-hairpins" MAKE-HYPHENATED-TRIPLE)
 (((#<edge165 62 mobility 65> #<edge166 67 bio-complex 69> #<edge168 66 bio-complex 69>
    #<edge169 74 be 76> #<edge171 79 limit 81>)
   (:LOWER :HYPHEN :LOWER :HYPHEN :PROTEIN))
  "trimer-of-hairpins" MAKE-HYPHENATED-TRIPLE)
 (((#<edge111 23 open-reading-frame 25> #<edge112 22 open-reading-frame 25>
    #<edge114 30 open-reading-frame 33> #<edge115 30 open-reading-frame 36> #<edge117 27 start 29>)
   (:LOWER :HYPHEN :LOWER :HYPHEN :PROTEIN))
  "trimer-of-hairpins" MAKE-HYPHENATED-TRIPLE)
 (((:TILDA #<edge240 131 detect 132>) (:TILDA :SINGLE-DIGIT)) "∼8" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:TILDA #<edge236 127 bio-entity 128>) (:TILDA :DIGITS)) "∼16" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge34 5 terminate 6> #<edge35 6 HYPHEN 7> #<edge37 8 bio-process 9> #<edge38 9 have 10>
    #<edge40 11 "the" 12>)
   (:LOWER :HYPHEN :LOWER :HYPHEN :PROTEIN))
  "trimer-of-hairpins" MAKE-HYPHENATED-TRIPLE)
 (((#<edge450 234 bio-entity 238> #<edge451 243 efficiency 245> #<edge452 213 site 226>)
   (:LOWER :HYPHEN :LOWER))
  "post-translationally" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge184 88 show 89> #<edge185 89 deictic-location 90> #<edge186 90 "that" 91>)
   (:PROTEIN :HYPHEN :LOWER))
  "LHR-based" PACKAGE-QUALIFYING-PAIR)
 (((#<edge560 310 bio-complex 311> #<edge561 311 always 312> #<edge563 313 "the" 314>)
   (:PROTEIN :HYPHEN :SINGLE-DIGIT))
  "class-1" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge547 299 "a" 300> #<edge548 299 a 300> #<edge550 304 and 305>
    #<edge551 305 indefinite-pronoun 306> #<edge553 305 number 306>)
   (:LOWER :HYPHEN :LOWER :HYPHEN :PROTEIN))
  "trimer-of-hairpins" MAKE-HYPHENATED-TRIPLE)
 (((:CLOSE-ANGLE-BRACKET #<edge435 223 point-mutation 225>) (:CLOSE-ANGLE-BRACKET :SINGLE-DIGIT))
  ">6 µ" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:FULL #<edge374 170 lambda-expression 172> #<edge443 213 site 218>)
   (:FULL :HYPHEN :POINT-MUTATION))
  "PBLV-R403A" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:CLOSE-ANGLE-BRACKET #<edge262 147 position 148>) (:CLOSE-ANGLE-BRACKET :SINGLE-DIGIT)) ">9 µ"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:FULL #<edge121 15 close 16> #<edge123 15 close 16>) (:FULL :HYPHEN :DIGITS)) "PBLV-391"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge54 19 stop 20> #<edge55 19 stop-endurant 20> #<edge57 21 "of" 22> #<edge58 21 of 22>
    #<edge60 22 the 23>)
   (:LOWER :HYPHEN :LOWER :HYPHEN :PROTEIN))
  "trimer-of-hairpins" MAKE-HYPHENATED-TRIPLE)
 (((#<edge720 387 location-of 388> #<edge721 388 "of" 389> #<edge723 389 downstream-segment 390>
    #<edge724 389 downstream 390> #<edge726 391 be 392>)
   (:LOWER :HYPHEN :LOWER :HYPHEN :PROTEIN))
  "trimer-of-hairpins" MAKE-HYPHENATED-TRIPLE)
 (((#<edge717 384 as 385> #<edge718 385 such 386> #<edge719 386 COMMA 387>)
   (:LOWER :HYPHEN :LOWER))
  "post-fusion" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge495 278 number 279> :LESS-THAN_OR_EQUAL_TO #<edge498 281 COMMA 282>)
   (:SINGLE-CAP :LESS-THAN_OR_EQUAL_TO :DIGITS))
  "P≤0.005" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge390 207 at 208> #<edge391 208 COMMA 209> #<edge393 210 very 211>)
   (:LOWER :HYPHEN :LOWER))
  "high-order" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge377 157 be 160> #<edge378 153 suggest 155> #<edge380 199 however 200>
    #<edge381 200 COMMA 201> #<edge382 201 whilst 202>)
   (:PROTEIN :HYPHEN :FULL :HYPHEN :LOWER))
  "MBP-BLV-hairpin" MAKE-HYPHENATED-TRIPLE)
 (((#<edge317 162 between 163> #<edge318 163 "the" 164> #<edge320 164 start 165>
    #<edge321 165 and 166> #<edge323 166 stop-endurant 167>)
   (:LOWER :HYPHEN :LOWER :HYPHEN :PROTEIN))
  "trimer-of-hairpins" MAKE-HYPHENATED-TRIPLE)
 (((:CAPITALIZED #<edge105 9 suggest 11> #<edge107 15 proximity 17>)
   (:CAPITALIZED :HYPHEN :DIGITS))
  "Pcr-400" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge69 28 bio-entity 29> #<edge70 29 "of" 30> #<edge71 29 of 30>) (:DIGITS :HYPHEN :LOWER))
  "three-residue" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge477 261 digit-sequence 262> #<edge478 261 number 262> #<edge480 264 COMMA 265>
    #<edge481 265 or 266> #<edge483 266 at 267>)
   (:LOWER :HYPHEN :LOWER :HYPHEN :PROTEIN))
  "trimer-of-hairpins" MAKE-HYPHENATED-TRIPLE)
 (((#<edge1108 inactive, resource 1108> #<edge1109 inactive, resource 1109>
    #<edge1110 inactive, resource 1110>)
   (:LOWER :HYPHEN :LOWER))
  "chloride-interacting" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge1123 inactive, resource 1123> #<edge1091 inactive, resource 1091>
    #<edge1092 inactive, resource 1092>)
   (:POINT-MUTATION :HYPHEN :LOWER))
  "N367D-envelope" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge592 340 modal 341> #<edge593 341 cause 342> #<edge595 342 "the" 343>
    #<edge596 342 the 343> #<edge598 344 digit-sequence 345>)
   (:LOWER :HYPHEN :LOWER :HYPHEN :PROTEIN))
  "trimer-of-hairpins" MAKE-HYPHENATED-TRIPLE)
 (((#<edge502 283 number 284> #<edge503 287 "the" 288> :MIXED) (:PROTEIN :HYPHEN :MIXED))
  "pMBP-BLVhairpin" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge347 187 the 188> #<edge348 188 distance 189> #<edge350 190 where 191>)
   (:LOWER :HYPHEN :LOWER))
  "side-chain" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge324 167 bio-entity 168> #<edge325 167 bio-entity 168> #<edge327 168 per 169>)
   (:LOWER :HYPHEN :LOWER))
  "main-chain" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge114 30 open-reading-frame 33> #<edge115 30 open-reading-frame 36> #<edge117 27 start 29>
    #<edge118 21 of 25> #<edge120 14 proximity 21>)
   (:LOWER :HYPHEN :LOWER :HYPHEN :PROTEIN))
  "trimer-of-hairpins" MAKE-HYPHENATED-TRIPLE)
 (((:LOWER #<edge225 120 open-reading-frame 121>) (:LOWER :DIGITS)) "gp72"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge58 21 of 22> #<edge59 22 "the" 23> #<edge61 23 upstream-segment 24>
    #<edge62 23 upstream 24> #<edge64 24 open-reading-frame 25>)
   (:LOWER :HYPHEN :LOWER :HYPHEN :PROTEIN))
  "trimer-of-hairpins" MAKE-HYPHENATED-TRIPLE)
 (((#<edge866 inactive, resource 866> :ASTERISK) (:DIGITS :ASTERISK)) "90°"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge826 inactive, resource 826> #<edge827 inactive, resource 827>
    #<edge828 inactive, resource 828>)
   (:DIGITS :HYPHEN :LOWER))
  "three-residue" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge799 inactive, resource 799> #<edge800 inactive, resource 800>
    #<edge801 inactive, resource 801>)
   (:DIGITS :HYPHEN :LOWER))
  "eight-residue" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge593 341 cause 342> #<edge594 341 cause 342> #<edge596 342 the 343>)
   (:FULL :HYPHEN :PROTEIN))
  "TCEP-HCL" MAKE-HYPHENATED-PAIR)
 (((#<edge455 234 modifier 240> #<edge457 204 require 207> #<edge458 246 under 247>)
   (:PROTEIN :SINGLE-DIGIT :FULL))
  "CX6CC" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge420 235 native 236> :ASTERISK) (:DIGITS :ASTERISK)) "180°" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge284 145 position 152> #<edge285 104 efficiency 110> #<edge286 144 of 152>)
   (:LOWER :HYPHEN :LOWER))
  "triple-stranded" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge259 145 pronoun/inanimate 146> #<edge260 146 modifier 147> #<edge262 147 position 148>
    #<edge263 149 figure 150> #<edge265 150 digit-sequence 151>)
   (:LOWER :HYPHEN :LOWER :HYPHEN :PROTEIN))
  "trimer-of-hairpins" MAKE-HYPHENATED-TRIPLE)
 (((#<edge145 70 "that" 71> #<edge146 70 that 71> #<edge147 71 be 72>) (:DIGITS :HYPHEN :LOWER))
  "three-alanine" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge282 146 position 148> #<edge283 145 position 148> #<edge284 145 position 152>)
   (:LOWER :HYPHEN :LOWER))
  "charge-surrounded" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge254 142 bio-entity 143> #<edge255 143 downstream-segment 144>
    #<edge256 143 downstream 144>)
   (:LOWER :HYPHEN :LOWER))
  "charge-surrounded" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge66 26 "the" 27> #<edge67 26 the 27> #<edge69 28 bio-entity 29> #<edge70 29 "of" 30>
    #<edge72 30 "the" 31>)
   (:LOWER :HYPHEN :LOWER :HYPHEN :PROTEIN))
  "trimer-of-hairpins" MAKE-HYPHENATED-TRIPLE)
 (((#<edge22 393 "due to" 395> #<edge23 393 due-to 395> #<edge24 415 "eif3" 417>)
   (:LOWER :HYPHEN :LOWER))
  "post-fusion" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge151 74 modal 75> #<edge152 75 be 76> #<edge154 77 "to" 78> #<edge155 77 to 78>
    #<edge157 79 only 80>)
   (:LOWER :HYPHEN :LOWER :HYPHEN :PROTEIN))
  "trimer-of-hairpins" MAKE-HYPHENATED-TRIPLE)
 (((#<edge70 29 "of" 30> #<edge71 29 of 30> #<edge72 30 "the" 31> #<edge73 30 the 31>
    #<edge75 31 downstream 32>)
   (:LOWER :HYPHEN :LOWER :HYPHEN :LOWER))
  "low-molecular-weight" MAKE-HYPHENATED-TRIPLE)
 (((#<edge651 326 of 335> #<edge652 321 terminate 325> #<edge653 319 terminate 325>)
   (:PROTEIN :HYPHEN :LOWER))
  "LHR-based" PACKAGE-QUALIFYING-PAIR)
 (((#<edge575 326 of 327> #<edge576 327 "the" 328> #<edge578 328 reinitiation 329>
    #<edge579 329 window 330> #<edge581 331 article-figure 332>)
   (:LOWER :HYPHEN :LOWER :HYPHEN :PROTEIN))
  "trimer-of-hairpins" MAKE-HYPHENATED-TRIPLE)
 (((#<edge518 273 parentheses 285> #<edge519 248 circumstance 250> #<edge521 257 bio-entity 259>
    #<edge522 256 bio-entity 259> #<edge524 271 bio-entity 273>)
   (:LOWER :HYPHEN :LOWER :HYPHEN :PROTEIN))
  "trimer-of-hairpins" MAKE-HYPHENATED-TRIPLE)
 (((#<edge443 213 site 218> #<edge444 228 site 230> #<edge446 231 bio-use 233>
    #<edge447 230 bio-use 233> #<edge449 235 bio-entity 238>)
   (:LOWER :HYPHEN :LOWER :HYPHEN :PROTEIN))
  "trimer-of-hairpins" MAKE-HYPHENATED-TRIPLE)
 (((#<edge432 243 lower-note 244> #<edge433 244 efficiency 245>
    #<edge434 199 subordinate-conjunction 201>)
   (:LOWER :HYPHEN :LOWER))
  "pre-hairpin" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge371 178 tethere 198> #<edge372 170 affect 172> #<edge373 169 bio-entity 172>)
   (:LOWER :HYPHEN :LOWER))
  "pre-hairpin" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge370 180 tethere 198> #<edge20 376 "wild-type" 379>) (:PROTEIN :-LIKE)) "rod-like"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge292 123 downstream 128> #<edge293 116 of 121> #<edge294 114 start 116>)
   (:LOWER :HYPHEN :PROTEIN))
  "inter-subunit" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge45 14 "the" 15> #<edge46 14 the 15> #<edge48 15 close 16>)
   (:PROTEIN :HYPHEN :SINGLE-DIGIT))
  "Type-1" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge65 25 and 26> #<edge588 337 that 338> #<edge67 26 the 27> #<edge589 338 "the" 339>
    #<edge69 28 bio-entity 29>)
   (:BIO-ENTITY :FORWARD-SLASH :BIO-ENTITY :FORWARD-SLASH :BIO-ENTITY))
  "C3b/iC3b/C3c" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge137 64 mobility 65> #<edge139 65 of 66>) (:PROTEIN :DIGITS)) "APP23"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge43 13 "of" 14> #<edge45 14 "the" 15>) (:BIO-ENTITY :BIO-ENTITY)) "Tg2576C1q-/-"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge35 6 HYPHEN 7> #<edge37 8 bio-process 9>) (:BIO-ENTITY :BIO-ENTITY)) "Tg2576C1q-/-"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:FULL #<edge345 182 tethere 183> #<edge23 393 due-to 395>) (:FULL :SINGLE-DIGIT :BIO-ENTITY))
  "APPPS1C1q-/-" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge19 319 even-if 321> #<edge21 376 wild-type 379>) (:BIO-ENTITY :BIO-ENTITY))
  "Tg2576C1q-/-" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:FULL #<edge324 167 bio-entity 168>) (:FULL :SINGLE-DIGIT)) "APPPS1"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:MIXED #<edge278 121 place 123>) (:MIXED :SINGLE-DIGIT)) "TgCRND8" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge31 3 on 4> #<edge34 5 terminate 6> #<edge360 195 bio-entity 197>)
   (:INITIAL :INITIAL :CAPITALIZED))
  "T.E.Lane" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge24 415 "eif3" 417> #<edge274 98 bio-entity 100> #<edge26 415 bio-complex 417> :MIXED)
   (:PROTEIN :FORWARD-SLASH :PROTEIN :MIXED))
  "CD88/C5aR" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge7 184 by-virtue-of 187> #<edge10 274 "such as" 276> :CAPITALIZED)
   (:INITIAL :INITIAL :CAPITALIZED))
  "D.A.Morrissette" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge683 370 number 371> #<edge685 372 "in" 373>) (:PROTEIN :DIGITS)) "PMX205"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge21 376 wild-type 379> :SINGLE-LOWER) (:PROTEIN :SINGLE-LOWER)) "IL-1ß"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge11 274 such-as 276> :SINGLE-LOWER) (:PROTEIN :SINGLE-LOWER)) "Il-1ß"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge99 45 square-brackets 48> #<edge722 388 of 389> #<edge723 389 downstream-segment 390>
    #<edge101 53 square-brackets 56> #<edge724 389 downstream 390> #<edge103 5 bio-process 9>)
   (:BIO-ENTITY :SINGLE-LOWER :FORWARD-SLASH :BIO-ENTITY :FORWARD-SLASH :BIO-ENTITY))
  "C3b/iC3b/C3c" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge717 384 as 385> #<edge718 385 such 386> #<edge719 386 COMMA 387>)
   (:LOWER :FORWARD-SLASH :LOWER))
  "activated/cleaved" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge79 34 number 35> #<edge599 344 number 345> #<edge81 38 digit-sequence 39>)
   (:BIO-ENTITY :FORWARD-SLASH :BIO-ENTITY))
  "C3/C3d" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge65 25 and 26> #<edge479 262 amino-acid 263> #<edge67 26 the 27>)
   (:BIO-ENTITY :FORWARD-SLASH :BIO-ENTITY))
  "C3/C3d" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge39 10 suggest 11> #<edge303 90 that 91> #<edge41 11 the 12>)
   (:BIO-ENTITY :FORWARD-SLASH :BIO-ENTITY))
  "C3/C3c" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge35 6 HYPHEN 7> #<edge186 90 "that" 91> #<edge37 8 bio-process 9>)
   (:BIO-ENTITY :FORWARD-SLASH :BIO-ENTITY))
  "C3/C3d" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge29 2 study-data 3> #<edge180 85 however 86> #<edge31 3 on 4>)
   (:BIO-ENTITY :FORWARD-SLASH :BIO-ENTITY))
  "C3/C3c" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge17 314 wild-type 317> #<edge150 73 pronoun/inanimate 74> #<edge151 74 modal 75>
    #<edge19 319 even-if 321> #<edge152 75 be 76> #<edge21 376 wild-type 379>)
   (:BIO-ENTITY :SINGLE-LOWER :FORWARD-SLASH :BIO-ENTITY :FORWARD-SLASH :BIO-ENTITY))
  "C3b/iC3b/C3c" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge11 274 such-as 276> #<edge143 68 bio-complex 69>) (:BIO-ENTITY :SINGLE-LOWER)) "C3b"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge177 65 of 69> #<edge179 57 believe 60>) (:PROTEIN :DIGITS)) "Arc48"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge69 28 bio-entity 29> #<edge71 29 of 30>) (:FULL :DIGITS)) "AT100"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge5 174 but-rather 176> #<edge37 8 bio-process 9> #<edge7 184 by-virtue-of 187>)
   (:BIO-ENTITY :SINGLE-CAP :-/-))
  "Tg2576Q-/-" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge201 101 comparative 102> #<edge15 300 wild-type 303>) (:SINGLE-DIGIT :CELL-LINE)) "6E10"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge575 326 of 327> #<edge576 327 "the" 328> #<edge577 327 the 328>)
   (:DIGITS :HYPHEN :LOWER))
  "two-tailed" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge562 312 select 313> #<edge563 313 "the" 314> #<edge43 13 "of" 14>)
   (:SINGLE-DIGIT :HYPHEN :BIO-ENTITY))
  "2-ΔCt" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge558 309 "the" 310> #<edge559 309 the 310> #<edge560 310 bio-complex 311>)
   (:LOWER :HYPHEN :LOWER))
  "fold-difference" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge472 256 downstream 257> #<edge473 257 bio-entity 258> #<edge39 10 suggest 11>)
   (:SINGLE-DIGIT :HYPHEN :BIO-ENTITY))
  "2-ΔCt" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge468 254 at 255> #<edge469 255 "a" 256> #<edge470 255 a 256>)
   (:CAPITALIZED :HYPHEN :LOWER))
  "Fold-difference" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge431 243 lower 244> #<edge432 243 lower-note 244> #<edge433 244 efficiency 245>)
   (:LOWER :HYPHEN :LOWER))
  "fold-difference" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge37 8 bio-process 9> #<edge362 189 between 191> #<edge364 166 bio-entity 168>
    #<edge365 172 efficiency 174>)
   (:BIO-ENTITY :LOWER :SINGLE-DIGIT :FORWARD-SLASH))
  "edu/primer3/" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge35 6 HYPHEN 7> #<edge360 195 bio-entity 197>) (:|HTTP://| :PROTEIN)) "http://frodo"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge355 194 and 195> #<edge357 195 the 196>) (:LOWER :SINGLE-DIGIT)) "primer3"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge345 182 tethere 183> #<edge346 187 "the" 188> #<edge347 187 the 188>
    #<edge348 188 distance 189>)
   (:PROTEIN :HYPHEN :SINGLE-CAP :COLON))
  "GAPDH-R:" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge340 178 "the" 179> #<edge341 178 the 179> #<edge342 179 bio-complex 180>
    #<edge343 180 modal 181>)
   (:PROTEIN :HYPHEN :SINGLE-CAP :COLON))
  "GAPDH-F:" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge33 4 the 5> #<edge335 177 well-bio-process 178> #<edge336 177 well-endurant 178>
    #<edge337 177 well-adverbial 178>)
   (:PROTEIN :HYPHEN :SINGLE-CAP :COLON))
  "TNFα-R:" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge31 3 on 4> #<edge331 171 affect 172> #<edge332 172 reinitiation 173>
    #<edge333 173 efficiency 174>)
   (:PROTEIN :HYPHEN :SINGLE-CAP :COLON))
  "TNFα-F:" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge27 1 sequencer 2> #<edge325 167 bio-entity 168> #<edge326 168 "per" 169>
    #<edge327 168 per 169>)
   (:PROTEIN :HYPHEN :SINGLE-CAP :COLON))
  "IL-6-F:" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge25 415 protein 417> #<edge321 165 and 166> #<edge322 166 stop 167>
    #<edge323 166 stop-endurant 167>)
   (:PROTEIN :HYPHEN :SINGLE-CAP :COLON))
  "CCL2-R:" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge23 393 due-to 395> #<edge317 162 between 163> #<edge318 163 "the" 164>
    #<edge319 163 the 164>)
   (:PROTEIN :HYPHEN :SINGLE-CAP :COLON))
  "CCL2-F:" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge21 376 wild-type 379> #<edge313 159 solely 160> #<edge314 160 "the" 161>
    #<edge315 160 the 161>)
   (:PROTEIN :HYPHEN :SINGLE-CAP :COLON))
  "IL-1β-R:" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge19 319 even-if 321> #<edge309 156 "it" 157> #<edge310 156 pronoun/inanimate 157>
    #<edge311 157 be 158>)
   (:PROTEIN :HYPHEN :SINGLE-CAP :COLON))
  "IL-1β-F:" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge17 314 wild-type 317> #<edge305 153 this 154> #<edge306 154 suggest 155>
    #<edge307 155 "that" 156>)
   (:PROTEIN :HYPHEN :SINGLE-CAP :COLON))
  "IL-1α-R:" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge15 300 wild-type 303> #<edge301 87 show 90> #<edge302 85 show 90> #<edge303 90 that 91>)
   (:PROTEIN :HYPHEN :SINGLE-CAP :COLON))
  "IL-1α-F:" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge236 127 bio-entity 128> #<edge237 128 COMMA 129> #<edge239 130 be 131>)
   (:FULL :FORWARD-SLASH :CAPITALIZED))
  "SYBR/Green" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge197 98 "the" 99> #<edge199 99 bio-entity 100>) (:MIXED :SINGLE-DIGIT)) "iQ5"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge122 14 proximity 25> #<edge123 15 close 16> #<edge126 3 on 9>)
   (:LOWER :FORWARD-SLASH :LOWER))
  "area/total" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge39 10 suggest 11> #<edge40 11 "the" 12> #<edge42 12 importance 13>)
   (:DIGITS :SINGLE-LOWER :DIGITS))
  "1300x1030" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge32 4 "the" 5> #<edge33 4 the 5> #<edge34 5 terminate 6>) (:LOWER :HYPHEN :LOWER))
  "high-resolution" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge8 214 "wild-type" 217> #<edge9 214 wild-type 217> #<edge11 274 such-as 276>)
   (:CAPITALIZED :HYPHEN :DIGITS))
  "Axiovert-200" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge781 408 bio-entity 410> #<edge783 422 bio-mechanism 427>) (:SINGLE-CAP :SINGLE-DIGIT))
  "C3" REIFY-TWO-PART-LABEL)
 (((#<edge774 412 in 417> #<edge43 13 "of" 14>) (:SINGLE-DIGIT :BIO-ENTITY)) "5ug/ml"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge768 426 bio-mechanism 427> #<edge769 396 point-mutation 398>
    #<edge771 418 transcription-factor 420>)
   (:SINGLE-DIGIT :FORWARD-SLASH :DIGITS))
  "2/11" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge41 11 the 12> #<edge751 409 bio-entity 410> :MIXED #<edge753 412 "in" 413>
    #<edge755 413 bio-complex 414> #<edge756 414 with 415> #<edge757 417 and 418>
    #<edge759 419 factor 420> #<edge761 421 "by" 422>)
   (:PROTEIN :FORWARD-SLASH :MIXED :SINGLE-DIGIT :SINGLE-LOWER :FORWARD-SLASH :SINGLE-CAP
    :SINGLE-DIGIT :SINGLE-LOWER))
  "C3b/iC3b/C3c" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge704 374 of 383> #<edge39 10 suggest 11>) (:DIGITS :BIO-ENTITY)) "0.4ug/ml"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge689 374 of 375> #<edge35 6 HYPHEN 7>) (:DIGITS :BIO-ENTITY)) "10ug/ml"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge683 370 number 371> #<edge685 372 "in" 373> #<edge687 373 location-of 374>)
   (:SINGLE-CAP :SINGLE-DIGIT :SINGLE-LOWER))
  "C3c" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge669 363 "that" 364> #<edge33 4 the 5>) (:SINGLE-DIGIT :BIO-ENTITY)) "4ug/ml"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge705 373 location-of 383> #<edge666 361 "we" 362>) (:POINT-MUTATION :SINGLE-DIGIT)) "11H9"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge656 298 of 304> #<edge658 294 give 298>) (:SINGLE-CAP :SINGLE-DIGIT)) "C3"
  REIFY-TWO-PART-LABEL)
 (((#<edge648 338 cause 347> #<edge650 336 suggest 347> #<edge651 326 of 335>)
   (:SINGLE-CAP :SINGLE-DIGIT :COLON))
  "C3:" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge583 332 number 333> #<edge31 3 on 4>) (:SINGLE-DIGIT :BIO-ENTITY)) "5ug/ml"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge572 325 downstream-segment 326> #<edge29 2 study-data 3>) (:SINGLE-DIGIT :BIO-ENTITY))
  "5ug/ml" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge564 313 the 314> #<edge586 336 suggest 337> #<edge569 322 bio-complex 323>)
   (:LOWER :POINT-MUTATION :SINGLE-DIGIT))
  "clone16D2" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge552 305 ones-number 306> #<edge25 415 protein 417>) (:DIGITS :BIO-ENTITY)) "0.02ug/ml"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:SHARP-SIGN #<edge521 257 bio-entity 259>) (:SHARP-SIGN :DIGITS)) "#1151"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge429 243 comparative-modifier 244> #<edge430 243 lower-adj 244>
    #<edge432 243 lower-note 244>)
   (:SINGLE-DIGIT :COLON :DIGITS))
  "1:50" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge11 274 such-as 276> #<edge414 231 be 232> :CAPITALIZED)
   (:CELL-LINE :HYPHEN :CAPITALIZED))
  "CY3-Tyramide" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge9 214 wild-type 217> #<edge352 191 the 192> :MIXED #<edge354 193 terminate 194>
    #<edge356 195 "the" 196> #<edge357 195 the 196> #<edge358 196 bio-entity 197>
    #<edge360 195 bio-entity 197> #<edge362 189 between 191>)
   (:PROTEIN :FORWARD-SLASH :MIXED :SINGLE-DIGIT :SINGLE-LOWER :FORWARD-SLASH :SINGLE-CAP
    :SINGLE-DIGIT :SINGLE-LOWER))
  "C3b/iC3b/C3c" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge302 85 show 90> #<edge304 153 "this" 154> #<edge305 153 this 154>
    #<edge306 154 suggest 155>)
   (:CAPITALIZED :DIGITS :HYPHEN :FULL))
  "Alexa555-SA" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge287 139 up-to 143> #<edge289 130 detect 132>) (:SINGLE-CAP :SINGLE-DIGIT)) "C3"
  REIFY-TWO-PART-LABEL)
 (((#<edge271 95 bio-complex 97> #<edge273 94 bio-complex 97>) (:SINGLE-CAP :SINGLE-DIGIT)) "C3"
  REIFY-TWO-PART-LABEL)
 (((#<edge239 130 be 131> #<edge240 131 detect 132> #<edge242 132 even 133>)
   (:SINGLE-DIGIT :COLON :DIGITS))
  "1:200" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge226 121 be 122> #<edge228 123 downstream-segment 124> #<edge229 123 downstream 124>
    #<edge230 124 "of" 125>)
   (:CAPITALIZED :DIGITS :HYPHEN :PROTEIN))
  "Alexa555-Streptavidin" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge220 116 "of" 117> #<edge221 116 of 117> #<edge223 117 the 118>)
   (:SINGLE-DIGIT :COLON :DIGITS))
  "1:200" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge74 31 downstream-segment 32> #<edge75 31 downstream 32>
    #<edge115 30 open-reading-frame 36> #<edge80 36 COMMA 37> #<edge81 38 digit-sequence 39>
    #<edge82 38 number 39>)
   (:PROTEIN :FORWARD-SLASH :PERCENT :CAPITALIZED :FORWARD-SLASH :FULL))
  "BSA/0.1%Triton/TBS" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge112 22 open-reading-frame 25> #<edge1 118 protein 120> #<edge58 21 of 22>
    #<edge113 31 open-reading-frame 33> #<edge62 23 upstream 24> #<edge63 24 protein 25>
    #<edge64 24 open-reading-frame 25>)
   (:PERCENT :DRUG :FORWARD-SLASH :PERCENT :MIXED :FORWARD-SLASH :FULL))
  "3%H2O2/10%MeOH/TBS" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge90 50 digit-sequence 51> #<edge91 50 number 51> #<edge106 11 importance 13>)
   (:PROTEIN :FORWARD-SLASH :PERCENT))
  "PBS/0.02%" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge15 300 wild-type 303> #<edge16 314 "wild-type" 317> #<edge18 319 "even if" 321>)
   (:DIGITS :FORWARD-SLASH :DIGITS))
  "67/27" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge11 274 such-as 276> #<edge12 285 "close to" 287> #<edge13 285 close-to 287>)
   (:LOWER :FORWARD-SLASH :LOWER))
  "ketamine/xylazine" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge37 8 bio-process 9> #<edge503 287 "the" 288>) (:BIO-ENTITY :SINGLE-CAP)) "C57BL/6J"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge470 255 a 256> #<edge471 256 downstream-segment 257> #<edge472 256 downstream 257>)
   (:CAPITALIZED :HYPHEN :LOWER))
  "Arctic-mutant" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge455 234 modifier 240> #<edge448 236 bio-entity 238> #<edge449 235 bio-entity 238>)
   (:RESIDUE-ON-PROTEIN :FORWARD-SLASH :FULL))
  "B6/SJL" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge25 415 protein 417> #<edge228 123 downstream-segment 124>) (:BIO-ENTITY :FULL))
  "3xTgQ-/-BUB" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge15 300 wild-type 303> :LOWER #<edge17 314 wild-type 317>) (:PROTEIN :LOWER :-/-))
  "C1qa-/-" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge191 93 between 94> :MIXED) (:SINGLE-DIGIT :MIXED)) "3xTgBUB" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge168 66 bio-complex 69> :MIXED) (:SINGLE-DIGIT :MIXED)) "3xTgBUB"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge44 13 of 14> #<edge46 14 the 15> #<edge47 15 close-bio-process 16>
    #<edge49 16 proximity 17> #<edge50 17 "of" 18>)
   (:FULL :DIGITS :FORWARD-SLASH :DIGITS :FULL))
  "KM670/671NL" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:FULL #<edge41 11 the 12>) (:FULL :-/-)) "BUBQ-/-" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:FULL #<edge403 221 amino-acid 222> :MIXED) (:FULL :FORWARD-SLASH :MIXED)) "BUB/BnJ"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge27 1 sequencer 2> #<edge281 137 move-something-somewhere 139>) (:PROTEIN :SINGLE-LOWER))
  "C5b" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge109 19 bio-entity 21> :MIXED #<edge11 274 such-as 276>) (:SINGLE-DIGIT :MIXED :-/-))
  "3xTgQ-/-" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge25 415 protein 417> #<edge455 234 modifier 240> #<edge27 1 sequencer 2> :MIXED)
   (:BIO-ENTITY :FORWARD-SLASH :PROTEIN :MIXED))
  "C5a/C5aR" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge345 182 tethere 183> :MIXED) (:SINGLE-DIGIT :MIXED)) "3xTg" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge245 134 "the" 135> #<edge247 135 start 136>) (:PROTEIN :DIGITS)) "Tg2576"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:FULL #<edge5 174 but-rather 176>) (:FULL :-/-)) "APPQ-/-" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge1 118 protein 120> #<edge3 139 up-to 141>) (:PROTEIN-DOMAIN :-/-)) "C1q-/-"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge61 23 upstream-segment 24> #<edge63 24 protein 25>) (:PROTEIN :DIGITS)) "Tg2576"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:SINGLE-LOWER #<edge315 160 the 161> #<edge316 161 distance 162>)
   (:SINGLE-LOWER :HYPHEN :PROTEIN))
  "ß-amyloid" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge17 314 wild-type 317> #<edge288 135 start 137>) (:PROTEIN :SINGLE-LOWER)) "C5a"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge11 274 such-as 276> #<edge192 94 "the" 95> #<edge193 94 the 95>
    #<edge195 96 bio-complex 97>)
   (:PROTEIN :SINGLE-LOWER :HYPHEN :SINGLE-DIGIT))
  "C5b-9" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge165 62 mobility 65> #<edge166 67 bio-complex 69> #<edge167 67 lambda-expression 68>)
   (:LOWER :HYPHEN :LOWER))
  "age-specificity" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge105 9 suggest 11> #<edge106 11 importance 13> #<edge108 14 proximity 17>)
   (:LOWER :HYPHEN :LOWER))
  "population-level" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge98 41 square-brackets 44> #<edge120 14 proximity 21>) (:LOWER :TIME)) "spring–summer"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge203 103 "to" 104> #<edge204 103 to 104> #<edge205 104 reinitiation 105>)
   (:LOWER :HYPHEN :LOWER))
  "best-fit" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge22 393 "due to" 395> #<edge23 393 due-to 395> #<edge24 415 "eif3" 417>)
   (:LOWER :HYPHEN :LOWER))
  "sub-linearly" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge193 94 the 95> #<edge194 95 terminate 96> #<edge195 96 bio-complex 97>)
   (:LOWER :HYPHEN :LOWER))
  "best-fit" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge45 14 "the" 15> #<edge46 14 the 15> #<edge47 15 close-bio-process 16>)
   (:LOWER :HYPHEN :LOWER))
  "sub-linearly" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge237 128 COMMA 129> #<edge238 129 reinitiation 130> #<edge239 130 be 131>)
   (:LOWER :HYPHEN :LOWER))
  "best-fit" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge214 112 when 113> #<edge215 112 when 113> #<edge216 113 "the" 114>)
   (:LOWER :HYPHEN :LOWER))
  "best-fit" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge135 62 a 63> #<edge136 63 restrict 64> #<edge137 64 mobility 65>)
   (:LOWER :HYPHEN :LOWER))
  "density-independent" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge626 299 bio-entity 304> #<edge627 309 bio-complex 311> #<edge628 311 select 313>)
   (:LOWER :HYPHEN :LOWER))
  "long-distance" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge527 289 site 291> #<edge528 288 site 291> #<edge529 287 site 291>)
   (:LOWER :HYPHEN :LOWER))
  "long-distance" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge428 242 at 243> #<edge429 243 comparative-modifier 244> #<edge430 243 lower-adj 244>)
   (:LOWER :HYPHEN :LOWER))
  "inter-city" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge381 200 COMMA 201> #<edge383 202 modifier 203>) (:SINGLE-CAP :SINGLE-DIGIT)) "S1"
  REIFY-TWO-PART-LABEL)
 (((#<edge27 1 sequencer 2> #<edge28 2 study-bio-method 3> #<edge30 3 "on" 4>)
   (:LOWER :HYPHEN :LOWER))
  "large-scale" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge181 86 COMMA 87> #<edge182 87 "we" 88> #<edge183 87 pronoun/first/plural 88>)
   (:LOWER :HYPHEN :LOWER))
  "sub-linearly" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge176 70 be 72> #<edge177 65 of 69> #<edge178 62 mobility 69>) (:LOWER :HYPHEN :LOWER))
  "inter-city" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge224 120 protein 121> #<edge225 120 open-reading-frame 121> #<edge226 121 be 122>)
   (:LOWER :HYPHEN :LOWER))
  "density-independent" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge202 102 critical 103> #<edge203 103 "to" 104> #<edge204 103 to 104>)
   (:LOWER :HYPHEN :LOWER))
  "distance-only" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge165 62 mobility 65> #<edge166 67 bio-complex 69> #<edge167 67 lambda-expression 68>)
   (:LOWER :HYPHEN :LOWER))
  "density-dependence" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge133 61 reflect 62> #<edge134 62 "a" 63>) (:SINGLE-DIGIT :SINGLE-LOWER)) "5g"
  REIFY-TWO-PART-LABEL)
 (((#<edge91 50 number 51> #<edge92 52 COMMA 53> #<edge93 54 digit-sequence 55>)
   (:LOWER :HYPHEN :LOWER))
  "distance-only" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge46 14 the 15> #<edge47 15 close-bio-process 16>) (:SINGLE-DIGIT :SINGLE-LOWER)) "5f"
  REIFY-TWO-PART-LABEL)
 (((#<edge29 2 study-data 3> #<edge31 3 on 4>) (:SINGLE-DIGIT :SINGLE-LOWER)) "5e"
  REIFY-TWO-PART-LABEL)
 (((#<edge14 300 "wild-type" 303> #<edge15 300 wild-type 303> #<edge16 314 "wild-type" 317>)
   (:LOWER :HYPHEN :LOWER))
  "distance-only" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge157 79 only 80> #<edge158 80 limit 81> #<edge160 82 following-adj 83>)
   (:LOWER :HYPHEN :LOWER))
  "long-range" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge23 393 due-to 395> #<edge24 415 "eif3" 417> #<edge25 415 protein 417>)
   (:LOWER :HYPHEN :LOWER))
  "single-introduction" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge93 54 digit-sequence 55> #<edge95 5 hyphenated-pair 8>) (:SINGLE-DIGIT :SINGLE-LOWER))
  "6a" REIFY-TWO-PART-LABEL)
 (((#<edge26 415 bio-complex 417> #<edge28 2 study-bio-method 3>) (:SINGLE-DIGIT :SINGLE-LOWER))
  "6b" REIFY-TWO-PART-LABEL)
 (((#<edge370 180 tethere 198> #<edge371 178 tethere 198>) (:SINGLE-DIGIT :SINGLE-LOWER)) "5d"
  REIFY-TWO-PART-LABEL)
 (((#<edge328 169 bio-entity 170> #<edge329 170 "that" 171> #<edge330 170 that 171>)
   (:LOWER :HYPHEN :LOWER))
  "distance-only" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge294 114 start 116> #<edge295 103 to 110> :CAPITALIZED) (:LOWER :HYPHEN :CAPITALIZED))
  "dataset—Oakland" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge148 72 COMMA 73> #<edge149 73 "it" 74> #<edge150 73 pronoun/inanimate 74>)
   (:LOWER :HYPHEN :LOWER))
  "distance-only" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge107 15 proximity 17> #<edge109 19 bio-entity 21>) (:SINGLE-DIGIT :SINGLE-LOWER)) "5c"
  REIFY-TWO-PART-LABEL)
 (((#<edge97 37 square-brackets 40> #<edge98 41 square-brackets 44>
    #<edge99 45 square-brackets 48>)
   (:LOWER :HYPHEN :LOWER))
  "single-infected" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge71 29 of 30> #<edge73 30 the 31>) (:SINGLE-DIGIT :SINGLE-LOWER)) "5a"
  REIFY-TWO-PART-LABEL)
 (((#<edge51 17 of 18> #<edge52 18 "the" 19> #<edge53 18 the 19>) (:LOWER :HYPHEN :LOWER))
  "distance-only" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge317 162 between 163> #<edge318 163 "the" 164>) (:SINGLE-DIGIT :SINGLE-LOWER)) "4f"
  REIFY-TWO-PART-LABEL)
 (((#<edge245 134 "the" 135> #<edge247 135 start 136>) (:SINGLE-DIGIT :SINGLE-LOWER)) "4e"
  REIFY-TWO-PART-LABEL)
 (((#<edge173 82 following 84> #<edge174 74 ability 77>) (:SINGLE-DIGIT :SINGLE-LOWER)) "4d"
  REIFY-TWO-PART-LABEL)
 (((#<edge63 24 protein 25> #<edge64 24 open-reading-frame 25> #<edge66 26 "the" 27>
    #<edge67 26 the 27> #<edge68 27 start 28>)
   (:LOWER :HYPHEN :LOWER :HYPHEN :LOWER))
  "city-to-city" MAKE-HYPHENATED-TRIPLE)
 (((#<edge58 21 of 22> #<edge59 22 "the" 23> #<edge60 22 the 23>) (:LOWER :HYPHEN :LOWER))
  "distance-only" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge67 26 the 27> #<edge68 27 start 28> #<edge69 28 bio-entity 29>) (:LOWER :HYPHEN :LOWER))
  "estimated-infectivity" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge63 24 protein 25> #<edge64 24 open-reading-frame 25> #<edge65 25 and 26>)
   (:LOWER :HYPHEN :LOWER))
  "constant-infectivity" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge44 13 of 14> #<edge45 14 "the" 15> #<edge46 14 the 15>) (:LOWER :HYPHEN :LOWER))
  "power-law" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge18 319 "even if" 321> #<edge19 319 even-if 321>) (:LOWER :COLON)) "time:" :NO-EDGE)
 (((#<edge150 73 pronoun/inanimate 74> #<edge151 74 modal 75> #<edge152 75 be 76>)
   (:LOWER :HYPHEN :LOWER))
  "size-dependence" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge124 13 of 25> #<edge125 9 suggest 13> #<edge126 3 on 9>) (:LOWER :HYPHEN :LOWER))
  "size-dependence" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge102 1 study-bio-method 3> #<edge103 5 bio-process 9> #<edge104 4 bio-process 9>)
   (:LOWER :HYPHEN :LOWER))
  "density-dependence" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge21 376 wild-type 379> #<edge23 393 due-to 395>) (:SINGLE-DIGIT :SINGLE-LOWER)) "2b"
  REIFY-TWO-PART-LABEL)
 (((#<edge8 214 "wild-type" 217> #<edge10 274 "such as" 276>) (:SINGLE-DIGIT :SINGLE-LOWER)) "2a"
  REIFY-TWO-PART-LABEL)
 (((#<edge166 67 bio-complex 69> #<edge168 66 bio-complex 69>) (:SINGLE-DIGIT :SINGLE-LOWER)) "2a"
  REIFY-TWO-PART-LABEL)
 (((#<edge127 57 "this" 58> #<edge128 57 this 58> #<edge129 58 be 59>) (:LOWER :HYPHEN :LOWER))
  "power-dependence" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge24 415 "eif3" 417> #<edge25 415 protein 417> #<edge26 415 bio-complex 417>)
   (:LOWER :HYPHEN :LOWER))
  "density-independent" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge74 31 downstream-segment 32> #<edge75 31 downstream 32> #<edge76 32 protein 33>)
   (:LOWER :HYPHEN :LOWER))
  "distance-only" MAKE-HYPHENATED-STRUCTURE)
 (((:GREEK_CAPITAL_LETTER_DELTA #<edge37 8 bio-process 9>) (:GREEK_CAPITAL_LETTER_DELTA :PROTEIN))
  "ΔDIC" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge130 59 believe 60> #<edge131 60 "to" 61> #<edge132 60 to 61>) (:DIGITS :HYPHEN :LOWER))
  "two-tailed" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge189 91 the 92> #<edge190 92 distance 93> #<edge191 93 between 94>)
   (:LOWER :HYPHEN :LOWER))
  "infector–infectee" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge139 65 of 66> #<edge140 66 "the" 67> #<edge141 66 the 67>) (:LOWER :HYPHEN :LOWER))
  "infector–infectee" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge218 114 start 115> #<edge219 115 bio-entity 116> #<edge220 116 "of" 117>)
   (:LOWER :HYPHEN :LOWER))
  "equal-tailed" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge50 17 "of" 18> #<edge51 17 of 18> #<edge53 18 the 19>) (:LOWER :HYPHEN :LOWER))
  "log-scale" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge18 319 "even if" 321> #<edge19 319 even-if 321> #<edge20 376 "wild-type" 379>)
   (:LOWER :HYPHEN :LOWER))
  "log-likelihood" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge260 146 modifier 147> #<edge261 147 position-bio-process 148>
    #<edge262 147 position 148>)
   (:LOWER :HYPHEN :LOWER))
  "time-invariant" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge193 94 the 95> #<edge194 95 terminate 96> #<edge195 96 bio-complex 97>)
   (:LOWER :HYPHEN :LOWER))
  "sub-linearly" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge57 21 "of" 22> #<edge58 21 of 22> #<edge59 22 "the" 23>) (:LOWER :COLON :LOWER))
  "is:where" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge51 17 of 18> #<edge52 18 "the" 19> #<edge53 18 the 19>) (:LOWER :HYPHEN :LOWER))
  "density-independent" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge143 68 bio-complex 69> #<edge144 69 semicolon 70>) (:PROTEIN :COLON)) "states:" :NO-EDGE)
 (((#<edge4 174 "but rather" 176> #<edge5 174 but-rather 176> #<edge6 184 "by virtue of" 187>)
   (:LOWER :HYPHEN :LOWER))
  "inter-city" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge11 274 such-as 276> #<edge13 285 close-to 287>) (:SINGLE-DIGIT :SINGLE-LOWER)) "1b"
  REIFY-TWO-PART-LABEL)
 (((#<edge334 176 how 177> #<edge335 177 well-bio-process 178> #<edge337 177 well-adverbial 178>)
   (:LOWER :HYPHEN :LOWER))
  "inter-centre" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge14 300 "wild-type" 303> #<edge16 314 "wild-type" 317>) (:SINGLE-DIGIT :SINGLE-LOWER))
  "1a" REIFY-TWO-PART-LABEL)
 (((#<edge185 89 deictic-location 90> #<edge186 90 "that" 91> #<edge187 90 that 91>)
   (:LOWER :HYPHEN :LOWER))
  "city-specific" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge104 4 bio-process 9> #<edge105 9 suggest 11> #<edge106 11 importance 13>)
   (:LOWER :HYPHEN :LOWER))
  "well-documented" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge448 236 bio-entity 238> #<edge449 235 bio-entity 238> #<edge451 243 efficiency 245>
    #<edge452 213 site 226> #<edge454 238 modifier 240>)
   (:LOWER :HYPHEN :LOWER :HYPHEN :LOWER))
  "individual-to-individual" MAKE-HYPHENATED-TRIPLE)
 (((#<edge441 205 bio-entity 207> #<edge442 214 site 218> #<edge444 228 site 230>
    #<edge445 227 site 230> #<edge446 231 bio-use 233>)
   (:LOWER :HYPHEN :LOWER :HYPHEN :LOWER))
  "city-to-city" MAKE-HYPHENATED-TRIPLE)
 (((#<edge322 166 stop 167> #<edge323 166 stop-endurant 167> #<edge324 167 bio-entity 168>)
   (:LOWER :FORWARD-SLASH :LOWER))
  "dependence/independence" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge164 60 reflect 62> #<edge165 62 mobility 65> #<edge166 67 bio-complex 69>)
   (:CAPITALIZED :HYPHEN :LOWER))
  "Density-independent" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge112 22 open-reading-frame 25> #<edge113 31 open-reading-frame 33>
    #<edge114 30 open-reading-frame 33>)
   (:LOWER :HYPHEN :LOWER))
  "distance-only" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge58 21 of 22> #<edge59 22 "the" 23> #<edge60 22 the 23>) (:LOWER :HYPHEN :LOWER))
  "distance-based" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge100 49 square-brackets 52> #<edge101 53 square-brackets 56>
    #<edge102 1 study-bio-method 3>)
   (:LOWER :HYPHEN :LOWER))
  "so-called" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge426 241 albeit 242> #<edge427 242 "at" 243> #<edge429 243 comparative-modifier 244>)
   (:LOWER :HYPHEN :LOWER))
  "long-range" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge374 170 lambda-expression 172> #<edge375 168 per 172> #<edge377 157 be 160>)
   (:LOWER :HYPHEN :LOWER))
  "long-range" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge330 170 that 171> #<edge331 171 affect 172> #<edge333 173 efficiency 174>)
   (:LOWER :HYPHEN :LOWER))
  "long-range" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge44 13 of 14> #<edge45 14 "the" 15> #<edge46 14 the 15>) (:LOWER :HYPHEN :LOWER))
  "age-dependence" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge33 4 the 5> #<edge34 5 terminate 6> #<edge35 6 HYPHEN 7>) (:LOWER :HYPHEN :LOWER))
  "age-dependence" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge64 24 open-reading-frame 25> #<edge65 25 and 26> #<edge67 26 the 27>)
   (:LOWER :FORWARD-SLASH :LOWER))
  "work/school" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge240 131 detect 132> :MIDDLE-DOT #<edge243 133 when 134>)
   (:SINGLE-DIGIT :MIDDLE-DOT :HYPHENATED-NUMBER))
  "6·10−5" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge232 125 "the" 126> :MIDDLE-DOT #<edge235 126 stop-endurant 127>)
   (:DIGITS :MIDDLE-DOT :HYPHENATED-NUMBER))
  "1.7·10−8" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge84 42 digit-sequence 43> #<edge86 44 COMMA 45>) (:SINGLE-CAP :SINGLE-DIGIT)) "S5"
  REIFY-TWO-PART-LABEL)
 (((#<edge192 94 "the" 95> #<edge194 95 terminate 96>) (:SINGLE-CAP :SINGLE-DIGIT)) "R2"
  REIFY-TWO-PART-LABEL)
 (((#<edge165 62 mobility 65> #<edge167 67 lambda-expression 68> #<edge168 66 bio-complex 69>
    #<edge170 77 undergo 79>)
   (:SINGLE-CAP :SINGLE-DIGIT :HYPHEN :LOWER))
  "R2-values" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge145 70 "that" 71> #<edge146 70 that 71> #<edge147 71 be 72>)
   (:LOWER :FORWARD-SLASH :LOWER))
  "rural/urban" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge127 57 "this" 58> #<edge128 57 this 58> #<edge129 58 be 59>)
   (:LOWER :FORWARD-SLASH :LOWER))
  "rural/urban" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge67 26 the 27> #<edge68 27 start 28> #<edge69 28 bio-entity 29>) (:LOWER :HYPHEN :LOWER))
  "cut-offs" MAKE-HYPHENATED-STRUCTURE)
 (((:CLOSE-ANGLE-BRACKET #<edge297 100 critical 103>) (:CLOSE-ANGLE-BRACKET :SINGLE-DIGIT)) ">3"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge23 393 due-to 395> #<edge25 415 protein 417>) (:SINGLE-CAP :SINGLE-DIGIT)) "S1"
  REIFY-TWO-PART-LABEL)
 (((#<edge238 129 reinitiation 130> #<edge239 130 be 131> #<edge240 131 detect 132>)
   (:LOWER :HYPHEN :LOWER))
  "lower-skilled" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge197 98 "the" 99> #<edge198 98 the 99> #<edge199 99 bio-entity 100>)
   (:LOWER :HYPHEN :PROTEIN))
  "high-tech" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge49 16 proximity 17> #<edge51 17 of 18>) (:FULL :DIGITS)) "GU230898"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge17 314 wild-type 317> #<edge19 319 even-if 321> #<edge20 376 "wild-type" 379>
    #<edge21 376 wild-type 379> #<edge22 393 "due to" 395> :FULL #<edge23 393 due-to 395>
    #<edge24 415 "eif3" 417> #<edge25 415 protein 417> #<edge26 415 bio-complex 417>)
   (:MIXED :SINGLE-DIGIT :HYPHEN :FULL :FORWARD-SLASH :FULL :FORWARD-SLASH :PROTEIN :FORWARD-SLASH
    :DIGITS))
  "HAdV7-HZ/SHX/CHN/2009" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge168 66 bio-complex 69> #<edge169 74 be 76> #<edge171 79 limit 81>)
   (:LOWER :HYPHEN :LOWER))
  "pseudo-replicates" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge33 4 the 5> #<edge36 7 reinitiation 8>) (:LOWER :DIGITS)) "version3.1"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:FULL #<edge316 161 distance 162> #<edge317 162 between 163> #<edge319 163 the 164>)
   (:FULL :FORWARD-SLASH :PROTEIN :DIGITS))
  "ADSD/AD52" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge13 285 close-to 287> #<edge201 101 comparative 102> #<edge15 300 wild-type 303>)
   (:HCOV-229E :FORWARD-SLASH :HCOV-NL63))
  "human coronavirus 229E/NL63" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge100 49 square-brackets 52> #<edge5 174 but-rather 176> #<edge140 66 "the" 67>)
   (:PROTEIN :MOLECULE :POINT-MUTATION))
  "RV6C00Y" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge80 36 COMMA 37> #<edge81 38 digit-sequence 39> #<edge82 38 number 39>)
   (:LOWER :HYPHEN :FULL))
  "transcription-PCR" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge39 10 suggest 11> #<edge40 11 "the" 12> #<edge1 118 protein 120>) (:LOWER :HYPHEN :VRNA))
  "mini-viral RNA" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge2 139 "up to" 141> :LOWER) (:INITIAL :LOWER)) "W.rzburg" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge13 285 close-to 287> #<edge14 300 "wild-type" 303> #<edge15 300 wild-type 303>)
   (:CAPITALIZED :FORWARD-SLASH :CAPITALIZED))
  "Virion/Serion" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge86 44 COMMA 45> #<edge87 46 digit-sequence 47> #<edge90 50 digit-sequence 51>)
   (:SINGLE-DIGIT :COLON :DIGITS))
  "1:1,024" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge79 34 number 35> #<edge80 36 COMMA 37> #<edge82 38 number 39>)
   (:SINGLE-DIGIT :COLON :SINGLE-DIGIT))
  "1:8" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge41 11 the 12> #<edge42 12 importance 13> #<edge44 13 of 14>) (:LOWER :HYPHEN :LOWER))
  "convalescent-phase" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge20 376 "wild-type" 379> #<edge21 376 wild-type 379> #<edge23 393 due-to 395>)
   (:LOWER :HYPHEN :LOWER))
  "acute-phase" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge113 31 open-reading-frame 33> #<edge114 30 open-reading-frame 33> #<edge116 29 of 36>)
   (:LOWER :HYPHEN :LOWER))
  "acute-phase" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge94 54 number 55> #<edge95 5 hyphenated-pair 8> #<edge97 37 square-brackets 40>)
   (:LOWER :HYPHEN :LOWER))
  "convalescent-phase" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge67 26 the 27> #<edge68 27 start 28> #<edge69 28 bio-entity 29>) (:FULL :HYPHEN :PROTEIN))
  "ELISA-IgA" MAKE-HYPHENATED-PAIR)
 (((#<edge107 15 proximity 17> #<edge109 19 bio-entity 21>) (:PROTEIN :DIGITS)) "AF053086"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge7 184 by-virtue-of 187> :SINGLE-LOWER) (:BIO-ENTITY :SINGLE-LOWER)) "HAdV-7i"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge5 174 but-rather 176> #<edge86 44 COMMA 45>) (:BIO-ENTITY :SINGLE-LOWER)) "HAdV-7d"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge76 32 protein 33> #<edge3 139 up-to 141>) (:MIXED :BIO-ENTITY)) "HAdV7d2"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge488 270 cognate 271> #<edge489 271 initiate 272> #<edge491 276 "the" 277>)
   (:LOWER :HYPHEN :LOWER))
  "tertiary-care" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge482 266 "at" 267> #<edge483 266 at 267> #<edge485 267 a 268>) (:LOWER :HYPHEN :LOWER))
  "chronic-care" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge470 255 a 256> #<edge506 289 reinitiation 290>) (:SINGLE-DIGIT :RESIDUE-ON-PROTEIN))
  "7d2" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge219 115 bio-entity 116> #<edge221 116 of 117> #<edge223 117 the 118>)
   (:PROTEIN :SINGLE-DIGIT :SINGLE-LOWER))
  "Ad7b" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge209 108 digit-sequence 109> #<edge211 110 and 111>) (:PROTEIN :SINGLE-DIGIT)) "Ad7"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge169 74 be 76> #<edge170 77 undergo 79> #<edge172 79 movement 82>)
   (:MIXED :HYPHEN :SINGLE-DIGIT))
  "HAdV-3" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge154 77 "to" 78> #<edge155 77 to 78> #<edge156 78 undergo 79>) (:DIGITS :HYPHEN :DIGITS))
  "1958-1990" LOOK-FOR-YEAR-EXPRESSION)
 (((#<edge99 45 square-brackets 48> #<edge100 49 square-brackets 52>
    #<edge101 53 square-brackets 56>)
   (:DIGITS :HYPHEN :DIGITS))
  "1980-1994" LOOK-FOR-YEAR-EXPRESSION)
 (((#<edge91 50 number 51> #<edge92 52 COMMA 53> #<edge93 54 digit-sequence 55>)
   (:DIGITS :HYPHEN :DIGITS))
  "1958-1984" LOOK-FOR-YEAR-EXPRESSION)
 (((#<edge78 34 digit-sequence 35> #<edge80 36 COMMA 37> #<edge81 38 digit-sequence 39>)
   (:PROTEIN :SINGLE-DIGIT :SINGLE-LOWER))
  "Ad7d" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge44 13 of 14> #<edge46 14 the 15> #<edge47 15 close-bio-process 16>)
   (:PROTEIN :SINGLE-DIGIT :SINGLE-LOWER))
  "Ad7d" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge58 21 of 22> #<edge59 22 "the" 23> #<edge61 23 upstream-segment 24>)
   (:LOWER :HYPHEN :LOWER))
  "acute-phase" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge39 10 suggest 11> #<edge40 11 "the" 12> #<edge42 12 importance 13>)
   (:LOWER :HYPHEN :LOWER))
  "convalescent-phase" MAKE-HYPHENATED-STRUCTURE)
 (((:FULL #<edge166 67 bio-complex 69> #<edge162 83 terminate 84> #<edge164 60 reflect 62>)
   (:FULL :AMOUNT-OF-TIME :FORWARD-SLASH :DIGITS))
  "CCID50s/50" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:FULL #<edge147 71 be 72>) (:FULL :DIGITS)) "CCID50" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge116 29 of 36> #<edge118 21 of 25> #<edge119 17 of 21> #<edge120 14 proximity 21>
    #<edge122 14 proximity 25>)
   (:MIXED :SINGLE-DIGIT :HYPHEN :FULL :DIGITS))
  "HAdV7-HZ0901" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge70 29 "of" 30> #<edge71 29 of 30> #<edge72 30 "the" 31>) (:LOWER :HYPHEN :LOWER))
  "cut-off" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge212 111 "that" 112> #<edge214 112 when 113>) (:FULL :DIGITS)) "AY769946"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge208 107 article-figure 108> #<edge210 108 number 109>) (:FULL :DIGITS)) "AY594255"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge111 23 open-reading-frame 25> #<edge114 30 open-reading-frame 33>)
   (:MIXED :HYPHENATED-NUMBER))
  "HAdV7-0901" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge88 46 number 47> #<edge7 184 by-virtue-of 187>) (:LOWER :-LIKE)) "enterovirus-like"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge65 25 and 26> #<edge3 139 up-to 141>) (:LOWER :-LIKE)) "adenovirus-like"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge248 136 bio-entity 137> #<edge249 137 be 138> #<edge251 138 move-to 139>)
   (:MIXED :HYPHEN :SINGLE-DIGIT))
  "HAdV-3" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge97 37 square-brackets 40> #<edge98 41 square-brackets 44>) (:LOWER :COLON)) "swabs:"
  :NO-EDGE)
 (((#<edge336 177 well-endurant 178> :ASTERISK #<edge337 177 well-adverbial 178>)
   (:DIGITS :ASTERISK :SINGLE-CAP))
  "38.8°C" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge326 168 "per" 169> :ASTERISK #<edge327 168 per 169>) (:DIGITS :ASTERISK :SINGLE-CAP))
  "40.5°C" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge475 260 figure 261> #<edge476 260 article-figure 261> #<edge478 261 number 262>)
   (:MIXED :HYPHEN :SINGLE-DIGIT))
  "HAdV-7" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge286 144 of 152> #<edge287 139 up-to 143> #<edge289 130 detect 132>)
   (:MIXED :HYPHEN :DIGITS))
  "HAdV-11" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge228 123 downstream-segment 124> #<edge229 123 downstream 124> #<edge231 124 of 125>)
   (:MIXED :HYPHEN :SINGLE-DIGIT))
  "HAdV-7" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge192 94 "the" 95> #<edge193 94 the 95> #<edge195 96 bio-complex 97>)
   (:MIXED :HYPHEN :SINGLE-DIGIT))
  "HAdV-7" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge146 70 that 71> #<edge147 71 be 72> #<edge149 73 "it" 74>)
   (:MIXED :HYPHEN :SINGLE-DIGIT))
  "HAdV-7" MAKE-HYPHENATED-STRUCTURE)
 (((:MIXED #<edge95 5 hyphenated-pair 8> #<edge97 37 square-brackets 40>)
   (:MIXED :HYPHEN :SINGLE-DIGIT))
  "HAdV-7" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge75 31 downstream 32> #<edge76 32 protein 33> #<edge77 32 open-reading-frame 33>)
   (:DIGITS :HYPHEN :LOWER))
  "one-fifth" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge77 32 open-reading-frame 33> :AND-SIGN #<edge79 34 number 35>)
   (:SINGLE-CAP :AND-SIGN :SINGLE-CAP))
  "H&E" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge309 156 "it" 157> #<edge311 157 be 158>) (:SINGLE-CAP :SINGLE-DIGIT)) "H1"
  REIFY-TWO-PART-LABEL)
 (((#<edge252 141 digit-sequence 142> #<edge254 142 bio-entity 143>) (:SINGLE-CAP :SINGLE-DIGIT))
  "H1" REIFY-TWO-PART-LABEL)
 (((#<edge220 116 "of" 117> :FULL #<edge221 116 of 117> #<edge223 117 the 118>)
   (:HYPHEN :FULL :HYPHEN :SINGLE-DIGIT))
  "-ACCATCTACCATTCCCTGCC-3" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge210 108 number 109> :FULL #<edge211 110 and 111> #<edge213 111 that 112>)
   (:HYPHEN :FULL :HYPHEN :SINGLE-DIGIT))
  "-ATACACCCTCTCACCATCGG-3" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge196 97 and 98> :FULL #<edge197 98 "the" 99> #<edge199 99 bio-entity 100>)
   (:HYPHEN :FULL :HYPHEN :SINGLE-DIGIT))
  "-ACCATCTACCATTCCCTGC-3" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge186 90 "that" 91> :FULL #<edge187 90 that 91> #<edge189 91 the 92>)
   (:HYPHEN :FULL :HYPHEN :SINGLE-DIGIT))
  "-TGTCAAGAAAGGAGACTCAGC-3" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge129 58 be 59> #<edge131 60 "to" 61>) (:CAPITALIZED :DIGITS)) "Uni12"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge76 32 protein 33> #<edge77 32 open-reading-frame 33> #<edge78 34 digit-sequence 35>)
   (:LOWER :HYPHEN :LOWER))
  "reverse-transcribed" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge176 70 be 72> #<edge177 65 of 69> #<edge178 62 mobility 69>) (:LOWER :HYPHEN :LOWER))
  "post-infection" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge184 88 show 89> #<edge185 89 deictic-location 90> #<edge186 90 "that" 91>)
   (:LOWER :HYPHEN :LOWER))
  "single-cycle" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge178 62 mobility 69> #<edge179 57 believe 60> #<edge181 86 COMMA 87>)
   (:LOWER :HYPHEN :LOWER))
  "post-transfection" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge118 21 of 25> #<edge119 17 of 21> #<edge120 14 proximity 21>) (:DIGITS :HYPHEN :PROTEIN))
  "1194-HA" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge108 14 proximity 17> #<edge109 19 bio-entity 21> #<edge110 18 bio-entity 21>)
   (:FULL :HYPHEN :PROTEIN))
  "AH-HA" MAKE-HYPHENATED-PAIR)
 (((#<edge1 118 protein 120> #<edge79 34 number 35> #<edge80 36 COMMA 37>)
   (:PROTEIN :HYPHEN :CAPITALIZED))
  "HA1-Fc" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge73 30 the 31> #<edge74 31 downstream-segment 32> #<edge75 31 downstream 32>)
   (:LOWER :HYPHEN :LOWER))
  "pre-coated" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge336 177 well-endurant 178> #<edge337 177 well-adverbial 178> #<edge338 177 modifier 178>)
   (:LOWER :HYPHEN :LOWER))
  "post-challenge" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge323 166 stop-endurant 167> #<edge324 167 bio-entity 168> #<edge327 168 per 169>)
   (:LOWER :FORWARD-SLASH :LOWER))
  "mice/group" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge265 150 digit-sequence 151> #<edge266 150 number 151> #<edge269 106 parentheses 110>)
   (:LOWER :FORWARD-SLASH :LOWER))
  "mice/group" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge205 104 reinitiation 105> #<edge206 105 efficiency 106> #<edge207 107 figure 108>)
   (:LOWER :HYPHEN :LOWER))
  "post-each" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge7 184 by-virtue-of 187> #<edge94 54 number 55> #<edge95 5 hyphenated-pair 8>)
   (:PROTEIN :HYPHEN :CAPITALIZED))
  "HA1-Fc" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge85 42 number 43> #<edge86 44 COMMA 45> #<edge87 46 digit-sequence 47>)
   (:LOWER :HYPHEN :LOWER))
  "primed-vaccinated" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge69 28 bio-entity 29> #<edge70 29 "of" 30> #<edge73 30 the 31>)
   (:LOWER :FORWARD-SLASH :LOWER))
  "mice/group" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge182 87 "we" 88> #<edge183 87 pronoun/first/plural 88> #<edge186 90 "that" 91>)
   (:SINGLE-DIGIT :COLON :DIGITS))
  "1∶5,000" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge127 57 "this" 58> #<edge128 57 this 58> #<edge131 60 "to" 61>)
   (:SINGLE-DIGIT :COLON :DIGITS))
  "1∶1,000" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge1 118 protein 120> #<edge13 285 close-to 287> #<edge14 300 "wild-type" 303>)
   (:PROTEIN :HYPHEN :CAPITALIZED))
  "HA1-Fc" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge31 3 on 4> #<edge337 177 well-adverbial 178> #<edge338 177 modifier 178>)
   (:PROTEIN :HYPHEN :CAPITALIZED))
  "HA1-Fc" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge314 160 "the" 161> #<edge315 160 the 161> #<edge317 162 between 163>)
   (:LOWER :HYPHEN :LOWER))
  "post-transfection" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge234 126 stop 127> #<edge235 126 stop-endurant 127> #<edge236 127 bio-entity 128>)
   (:LOWER :HYPHEN :LOWER))
  "sequence-confirmed" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge19 319 even-if 321> #<edge199 99 bio-entity 100> #<edge200 100 be 101>)
   (:PROTEIN :HYPHEN :CAPITALIZED))
  "HA1-Fc" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge7 184 by-virtue-of 187> #<edge101 53 square-brackets 56> #<edge102 1 study-bio-method 3>)
   (:PROTEIN :HYPHEN :CAPITALIZED))
  "HA1-Fc" MAKE-HYPHENATED-STRUCTURE)
 (((:FULL #<edge77 32 open-reading-frame 33>) (:FULL :DIGITS)) "ABD28180"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge90 50 digit-sequence 51> #<edge91 50 number 51> #<edge93 54 digit-sequence 55>)
   (:LOWER :HYPHEN :SINGLE-DIGIT))
  "level-3" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge151 74 modal 75> #<edge152 75 be 76> #<edge153 76 ability 77>) (:LOWER :HYPHEN :LOWER))
  "cross-protection" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge130 59 believe 60> #<edge131 60 "to" 61> #<edge132 60 to 61>) (:LOWER :HYPHEN :LOWER))
  "cross-neutralizing" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge88 46 number 47> #<edge89 48 COMMA 49> #<edge91 50 number 51> #<edge92 52 COMMA 53>
    #<edge93 54 digit-sequence 55>)
   (:LOWER :HYPHEN :LOWER :HYPHEN :LOWER))
  "proof-of-concept" MAKE-HYPHENATED-TRIPLE)
 (((#<edge11 274 such-as 276> #<edge59 22 "the" 23> #<edge60 22 the 23>)
   (:PROTEIN :HYPHEN :CAPITALIZED))
  "HA1-Fc" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge3 139 up-to 141> #<edge38 9 have 10> #<edge39 10 suggest 11>)
   (:PROTEIN :HYPHEN :CAPITALIZED))
  "HA1-Fc" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge11 274 such-as 276> #<edge105 9 suggest 11> #<edge106 11 importance 13>)
   (:PROTEIN :HYPHEN :CAPITALIZED))
  "HA1-Fc" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge1 118 protein 120> #<edge35 6 HYPHEN 7> #<edge36 7 reinitiation 8>)
   (:PROTEIN :HYPHEN :CAPITALIZED))
  "HA1-Fc" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge64 24 open-reading-frame 25> #<edge65 25 and 26> #<edge66 26 "the" 27>)
   (:PROTEIN :HYPHEN :LOWER))
  "protein-based" PACKAGE-QUALIFYING-PAIR)
 (((#<edge330 170 that 171> #<edge331 171 affect 172> #<edge332 172 reinitiation 173>)
   (:LOWER :HYPHEN :LOWER))
  "cross-clade" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge171 79 limit 81> #<edge172 79 movement 82> #<edge173 82 following 84>)
   (:PROTEIN :HYPHEN :LOWER))
  "HA-based" PACKAGE-QUALIFYING-PAIR)
 (((#<edge5 174 but-rather 176> #<edge136 63 restrict 64> #<edge137 64 mobility 65>)
   (:PROTEIN :HYPHEN :CAPITALIZED))
  "HA1-Fc" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge18 319 "even if" 321> :AND-SIGN #<edge20 376 "wild-type" 379> #<edge21 376 wild-type 379>
    #<edge22 393 "due to" 395>)
   (:SINGLE-CAP :AND-SIGN :SINGLE-CAP :HYPHEN :LOWER))
  "H&E-stained" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge19 319 even-if 321> #<edge215 112 when 113> #<edge216 113 "the" 114>)
   (:PROTEIN :HYPHEN :CAPITALIZED))
  "HA1-Fc" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge156 78 undergo 79> #<edge157 79 only 80> #<edge158 80 limit 81>)
   (:LOWER :FORWARD-SLASH :LOWER))
  "copies/lung" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge146 70 that 71> :MULTIPLICATION-SIGN #<edge174 74 ability 77> :MULTIPLICATION-SIGN
    #<edge154 77 "to" 78>)
   (:DIGITS :MULTIPLICATION-SIGN :NUMBER-RANGE :MULTIPLICATION-SIGN :DIGITS))
  "8.6×108±7.4×108" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge9 214 wild-type 217> #<edge125 9 suggest 13> #<edge126 3 on 9> #<edge127 57 "this" 58>)
   (:PROTEIN :HYPHEN :CAPITALIZED :HYPHEN))
  "HA1-Fc-" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge81 38 digit-sequence 39> #<edge82 38 number 39> #<edge83 40 COMMA 41>)
   (:LOWER :HYPHEN :LOWER))
  "post-virus" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge1 118 protein 120> #<edge42 12 importance 13> #<edge43 13 "of" 14>)
   (:PROTEIN :HYPHEN :CAPITALIZED))
  "HA1-Fc" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge310 156 pronoun/inanimate 157> #<edge311 157 be 158> #<edge312 158 not 159>)
   (:LOWER :HYPHEN :LOWER))
  "cross-clade" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge25 415 protein 417> #<edge213 111 that 112> #<edge214 112 when 113>
    #<edge215 112 when 113> #<edge216 113 "the" 114>)
   (:PROTEIN :HYPHEN :CAPITALIZED :HYPHEN :LOWER))
  "HA1-Fc-vaccinated" MAKE-HYPHENATED-TRIPLE)
 (((#<edge146 70 that 71> #<edge147 71 be 72> #<edge148 72 COMMA 73>) (:PROTEIN :HYPHEN :LOWER))
  "protein-based" PACKAGE-QUALIFYING-PAIR)
 (((#<edge1 118 protein 120> #<edge59 22 "the" 23> #<edge60 22 the 23>)
   (:PROTEIN :HYPHEN :CAPITALIZED))
  "HA1-Fc" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge445 227 site 230> #<edge446 231 bio-use 233> #<edge447 230 bio-use 233>)
   (:FULL :HYPHEN :PROTEIN))
  "AH-HA" MAKE-HYPHENATED-PAIR)
 (((#<edge435 223 point-mutation 225> #<edge436 220 point-mutation 222>
    #<edge437 220 point-mutation 225>)
   (:DIGITS :HYPHEN :PROTEIN))
  "1194-HA" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge35 6 HYPHEN 7> #<edge415 232 bio-use 233> #<edge416 233 when 234>)
   (:PROTEIN :HYPHEN :CAPITALIZED))
  "HA1-Fc" MAKE-HYPHENATED-STRUCTURE)
 (((:GREATER-THAN_OR_EQUAL_TO #<edge372 170 affect 172> #<edge373 169 bio-entity 172>
    #<edge376 157 be 159> :MULTIPLICATION-SIGN #<edge378 153 suggest 155>)
   (:GREATER-THAN_OR_EQUAL_TO :SINGLE-DIGIT :COLON :DIGITS :MULTIPLICATION-SIGN :DIGITS))
  "≥1∶1.0×103" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge288 135 start 137> #<edge289 130 detect 132> #<edge292 123 downstream 128>
    :MULTIPLICATION-SIGN #<edge310 156 pronoun/inanimate 157> :MULTIPLICATION-SIGN
    #<edge300 88 show 90>)
   (:SINGLE-DIGIT :COLON :DIGITS :MULTIPLICATION-SIGN :NUMBER-RANGE :MULTIPLICATION-SIGN :DIGITS))
  "1∶8.5×102±3.7×102" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:FULL #<edge274 98 bio-entity 100> #<edge308 155 that 156>)
   (:FULL :FORWARD-SLASH :POINT-MUTATION))
  "SZ/406H" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge267 85 subordinate-conjunction 87> #<edge268 141 bio-entity 143>
    #<edge270 148 parentheses 152>)
   (:PROTEIN :FORWARD-SLASH :DIGITS))
  "HK/156" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:FULL #<edge203 103 "to" 104> #<edge204 103 to 104>) (:FULL :HYPHEN :PROTEIN)) "XJ-HA"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:FULL #<edge199 99 bio-entity 100> #<edge200 100 be 101>) (:FULL :HYPHEN :PROTEIN)) "QH-HA"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge195 96 bio-complex 97> #<edge196 97 and 98> #<edge197 98 "the" 99>)
   (:DIGITS :HYPHEN :PROTEIN))
  "1194-HA" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge176 70 be 72> #<edge177 65 of 69> #<edge178 62 mobility 69>) (:FULL :HYPHEN :PROTEIN))
  "AH-HA" MAKE-HYPHENATED-PAIR)
 (((#<edge7 184 by-virtue-of 187> #<edge150 73 pronoun/inanimate 74> #<edge151 74 modal 75>)
   (:PROTEIN :HYPHEN :CAPITALIZED))
  "HA1-Fc" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge1 118 protein 120> #<edge18 319 "even if" 321> #<edge19 319 even-if 321>)
   (:PROTEIN :HYPHEN :CAPITALIZED))
  "HA1-Fc" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge9 214 wild-type 217> #<edge95 5 hyphenated-pair 8> #<edge96 33 square-brackets 36>)
   (:PROTEIN :HYPHEN :CAPITALIZED))
  "HA1-Fc" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge5 174 but-rather 176> #<edge42 12 importance 13> #<edge43 13 "of" 14>)
   (:PROTEIN :HYPHEN :CAPITALIZED))
  "HA1-Fc" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge422 237 bio-entity 238> #<edge423 238 be 239> #<edge425 240 COMMA 241>)
   (:PROTEIN :FORWARD-SLASH :DIGITS))
  "VN/1194" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge415 232 bio-use 233> #<edge416 233 when 234> :MIXED #<edge417 233 when 234>
    #<edge419 234 the 235> #<edge420 235 native 236> #<edge421 236 reinitiation 237>)
   (:SINGLE-CAP :FORWARD-SLASH :MIXED :FORWARD-SLASH :DIGITS :FORWARD-SLASH :DIGITS))
  "A/VietNam/1194/2004" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge323 166 stop-endurant 167> #<edge324 167 bio-entity 168> #<edge327 168 per 169>
    :MULTIPLICATION-SIGN #<edge329 170 "that" 171>)
   (:SINGLE-DIGIT :COLON :DIGITS :MULTIPLICATION-SIGN :DIGITS))
  "1∶1.3×107" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge177 65 of 69> #<edge178 62 mobility 69> #<edge181 86 COMMA 87> :MULTIPLICATION-SIGN
    #<edge183 87 pronoun/first/plural 88>)
   (:SINGLE-DIGIT :COLON :DIGITS :MULTIPLICATION-SIGN :DIGITS))
  "1∶2.1×108" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge9 214 wild-type 217> #<edge100 49 square-brackets 52> #<edge101 53 square-brackets 56>)
   (:PROTEIN :HYPHEN :CAPITALIZED))
  "HA1-Fc" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge1 118 protein 120> #<edge55 19 stop-endurant 20> #<edge56 20 bio-entity 21>)
   (:PROTEIN :HYPHEN :CAPITALIZED))
  "HA1-Fc" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge29 2 study-data 3> #<edge343 180 modal 181> :CAPITALIZED)
   (:PROTEIN :HYPHEN :CAPITALIZED))
  "HA1-Fdc" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge27 1 sequencer 2> #<edge340 178 "the" 179> #<edge341 178 the 179>)
   (:PROTEIN :HYPHEN :CAPITALIZED))
  "HA1-Fc" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge15 300 wild-type 303> #<edge147 71 be 72> :CAPITALIZED) (:PROTEIN :HYPHEN :CAPITALIZED))
  "HA1-Fdc" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge13 285 close-to 287> #<edge144 69 semicolon 70> #<edge145 70 "that" 71>)
   (:PROTEIN :HYPHEN :CAPITALIZED))
  "HA1-Fc" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge11 274 such-as 276> #<edge89 48 COMMA 49>) (:PROTEIN :LOWER)) "IL2ss"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge9 214 wild-type 217> #<edge84 42 digit-sequence 43> :CAPITALIZED)
   (:PROTEIN :HYPHEN :CAPITALIZED))
  "HA1-Fdc" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge7 184 by-virtue-of 187> #<edge81 38 digit-sequence 39> #<edge82 38 number 39>)
   (:PROTEIN :HYPHEN :CAPITALIZED))
  "HA1-Fc" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge66 26 "the" 27> #<edge67 26 the 27> #<edge68 27 start 28>) (:LOWER :HYPHEN :LOWER))
  "in-frame" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge59 22 "the" 23> #<edge62 23 upstream 24>) (:PLUS-SIGN :HYPHENATED-NUMBER)) "+3-322"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge51 17 of 18> #<edge52 18 "the" 19> #<edge54 19 stop 20>)
   (:FULL :FORWARD-SLASH :SINGLE-DIGIT))
  "AH/1" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge43 13 "of" 14> #<edge44 13 of 14> #<edge45 14 "the" 15> #<edge46 14 the 15>
    #<edge48 15 close 16> #<edge49 16 proximity 17> #<edge50 17 "of" 18>)
   (:SINGLE-CAP :FORWARD-SLASH :CAPITALIZED :FORWARD-SLASH :SINGLE-DIGIT :FORWARD-SLASH :DIGITS))
  "A/Anhui/1/2005" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge105 9 suggest 11> #<edge106 11 importance 13> #<edge107 15 proximity 17>)
   (:LOWER :HYPHEN :LOWER))
  "cross-protection" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge45 14 "the" 15> #<edge46 14 the 15> :MIXED #<edge48 15 close 16>
    #<edge49 16 proximity 17> #<edge50 17 "of" 18> #<edge52 18 "the" 19>)
   (:PROTEIN :HYPHEN :MIXED :SINGLE-DIGIT :HYPHEN :CAPITALIZED :SINGLE-DIGIT))
  "pFUSE-hIgG1-Fc2" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge268 141 bio-entity 143> #<edge24 415 "eif3" 417>) (:PROTEIN :-LIKE)) "collagen-like"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge85 42 number 43> #<edge86 44 COMMA 45> #<edge87 46 digit-sequence 47>)
   (:LOWER :HYPHEN :LOWER))
  "live-attenuated" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge134 62 "a" 63> #<edge135 62 a 63> #<edge136 63 restrict 64>) (:LOWER :HYPHEN :LOWER))
  "live-attenuated" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge257 144 "of" 145> #<edge258 144 of 145> #<edge260 146 modifier 147>
    #<edge261 147 position-bio-process 148> #<edge262 147 position 148>)
   (:LOWER :HYPHEN :LOWER :HYPHEN :LOWER))
  "person-to-person" MAKE-HYPHENATED-TRIPLE)
 (((#<edge182 87 "we" 88> #<edge183 87 pronoun/first/plural 88> #<edge184 88 show 89>
    #<edge185 89 deictic-location 90> #<edge187 90 that 91> #<edge188 91 "the" 92>
    #<edge190 92 distance 93> :UNDER-BAR #<edge191 93 between 94> #<edge192 94 "the" 95>
    #<edge193 94 the 95> #<edge194 95 terminate 96> #<edge195 96 bio-complex 97> :UNDER-BAR
    #<edge196 97 and 98> :UNDER-BAR #<edge197 98 "the" 99> :UNDER-BAR #<edge199 99 bio-entity 100>
    :UNDER-BAR #<edge201 101 comparative 102> #<edge202 102 critical 103> #<edge203 103 "to" 104>
    #<edge204 103 to 104> #<edge206 105 efficiency 106>)
   (:PROTEIN :FORWARD-SLASH :PROTEIN :FORWARD-SLASH :LOWER :FORWARD-SLASH :LOWER :UNDER-BAR :LOWER
    :FORWARD-SLASH :LOWER :FORWARD-SLASH :LOWER :UNDER-BAR :LOWER :UNDER-BAR :DIGITS :UNDER-BAR
    :DIGITS :UNDER-BAR :DIGITS :FORWARD-SLASH :LOWER :FORWARD-SLASH :LOWER))
  "int/csr/disease/avian_influenza/country/cases_table_2010_12_09/en/index"
  PACKAGE-SLASHED-SEQUENCE)
 (((#<edge71 29 of 30> #<edge72 30 "the" 31> #<edge73 30 the 31>) (:LOWER :HYPHEN :LOWER))
  "swine-origin" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge502 283 number 284> #<edge503 287 "the" 288> #<edge505 288 native 289>)
   (:LOWER :HYPHEN :FULL))
  "non-ID" MAKE-HYPHENATED-STRUCTURE)
 (((:LOWER #<edge488 270 cognate 271> #<edge489 271 initiate 272>) (:LOWER :HYPHEN :LOWER))
  "pharmaco-vigilance" :NO-EDGE)
 (((#<edge111 23 open-reading-frame 25> #<edge173 82 following 84>) (:DIGITS :TIME)) "one-time"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge80 36 COMMA 37> #<edge81 38 digit-sequence 39> #<edge82 38 number 39>)
   (:LOWER :FORWARD-SLASH :LOWER))
  "epidemics/pandemics" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge61 23 upstream-segment 24> #<edge62 23 upstream 24> #<edge63 24 protein 25>)
   (:LOWER :HYPHEN :LOWER))
  "mass-population" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge73 30 the 31> #<edge74 31 downstream-segment 32> #<edge76 32 protein 33>)
   (:LOWER :HYPHEN :PROTEIN))
  "phone-call" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge73 30 the 31> #<edge74 31 downstream-segment 32> #<edge76 32 protein 33>)
   (:LOWER :HYPHEN :LOWER))
  "causal-effects" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge343 180 modal 181> #<edge344 181 be 182> #<edge345 182 tethere 183>)
   (:LOWER :HYPHEN :LOWER))
  "device-based" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge58 21 of 22> #<edge59 22 "the" 23> #<edge60 22 the 23>) (:LOWER :HYPHEN :LOWER))
  "personnel-system" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge50 17 "of" 18> #<edge51 17 of 18> #<edge53 18 the 19> #<edge54 19 stop 20>
    #<edge56 20 bio-entity 21>)
   (:LOWER :HYPHEN :LOWER :HYPHEN :LOWER))
  "easy-to-use" MAKE-HYPHENATED-TRIPLE)
 (((#<edge625 300 bio-entity 304> #<edge599 344 number 345> #<edge626 299 bio-entity 304>)
   (:POINT-MUTATION :HYPHEN :POINT-MUTATION))
  "4B-4C" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge160 82 following-adj 83> #<edge162 83 terminate 84>) (:SINGLE-CAP :SINGLE-DIGIT)) "S1"
  REIFY-TWO-PART-LABEL)
 (((:SHARP-SIGN #<edge138 65 "of" 66>) (:SHARP-SIGN :SINGLE-DIGIT)) "#6"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge78 34 digit-sequence 35> #<edge80 36 COMMA 37> #<edge81 38 digit-sequence 39>
    #<edge85 42 number 43>)
   (:SINGLE-DIGIT :SINGLE-CAP :HYPHEN :POINT-MUTATION))
  "4A-4C" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge19 319 even-if 321> #<edge20 376 "wild-type" 379> #<edge21 376 wild-type 379>)
   (:LOWER :HYPHEN :LOWER))
  "epidemiologically-linked" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge179 57 believe 60> #<edge180 85 however 86> #<edge181 86 COMMA 87>)
   (:DIGITS :HYPHEN :DIGITS))
  "2006–2007" LOOK-FOR-YEAR-EXPRESSION)
 (((#<edge152 75 be 76> #<edge153 76 ability 77> #<edge154 77 "to" 78>) (:DIGITS :HYPHEN :DIGITS))
  "2000–2003" LOOK-FOR-YEAR-EXPRESSION)
 (((#<edge151 74 modal 75> #<edge152 75 be 76> #<edge153 76 ability 77>) (:DIGITS :HYPHEN :DIGITS))
  "2004–2005" LOOK-FOR-YEAR-EXPRESSION)
 (((#<edge128 57 this 58> #<edge129 58 be 59> #<edge130 59 believe 60>) (:DIGITS :HYPHEN :DIGITS))
  "2000–2003" LOOK-FOR-YEAR-EXPRESSION)
 (((#<edge84 42 digit-sequence 43> #<edge85 42 number 43> #<edge86 44 COMMA 45>)
   (:DIGITS :FORWARD-SLASH :LOWER))
  "25/year" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge78 34 digit-sequence 35> #<edge79 34 number 35> #<edge80 36 COMMA 37>)
   (:DIGITS :FORWARD-SLASH :LOWER))
  "200/year" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge191 93 between 94> #<edge193 94 the 95>) (:SINGLE-CAP :SINGLE-DIGIT)) "S4"
  REIFY-TWO-PART-LABEL)
 (((#<edge67 26 the 27> #<edge68 27 start 28> #<edge69 28 bio-entity 29> #<edge70 29 "of" 30>
    #<edge71 29 of 30>)
   (:FULL :PLUS-SIGN :FULL :PLUS-SIGN :PROTEIN))
  "QRT+SRT+PRT" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge138 65 "of" 66> #<edge140 66 "the" 67>) (:SINGLE-CAP :SINGLE-DIGIT)) "S3"
  REIFY-TWO-PART-LABEL)
 (((:CLOSE-ANGLE-BRACKET #<edge74 31 downstream-segment 32>) (:CLOSE-ANGLE-BRACKET :DIGITS)) ">14"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge255 143 downstream-segment 144> #<edge264 149 article-figure 150>) (:LOWER :TIME-UNIT))
  "person-hours" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge139 65 of 66> #<edge146 70 that 71>) (:LOWER :TIME-UNIT)) "person-hours"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge130 59 believe 60> #<edge145 70 "that" 71>) (:LOWER :TIME-UNIT)) "person-hours"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge43 13 "of" 14> :TILDA #<edge44 13 of 14>) (:DIGITS :TILDA :DIGITS)) "2006∼2007"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge210 108 number 109> #<edge211 110 and 111> #<edge212 111 "that" 112>)
   (:LOWER :HYPHEN :PROTEIN))
  "intra-era" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:CAPITALIZED #<edge105 9 suggest 11> :CAPITALIZED) (:CAPITALIZED :HYPHEN :CAPITALIZED))
  "Cochran-Armitage" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:CAPITALIZED #<edge6 184 "by virtue of" 187> :CAPITALIZED) (:CAPITALIZED :HYPHEN :CAPITALIZED))
  "Kruskall-Wallis" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge47 15 close-bio-process 16> #<edge49 16 proximity 17>) (:SINGLE-CAP :SINGLE-DIGIT)) "S1"
  REIFY-TWO-PART-LABEL)
 (((#<edge37 8 bio-process 9> #<edge59 22 "the" 23>) (:LOWER :TIME)) "spatial-temporal"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge9 214 wild-type 217> #<edge10 274 "such as" 276> #<edge11 274 such-as 276>)
   (:LOWER :HYPHEN :LOWER))
  "laboratory-confirmed" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge189 91 the 92> #<edge190 92 distance 93> #<edge191 93 between 94>)
   (:LOWER :HYPHEN :LOWER))
  "respiratory-transmission" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge21 376 wild-type 379> #<edge22 393 "due to" 395>) (:LOWER :COLON)) "sources:" :NO-EDGE)
 (((#<edge163 58 believe 60> #<edge164 60 reflect 62> #<edge165 62 mobility 65>)
   (:PROTEIN :PLUS-SIGN :PROTEIN))
  "PSI+PRT" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge410 227 modifier 228> #<edge411 228 reinitiation 229> #<edge412 229 site 230>
    #<edge414 231 be 232>)
   (:LOWER :FORWARD-SLASH :LOWER :SINGLE-DIGIT))
  "people/km2" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge399 219 figure 220> #<edge400 219 article-figure 220> #<edge401 220 digit-sequence 221>
    #<edge403 221 amino-acid 222>)
   (:LOWER :FORWARD-SLASH :LOWER :SINGLE-DIGIT))
  "people/km2" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge384 203 reinitiation 204> #<edge385 204 require 205> #<edge386 205 "an" 206>
    #<edge388 206 bio-entity 207>)
   (:LOWER :FORWARD-SLASH :LOWER :SINGLE-DIGIT))
  "people/km2" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge140 66 "the" 67> #<edge142 67 tethere 68>) (:SINGLE-CAP :SINGLE-DIGIT)) "S1"
  REIFY-TWO-PART-LABEL)
 (((#<edge445 227 site 230> #<edge446 231 bio-use 233> #<edge447 230 bio-use 233>)
   (:DIGITS :HYPHEN :DIGITS))
  "2006–2007" LOOK-FOR-YEAR-EXPRESSION)
 (((#<edge376 157 be 159> #<edge377 157 be 160> #<edge378 153 suggest 155>)
   (:DIGITS :HYPHEN :DIGITS))
  "2004–2005" LOOK-FOR-YEAR-EXPRESSION)
 (((#<edge370 180 tethere 198> #<edge371 178 tethere 198> #<edge372 170 affect 172>)
   (:LOWER :HYPHEN :FULL))
  "post-SARS" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge363 183 parentheses 198> #<edge364 166 bio-entity 168> #<edge365 172 efficiency 174>)
   (:DIGITS :HYPHEN :DIGITS))
  "1987–2003" LOOK-FOR-YEAR-EXPRESSION)
 (((#<edge145 70 "that" 71> #<edge147 71 be 72>) (:SINGLE-CAP :SINGLE-DIGIT)) "S1"
  REIFY-TWO-PART-LABEL)
 (((#<edge163 58 believe 60> #<edge164 60 reflect 62> #<edge165 62 mobility 65>)
   (:LOWER :HYPHEN :LOWER))
  "on-site" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge159 81 movement 82> #<edge160 82 following-adj 83> #<edge161 82 following 83>)
   (:LOWER :HYPHEN :LOWER))
  "fine-tuning" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge122 14 proximity 25> #<edge123 15 close 16> #<edge124 13 of 25> #<edge125 9 suggest 13>)
   (:LOWER :HYPHEN :LOWER :COLON))
  "stake-holders:" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge105 9 suggest 11> #<edge106 11 importance 13> #<edge107 15 proximity 17>)
   (:LOWER :HYPHEN :LOWER))
  "first-tier" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge38 9 have 10> #<edge39 10 suggest 11> #<edge41 11 the 12>) (:LOWER :HYPHEN :LOWER))
  "built-in" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge173 82 following 84> #<edge174 74 ability 77> #<edge175 73 ability 77>)
   (:FULL :PLUS-SIGN :PROTEIN))
  "QRT+PRT" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge166 67 bio-complex 69> #<edge168 66 bio-complex 69>) (:SINGLE-CAP :SINGLE-DIGIT)) "S5"
  REIFY-TWO-PART-LABEL)
 (((#<edge160 82 following-adj 83> #<edge162 83 terminate 84>) (:SINGLE-CAP :SINGLE-DIGIT)) "S1"
  REIFY-TWO-PART-LABEL)
 (((#<edge146 70 that 71> #<edge147 71 be 72> #<edge148 72 COMMA 73> #<edge149 73 "it" 74>)
   (:PROTEIN :PLUS-SIGN :PLUS-SIGN :PROTEIN))
  "PSI++PRT" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge56 20 bio-entity 21> #<edge57 21 "of" 22> #<edge58 21 of 22>)
   (:LOWER :FORWARD-SLASH :LOWER))
  "report/confirmation" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge387 205 an 206> #<edge388 206 bio-entity 207> #<edge389 207 "at" 208>)
   (:PROTEIN :PLUS-SIGN :FULL))
  "PSI+SRT" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge378 153 suggest 155> #<edge380 199 however 200>) (:SINGLE-CAP :SINGLE-DIGIT)) "A2"
  REIFY-TWO-PART-LABEL)
 (((#<edge373 169 bio-entity 172> #<edge375 168 per 172>) (:SINGLE-CAP :SINGLE-DIGIT)) "A1"
  REIFY-TWO-PART-LABEL)
 (((#<edge351 191 "the" 192> #<edge352 191 the 192> #<edge353 192 bio-complex 193>)
   (:LOWER :HYPHEN :LOWER))
  "personnel-system" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge214 112 when 113> #<edge215 112 when 113> #<edge217 113 the 114>)
   (:LOWER :HYPHEN :LOWER))
  "build-in" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge165 62 mobility 65> #<edge167 67 lambda-expression 68>) (:SINGLE-CAP :SINGLE-DIGIT)) "A1"
  REIFY-TWO-PART-LABEL)
 (((#<edge123 15 close 16> #<edge125 9 suggest 13>) (:SINGLE-CAP :SINGLE-DIGIT)) "A2"
  REIFY-TWO-PART-LABEL)
 (((#<edge47 15 close-bio-process 16> #<edge49 16 proximity 17>) (:SINGLE-CAP :SINGLE-DIGIT)) "A2"
  REIFY-TWO-PART-LABEL)
 (((#<edge241 132 even 133> #<edge242 132 even 133> #<edge244 133 when 134>)
   (:LOWER :HYPHEN :LOWER))
  "built-in" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge203 103 "to" 104> #<edge205 104 reinitiation 105>) (:SINGLE-CAP :SINGLE-DIGIT)) "A1"
  REIFY-TWO-PART-LABEL)
 (((#<edge169 74 be 76> #<edge171 79 limit 81>) (:SINGLE-CAP :SINGLE-DIGIT)) "S1"
  REIFY-TWO-PART-LABEL)
 (((#<edge72 30 "the" 31> #<edge74 31 downstream-segment 32>) (:SINGLE-CAP :SINGLE-DIGIT)) "A2"
  REIFY-TWO-PART-LABEL)
 (((#<edge7 184 by-virtue-of 187> #<edge8 214 "wild-type" 217> #<edge9 214 wild-type 217>)
   (:LOWER :HYPHEN :LOWER))
  "web-based" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge1096 inactive, resource 1096> #<edge1097 inactive, resource 1097>
    #<edge1098 inactive, resource 1098>)
   (:LOWER :FORWARD-SLASH :LOWER))
  "loop/peptide" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge1014 inactive, resource 1014> #<edge1015 inactive, resource 1015>
    #<edge1017 inactive, resource 1017>)
   (:LOWER :HYPHEN :LOWER))
  "large-scale" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge1008 inactive, resource 1008> #<edge1009 inactive, resource 1009> :LOWER)
   (:LOWER :HYPHEN :LOWER))
  "tick-borne" :NO-EDGE)
 (((#<edge111 23 open-reading-frame 25> #<edge112 22 open-reading-frame 25>
    #<edge113 31 open-reading-frame 33>)
   (:LOWER :HYPHEN :LOWER))
  "pre-incubated" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge286 144 of 152> #<edge287 139 up-to 143> #<edge288 135 start 137>)
   (:LOWER :FORWARD-SLASH :LOWER))
  "viral/cellular" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge494 278 digit-sequence 279> :CLOSE-ANGLE-BRACKET #<edge495 278 number 279>
    :CLOSE-ANGLE-BRACKET #<edge496 279 bio-entity 280>)
   (:LOWER :CLOSE-ANGLE-BRACKET :LOWER :CLOSE-ANGLE-BRACKET :LOWER))
  "bilayers>micelles>solution" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge490 272 bio-entity 273> #<edge491 276 "the" 277>) (:LOWER :COLON)) "order:" :NO-EDGE)
 (((#<edge478 261 number 262> #<edge479 262 amino-acid 263> #<edge480 264 COMMA 265>)
   (:CAPITALIZED :FORWARD-SLASH :CAPITALIZED))
  "Arb/Trp" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge447 230 bio-use 233> #<edge448 236 bio-entity 238> #<edge449 235 bio-entity 238>)
   (:LOWER :HYPHEN :LOWER))
  "inter-cations" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge359 191 bio-complex 193> #<edge360 195 bio-entity 197> #<edge361 191 bio-complex 197>)
   (:LOWER :FORWARD-SLASH :LOWER))
  "alter/quench" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge232 125 "the" 126> #<edge233 125 the 126> #<edge234 126 stop 127>)
   (:PROTEIN :FORWARD-SLASH :LOWER))
  "protein/membrane" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge222 117 "the" 118> #<edge223 117 the 118> #<edge224 120 protein 121>)
   (:LOWER :HYPHEN :LOWER))
  "so-called" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge203 103 "to" 104> #<edge204 103 to 104> #<edge205 104 reinitiation 105>)
   (:LOWER :HYPHEN :SINGLE-LOWER))
  "cation-π" MAKE-HYPHENATED-STRUCTURE)
 (((:CAPITALIZED #<edge82 38 number 39> #<edge83 40 COMMA 41>) (:CAPITALIZED :HYPHEN :LOWER))
  "Fourier-transform" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:LOWER #<edge18 319 "even if" 321> #<edge21 376 wild-type 379>) (:LOWER :HYPHEN :LOWER))
  "physico-chemical" :NO-EDGE)
 (((#<edge986 inactive, resource 986> #<edge987 inactive, resource 987>
    #<edge988 inactive, resource 988>)
   (:LOWER :FORWARD-SLASH :LOWER))
  "peptide/loop" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge477 261 digit-sequence 262> #<edge478 261 number 262> #<edge479 262 amino-acid 263>)
   (:LOWER :FORWARD-SLASH :LOWER))
  "residues/motifs" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge257 144 "of" 145> #<edge259 145 pronoun/inanimate 146>) (:SINGLE-CAP :SINGLE-DIGIT)) "E1"
  REIFY-TWO-PART-LABEL)
 (((#<edge193 94 the 95> #<edge194 95 terminate 96> #<edge196 97 and 98> #<edge197 98 "the" 99>
    #<edge198 98 the 99>)
   (:LOWER :HYPHEN :LOWER :HYPHEN :LOWER))
  "peptide-to-lipid" MAKE-HYPHENATED-TRIPLE)
 (((#<edge189 91 the 92> #<edge190 92 distance 93> #<edge192 94 "the" 95>)
   (:SINGLE-DIGIT :COLON :DIGITS))
  "1∶20" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge183 87 pronoun/first/plural 88> #<edge184 88 show 89> #<edge185 89 deictic-location 90>)
   (:PROTEIN :COLON :LOWER))
  "PC∶chol" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge60 22 the 23> #<edge62 23 upstream 24>) (:SINGLE-CAP :SINGLE-DIGIT)) "E1"
  REIFY-TWO-PART-LABEL)
 (((#<edge628 311 select 313> #<edge629 314 bio-entity 318> #<edge630 313 bio-entity 318>)
   (:PROTEIN :COLON :LOWER))
  "PC∶chol" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge565 317 bio-entity 318> #<edge566 318 COMMA 319> #<edge567 321 "the" 322>)
   (:PROTEIN :COLON :LOWER))
  "PC∶chol" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge342 179 bio-complex 180> #<edge344 181 be 182>) (:SINGLE-CAP :SINGLE-DIGIT)) "S3"
  REIFY-TWO-PART-LABEL)
 (((#<edge263 149 figure 150> #<edge264 149 article-figure 150> #<edge266 150 number 151>
    #<edge267 85 subordinate-conjunction 87> #<edge268 141 bio-entity 143>)
   (:LOWER :HYPHEN :LOWER :HYPHEN :LOWER))
  "peptide-to-lipid" MAKE-HYPHENATED-TRIPLE)
 (((#<edge259 145 pronoun/inanimate 146> #<edge260 146 modifier 147> #<edge262 147 position 148>)
   (:SINGLE-DIGIT :COLON :DIGITS))
  "1∶20" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge251 138 move-to 139> #<edge253 141 number 142>) (:SINGLE-CAP :SINGLE-DIGIT)) "S3"
  REIFY-TWO-PART-LABEL)
 (((#<edge240 131 detect 132> #<edge241 132 even 133> #<edge242 132 even 133>)
   (:PROTEIN :COLON :LOWER))
  "PC∶chol" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge147 71 be 72> #<edge148 72 COMMA 73> #<edge150 73 pronoun/inanimate 74>)
   (:LOWER :HYPHEN :LOWER))
  "in-plane" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge295 103 to 110> #<edge296 101 critical 103> #<edge297 100 critical 103>)
   (:PROTEIN :COLON :LOWER))
  "PC∶chol" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge56 20 bio-entity 21> #<edge57 21 "of" 22> #<edge59 22 "the" 23>)
   (:FULL :FORWARD-SLASH :PROTEIN))
  "TOE/liposomes" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge52 18 "the" 19> #<edge53 18 the 19> #<edge54 19 stop 20>) (:FULL :FORWARD-SLASH :LOWER))
  "TOE/micelles" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge30 3 "on" 4> #<edge31 3 on 4> #<edge32 4 "the" 5>) (:FULL :FORWARD-SLASH :LOWER))
  "TOE/lipid" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge25 415 protein 417> #<edge26 415 bio-complex 417> #<edge28 2 study-bio-method 3>)
   (:SINGLE-DIGIT :COLON :DIGITS))
  "1∶20" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge712 363 that 364> #<edge713 364 there-exists 372> #<edge714 363 there-exists 372>
    #<edge715 359 show 372> #<edge716 384 as 385>)
   (:CAPITALIZED :FORWARD-SLASH :FULL :FORWARD-SLASH :FULL))
  "Arb/TOE/DPC" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge707 368 for 372> #<edge708 366 require 372> #<edge709 361 show 363>)
   (:FULL :FORWARD-SLASH :FULL))
  "TOE/DPC" MAKE-HYPHENATED-PAIR)
 (((#<edge703 375 site 383> #<edge704 374 of 383> #<edge705 373 location-of 383>)
   (:CAPITALIZED :FORWARD-SLASH :FULL))
  "Arb/DPC" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge642 354 site 356> #<edge643 353 site 356> #<edge645 356 of 358> #<edge646 352 to 356>
    #<edge648 338 cause 347>)
   (:SINGLE-DIGIT :COLON :SINGLE-DIGIT :COLON :DIGITS))
  "1∶5∶50" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge633 328 window 330> #<edge634 327 window 330> #<edge636 340 cause 342>
    #<edge637 344 fragment 347> #<edge639 343 lambda-expression 344>)
   (:SINGLE-DIGIT :COLON :SINGLE-DIGIT :COLON :DIGITS))
  "1∶2∶50" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge624 296 choice-endurant 298> #<edge625 300 bio-entity 304> #<edge627 309 bio-complex 311>
    #<edge628 311 select 313> #<edge630 313 bio-entity 318>)
   (:SINGLE-DIGIT :COLON :SINGLE-DIGIT :COLON :DIGITS))
  "1∶1∶50" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge614 354 modifier 355> #<edge615 355 site 356> #<edge618 357 reinitiation 358>
    #<edge619 292 subordinate-conjunction 294> #<edge621 344 point-mutation 346>)
   (:SINGLE-DIGIT :COLON :DIGITS :COLON :DIGITS))
  "1∶0.5∶50" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge605 348 SINGLE-QUOTE 349> #<edge606 349 snap 350> #<edge607 349 snap-endurant 350>
    #<edge608 350 direction 351> #<edge609 351 SINGLE-QUOTE 352>)
   (:FULL :FORWARD-SLASH :CAPITALIZED :FORWARD-SLASH :FULL))
  "TOE/Arb/DPC" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge586 336 suggest 337> #<edge587 337 "that" 338> #<edge588 337 that 338>)
   (:LOWER :HYPHEN :LOWER))
  "dodecyl-phosphocholine" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge367 178 bio-complex 180> #<edge368 181 tethere 183> :MIXED)
   (:CAPITALIZED :HYPHEN :MIXED))
  "Arb–AUCArb" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge213 111 that 112> #<edge211 110 and 111> #<edge212 111 "that" 112>)
   (:POINT-MUTATION :HYPHEN :SINGLE-CAP))
  "1B–C" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge196 97 and 98> #<edge197 98 "the" 99> #<edge198 98 the 99>) (:LOWER :HYPHEN :LOWER))
  "octyl-ester" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge177 65 of 69> #<edge178 62 mobility 69> #<edge179 57 believe 60>)
   (:LOWER :HYPHEN :LOWER))
  "pre-incubated" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge119 17 of 21> #<edge120 14 proximity 21> #<edge121 15 close 16>) (:LOWER :HYPHEN :LOWER))
  "pre-incubated" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge66 26 "the" 27> #<edge67 26 the 27> #<edge68 27 start 28>) (:LOWER :HYPHEN :LOWER))
  "pre-incubation" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge18 319 "even if" 321> #<edge19 319 even-if 321> #<edge21 376 wild-type 379>)
   (:LOWER :HYPHEN :LOWER))
  "cross-peaks" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge43 13 "of" 14> #<edge44 13 of 14> #<edge47 15 close-bio-process 16>)
   (:LOWER :HYPHEN :LOWER))
  "head-group" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge34 5 terminate 6> #<edge35 6 HYPHEN 7> #<edge36 7 reinitiation 8>)
   (:LOWER :HYPHEN :LOWER))
  "gamma-proton" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge26 415 bio-complex 417> #<edge27 1 sequencer 2> #<edge28 2 study-bio-method 3>)
   (:LOWER :FORWARD-SLASH :LOWER))
  "lipid/water" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge109 19 bio-entity 21> :PERIOD) (:POINT-MUTATION :PERIOD)) "5C."
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge815 inactive, resource 815> #<edge816 inactive, resource 816>
    #<edge817 inactive, resource 817>)
   (:LOWER :HYPHEN :PROTEIN))
  "bicelle-Gd" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge732 396 number 397> #<edge733 397 direction 398> #<edge734 397 amino-acid 398>)
   (:SINGLE-LOWER :FORWARD-SLASH :SINGLE-LOWER))
  "z/d" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge593 341 cause 342> #<edge594 341 cause 342> #<edge596 342 the 343>)
   (:LOWER :HYPHEN :SINGLE-DIGIT))
  "sec−1" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge583 332 number 333> #<edge584 333 amino-acid 334> #<edge586 336 suggest 337>)
   (:LOWER :HYPHEN :SINGLE-DIGIT))
  "sec−1" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge566 318 COMMA 319> #<edge567 321 "the" 322> #<edge569 322 bio-complex 323>)
   (:LOWER :HYPHEN :SINGLE-DIGIT))
  "sec−1" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge556 307 downstream 308> #<edge557 308 COMMA 309> #<edge559 309 the 310>)
   (:LOWER :HYPHEN :SINGLE-DIGIT))
  "sec−1" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge544 297 modifier 298> #<edge545 298 "of" 299> #<edge546 298 of 299>)
   (:CAPITALIZED :HYPHEN :LOWER))
  "Arb-bicelle" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge417 233 when 234> #<edge419 234 the 235>) (:PROTEIN :DIGITS)) "omega14"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge413 230 modal 231> #<edge415 232 bio-use 233>) (:SINGLE-CAP :SINGLE-DIGIT)) "C3"
  REIFY-TWO-PART-LABEL)
 (((#<edge10 274 "such as" 276> #<edge207 107 figure 108>) (:PROTEIN :LOWER)) "anti-microbial"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge77 32 open-reading-frame 33> #<edge78 34 digit-sequence 35> #<edge79 34 number 35>)
   (:LOWER :HYPHEN :LOWER))
  "gadolinium-diethylenetriamine" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge603 347 "to" 348> #<edge604 347 to 348> #<edge606 349 snap 350>) (:LOWER :HYPHEN :LOWER))
  "chemical-shift" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge217 113 the 114> #<edge218 114 start 115> #<edge220 116 "of" 117>)
   (:LOWER :HYPHEN :LOWER))
  "short-chain" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge206 105 efficiency 106> #<edge207 107 figure 108> #<edge208 107 article-figure 108>)
   (:LOWER :HYPHEN :LOWER))
  "self-assemble" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge197 98 "the" 99> #<edge198 98 the 99> #<edge200 100 be 101>)
   (:CAPITALIZED :HYPHEN :LOWER))
  "Long-chain" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge174 74 ability 77> #<edge175 73 ability 77> #<edge176 70 be 72>)
   (:FULL :FORWARD-SLASH :FULL))
  "DMPC/DHPC" MAKE-HYPHENATED-PAIR)
 (((#<edge372 170 affect 172> #<edge373 169 bio-entity 172> #<edge375 168 per 172>)
   (:SINGLE-DIGIT :COLON :SINGLE-DIGIT))
  "1∶1" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge321 165 and 166> #<edge322 166 stop 167> #<edge325 167 bio-entity 168>)
   (:LOWER :HYPHEN :LOWER))
  "off-rates" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge19 319 even-if 321> #<edge20 376 "wild-type" 379> #<edge21 376 wild-type 379>)
   (:CAPITALIZED :FORWARD-SLASH :FULL))
  "Arb/DMPC" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge353 192 bio-complex 193> #<edge355 194 and 195>) (:SINGLE-CAP :SINGLE-DIGIT)) "L1"
  REIFY-TWO-PART-LABEL)
 (((:TILDA #<edge300 88 show 90>) (:TILDA :DIGITS)) "∼600" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge78 34 digit-sequence 35> #<edge80 36 COMMA 37>) (:SINGLE-CAP :SINGLE-DIGIT)) "L1"
  REIFY-TWO-PART-LABEL)
 (((:CAPITALIZED :REGISTERED_SIGN) (:CAPITALIZED :REGISTERED_SIGN)) "Biacore®"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge147 71 be 72> #<edge148 72 COMMA 73> #<edge150 73 pronoun/inanimate 74>)
   (:LOWER :FORWARD-SLASH :LOWER))
  "disruption/damage" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge6 184 "by virtue of" 187> #<edge7 184 by-virtue-of 187> #<edge8 214 "wild-type" 217>)
   (:LOWER :HYPHEN :LOWER))
  "pre-incubated" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge371 178 tethere 198> #<edge372 170 affect 172> #<edge374 170 lambda-expression 172>
    #<edge375 168 per 172> #<edge376 157 be 159>)
   (:CAPITALIZED :HYPHEN :LOWER :HYPHEN :LOWER))
  "Arb-to-lipid" MAKE-HYPHENATED-TRIPLE)
 (((#<edge367 178 bio-complex 180> #<edge368 181 tethere 183> #<edge370 180 tethere 198>)
   (:DIGITS :COLON :SINGLE-DIGIT))
  "20∶1" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge282 146 position 148> #<edge283 145 position 148> #<edge285 104 efficiency 110>
    #<edge286 144 of 152> #<edge287 139 up-to 143>)
   (:CAPITALIZED :HYPHEN :LOWER :HYPHEN :LOWER))
  "Arb-to-lipid" MAKE-HYPHENATED-TRIPLE)
 (((#<edge278 121 place 123> #<edge279 126 bio-entity 128>
    #<edge281 137 move-something-somewhere 139>)
   (:SINGLE-DIGIT :COLON :DIGITS))
  "1∶20" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge225 120 open-reading-frame 121> #<edge226 121 be 122>
    #<edge228 123 downstream-segment 124>)
   (:DIGITS :COLON :SINGLE-DIGIT))
  "20∶1" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge219 115 bio-entity 116> #<edge220 116 "of" 117> #<edge222 117 "the" 118>)
   (:DIGITS :COLON :SINGLE-DIGIT))
  "10∶1" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge213 111 that 112> #<edge214 112 when 113> #<edge216 113 "the" 114>)
   (:SINGLE-DIGIT :COLON :SINGLE-DIGIT))
  "1∶1" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge207 107 figure 108> #<edge208 107 article-figure 108> #<edge210 108 number 109>)
   (:SINGLE-DIGIT :COLON :DIGITS))
  "1∶10" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge201 101 comparative 102> #<edge202 102 critical 103> #<edge204 103 to 104>)
   (:SINGLE-DIGIT :COLON :DIGITS))
  "1∶20" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge195 96 bio-complex 97> #<edge196 97 and 98> #<edge198 98 the 99>)
   (:SINGLE-DIGIT :COLON :DIGITS))
  "1∶40" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge184 88 show 89> #<edge185 89 deictic-location 90> #<edge187 90 that 91>
    #<edge188 91 "the" 92> #<edge189 91 the 92>)
   (:CAPITALIZED :HYPHEN :LOWER :HYPHEN :LOWER))
  "Arb-to-lipid" MAKE-HYPHENATED-TRIPLE)
 (((#<edge172 79 movement 82> #<edge173 82 following 84> #<edge174 74 ability 77>)
   (:PROTEIN :COLON :LOWER))
  "PC∶chol" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge548 299 a 300> #<edge550 304 and 305>) (:SINGLE-DIGIT :SINGLE-LOWER)) "4a"
  REIFY-TWO-PART-LABEL)
 (((#<edge373 169 bio-entity 172> #<edge375 168 per 172>) (:SINGLE-DIGIT :SINGLE-LOWER)) "6a"
  REIFY-TWO-PART-LABEL)
 (((#<edge368 181 tethere 183> #<edge370 180 tethere 198>) (:SINGLE-DIGIT :SINGLE-LOWER)) "5a"
  REIFY-TWO-PART-LABEL)
 (((#<edge350 190 where 191> #<edge352 191 the 192>) (:SINGLE-DIGIT :SINGLE-LOWER)) "2b"
  REIFY-TWO-PART-LABEL)
 (((#<edge345 182 tethere 183> #<edge347 187 the 188>) (:SINGLE-DIGIT :SINGLE-LOWER)) "1b"
  REIFY-TWO-PART-LABEL)
 (((#<edge340 178 "the" 179> #<edge342 179 bio-complex 180>) (:SINGLE-DIGIT :SINGLE-LOWER)) "1a"
  REIFY-TWO-PART-LABEL)
 (((#<edge325 167 bio-entity 168> #<edge327 168 per 169>) (:SINGLE-DIGIT :SINGLE-LOWER)) "2a"
  REIFY-TWO-PART-LABEL)
 (((#<edge263 149 figure 150> :PERIOD) (:POINT-MUTATION :PERIOD)) "2A."
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge74 31 downstream-segment 32> #<edge76 32 protein 33>) (:SINGLE-DIGIT :SINGLE-LOWER)) "2a"
  REIFY-TWO-PART-LABEL)
 (((#<edge59 22 "the" 23> #<edge61 23 upstream-segment 24>) (:SINGLE-DIGIT :SINGLE-LOWER)) "2a"
  REIFY-TWO-PART-LABEL)
 (((#<edge54 19 stop 20> #<edge56 20 bio-entity 21>) (:SINGLE-DIGIT :SINGLE-LOWER)) "1b"
  REIFY-TWO-PART-LABEL)
 (((#<edge49 16 proximity 17> #<edge51 17 of 18>) (:SINGLE-DIGIT :SINGLE-LOWER)) "1a"
  REIFY-TWO-PART-LABEL)
 (((#<edge466 253 bio-entity 254> #<edge467 254 "at" 255> #<edge468 254 at 255>)
   (:LOWER :HYPHEN :LOWER))
  "inter-pulse" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge336 177 well-endurant 178> #<edge337 177 well-adverbial 178> :LOWER)
   (:CAPITALIZED :FORWARD-SLASH :LOWER))
  "Arb/bicelle" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge290 130 detect 133> #<edge291 124 of 128> :LOWER) (:CAPITALIZED :FORWARD-SLASH :LOWER))
  "Arb/bicelle" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge204 103 to 104> #<edge195 96 bio-complex 97> #<edge205 104 reinitiation 105>)
   (:POINT-MUTATION :FORWARD-SLASH :POINT-MUTATION))
  "1H/13C" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge106 11 importance 13> #<edge107 15 proximity 17> #<edge109 19 bio-entity 21>)
   (:SINGLE-LOWER :FORWARD-SLASH :SINGLE-DIGIT))
  "π/2" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge90 50 digit-sequence 51> #<edge91 50 number 51> #<edge93 54 digit-sequence 55>)
   (:SINGLE-LOWER :HYPHEN :LOWER))
  "z-gradient" MAKE-HYPHENATED-STRUCTURE)
 (((:FULL #<edge17 314 wild-type 317> #<edge18 319 "even if" 321>) (:FULL :HYPHEN :FULL))
  "DTPA-BMA" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge0 118 "BM2" 120> #<edge2 139 "up to" 141> #<edge3 139 up-to 141>)
   (:SINGLE-CAP :SINGLE-DIGIT :SINGLE-CAP))
  "D2O" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge369 180 tethere 183> #<edge370 180 tethere 198> #<edge372 170 affect 172>)
   (:SINGLE-DIGIT :COLON :SINGLE-DIGIT))
  "1∶4" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge361 191 bio-complex 197> #<edge362 189 between 191> #<edge363 183 parentheses 198>)
   (:CAPITALIZED :COLON :FULL))
  "Arb∶DMPC" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge296 101 critical 103> #<edge297 100 critical 103> #<edge298 98 critical 103>)
   (:CAPITALIZED :COLON :FULL))
  "Arb∶DMPC" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge263 149 figure 150> #<edge264 149 article-figure 150> #<edge266 150 number 151>)
   (:SINGLE-DIGIT :FORWARD-SLASH :DIGITS))
  "1/15" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge225 120 open-reading-frame 121> #<edge226 121 be 122>
    #<edge228 123 downstream-segment 124>)
   (:SINGLE-DIGIT :FORWARD-SLASH :DIGITS))
  "1/48" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge48 15 close 16> #<edge50 17 "of" 18> #<edge1 118 protein 120>)
   (:SINGLE-CAP :SINGLE-DIGIT :INITIAL))
  "D2O." REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge27 1 sequencer 2> :CAPITALIZED #<edge28 2 study-bio-method 3> :LOWER
    #<edge29 2 study-data 3> :LOWER #<edge30 3 "on" 4> #<edge32 4 "the" 5> #<edge33 4 the 5>
    #<edge34 5 terminate 6>)
   (:NUMBER-SEQUENCE :CAPITALIZED :HYPHEN :LOWER :HYPHEN :LOWER :HYPHEN :SINGLE-DIGIT :HYPHEN
    :LOWER))
  "1,2-Dihexanoyl-sn-glycero-3-phosphocholine" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:MIXED #<edge656 298 of 304>) (:MIXED :FORWARD-SLASH)) "RmaxC/" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge495 278 number 279> #<edge496 279 bio-entity 280> #<edge497 280 bio-entity 281>)
   (:SINGLE-LOWER :COLON :SINGLE-LOWER))
  "v∶v" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge490 272 bio-entity 273> #<edge491 276 "the" 277> #<edge493 277 HYPHEN 278>)
   (:SINGLE-DIGIT :COLON :SINGLE-DIGIT))
  "6∶4" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge486 268 near 269> #<edge487 269 HYPHEN 270> #<edge488 270 cognate 271>)
   (:MIXED :FORWARD-SLASH :LOWER))
  "NaOH/isopropanol" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge67 26 the 27> #<edge68 27 start 28> #<edge69 28 bio-entity 29>)
   (:SINGLE-LOWER :COLON :SINGLE-LOWER))
  "v∶v" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge62 23 upstream 24> #<edge63 24 protein 25> #<edge65 25 and 26>)
   (:SINGLE-DIGIT :COLON :SINGLE-DIGIT))
  "6∶4" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge32 4 "the" 5> #<edge34 5 terminate 6>) (:SINGLE-CAP :SINGLE-DIGIT)) "L1"
  REIFY-TWO-PART-LABEL)
 (((#<edge28 2 study-bio-method 3> :REGISTERED_SIGN) (:DIGITS :REGISTERED_SIGN)) "3000®"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:TILDA #<edge193 94 the 95>) (:TILDA :DIGITS)) "∼400 µ" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge392 209 or 210> #<edge393 210 very 211> #<edge394 211 near 212>)
   (:PROTEIN :PLUS-SIGN :SINGLE-CAP))
  "KD+C" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge390 207 at 208> #<edge391 208 COMMA 209>) (:SINGLE-CAP :FORWARD-SLASH)) "C/"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:GREEK_CAPITAL_LETTER_DELTA #<edge369 180 tethere 183>)
   (:GREEK_CAPITAL_LETTER_DELTA :SINGLE-CAP))
  "ΔA" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge326 168 "per" 169> :REGISTERED_SIGN) (:CAPITALIZED :REGISTERED_SIGN)) "Infinite®"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge290 130 detect 133> #<edge291 124 of 128> #<edge294 114 start 116>)
   (:CAPITALIZED :HYPHEN :DIGITS))
  "Bio-one" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge277 117 open-reading-frame 121> #<edge278 121 place 123> #<edge280 125 bio-entity 128>)
   (:LOWER :HYPHEN :LOWER))
  "low-binding" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge272 95 lambda-expression 96> #<edge273 94 bio-complex 97> #<edge275 104 efficiency 106>)
   (:LOWER :HYPHEN :LOWER))
  "flat-bottom" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge258 144 of 145> #<edge259 145 pronoun/inanimate 146> #<edge260 146 modifier 147>)
   (:LOWER :HYPHEN :LOWER))
  "nm-increments" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge119 17 of 21> #<edge120 14 proximity 21> #<edge122 14 proximity 25>)
   (:SINGLE-DIGIT :COLON :DIGITS))
  "1∶20" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge113 31 open-reading-frame 33> #<edge114 30 open-reading-frame 33>
    #<edge115 30 open-reading-frame 36>)
   (:LOWER :COLON :LOWER))
  "peptide∶lipid" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge108 14 proximity 17> #<edge109 19 bio-entity 21> #<edge110 18 bio-entity 21>)
   (:PROTEIN :COLON :LOWER))
  "PC∶chol" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge95 5 hyphenated-pair 8> #<edge96 33 square-brackets 36> #<edge98 41 square-brackets 44>)
   (:SINGLE-DIGIT :COLON :DIGITS))
  "1∶20" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge89 48 COMMA 49> #<edge90 50 digit-sequence 51> #<edge91 50 number 51>)
   (:FULL :COLON :LOWER))
  "TOE∶lipid" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge84 42 digit-sequence 43> #<edge85 42 number 43> #<edge86 44 COMMA 45>)
   (:PROTEIN :COLON :LOWER))
  "PC∶chol" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge74 31 downstream-segment 32> #<edge75 31 downstream 32>
    #<edge77 32 open-reading-frame 33>)
   (:SINGLE-DIGIT :COLON :DIGITS))
  "1∶800" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge68 27 start 28> #<edge69 28 bio-entity 29> #<edge70 29 "of" 30>) (:FULL :COLON :MIXED))
  "TOE∶lysoPC" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:LOWER #<edge65 25 and 26> #<edge66 26 "the" 27>) (:LOWER :HYPHEN :PROTEIN)) "lyso-PC"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge35 6 HYPHEN 7> #<edge36 7 reinitiation 8>) (:LOWER :COLON)) "conditions:" :NO-EDGE)
 (((#<edge230 124 "of" 125> #<edge19 319 even-if 321>) (:DIGITS :PROTEIN)) "2.10e6"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge219 115 bio-entity 116> #<edge221 116 of 117> #<edge223 117 the 118>)
   (:DIGITS :SINGLE-LOWER :SINGLE-DIGIT))
  "8.10e8" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge210 108 number 109> #<edge212 111 "that" 112> #<edge214 112 when 113>)
   (:DIGITS :SINGLE-LOWER :SINGLE-DIGIT))
  "5.10e3" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge205 104 reinitiation 105> #<edge207 107 figure 108>) (:SINGLE-DIGIT :SINGLE-LOWER)) "6a"
  REIFY-TWO-PART-LABEL)
 (((#<edge198 98 the 99> #<edge200 100 be 101> #<edge202 102 critical 103>)
   (:DIGITS :SINGLE-LOWER :SINGLE-DIGIT))
  "3.10e4" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge193 94 the 95> #<edge195 96 bio-complex 97>) (:SINGLE-DIGIT :SINGLE-LOWER)) "5a"
  REIFY-TWO-PART-LABEL)
 (((#<edge186 90 "that" 91> #<edge188 91 "the" 92> #<edge190 92 distance 93>)
   (:DIGITS :SINGLE-LOWER :SINGLE-DIGIT))
  "9.10e4" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge181 86 COMMA 87> #<edge183 87 pronoun/first/plural 88>) (:SINGLE-DIGIT :SINGLE-LOWER))
  "4a" REIFY-TWO-PART-LABEL)
 (((#<edge174 74 ability 77> #<edge176 70 be 72> #<edge178 62 mobility 69>)
   (:DIGITS :SINGLE-LOWER :SINGLE-DIGIT))
  "3.10e4" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge166 67 bio-complex 69> #<edge168 66 bio-complex 69> #<edge170 77 undergo 79>)
   (:DIGITS :SINGLE-LOWER :SINGLE-DIGIT))
  "8.10e4" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge161 82 following 83> #<edge163 58 believe 60>) (:SINGLE-DIGIT :SINGLE-LOWER)) "2b"
  REIFY-TWO-PART-LABEL)
 (((#<edge154 77 "to" 78> #<edge156 78 undergo 79> #<edge158 80 limit 81>)
   (:DIGITS :SINGLE-LOWER :SINGLE-DIGIT))
  "5.10e4" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge149 73 "it" 74> #<edge151 74 modal 75>) (:SINGLE-DIGIT :SINGLE-LOWER)) "2a"
  REIFY-TWO-PART-LABEL)
 (((#<edge142 67 tethere 68> #<edge144 69 semicolon 70> #<edge146 70 that 71>)
   (:DIGITS :SINGLE-LOWER :SINGLE-DIGIT))
  "4.10e4" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge137 64 mobility 65> #<edge139 65 of 66>) (:SINGLE-DIGIT :SINGLE-LOWER)) "1b"
  REIFY-TWO-PART-LABEL)
 (((#<edge134 62 "a" 63> #<edge1 118 protein 120>) (:DIGITS :MOLECULE)) "10e2"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge119 17 of 21> #<edge121 15 close 16> #<edge123 15 close 16>)
   (:DIGITS :SINGLE-LOWER :SINGLE-DIGIT))
  "5.10e5" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge114 30 open-reading-frame 33> #<edge116 29 of 36>) (:SINGLE-DIGIT :SINGLE-LOWER)) "1a"
  REIFY-TWO-PART-LABEL)
 (((#<edge107 15 proximity 17> #<edge108 14 proximity 17>) (:LOWER :COLON)) "titers:" :NO-EDGE)
 (((#<edge91 50 number 51> :ASTERISK #<edge92 52 COMMA 53> #<edge93 54 digit-sequence 55>
    #<edge94 54 number 55>)
   (:DIGITS :ASTERISK :SINGLE-CAP :HYPHEN :LOWER))
  "37°C-thermostated" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge281 137 move-something-somewhere 139> :LOWER) (:PROTEIN :LOWER)) "Rd114pp"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge260 146 modifier 147> #<edge262 147 position 148>) (:PROTEIN :DIGITS)) "RD114"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge74 31 downstream-segment 32> :MULTIPLICATION-SIGN #<edge75 31 downstream 32>)
   (:DIGITS :MULTIPLICATION-SIGN :SINGLE-LOWER))
  "75,000×g" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge47 15 close-bio-process 16> #<edge49 16 proximity 17>) (:SINGLE-DIGIT :SINGLE-LOWER))
  "6a" REIFY-TWO-PART-LABEL)
 (((#<edge42 12 importance 13> #<edge44 13 of 14>) (:SINGLE-DIGIT :SINGLE-LOWER)) "5a"
  REIFY-TWO-PART-LABEL)
 (((#<edge18 319 "even if" 321> #<edge19 319 even-if 321> #<edge21 376 wild-type 379>)
   (:LOWER :HYPHEN :LOWER))
  "post-transfection" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge286 144 of 152> #<edge288 135 start 137> #<edge289 130 detect 132>
    #<edge28 2 study-bio-method 3>)
   (:SINGLE-CAP :SINGLE-DIGIT :HYPHEN :PROTEIN))
  "E1–E2" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge241 132 even 133> #<edge243 133 when 134>) (:FULL :DIGITS)) "AY736194"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:FULL #<edge239 130 be 131>) (:FULL :DIGITS)) "UKN6.5.340" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge233 125 the 126> #<edge235 126 stop-endurant 127>) (:SINGLE-DIGIT :SINGLE-LOWER)) "6a"
  REIFY-TWO-PART-LABEL)
 (((#<edge228 123 downstream-segment 124> #<edge230 124 "of" 125>) (:FULL :DIGITS)) "AY785283"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:FULL #<edge226 121 be 122>) (:FULL :DIGITS)) "UKN5.14.4" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge220 116 "of" 117> #<edge222 117 "the" 118>) (:SINGLE-DIGIT :SINGLE-LOWER)) "5a"
  REIFY-TWO-PART-LABEL)
 (((#<edge215 112 when 113> #<edge217 113 the 114>) (:FULL :DIGITS)) "AY734987"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:FULL #<edge210 108 number 109>) (:FULL :SINGLE-DIGIT)) "UKN4" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge206 105 efficiency 106> #<edge208 107 article-figure 108>) (:SINGLE-DIGIT :SINGLE-LOWER))
  "4a" REIFY-TWO-PART-LABEL)
 (((#<edge201 101 comparative 102> #<edge203 103 "to" 104>) (:FULL :DIGITS)) "AY734984"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:FULL #<edge19 319 even-if 321>) (:FULL :PROTEIN)) "UKN3A" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge193 94 the 95> #<edge195 96 bio-complex 97>) (:FULL :DIGITS)) "AY734983"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:FULL #<edge296 101 critical 103>) (:FULL :POINT-MUTATION)) "UKN2B"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge183 87 pronoun/first/plural 88> #<edge185 89 deictic-location 90>)
   (:SINGLE-DIGIT :SINGLE-LOWER))
  "2b" REIFY-TWO-PART-LABEL)
 (((#<edge174 74 ability 77> #<edge176 70 be 72>) (:SINGLE-DIGIT :SINGLE-LOWER)) "2a"
  REIFY-TWO-PART-LABEL)
 (((:FULL #<edge171 79 limit 81>) (:FULL :DIGITS)) "AJ238799" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge166 67 bio-complex 69> #<edge168 66 bio-complex 69>) (:PROTEIN :SINGLE-DIGIT)) "Con1"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge163 58 believe 60> #<edge165 62 mobility 65>) (:SINGLE-DIGIT :SINGLE-LOWER)) "1b"
  REIFY-TWO-PART-LABEL)
 (((#<edge150 73 pronoun/inanimate 74> #<edge152 75 be 76>) (:SINGLE-DIGIT :SINGLE-LOWER)) "1a"
  REIFY-TWO-PART-LABEL)
 (((#<edge117 27 start 29> #<edge118 21 of 25> #<edge119 17 of 21>) (:LOWER :HYPHEN :LOWER))
  "calcium-phosphate" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge47 15 close-bio-process 16> #<edge48 15 close 16> #<edge49 16 proximity 17>)
   (:CAPITALIZED :HYPHEN :CAPITALIZED))
  "Cergy-Pontoise" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge19 319 even-if 321> #<edge20 376 "wild-type" 379> #<edge21 376 wild-type 379>)
   (:SINGLE-CAP :COLON :SINGLE-CAP))
  "M∶M" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge14 300 "wild-type" 303> #<edge15 300 wild-type 303> #<edge17 314 wild-type 317>)
   (:DIGITS :COLON :DIGITS))
  "70∶30" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge10 274 "such as" 276> #<edge11 274 such-as 276> #<edge12 285 "close to" 287>)
   (:PROTEIN :COLON :LOWER))
  "PC∶chol" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge161 82 following 83> #<edge162 83 terminate 84> #<edge164 60 reflect 62>)
   (:SINGLE-CAP :HYPHEN :SINGLE-DIGIT))
  "M−1" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge114 30 open-reading-frame 33> :MULTIPLICATION-SIGN #<edge115 30 open-reading-frame 36>)
   (:DIGITS :MULTIPLICATION-SIGN :SINGLE-LOWER))
  "16000×g" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge11 274 such-as 276> #<edge290 130 detect 133> #<edge292 123 downstream 128>
    #<edge293 116 of 121> #<edge13 285 close-to 287>)
   (:MOLECULE :HYPHEN :SINGLE-DIGIT :HYPHEN :MOLECULE))
  "1H-indole-3-carboxylic acid" MAKE-HYPHENATED-TRIPLE)
 (((#<edge257 144 "of" 145> #<edge258 144 of 145> #<edge259 145 pronoun/inanimate 146>)
   (:LOWER :COLON :LOWER))
  "lipid∶peptide" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge64 24 open-reading-frame 25> #<edge65 25 and 26> #<edge66 26 "the" 27>
    #<edge67 26 the 27> #<edge68 27 start 28> #<edge69 28 bio-entity 29> :LOWER)
   (:SINGLE-CAP :HYPHEN :LOWER :HYPHEN :SINGLE-CAP :HYPHEN :LOWER))
  "N-acetyl-L-tryptophanamide" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge50 17 "of" 18> #<edge51 17 of 18> #<edge52 18 "the" 19>) (:LOWER :HYPHEN :LOWER))
  "dodecyl-phosphocholine" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge30 3 "on" 4> #<edge1 118 protein 120>) (:LOWER :-LIKE)) "membrane-like"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge9 214 wild-type 217> #<edge306 154 suggest 155> #<edge307 155 "that" 156>
    #<edge309 156 "it" 157> #<edge310 156 pronoun/inanimate 157> #<edge311 157 be 158>
    #<edge11 274 such-as 276>)
   (:BIO-ENTITY :LOWER :HYPHEN :SINGLE-DIGIT :HYPHEN :LOWER :BIO-ENTITY))
  "-5-hydroxy-1-methyl-2-" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge297 100 critical 103> #<edge298 98 critical 103> #<edge299 93 between 97>
    #<edge300 88 show 90> #<edge302 85 show 90> #<edge303 90 that 91>)
   (:SINGLE-DIGIT :HYPHEN :LOWER :HYPHEN :SINGLE-DIGIT :HYPHEN))
  "6-bromo-4-" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge5 174 but-rather 176> #<edge291 124 of 128> #<edge293 116 of 121>
    #<edge294 114 start 116> #<edge7 184 by-virtue-of 187>)
   (:MOLECULE :HYPHEN :SINGLE-DIGIT :HYPHEN :MOLECULE))
  "1H-indole-3-carboxylic acid" MAKE-HYPHENATED-TRIPLE)
 (((#<edge56 20 bio-entity 21> #<edge57 21 "of" 22> #<edge58 21 of 22>) (:LOWER :HYPHEN :LOWER))
  "broad-spectrum" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge144 69 semicolon 70> #<edge145 70 "that" 71> #<edge147 71 be 72>)
   (:FULL :HYPHEN :SINGLE-DIGIT))
  "FV-3" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge25 415 protein 417> #<edge583 332 number 333>) (:PROTEIN :FULL)) "anti-DNP"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge127 57 "this" 58> #<edge128 57 this 58> #<edge129 58 be 59>)
   (:HYPHENATED-NUMBER :PLUS-SIGN :LOWER))
  "50–60+days" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge255 143 downstream-segment 144> #<edge257 144 "of" 145>) (:SINGLE-DIGIT :SINGLE-LOWER))
  "6b" REIFY-TWO-PART-LABEL)
 (((#<edge141 66 the 67> #<edge143 68 bio-complex 69>) (:SINGLE-DIGIT :SINGLE-LOWER)) "6a"
  REIFY-TWO-PART-LABEL)
 (((#<edge341 178 the 179> #<edge343 180 modal 181>) (:SINGLE-DIGIT :SINGLE-LOWER)) "4b"
  REIFY-TWO-PART-LABEL)
 (((#<edge109 19 bio-entity 21> #<edge111 23 open-reading-frame 25>) (:SINGLE-DIGIT :SINGLE-LOWER))
  "4a" REIFY-TWO-PART-LABEL)
 (((#<edge221 116 of 117> #<edge223 117 the 118>) (:SINGLE-DIGIT :SINGLE-LOWER)) "3b"
  REIFY-TWO-PART-LABEL)
 (((#<edge168 66 bio-complex 69> #<edge169 74 be 76> #<edge171 79 limit 81>)
   (:SINGLE-DIGIT :HYPHEN :LOWER))
  "2-samples" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge162 83 terminate 84> #<edge163 58 believe 60> #<edge164 60 reflect 62>)
   (:SINGLE-DIGIT :HYPHEN :LOWER))
  "2-tailed" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge13 285 close-to 287> #<edge229 123 downstream 124>) (:PROTEIN :LOWER)) "anti-adult"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge9 214 wild-type 217> #<edge206 105 efficiency 106>) (:PROTEIN :LOWER)) "anti-larval"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge7 184 by-virtue-of 187> #<edge165 62 mobility 65> #<edge166 67 bio-complex 69>)
   (:BIO-ENTITY :HYPHEN :LOWER))
  "6XHis-tag" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge55 19 stop-endurant 20> #<edge57 21 "of" 22>) (:SINGLE-DIGIT :SINGLE-LOWER)) "1b"
  REIFY-TWO-PART-LABEL)
 (((#<edge41 11 the 12> #<edge43 13 "of" 14>) (:SINGLE-DIGIT :SINGLE-LOWER)) "1a"
  REIFY-TWO-PART-LABEL)
 (((#<edge226 121 be 122> #<edge227 122 place 123> #<edge228 123 downstream-segment 124>)
   (:DIGITS :HYPHEN :DIGITS))
  "1998–2001" LOOK-FOR-YEAR-EXPRESSION)
 (((#<edge214 112 when 113> #<edge215 112 when 113> #<edge216 113 "the" 114>)
   (:DIGITS :HYPHEN :DIGITS))
  "1998–2003" LOOK-FOR-YEAR-EXPRESSION)
 (((#<edge201 101 comparative 102> #<edge202 102 critical 103> #<edge204 103 to 104>)
   (:LOWER :HYPHEN :SINGLE-DIGIT))
  "sec−1" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge142 67 tethere 68> :ASTERISK #<edge7 184 by-virtue-of 187>)
   (:HYPHENATED-NUMBER :ASTERISK :INITIAL))
  "23–24°C." REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge55 19 stop-endurant 20> #<edge56 20 bio-entity 21> #<edge58 21 of 22>)
   (:LOWER :FORWARD-SLASH :LOWER))
  "climax/stage" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge455 234 modifier 240> #<edge457 204 require 207>) (:SINGLE-LOWER :SINGLE-DIGIT)) "x3"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge422 237 bio-entity 238> #<edge423 238 be 239> #<edge424 239 modifier 240>)
   (:SINGLE-DIGIT :COLON :DIGITS))
  "1∶2000" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge381 200 COMMA 201> #<edge383 202 modifier 203>) (:SINGLE-LOWER :SINGLE-DIGIT)) "x3"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge363 183 parentheses 198> #<edge364 166 bio-entity 168> #<edge365 172 efficiency 174>)
   (:LOWER :FORWARD-SLASH :FULL))
  "milk/TBS" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge344 181 be 182> #<edge345 182 tethere 183> #<edge347 187 the 188>)
   (:SINGLE-DIGIT :COLON :DIGITS))
  "1∶1000" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge254 142 bio-entity 143> #<edge255 143 downstream-segment 144>
    #<edge256 143 downstream 144>)
   (:LOWER :FORWARD-SLASH :FULL))
  "milk/TBS" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge155 77 to 78> #<edge157 79 only 80>) (:SINGLE-LOWER :SINGLE-DIGIT)) "x3"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:CAPITALIZED #<edge121 15 close 16> :CAPITALIZED) (:CAPITALIZED :HYPHEN :CAPITALIZED))
  "Beckton-Dickonson" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge90 50 digit-sequence 51> #<edge5 174 but-rather 176>) (:LOWER :-LIKE)) "sera-like"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge621 344 point-mutation 346> #<edge622 331 figure 334> #<edge623 330 parentheses 335>)
   (:LOWER :HYPHEN :LOWER))
  "horse-radish" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge535 246 under 250> #<edge536 292 however 293> #<edge538 294 if 295>)
   (:SINGLE-DIGIT :FORWARD-SLASH :DIGITS))
  "1/1000" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge501 283 digit-sequence 284> #<edge502 283 number 284> #<edge553 305 number 306>)
   (:PROTEIN :FORWARD-SLASH :PERCENT))
  "PBS/0.05%" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge382 201 whilst 202> #<edge383 202 modifier 203> #<edge388 206 bio-entity 207>)
   (:LOWER :FORWARD-SLASH :LOWER))
  "ng/well" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge332 172 reinitiation 173> #<edge333 173 efficiency 174>
    #<edge335 177 well-bio-process 178>)
   (:CAPITALIZED :HYPHEN :DIGITS))
  "Nd-1000" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge130 59 believe 60> #<edge131 60 "to" 61> #<edge132 60 to 61>) (:LOWER :HYPHEN :LOWER))
  "mini-beadbeater" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge102 1 study-bio-method 3> #<edge103 5 bio-process 9> #<edge104 4 bio-process 9>)
   (:LOWER :HYPHEN :LOWER))
  "mini-beadbeater" MAKE-HYPHENATED-STRUCTURE)
 (((:MIXED #<edge83 40 COMMA 41>) (:MIXED :DIGITS)) "dH20" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge26 415 bio-complex 417> #<edge27 1 sequencer 2> #<edge28 2 study-bio-method 3>)
   (:MIXED :HYPHEN :PROTEIN))
  "SuperMix-UDG" MAKE-HYPHENATED-STRUCTURE)
 (((:CLOSE-ANGLE-BRACKET #<edge68 27 start 28>) (:CLOSE-ANGLE-BRACKET :DIGITS)) ">0.31"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:LESS-THAN_OR_EQUAL_TO #<edge45 14 "the" 15>) (:LESS-THAN_OR_EQUAL_TO :DIGITS)) "≤0.20"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge41 11 the 12> #<edge42 12 importance 13>) (:LOWER :COLON)) "rates:" :NO-EDGE)
 (((#<edge9 214 wild-type 217> #<edge414 231 be 232>) (:BIO-ENTITY :DIGITS)) "1×108"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge7 184 by-virtue-of 187> #<edge410 227 modifier 228>) (:BIO-ENTITY :DIGITS)) "1×102"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge353 192 bio-complex 193> :ASTERISK #<edge354 193 terminate 194>)
   (:DIGITS :ASTERISK :SINGLE-CAP))
  "58°C" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge147 71 be 72> :MULTIPLICATION-SIGN) (:DIGITS :MULTIPLICATION-SIGN)) "13,000×"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:GREATER-THAN_OR_EQUAL_TO #<edge15 300 wild-type 303>)
   (:GREATER-THAN_OR_EQUAL_TO :SINGLE-DIGIT))
  "≥5" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge11 274 such-as 276> #<edge142 67 tethere 68> #<edge143 68 bio-complex 69>)
   (:BIO-ENTITY :FORWARD-SLASH :CAPITALIZED))
  "rBIV/neor/Adglob" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge9 214 wild-type 217> #<edge133 61 reflect 62> #<edge134 62 "a" 63>)
   (:BIO-ENTITY :FORWARD-SLASH :MIXED))
  "TCID50/mL" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge5 174 but-rather 176> #<edge101 53 square-brackets 56> #<edge102 1 study-bio-method 3>)
   (:BIO-ENTITY :FORWARD-SLASH :MIXED))
  "TCID50/mL" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:MIXED #<edge29 2 study-data 3> :LOWER) (:MIXED :FORWARD-SLASH :LOWER)) "rBIV/neor"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:MIXED #<edge16 314 "wild-type" 317> :LOWER #<edge17 314 wild-type 317> :CAPITALIZED)
   (:MIXED :FORWARD-SLASH :LOWER :FORWARD-SLASH :CAPITALIZED))
  "rBIV/neor/Adglob" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge66 26 "the" 27> #<edge67 26 the 27> #<edge69 28 bio-entity 29>) (:FULL :HYPHEN :DIGITS))
  "MS-222" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:CAPITALIZED #<edge24 415 "eif3" 417> #<edge25 415 protein 417>) (:CAPITALIZED :HYPHEN :LOWER))
  "Luer-locked" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:GREATER-THAN_OR_EQUAL_TO #<edge81 38 digit-sequence 39>)
   (:GREATER-THAN_OR_EQUAL_TO :SINGLE-DIGIT))
  "≥3" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:MIXED #<edge643 353 site 356> #<edge644 327 window 335>) (:MIXED :SINGLE-DIGIT :SINGLE-CAP))
  "dH2O" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:MIXED #<edge620 332 point-mutation 334> #<edge18 319 "even if" 321>)
   (:MIXED :SINGLE-DIGIT :PROTEIN))
  "NaH2PO4" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge544 297 modifier 298> #<edge545 298 "of" 299> #<edge546 298 of 299>)
   (:LOWER :HYPHEN :LOWER))
  "continuous-elution" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge533 266 at 285> #<edge534 254 at 264> #<edge535 246 under 250>)
   (:CAPITALIZED :HYPHEN :LOWER))
  "Size-based" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge494 278 digit-sequence 279> #<edge495 278 number 279> #<edge497 280 bio-entity 281>)
   (:FULL :PLUS-SIGN :DIGITS))
  "TBS+500" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge478 261 number 262> #<edge479 262 amino-acid 263> #<edge481 265 or 266>)
   (:FULL :PLUS-SIGN :DIGITS))
  "TBS+20" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge464 251 bio-complex 252> #<edge466 253 bio-entity 254> #<edge467 254 "at" 255>
    #<edge468 254 at 255>)
   (:CAPITALIZED :SINGLE-DIGIT :PLUS-SIGN :FULL))
  "Ni2+NTA" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge416 233 when 234> :MULTIPLICATION-SIGN) (:DIGITS :MULTIPLICATION-SIGN)) "20,000×"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge353 192 bio-complex 193> #<edge354 193 terminate 194> #<edge356 195 "the" 196>)
   (:LOWER :FORWARD-SLASH :LOWER))
  "freeze/thaw" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:MIXED #<edge169 74 be 76>) (:MIXED :DIGITS)) "pDEST17" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge66 26 "the" 27> #<edge67 26 the 27>) (:LOWER :COLON)) "sets:" :NO-EDGE)
 (((#<edge50 17 "of" 18> #<edge52 18 "the" 19>) (:FULL :DIGITS)) "EU877979"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge46 14 the 15> #<edge48 15 close 16>) (:PROTEIN :DIGITS)) "EL342145"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge108 14 proximity 17> #<edge109 19 bio-entity 21> #<edge110 18 bio-entity 21>)
   (:FULL :FORWARD-SLASH :MIXED))
  "RNA/cDNA" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge121 15 close 16> :ASTERISK #<edge122 14 proximity 25>)
   (:HYPHENATED-NUMBER :ASTERISK :SINGLE-CAP))
  "23–27°C" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge3 139 up-to 141> #<edge163 58 believe 60>) (:INITIAL :LOWER)) "B.marinus"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge506 289 reinitiation 290> :MULTIPLICATION-SIGN #<edge508 261 point-mutation 263>)
   (:DIGITS :MULTIPLICATION-SIGN :DIGITS))
  "70×75" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge490 272 bio-entity 273> #<edge491 276 "the" 277> #<edge493 277 HYPHEN 278>)
   (:PROTEIN :HYPHEN :SINGLE-CAP))
  "LIB-A" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge239 130 be 131> #<edge240 131 detect 132>) (:LOWER :COLON)) "profile:" :NO-EDGE)
 (((:LOWER #<edge236 127 bio-entity 128> #<edge237 128 COMMA 129>) (:LOWER :HYPHEN :LOWER))
  "thermo-cycling" :NO-EDGE)
 (((#<edge207 107 figure 108> #<edge208 107 article-figure 108> #<edge209 108 digit-sequence 109>)
   (:SINGLE-CAP :HYPHEN :PROTEIN))
  "A-MID" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge498 281 COMMA 282> :REGISTERED_SIGN) (:MIXED :REGISTERED_SIGN)) "NucleoSpin®"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge305 153 this 154> :FULL #<edge306 154 suggest 155> #<edge308 155 that 156>)
   (:HYPHEN :FULL :HYPHEN :SINGLE-DIGIT))
  "-TATCTGAGCGGGCTGGCAAGGC-3" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge303 90 that 91> #<edge304 153 "this" 154> #<edge23 393 due-to 395>)
   (:CAPITALIZED :HYPHEN :PROTEIN))
  "Bottom-B 5" MAKE-HYPHENATED-STRUCTURE)
 (((:FULL #<edge298 98 critical 103> #<edge300 88 show 90>) (:FULL :HYPHEN :SINGLE-DIGIT))
  "GCCTTGCCAGCCCGCTCAGA-3" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge295 103 to 110> #<edge296 101 critical 103> #<edge21 376 wild-type 379>)
   (:CAPITALIZED :HYPHEN :PROTEIN))
  "Top-B
5"
  MAKE-HYPHENATED-STRUCTURE)
 (((#<edge289 130 detect 132> :FULL #<edge290 130 detect 133> #<edge292 123 downstream 128>)
   (:HYPHEN :FULL :HYPHEN :SINGLE-DIGIT))
  "-TATACGCACTCGTCTGATGGCGCGAGGGAGGC-3" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge19 319 even-if 321> #<edge281 137 move-something-somewhere 139>
    #<edge283 145 position 148> #<edge284 145 position 152> #<edge286 144 of 152>)
   (:PROTEIN :HYPHEN :LOWER :HYPHEN :SINGLE-CAP))
  "MID1-bottom-A" MAKE-HYPHENATED-TRIPLE)
 (((#<edge276 118 open-reading-frame 121> :FULL #<edge277 117 open-reading-frame 121>
    #<edge279 126 bio-entity 128>)
   (:HYPHEN :FULL :HYPHEN :SINGLE-DIGIT))
  "-GCCTCCCTCICGCCATCAGACGAGTGCGTA-3" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge17 314 wild-type 317> #<edge268 141 bio-entity 143> #<edge270 148 parentheses 152>
    #<edge271 95 bio-complex 97> #<edge273 94 bio-complex 97>)
   (:PROTEIN :HYPHEN :LOWER :HYPHEN :SINGLE-CAP))
  "MID1-top-A" MAKE-HYPHENATED-TRIPLE)
 (((#<edge184 88 show 89> #<edge185 89 deictic-location 90>) (:DIGITS :SINGLE-CAP)) "10U"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge46 14 the 15> :TRADE_MARK_SIGN) (:FULL :TRADE_MARK_SIGN)) "TURBO™"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge294 114 start 116> #<edge295 103 to 110> #<edge296 101 critical 103>)
   (:CAPITALIZED :HYPHEN :PROTEIN))
  "Supermix-UDG" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge280 125 bio-entity 128> #<edge281 137 move-something-somewhere 139>
    #<edge282 146 position 148> :FULL #<edge283 145 position 148> #<edge284 145 position 152>
    #<edge285 104 efficiency 110> #<edge287 139 up-to 143>)
   (:HYPHEN :PROTEIN :HYPHEN :FULL :HYPHEN :FULL :HYPHEN :SINGLE-DIGIT))
  "-FAM-GGGTGTTGACGCGATGTGATTTCT-TAMRA-3" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge271 95 bio-complex 97> #<edge299 93 between 97> :UNDER-BAR
    #<edge277 117 open-reading-frame 121>)
   (:MIXED :POINT-MUTATION :UNDER-BAR :DIGITS))
  "rRNA28S_3674" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge168 66 bio-complex 69> #<edge170 77 undergo 79>) (:SINGLE-CAP :SINGLE-DIGIT)) "B4"
  REIFY-TWO-PART-LABEL)
 (((#<edge188 91 "the" 92> #<edge189 91 the 92> #<edge191 93 between 94>) (:LOWER :HYPHEN :LOWER))
  "in-house" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge57 21 "of" 22> #<edge58 21 of 22> #<edge60 22 the 23>)
   (:SINGLE-DIGIT :COLON :SINGLE-DIGIT))
  "2∶1" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge54 19 stop 20> #<edge55 19 stop-endurant 20> :CAPITALIZED)
   (:HANK :FORWARD-SLASH :CAPITALIZED))
  "Hank's/Earle" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge32 4 "the" 5> #<edge34 5 terminate 6>) (:SINGLE-CAP :SINGLE-DIGIT)) "B4"
  REIFY-TWO-PART-LABEL)
 (((:CAPITALIZED #<edge131 60 "to" 61> :CAPITALIZED) (:CAPITALIZED :HYPHEN :CAPITALIZED))
  "Sud-Méditerranée" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:CAPITALIZED #<edge141 66 the 67> #<edge91 50 number 51> :CAPITALIZED)
   (:CAPITALIZED :MONTH :HYPHEN :CAPITALIZED))
  "Georg-August-Universität" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:CAPITALIZED #<edge87 46 digit-sequence 47> #<edge88 46 number 47>)
   (:CAPITALIZED :HYPHEN :CAPITALIZED))
  "Ethik-Kommission" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge23 393 due-to 395> #<edge24 415 "eif3" 417> :LOWER) (:LOWER :HYPHEN :LOWER)) "grace-lrti"
  :NO-EDGE)
 (((#<edge1 118 protein 120> #<edge21 376 wild-type 379>) (:|HTTPS://| :LOWER)) "https://www"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge72 30 "the" 31> #<edge73 30 the 31> #<edge74 31 downstream-segment 32>)
   (:FULL :HYPHEN :FULL))
  "VIDISCA-PCR" MAKE-HYPHENATED-PAIR)
 (((:CAPITALIZED #<edge60 22 the 23> :CAPITALIZED) (:CAPITALIZED :HYPHEN :CAPITALIZED))
  "Lopez-Bueno" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:CLOSE-ANGLE-BRACKET #<edge530 267 bio-entity 285>) (:CLOSE-ANGLE-BRACKET :PERCENT)) ">70%"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge365 172 efficiency 174> #<edge366 176 well 178> #<edge367 178 bio-complex 180>)
   (:LOWER :HYPHEN :LOWER))
  "old-protocol" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge165 62 mobility 65> #<edge166 67 bio-complex 69> #<edge167 67 lambda-expression 68>)
   (:LOWER :HYPHEN :FULL))
  "random-PCR" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge615 355 site 356> #<edge617 356 of 357>) (:SINGLE-CAP :SINGLE-DIGIT)) "E5"
  REIFY-TWO-PART-LABEL)
 (((#<edge24 415 "eif3" 417> #<edge610 352 "to" 353> #<edge613 353 the 354>)
   (:PROTEIN :HYPHEN :DIGITS))
  "E2–1.1" MAKE-HYPHENATED-PAIR)
 (((#<edge13 285 close-to 287> #<edge536 292 however 293> #<edge539 295 modifier 296>)
   (:PROTEIN :HYPHEN :DIGITS))
  "E3–7.6" MAKE-HYPHENATED-PAIR)
 (((#<edge525 268 bio-entity 273> #<edge527 289 site 291>) (:SINGLE-CAP :SINGLE-DIGIT)) "E5"
  REIFY-TWO-PART-LABEL)
 (((#<edge332 172 reinitiation 173> #<edge333 173 efficiency 174>
    #<edge335 177 well-bio-process 178>)
   (:FULL :HYPHEN :DIGITS))
  "VIDISCA-454" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge328 169 bio-entity 170> #<edge329 170 "that" 171> #<edge330 170 that 171>)
   (:DIGITS :HYPHEN :PROTEIN))
  "454-FLX" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge229 123 downstream 124> #<edge230 124 "of" 125> #<edge231 124 of 125>)
   (:PROTEIN :FORWARD-SLASH :CAPITALIZED))
  "FLX/Titanium" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge631 321 bio-complex 323> #<edge633 328 window 330>) (:SINGLE-CAP :SINGLE-DIGIT)) "B4"
  REIFY-TWO-PART-LABEL)
 (((#<edge387 205 an 206> #<edge388 206 bio-entity 207> #<edge391 208 COMMA 209>)
   (:DIGITS :HYPHEN :LOWER))
  "1000-region" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge150 73 pronoun/inanimate 74> #<edge151 74 modal 75> #<edge152 75 be 76>)
   (:MIXED :HYPHEN :MIXED))
  "rRNA-cDNA" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge66 26 "the" 27> #<edge67 26 the 27> #<edge68 27 start 28>) (:LOWER :HYPHEN :MIXED))
  "non-rRNA" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge295 103 to 110> #<edge297 100 critical 103> #<edge298 98 critical 103>
    #<edge302 85 show 90> #<edge303 90 that 91> #<edge304 153 "this" 154>)
   (:CAPITALIZED :SINGLE-DIGIT :HYPHEN :SINGLE-CAP :FORWARD-SLASH :MIXED))
  "Hinp1-I/MseI" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge279 126 bio-entity 128> #<edge281 137 move-something-somewhere 139>)
   (:SINGLE-CAP :SINGLE-DIGIT))
  "B4" REIFY-TWO-PART-LABEL)
 (((#<edge139 65 of 66> #<edge141 66 the 67> #<edge142 67 tethere 68> #<edge146 70 that 71>)
   (:MIXED :SINGLE-DIGIT :HYPHEN :SINGLE-CAP))
  "HinP1-I" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge77 32 open-reading-frame 33> #<edge79 34 number 35> #<edge80 36 COMMA 37>
    #<edge84 42 digit-sequence 43>)
   (:CAPITALIZED :SINGLE-DIGIT :HYPHEN :SINGLE-CAP))
  "Hinp1-I" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge21 376 wild-type 379> #<edge23 393 due-to 395> #<edge24 415 "eif3" 417>
    #<edge28 2 study-bio-method 3>)
   (:CAPITALIZED :SINGLE-DIGIT :HYPHEN :SINGLE-CAP))
  "Hinp1-I" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge151 74 modal 75> #<edge152 75 be 76> #<edge154 77 "to" 78>)
   (:PROTEIN :HYPHEN :SINGLE-DIGIT))
  "PIV-3" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge92 52 COMMA 53> #<edge93 54 digit-sequence 55> #<edge94 54 number 55>
    #<edge95 5 hyphenated-pair 8> #<edge96 33 square-brackets 36>)
   (:LOWER :HYPHEN :MIXED :HYPHEN :LOWER))
  "non-rRNA-hexamers" MAKE-HYPHENATED-TRIPLE)
 (((#<edge24 415 "eif3" 417> #<edge25 415 protein 417> #<edge26 415 bio-complex 417>
    #<edge27 1 sequencer 2> #<edge28 2 study-bio-method 3>)
   (:LOWER :HYPHEN :MIXED :HYPHEN :LOWER))
  "non-rRNA-hexamers" MAKE-HYPHENATED-TRIPLE)
 (((#<edge672 364 syntactic-there 365> #<edge673 364 deictic-location 365> #<edge674 365 be 366>)
   (:LOWER :HYPHEN :MIXED))
  "non-rRNA" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge618 357 reinitiation 358> #<edge619 292 subordinate-conjunction 294>
    #<edge620 332 point-mutation 334>)
   (:LOWER :HYPHEN :MIXED))
  "non-rRNA" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge530 267 bio-entity 285> #<edge531 255 bio-entity 264> #<edge532 285 close-to 291>
    #<edge533 266 at 285> #<edge534 254 at 264>)
   (:LOWER :HYPHEN :MIXED :HYPHEN :LOWER))
  "non-rRNA-hexamer" MAKE-HYPHENATED-TRIPLE)
 (((#<edge356 195 "the" 196> #<edge357 195 the 196> #<edge358 196 bio-entity 197>
    #<edge359 191 bio-complex 193> #<edge360 195 bio-entity 197>)
   (:LOWER :HYPHEN :MIXED :HYPHEN :LOWER))
  "non-rRNA-hexamers" MAKE-HYPHENATED-TRIPLE)
 (((#<edge334 176 how 177> #<edge335 177 well-bio-process 178> #<edge336 177 well-endurant 178>
    #<edge337 177 well-adverbial 178> #<edge338 177 modifier 178>)
   (:LOWER :HYPHEN :MIXED :HYPHEN :LOWER))
  "non-rRNA-hexamers" MAKE-HYPHENATED-TRIPLE)
 (((:TILDA #<edge249 137 be 138>) (:TILDA :NUMBER-SEQUENCE)) "∼3,5" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge233 125 the 126> #<edge234 126 stop 127> #<edge237 128 COMMA 129>)
   (:DIGITS :HYPHEN :LOWER))
  "1000-region" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge219 115 bio-entity 116> #<edge220 116 "of" 117> #<edge223 117 the 118>)
   (:DIGITS :HYPHEN :LOWER))
  "3700-region" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge128 57 this 58> #<edge129 58 be 59> #<edge130 59 believe 60> #<edge131 60 "to" 61>
    #<edge132 60 to 61>)
   (:LOWER :HYPHEN :MIXED :HYPHEN :LOWER))
  "non-rRNA-hexamers" MAKE-HYPHENATED-TRIPLE)
 (((#<edge111 23 open-reading-frame 25> #<edge112 22 open-reading-frame 25>
    #<edge113 31 open-reading-frame 33> #<edge114 30 open-reading-frame 33>
    #<edge115 30 open-reading-frame 36>)
   (:LOWER :HYPHEN :MIXED :HYPHEN :LOWER))
  "non-rRNA-hexamers" MAKE-HYPHENATED-TRIPLE)
 (((#<edge323 166 stop-endurant 167> #<edge324 167 bio-entity 168> #<edge325 167 bio-entity 168>
    #<edge326 168 "per" 169> #<edge327 168 per 169>)
   (:LOWER :HYPHEN :MIXED :HYPHEN :LOWER))
  "non-rRNA-hexamer" MAKE-HYPHENATED-TRIPLE)
 (((#<edge220 116 "of" 117> #<edge221 116 of 117> #<edge222 117 "the" 118> #<edge223 117 the 118>
    #<edge224 120 protein 121>)
   (:LOWER :HYPHEN :MIXED :HYPHEN :LOWER))
  "non-rRNA-hexamers" MAKE-HYPHENATED-TRIPLE)
 (((#<edge165 62 mobility 65> #<edge166 67 bio-complex 69> #<edge167 67 lambda-expression 68>
    #<edge168 66 bio-complex 69> #<edge169 74 be 76>)
   (:LOWER :HYPHEN :MIXED :HYPHEN :LOWER))
  "non-rRNA-hexamers" MAKE-HYPHENATED-TRIPLE)
 (((#<edge66 26 "the" 27> #<edge67 26 the 27> #<edge68 27 start 28> #<edge69 28 bio-entity 29>
    #<edge70 29 "of" 30>)
   (:LOWER :HYPHEN :MIXED :HYPHEN :LOWER))
  "non-rRNA-hexamers" MAKE-HYPHENATED-TRIPLE)
 (((#<edge182 87 "we" 88> #<edge183 87 pronoun/first/plural 88> #<edge1 118 protein 120>)
   (:LOWER :HYPHEN :PROTEIN))
  "dideoxy-C6" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge112 22 open-reading-frame 25> #<edge113 31 open-reading-frame 33>
    #<edge114 30 open-reading-frame 33> #<edge115 30 open-reading-frame 36> #<edge116 29 of 36>)
   (:LOWER :HYPHEN :MIXED :HYPHEN :LOWER))
  "non-rRNA-hexamers" MAKE-HYPHENATED-TRIPLE)
 (((:TILDA #<edge428 242 at 243>) (:TILDA :PERCENT)) "∼80%" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge362 189 between 191> #<edge363 183 parentheses 198> #<edge365 172 efficiency 174>)
   (:LOWER :FORWARD-SLASH :LOWER))
  "cells/bacteria" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge356 195 "the" 196> #<edge357 195 the 196> #<edge358 196 bio-entity 197>)
   (:FULL :FORWARD-SLASH :FULL))
  "RNA/DNA" MAKE-HYPHENATED-PAIR)
 (((#<edge284 145 position 152> #<edge285 104 efficiency 110> #<edge286 144 of 152>)
   (:FULL :FORWARD-SLASH :FULL))
  "RNA/DNA" MAKE-HYPHENATED-PAIR)
 (((#<edge236 127 bio-entity 128> #<edge237 128 COMMA 129> #<edge238 129 reinitiation 130>)
   (:LOWER :HYPHEN :LOWER))
  "user-friendly" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge65 25 and 26> #<edge66 26 "the" 27> #<edge67 26 the 27>) (:MIXED :HYPHEN :PROTEIN))
  "cDNA-AFLP" MAKE-HYPHENATED-STRUCTURE)
 (((:FULL #<edge31 3 on 4>) (:FULL :COLON)) "JQ:" :NO-EDGE)
 (((#<edge184 88 show 89> #<edge185 89 deictic-location 90> #<edge186 90 "that" 91>)
   (:DIGITS :HYPHEN :LOWER))
  "two-tailed" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge231 124 of 125> #<edge232 125 "the" 126> #<edge233 125 the 126>)
   (:DIGITS :HYPHEN :LOWER))
  "two-color" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge218 114 start 115> :REGISTERED_SIGN) (:MIXED :REGISTERED_SIGN)) "FACSCalibur®"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge49 16 proximity 17> #<edge50 17 "of" 18> #<edge52 18 "the" 19>) (:LOWER :HYPHEN :LOWER))
  "round-bottom" MAKE-HYPHENATED-STRUCTURE)
 (((:CLOSE-ANGLE-BRACKET #<edge311 157 be 158>) (:CLOSE-ANGLE-BRACKET :PERCENT)) ">50%"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge111 23 open-reading-frame 25> #<edge84 42 digit-sequence 43>) (:DASH :LOWER)) "--and"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge76 32 protein 33> #<edge109 19 bio-entity 21> #<edge110 18 bio-entity 21>)
   (:LOWER :DASH :PERCENT))
  "tested--10%" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge25 415 protein 417> #<edge26 415 bio-complex 417> #<edge27 1 sequencer 2>)
   (:LOWER :HYPHEN :FULL))
  "sandwich-ELISA" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge19 319 even-if 321> #<edge353 192 bio-complex 193> #<edge358 196 bio-entity 197>)
   (:BIO-ENTITY :FORWARD-SLASH :LOWER))
  "μl/well" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge327 168 per 169> #<edge328 169 bio-entity 170> #<edge330 170 that 171>)
   (:SINGLE-DIGIT :COLON :DIGITS))
  "1:5000" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge15 300 wild-type 303> #<edge271 95 bio-complex 97> #<edge276 118 open-reading-frame 121>)
   (:BIO-ENTITY :FORWARD-SLASH :LOWER))
  "μl/well" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge13 285 close-to 287> #<edge176 70 be 72> #<edge181 86 COMMA 87>)
   (:BIO-ENTITY :FORWARD-SLASH :LOWER))
  "μl/well" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge114 30 open-reading-frame 33> #<edge115 30 open-reading-frame 36> #<edge117 27 start 29>)
   (:PROTEIN :HYPHEN :SINGLE-CAP))
  "PBS-T" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge1 118 protein 120> #<edge53 18 the 19> #<edge58 21 of 22>)
   (:BIO-ENTITY :FORWARD-SLASH :LOWER))
  "μg/well" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge20 376 "wild-type" 379> #<edge21 376 wild-type 379> #<edge23 393 due-to 395>
    #<edge24 415 "eif3" 417> #<edge29 2 study-data 3>)
   (:CAPITALIZED :HYPHEN :DIGITS :HYPHEN :LOWER))
  "Ninety-six-well" MAKE-HYPHENATED-TRIPLE)
 (((#<edge204 103 to 104> #<edge205 104 reinitiation 105> #<edge207 107 figure 108>)
   (:SINGLE-DIGIT :COLON :DIGITS))
  "1:10" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge129 58 be 59> #<edge131 60 "to" 61>) (:FULL :DIGITS)) "DD50" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge18 319 "even if" 321> #<edge19 319 even-if 321> #<edge20 376 "wild-type" 379>)
   (:LOWER :HYPHEN :LOWER))
  "post-inoculation" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge75 31 downstream 32> #<edge76 32 protein 33> #<edge78 34 digit-sequence 35>)
   (:CAPITALIZED :HYPHEN :SINGLE-DIGIT))
  "Level-2" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge199 99 bio-entity 100> #<edge201 101 comparative 102>) (:PROTEIN :DIGITS)) "PEG6000"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge74 31 downstream-segment 32> #<edge75 31 downstream 32>
    #<edge77 32 open-reading-frame 33> #<edge78 34 digit-sequence 35> #<edge79 34 number 35>
    :REGISTERED_SIGN)
   (:CAPITALIZED :HYPHEN :LOWER :HYPHEN :CAPITALIZED :REGISTERED_SIGN))
  "Bac-to-Bac®" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge113 31 open-reading-frame 33> #<edge114 30 open-reading-frame 33>
    #<edge115 30 open-reading-frame 36>)
   (:CAPITALIZED :HYPHEN :SINGLE-CAP))
  "Adeno-X" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge297 100 critical 103> #<edge298 98 critical 103> #<edge300 88 show 90>)
   (:LOWER :HYPHEN :LOWER))
  "prime-boost" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge193 94 the 95> #<edge194 95 terminate 96> #<edge196 97 and 98>) (:LOWER :HYPHEN :LOWER))
  "prime-boost" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge231 124 of 125> #<edge232 125 "the" 126> #<edge234 126 stop 127>)
   (:LOWER :HYPHEN :LOWER))
  "prime-boost" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge40 11 "the" 12> #<edge41 11 the 12> #<edge43 13 "of" 14>) (:LOWER :HYPHEN :LOWER))
  "prime-boost" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge155 77 to 78> #<edge156 78 undergo 79> #<edge159 81 movement 82>
    #<edge160 82 following-adj 83> #<edge162 83 terminate 84>)
   (:SINGLE-DIGIT :FORWARD-SLASH :HYPHENATED-NUMBER :FORWARD-SLASH :DIGITS))
  "1/100-1/10" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge149 73 "it" 74> :LOWER #<edge150 73 pronoun/inanimate 74> #<edge151 74 modal 75>)
   (:DIGITS :LOWER :FORWARD-SLASH :LOWER))
  "106ifu/dosage" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge32 4 "the" 5> #<edge33 4 the 5> #<edge34 5 terminate 6>) (:LOWER :HYPHEN :PROTEIN))
  "prime-VLP" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge11 274 such-as 276> #<edge60 22 the 23> #<edge62 23 upstream 24>)
   (:BIO-ENTITY :FULL :DIGITS))
  "10×DD50" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:MIXED #<edge45 14 "the" 15>) (:MIXED :SINGLE-DIGIT)) "rAdVP6" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge38 9 have 10> #<edge39 10 suggest 11> #<edge5 174 but-rather 176>)
   (:LOWER :HYPHEN :BIO-ENTITY))
  "prime-VLP2/6" MAKE-HYPHENATED-STRUCTURE)
 (((:MIXED #<edge37 8 bio-process 9>) (:MIXED :SINGLE-DIGIT)) "rAdVP6" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge23 393 due-to 395> #<edge24 415 "eif3" 417> :MIXED #<edge26 415 bio-complex 417>)
   (:LOWER :HYPHEN :MIXED :SINGLE-DIGIT))
  "prime-rAdVP6" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge213 111 that 112> #<edge214 112 when 113> #<edge216 113 "the" 114>)
   (:SINGLE-DIGIT :FORWARD-SLASH :SINGLE-DIGIT))
  "3/4" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge20 376 "wild-type" 379> #<edge22 393 "due to" 395>) (:PROTEIN :DIGITS)) "dpi14"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge326 168 "per" 169> #<edge327 168 per 169> #<edge328 169 bio-entity 170>)
   (:MIXED :PLUS-SIGN :PROTEIN))
  "rAd+VLP" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge17 314 wild-type 317> #<edge19 319 even-if 321>) (:PROTEIN :BIO-ENTITY)) "Anti-VP6"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge247 135 start 136> #<edge248 136 bio-entity 137> #<edge249 137 be 138>)
   (:MIXED :PLUS-SIGN :PROTEIN))
  "rAd+VLP" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge225 120 open-reading-frame 121> #<edge226 121 be 122>) (:PLUS-SIGN :MIXED)) "+rAd"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge209 108 digit-sequence 109> #<edge210 108 number 109> #<edge211 110 and 111>)
   (:MIXED :PLUS-SIGN :PROTEIN))
  "rAd+VLP" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge203 103 "to" 104> #<edge204 103 to 104> #<edge205 104 reinitiation 105>)
   (:PROTEIN :PLUS-SIGN :MIXED))
  "VLP+rAd" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge169 74 be 76> #<edge170 77 undergo 79> #<edge171 79 limit 81>)
   (:PROTEIN :PLUS-SIGN :MIXED))
  "VLP+rAd" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge5 174 but-rather 176> #<edge7 184 by-virtue-of 187>) (:PROTEIN :BIO-ENTITY)) "anti-VP6"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge115 30 open-reading-frame 36> #<edge116 29 of 36> #<edge117 27 start 29>)
   (:PROTEIN :PLUS-SIGN :MIXED))
  "VLP+rAd" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge1 118 protein 120> #<edge3 139 up-to 141>) (:PROTEIN :BIO-ENTITY)) "anti-VP6"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge100 49 square-brackets 52> #<edge101 53 square-brackets 56>
    #<edge102 1 study-bio-method 3>)
   (:LOWER :HYPHEN :LOWER))
  "post-inoculation" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge122 14 proximity 25> #<edge136 63 restrict 64>) (:LOWER :UNIT-OF-MEASURE)) "prime-rAd"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge63 24 protein 25> #<edge90 50 digit-sequence 51>) (:LOWER :UNIT-OF-MEASURE)) "prime-rAd"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge21 376 wild-type 379> #<edge22 393 "due to" 395> #<edge24 415 "eif3" 417>)
   (:LOWER :HYPHEN :LOWER))
  "prime-boost" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge118 21 of 25> #<edge119 17 of 21> #<edge121 15 close 16>) (:LOWER :HYPHEN :LOWER))
  "prime-boost" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge5 174 but-rather 176> #<edge126 3 on 9> #<edge128 57 this 58>)
   (:PROTEIN :FORWARD-SLASH :SINGLE-DIGIT))
  "VLP2/6" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge119 17 of 21> #<edge121 15 close 16>) (:PROTEIN :SINGLE-DIGIT)) "VP2"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge16 314 "wild-type" 317> #<edge18 319 "even if" 321>) (:PROTEIN :SINGLE-DIGIT)) "VP6"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:CAPITALIZED :TRADE_MARK_SIGN) (:CAPITALIZED :TRADE_MARK_SIGN)) "Rotateq™"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:CAPITALIZED :TRADE_MARK_SIGN) (:CAPITALIZED :TRADE_MARK_SIGN)) "Rotarix™"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:CAPITALIZED :TRADE_MARK_SIGN) (:CAPITALIZED :TRADE_MARK_SIGN)) "Rotashield™"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge73 30 the 31> #<edge21 376 wild-type 379>) (:PROTEIN :-LIKE)) "PRKR-like"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge217 113 the 114> #<edge11 274 such-as 276>) (:LOWER :-LIKE)) "aggresome-like"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge129 58 be 59> #<edge7 184 by-virtue-of 187>) (:LOWER :-LIKE)) "aggresome-like"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge291 124 of 128> #<edge292 123 downstream 128> #<edge294 114 start 116>)
   (:LOWER :HYPHEN :LOWER))
  "time-point" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge159 81 movement 82> #<edge160 82 following-adj 83> #<edge162 83 terminate 84>)
   (:LOWER :HYPHEN :LOWER))
  "post-transfection" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge102 1 study-bio-method 3> #<edge104 4 bio-process 9> #<edge105 9 suggest 11>
    #<edge107 15 proximity 17>)
   (:PROTEIN :SINGLE-DIGIT :HYPHEN :FULL))
  "DsRed2-ER" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge264 149 article-figure 150> #<edge265 150 digit-sequence 151>
    #<edge267 85 subordinate-conjunction 87>)
   (:LOWER :HYPHEN :LOWER))
  "post-transfection" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge223 117 the 118> #<edge225 120 open-reading-frame 121> #<edge226 121 be 122>
    #<edge227 122 place 123>)
   (:PROTEIN :DIGITS :HYPHEN :PROTEIN))
  "pWRG7077-NP" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge163 58 believe 60> #<edge164 60 reflect 62> #<edge165 62 mobility 65>)
   (:PROTEIN :HYPHEN :CAPITALIZED))
  "pEYFP-Golgi" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge156 78 undergo 79> #<edge158 80 limit 81> #<edge159 81 movement 82>
    #<edge161 82 following 83>)
   (:PROTEIN :SINGLE-DIGIT :HYPHEN :FULL))
  "pDsRed2-ER" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge151 74 modal 75> :GREEK_CAPITAL_LETTER_DELTA #<edge152 75 be 76>)
   (:FULL :GREEK_CAPITAL_LETTER_DELTA :PROTEIN))
  "GPΔmucin" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge94 54 number 55> #<edge96 33 square-brackets 36> #<edge97 37 square-brackets 40>
    #<edge98 41 square-brackets 44> :GREEK_CAPITAL_LETTER_DELTA #<edge99 45 square-brackets 48>
    #<edge100 49 square-brackets 52> #<edge101 53 square-brackets 56> :GREEK_CAPITAL_LETTER_DELTA
    #<edge103 5 bio-process 9>)
   (:PROTEIN :SINGLE-DIGIT :HYPHEN :PROTEIN :GREEK_CAPITAL_LETTER_DELTA :PROTEIN :HYPHEN :PROTEIN
    :GREEK_CAPITAL_LETTER_DELTA :DIGITS))
  "pCDNA6-EbGPΔmucin-mutΔ1234" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge92 52 COMMA 53> :GREEK_CAPITAL_LETTER_DELTA #<edge93 54 digit-sequence 55>)
   (:FULL :GREEK_CAPITAL_LETTER_DELTA :PROTEIN))
  "GPΔmucin" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge84 42 digit-sequence 43> #<edge86 44 COMMA 45> #<edge87 46 digit-sequence 47>
    #<edge88 46 number 47>)
   (:PROTEIN :SINGLE-DIGIT :HYPHEN :PROTEIN))
  "pCB6-EbGP" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge72 30 "the" 31> :GREEK_CAPITAL_LETTER_DELTA #<edge73 30 the 31>)
   (:FULL :GREEK_CAPITAL_LETTER_DELTA :PROTEIN))
  "GPΔmucin" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:FULL #<edge166 67 bio-complex 69> #<edge170 77 undergo 79>) (:FULL :HYPHEN :SINGLE-CAP))
  "ESCRT-I" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge172 79 movement 82> #<edge173 82 following 84> #<edge174 74 ability 77>)
   (:DIGITS :HYPHEN :LOWER))
  "one-way" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge226 121 be 122> #<edge227 122 place 123> #<edge228 123 downstream-segment 124>)
   (:LOWER :HYPHEN :CAPITALIZED))
  "glutathione–Sepharose" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge123 15 close 16> #<edge124 13 of 25> #<edge125 9 suggest 13>) (:PROTEIN :HYPHEN :MIXED))
  "Tris–HCl" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge170 77 undergo 79> #<edge171 79 limit 81> #<edge173 82 following 84>
    #<edge174 74 ability 77>)
   (:PROTEIN :HYPHEN :DIGITS :FULL))
  "LAS-1000UV" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge21 376 wild-type 379> #<edge22 393 "due to" 395> #<edge23 393 due-to 395>)
   (:PROTEIN :HYPHEN :MIXED))
  "Tris–HCl" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge219 115 bio-entity 116> #<edge221 116 of 117> #<edge222 117 "the" 118>
    #<edge223 117 the 118>)
   (:MIXED :DIGITS :HYPHEN :LOWER))
  "AlexaFluor488-dextran" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge117 27 start 29> #<edge118 21 of 25> #<edge119 17 of 21>) (:LOWER :HYPHEN :LOWER))
  "charge-coupled" MAKE-HYPHENATED-STRUCTURE)
 (((:FULL #<edge107 15 proximity 17> #<edge109 19 bio-entity 21>) (:FULL :HYPHEN :DIGITS)) "IX-71"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge79 34 number 35> #<edge80 36 COMMA 37> #<edge5 174 but-rather 176>)
   (:FULL :FORWARD-SLASH :PROTEIN))
  "DMEM/F12" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge56 20 bio-entity 21> #<edge57 21 "of" 22> #<edge58 21 of 22>) (:LOWER :HYPHEN :LOWER))
  "fluorescence-conjugated" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge172 79 movement 82> #<edge173 82 following 84> #<edge175 73 ability 77>)
   (:FULL :HYPHEN :DIGITS))
  "FV-1000" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge115 30 open-reading-frame 36> #<edge116 29 of 36> #<edge118 21 of 25>)
   (:SINGLE-DIGIT :COLON :DIGITS))
  "1∶200" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge107 15 proximity 17> #<edge109 19 bio-entity 21> #<edge110 18 bio-entity 21>)
   (:MIXED :DIGITS :HYPHEN))
  "AlexaFluor594-" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge321 165 and 166> :ASTERISK #<edge322 166 stop 167>) (:DIGITS :ASTERISK :SINGLE-CAP))
  "35°C" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:CAPITALIZED #<edge288 135 start 137> #<edge289 130 detect 132>) (:CAPITALIZED :HYPHEN :LOWER))
  "Bact-agar" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge32 4 "the" 5> #<edge33 4 the 5> #<edge34 5 terminate 6> #<edge35 6 HYPHEN 7>
    #<edge37 8 bio-process 9> #<edge38 9 have 10> #<edge40 11 "the" 12>)
   (:SINGLE-CAP :FORWARD-SLASH :CAPITALIZED :FORWARD-SLASH :SINGLE-DIGIT :FORWARD-SLASH :DIGITS))
  "A/Aichi/2/68" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge22 393 "due to" 395> #<edge23 393 due-to 395> #<edge25 415 protein 417>
    #<edge26 415 bio-complex 417> #<edge28 2 study-bio-method 3>)
   (:CAPITALIZED :FORWARD-SLASH :SINGLE-DIGIT :FORWARD-SLASH :DIGITS))
  "Rico/8/34" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge53 18 the 19> #<edge55 19 stop-endurant 20> #<edge56 20 bio-entity 21>
    #<edge57 21 "of" 22>)
   (:MIXED :DIGITS :HYPHEN :LOWER))
  "AlexaFluor647-conjugated" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge44 13 of 14> #<edge46 14 the 15> #<edge47 15 close-bio-process 16> #<edge48 15 close 16>)
   (:MIXED :DIGITS :HYPHEN :LOWER))
  "AlexaFluor594-conjugated" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge34 5 terminate 6> #<edge36 7 reinitiation 8> #<edge37 8 bio-process 9>
    #<edge38 9 have 10>)
   (:MIXED :DIGITS :HYPHEN :LOWER))
  "AlexaFluor546-labeled" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge1 118 protein 120> #<edge32 4 "the" 5>) (:BIO-ENTITY :DIGITS)) "10×103"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge24 415 "eif3" 417> #<edge26 415 bio-complex 417> #<edge27 1 sequencer 2>
    #<edge28 2 study-bio-method 3>)
   (:MIXED :DIGITS :HYPHEN :LOWER))
  "AlexaFluor546-labeled" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge19 319 even-if 321> #<edge21 376 wild-type 379> #<edge22 393 "due to" 395>)
   (:MIXED :DIGITS :HYPHEN))
  "AlexaFluor488-" MAKE-HYPHENATED-STRUCTURE)
 (((:FULL #<edge299 93 between 97>) (:FULL :DIGITS)) "JCRB9029" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:FULL #<edge251 138 move-to 139>) (:FULL :DIGITS)) "JCRB9082" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge244 133 when 134> #<edge245 134 "the" 135> #<edge247 135 start 136>)
   (:PROTEIN :HYPHEN :DIGITS))
  "CRL-11268" MAKE-HYPHENATED-PAIR)
 (((#<edge253 141 number 142> #<edge254 142 bio-entity 143> :CAPITALIZED)
   (:MIXED :HYPHEN :CAPITALIZED))
  "pCAGGS-Venus" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge250 138 move-something-somewhere 139> #<edge251 138 move-to 139> :FULL)
   (:MIXED :HYPHEN :FULL))
  "pCAGGS-ECFP" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge244 133 when 134> #<edge245 134 "the" 135> #<edge246 134 the 135>)
   (:PROTEIN :FORWARD-SLASH :MIXED))
  "XhoI/NotI" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge132 60 to 61> #<edge133 61 reflect 62> #<edge135 62 a 63> :MULTIPLICATION-SIGN
    #<edge136 63 restrict 64>)
   (:MIXED :HYPHEN :SINGLE-DIGIT :MULTIPLICATION-SIGN :PROTEIN))
  "pCAGGS-3×HA" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge126 3 on 9> #<edge127 57 "this" 58> #<edge128 57 this 58>)
   (:PROTEIN :FORWARD-SLASH :MIXED))
  "XhoI/NotI" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge178 62 mobility 69> #<edge179 57 believe 60> #<edge180 85 however 86>)
   (:LOWER :HYPHEN :LOWER))
  "well-tolerated" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge81 38 digit-sequence 39> #<edge82 38 number 39> #<edge83 40 COMMA 41>)
   (:LOWER :HYPHEN :LOWER))
  "low-density" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge350 190 where 191> #<edge351 191 "the" 192> #<edge19 319 even-if 321>
    #<edge352 191 the 192> #<edge353 192 bio-complex 193>)
   (:PROTEIN :HYPHEN :PROTEIN :HYPHEN :LOWER))
  "Ras–PI3K-mediated" MAKE-HYPHENATED-TRIPLE)
 (((#<edge194 95 terminate 96> #<edge195 96 bio-complex 97> #<edge196 97 and 98>)
   (:SINGLE-DIGIT :HYPHEN :LOWER))
  "6-phosphate" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge394 211 near 212> #<edge395 212 COMMA 213> #<edge396 213 "the" 214>)
   (:LOWER :HYPHEN :LOWER))
  "post-entry" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge729 395 "the" 396> #<edge730 395 the 396> #<edge731 396 digit-sequence 397>)
   (:LOWER :HYPHEN :LOWER))
  "whole-cell" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge19 319 even-if 321> #<edge276 118 open-reading-frame 121>) (:PROTEIN :SINGLE-CAP)) "S17N"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge237 128 COMMA 129> #<edge238 129 reinitiation 130> #<edge240 131 detect 132>)
   (:CAPITALIZED :HYPHEN :SINGLE-DIGIT))
  "Cos-1" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge96 33 square-brackets 36> #<edge97 37 square-brackets 40>
    #<edge99 45 square-brackets 48>)
   (:LOWER :HYPHEN :LOWER))
  "pull-down" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge494 278 digit-sequence 279> :MULTIPLICATION-SIGN #<edge497 280 bio-entity 281>)
   (:DIGITS :MULTIPLICATION-SIGN :HYPHENATED-NUMBER))
  "4.1×10−3" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge245 134 "the" 135> #<edge246 134 the 135> :CAPITALIZED #<edge247 135 start 136>
    #<edge249 137 be 138> #<edge250 138 move-something-somewhere 139>
    #<edge252 141 digit-sequence 142>)
   (:SINGLE-CAP :FORWARD-SLASH :CAPITALIZED :FORWARD-SLASH :SINGLE-DIGIT :FORWARD-SLASH :DIGITS))
  "A/Aichi/2/68" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge117 27 start 29> #<edge118 21 of 25> #<edge120 14 proximity 21> #<edge121 15 close 16>
    #<edge123 15 close 16>)
   (:CAPITALIZED :FORWARD-SLASH :SINGLE-DIGIT :FORWARD-SLASH :DIGITS))
  "Rico/8/34" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge114 30 open-reading-frame 33> #<edge115 30 open-reading-frame 36> #<edge116 29 of 36>)
   (:SINGLE-CAP :FORWARD-SLASH :CAPITALIZED))
  "A/Puerto" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge110 18 bio-entity 21> #<edge115 30 open-reading-frame 36>) (:SINGLE-CAP :POINT-MUTATION))
  "S1D" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge5 174 but-rather 176> #<edge57 21 "of" 22> #<edge58 21 of 22>)
   (:CELLULAR-LOCATION :FORWARD-SLASH :LOWER))
  "late endosomes/lysosomes" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge316 161 distance 162> :MULTIPLICATION-SIGN #<edge319 163 the 164>)
   (:DIGITS :MULTIPLICATION-SIGN :HYPHENATED-NUMBER))
  "1.2×10−7" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge10 274 "such as" 276> #<edge107 15 proximity 17>) (:PROTEIN :SINGLE-LOWER))
  "catalytic subunit of PI3Kγ" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge160 82 following-adj 83> #<edge161 82 following 83> #<edge163 58 believe 60>)
   (:PROTEIN :HYPHEN :SINGLE-DIGIT))
  "phosphoinositide-3" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge429 243 comparative-modifier 244> #<edge430 243 lower-adj 244>
    #<edge432 243 lower-note 244>)
   (:LOWER :HYPHEN :LOWER))
  "vaccines—to" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge411 228 reinitiation 229> #<edge412 229 site 230> #<edge413 230 modal 231>)
   (:LOWER :HYPHEN :LOWER))
  "revised—typically" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge353 192 bio-complex 193> #<edge354 193 terminate 194> #<edge355 194 and 195>)
   (:DIGITS :HYPHEN :DIGITS))
  "2008–2009" LOOK-FOR-YEAR-EXPRESSION)
 (((#<edge337 177 well-adverbial 178> #<edge338 177 modifier 178> #<edge339 177 well 178>)
   (:DIGITS :HYPHEN :DIGITS))
  "2006–2007" LOOK-FOR-YEAR-EXPRESSION)
 (((#<edge190 92 distance 93> #<edge191 93 between 94> #<edge193 94 the 95>)
   (:LOWER :HYPHEN :SINGLE-LOWER))
  "strain—a" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge181 86 COMMA 87> #<edge221 116 of 117>) (:CAPITALIZED :MONTH)) "February–April"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge68 27 start 28> #<edge69 28 bio-entity 29> #<edge71 29 of 30>) (:LOWER :HYPHEN :LOWER))
  "annually—millions" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge186 90 "that" 91> #<edge187 90 that 91> #<edge188 91 "the" 92>)
   (:CAPITALIZED :HYPHEN :LOWER))
  "Non-viral" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge198 98 the 99> #<edge199 99 bio-entity 100> #<edge200 100 be 101>)
   (:LOWER :HYPHEN :LOWER))
  "cell-based" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge120 14 proximity 21> #<edge121 15 close 16> #<edge123 15 close 16> #<edge124 13 of 25>
    #<edge125 9 suggest 13>)
   (:LOWER :HYPHEN :LOWER :HYPHEN :LOWER))
  "cell-to-cell" MAKE-HYPHENATED-TRIPLE)
 (((#<edge871 inactive, resource 871> #<edge872 inactive, resource 872>
    #<edge873 inactive, resource 873>)
   (:LOWER :HYPHEN :LOWER))
  "long-lasting" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge689 374 of 375> #<edge690 375 either 376> #<edge692 380 downstream-segment 381>)
   (:LOWER :HYPHEN :PROTEIN))
  "bio-adhesins" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge611 352 to 353> #<edge612 353 "the" 354> #<edge614 354 modifier 355>
    #<edge615 355 site 356> #<edge616 356 "of" 357>)
   (:LOWER :HYPHEN :LOWER :HYPHEN :LOWER))
  "water-oil-water" MAKE-HYPHENATED-TRIPLE)
 (((#<edge606 349 snap 350> #<edge607 349 snap-endurant 350> #<edge609 351 SINGLE-QUOTE 352>)
   (:LOWER :HYPHEN :LOWER))
  "multi-phase" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge132 60 to 61> #<edge133 61 reflect 62> #<edge134 62 "a" 63>) (:LOWER :HYPHEN :LOWER))
  "particle-mediated" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge302 85 show 90> #<edge303 90 that 91> #<edge304 153 "this" 154>) (:LOWER :HYPHEN :LOWER))
  "immune-stimulating" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge258 144 of 145> #<edge259 145 pronoun/inanimate 146>
    #<edge261 147 position-bio-process 148>)
   (:LOWER :HYPHEN :LOWER))
  "solid-core" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge237 128 COMMA 129> #<edge238 129 reinitiation 130> #<edge240 131 detect 132>)
   (:LOWER :HYPHEN :LOWER))
  "peptide-adjuvant" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge97 37 square-brackets 40> #<edge98 41 square-brackets 44>
    #<edge99 45 square-brackets 48>)
   (:LOWER :HYPHEN :LOWER))
  "multi-valency" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge462 249 circumstance 250> #<edge463 250 COMMA 251> #<edge464 251 bio-complex 252>)
   (:LOWER :HYPHEN :LOWER))
  "un-methylated" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge444 228 site 230> #<edge445 227 site 230> #<edge446 231 bio-use 233>)
   (:PROTEIN :HYPHEN :LOWER))
  "CpG-polymer" PACKAGE-QUALIFYING-PAIR)
 (((#<edge263 149 figure 150> #<edge264 149 article-figure 150> #<edge15 300 wild-type 303>)
   (:LOWER :HYPHEN :CROSS-LINK))
  "acetal-cross-linked" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge300 88 show 90> #<edge301 87 show 90> #<edge302 85 show 90>) (:LOWER :HYPHEN :LOWER))
  "bio-distribution" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge179 57 believe 60> #<edge180 85 however 86> #<edge181 86 COMMA 87>)
   (:SINGLE-CAP :HYPHEN :FULL))
  "I-II" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge258 144 of 145> #<edge259 145 pronoun/inanimate 146> #<edge260 146 modifier 147>)
   (:FULL :FORWARD-SLASH :SINGLE-CAP))
  "CBA/J" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge63 24 protein 25> #<edge821 inactive, resource 821> #<edge816 inactive, resource 816>
    #<edge817 inactive, resource 817>)
   (:INITIAL :RESIDUE-ON-PROTEIN :HYPHEN :FULL))
  "E.G7-OVA" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge19 319 even-if 321> #<edge237 128 COMMA 129> #<edge238 129 reinitiation 130>)
   (:CELL-TYPE :HYPHEN :LOWER))
  "dendritic cell-based" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge28 2 study-bio-method 3> #<edge29 2 study-data 3> #<edge30 3 "on" 4>)
   (:LOWER :HYPHEN :LOWER))
  "simian-human" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge164 60 reflect 62> #<edge166 67 bio-complex 69>) (:SINGLE-CAP :SINGLE-DIGIT)) "L2"
  REIFY-TWO-PART-LABEL)
 (((#<edge25 415 protein 417> #<edge27 1 sequencer 2>) (:SINGLE-CAP :SINGLE-DIGIT)) "L1"
  REIFY-TWO-PART-LABEL)
 (((#<edge10 274 "such as" 276> #<edge12 285 "close to" 287>) (:SINGLE-CAP :SINGLE-DIGIT)) "L2"
  REIFY-TWO-PART-LABEL)
 (((#<edge705 373 location-of 383> #<edge707 368 for 372> #<edge708 366 require 372>
    #<edge709 361 show 363> #<edge711 359 show 363>)
   (:SINGLE-CAP :SINGLE-DIGIT :FORWARD-SLASH :SINGLE-CAP :SINGLE-DIGIT))
  "L1/L2" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge548 299 a 300> #<edge549 303 bio-entity 304> #<edge550 304 and 305>)
   (:PROTEIN :HYPHEN :LOWER))
  "VLP-based" PACKAGE-QUALIFYING-PAIR)
 (((#<edge515 276 bio-entity 281> #<edge517 274 such-as 281>) (:SINGLE-CAP :SINGLE-DIGIT)) "L2"
  REIFY-TWO-PART-LABEL)
 (((#<edge469 255 "a" 256> #<edge470 255 a 256> #<edge471 256 downstream-segment 257>)
   (:LOWER :HYPHEN :LOWER))
  "carboxyl-terminal" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge466 253 bio-entity 254> #<edge468 254 at 255>) (:SINGLE-CAP :SINGLE-DIGIT)) "L2"
  REIFY-TWO-PART-LABEL)
 (((#<edge433 244 efficiency 245> #<edge435 223 point-mutation 225>) (:SINGLE-CAP :SINGLE-DIGIT))
  "L1" REIFY-TWO-PART-LABEL)
 (((#<edge390 207 at 208> #<edge392 209 or 210>) (:SINGLE-CAP :SINGLE-DIGIT)) "L1"
  REIFY-TWO-PART-LABEL)
 (((#<edge373 169 bio-entity 172> #<edge375 168 per 172>) (:SINGLE-CAP :SINGLE-DIGIT)) "L2"
  REIFY-TWO-PART-LABEL)
 (((#<edge368 181 tethere 183> #<edge370 180 tethere 198>) (:SINGLE-CAP :SINGLE-DIGIT)) "L1"
  REIFY-TWO-PART-LABEL)
 (((:FULL #<edge318 163 "the" 164>) (:FULL :SINGLE-DIGIT)) "HPVL1" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge261 147 position-bio-process 148> #<edge263 149 figure 150>) (:SINGLE-CAP :SINGLE-DIGIT))
  "L1" REIFY-TWO-PART-LABEL)
 (((#<edge18 319 "even if" 321> #<edge210 108 number 109> #<edge20 376 "wild-type" 379>)
   (:PROTEIN :HYPHEN :AND/OR))
  "E7-and/or" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge183 87 pronoun/first/plural 88> #<edge185 89 deictic-location 90> #<edge186 90 "that" 91>
    #<edge13 285 close-to 287> #<edge187 90 that 91> #<edge16 314 "wild-type" 317>)
   (:SINGLE-CAP :SINGLE-DIGIT :HYPHEN :PROTEIN :HYPHEN :PROTEIN))
  "L2-E7-E2" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge178 62 mobility 69> #<edge180 85 however 86> #<edge181 86 COMMA 87>
    #<edge11 274 such-as 276>)
   (:SINGLE-CAP :SINGLE-DIGIT :HYPHEN :PROTEIN))
  "L2-E7" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge123 15 close 16> #<edge124 13 of 25> #<edge125 9 suggest 13>) (:LOWER :HYPHEN :LOWER))
  "self-assemble" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge112 22 open-reading-frame 25> #<edge114 30 open-reading-frame 33>
    #<edge115 30 open-reading-frame 36> #<edge5 174 but-rather 176>)
   (:SINGLE-CAP :SINGLE-DIGIT :HYPHEN :PROTEIN))
  "L1-E7" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge59 22 "the" 23> #<edge1 118 protein 120>) (:LOWER :-LIKE)) "papillomavirus-like"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge33 4 the 5> #<edge221 116 of 117> #<edge35 6 HYPHEN 7>) (:BIO-ENTITY :HYPHEN :PROTEIN))
  "VP22-p53" MAKE-HYPHENATED-PAIR)
 (((#<edge25 415 protein 417> :MIXED #<edge200 100 be 101> #<edge201 101 comparative 102>
    #<edge27 1 sequencer 2>)
   (:PROTEIN :MIXED :DIGITS :HYPHEN :BIO-ENTITY))
  "Ad5CMVp53-VP22" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge23 393 due-to 395> :MIXED #<edge197 98 "the" 99>) (:PROTEIN :MIXED :DIGITS)) "Ad5CMVp53"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge9 214 wild-type 217> #<edge103 5 bio-process 9> #<edge11 274 such-as 276>)
   (:BIO-ENTITY :HYPHEN :PROTEIN))
  "VP22-p53" MAKE-HYPHENATED-PAIR)
 (((#<edge790 393 due-to 400> #<edge792 391 copular-pp 400>) (:PROTEIN :DIGITS)) "VP22"
  #:PSR-268008)
 (((:FULL #<edge732 396 number 397> #<edge733 397 direction 398>) (:FULL :HYPHEN :PROTEIN))
  "BVP-tgD" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge645 356 of 358> #<edge647 340 cause 347> #<edge648 338 cause 347> #<edge31 3 on 4>)
   (:PROTEIN :DIGITS :FORWARD-SLASH :PROTEIN))
  "MVP22/E7" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge578 328 reinitiation 329> #<edge579 329 window 330> #<edge581 331 article-figure 332>)
   (:FULL :HYPHEN :SINGLE-DIGIT))
  "HSV-1" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge559 309 the 310> #<edge561 311 always 312>) (:PROTEIN :DIGITS)) "VP22" #:PSR-268008)
 (((:FULL #<edge552 305 ones-number 306>) (:FULL :DIGITS)) "BVP22" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge548 299 a 300> #<edge550 304 and 305>) (:PROTEIN :DIGITS)) "VP22" #:PSR-268008)
 (((#<edge509 268 hyphenated-pair 271> #<edge511 260 figure 263>) (:PROTEIN :DIGITS)) "VP22"
  #:PSR-268008)
 (((#<edge459 247 "the" 248> #<edge461 248 sequencer 249>) (:PROTEIN :DIGITS)) "VP22" #:PSR-268008)
 (((#<edge405 222 and 223> #<edge407 223 number 224>) (:PROTEIN :DIGITS)) "VP22" #:PSR-268008)
 (((#<edge13 285 close-to 287> #<edge15 300 wild-type 303>) (:VIRUS :PROTEIN)) "HPV16E7"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge330 170 that 171> #<edge332 172 reinitiation 173>) (:PROTEIN :DIGITS)) "VP22"
  #:PSR-268008)
 (((#<edge316 161 distance 162> #<edge318 163 "the" 164>) (:PROTEIN :DIGITS)) "VP22" #:PSR-268008)
 (((#<edge268 141 bio-entity 143> #<edge270 148 parentheses 152>) (:PROTEIN :DIGITS)) "VP22"
  #:PSR-268008)
 (((#<edge264 149 article-figure 150> #<edge265 150 digit-sequence 151>
    #<edge267 85 subordinate-conjunction 87>)
   (:FULL :HYPHEN :SINGLE-DIGIT))
  "HSV-1" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge252 141 digit-sequence 142> #<edge253 141 number 142>
    #<edge255 143 downstream-segment 144> #<edge256 143 downstream 144> #<edge257 144 "of" 145>)
   (:LOWER :HYPHEN :LOWER :HYPHEN :LOWER))
  "cell-to-cell" MAKE-HYPHENATED-TRIPLE)
 (((#<edge189 91 the 92> #<edge191 93 between 94>) (:PROTEIN :DIGITS)) "VP22" #:PSR-268008)
 (((#<edge109 19 bio-entity 21> #<edge111 23 open-reading-frame 25>) (:PROTEIN :DIGITS)) "VP22"
  #:PSR-268008)
 (((#<edge80 36 COMMA 37> #<edge82 38 number 39>) (:PROTEIN :DIGITS)) "VP22"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge75 31 downstream 32> #<edge76 32 protein 33> #<edge78 34 digit-sequence 35>)
   (:FULL :HYPHEN :SINGLE-DIGIT))
  "HSV-1" MAKE-HYPHENATED-STRUCTURE)
 (((:FULL #<edge481 265 or 266> #<edge483 266 at 267>) (:FULL :HYPHEN :SINGLE-DIGIT)) "BHV-1"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge402 220 number 221> #<edge403 221 amino-acid 222> :FULL) (:FULL :HYPHEN :FULL)) "DNA-NLS"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge350 190 where 191> #<edge352 191 the 192> #<edge353 192 bio-complex 193>
    #<edge354 193 terminate 194>)
   (:FULL :DIGITS :HYPHEN :PROTEIN))
  "PEI600-Tat" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge312 158 not 159> #<edge314 160 "the" 161> #<edge315 160 the 161>
    #<edge316 161 distance 162> #<edge317 162 between 163> #<edge29 2 study-data 3>
    #<edge318 163 "the" 164>)
   (:FULL :DIGITS :HYPHEN :PROTEIN :FORWARD-SLASH :PROTEIN :FULL))
  "PEI600-Tat/E7DNA" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge306 154 suggest 155> #<edge308 155 that 156>) (:MIXED :SINGLE-DIGIT)) "rE7"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge251 138 move-to 139> #<edge253 141 number 142> #<edge254 142 bio-entity 143>
    #<edge255 143 downstream-segment 144>)
   (:FULL :DIGITS :HYPHEN :PROTEIN))
  "PEI600-Tat" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge206 105 efficiency 106> #<edge208 107 article-figure 108>
    #<edge209 108 digit-sequence 109> #<edge210 108 number 109>)
   (:FULL :DIGITS :HYPHEN :PROTEIN))
  "PEI600-Tat" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge163 58 believe 60> #<edge165 62 mobility 65> #<edge166 67 bio-complex 69>
    #<edge167 67 lambda-expression 68>)
   (:FULL :DIGITS :HYPHEN :PROTEIN))
  "PEI600-Tat" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge111 23 open-reading-frame 25> #<edge113 31 open-reading-frame 33>
    #<edge114 30 open-reading-frame 33> #<edge115 30 open-reading-frame 36>)
   (:FULL :DIGITS :HYPHEN :PROTEIN))
  "PEI600-Tat" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge573 325 downstream 326> #<edge574 326 "of" 327> #<edge43 13 "of" 14>)
   (:PROTEIN :HYPHEN :DRUG))
  "Tat-PEG-PEI" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge471 256 downstream-segment 257> #<edge473 257 bio-entity 258>)
   (:SINGLE-CAP :SINGLE-DIGIT))
  "C3" REIFY-TWO-PART-LABEL)
 (((#<edge400 219 article-figure 220> #<edge401 220 digit-sequence 221> #<edge402 220 number 221>)
   (:LOWER :HYPHEN :LOWER))
  "carboxy-terminal" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge336 177 well-endurant 178> #<edge337 177 well-adverbial 178> #<edge338 177 modifier 178>)
   (:PROTEIN :HYPHEN :LOWER))
  "Tat-antigen" PACKAGE-QUALIFYING-PAIR)
 (((#<edge217 113 the 114> #<edge218 114 start 115> #<edge219 115 bio-entity 116>)
   (:FULL :FORWARD-SLASH :PROTEIN))
  "DNA/Tat" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge150 73 pronoun/inanimate 74> #<edge151 74 modal 75> #<edge152 75 be 76>)
   (:LOWER :HYPHEN :LOWER))
  "long-lasting" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge69 28 bio-entity 29> #<edge70 29 "of" 30> #<edge71 29 of 30>)
   (:PROTEIN :FORWARD-SLASH :LOWER))
  "ODN/cationic" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge21 376 wild-type 379> #<edge22 393 "due to" 395> #<edge23 393 due-to 395>)
   (:LOWER :HYPHEN :LOWER))
  "immune-stimulating" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge17 314 wild-type 317> #<edge18 319 "even if" 321> :LOWER) (:CAPITALIZED :HYPHEN :LOWER))
  "Oligo-deoxynucleotides" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge635 338 bio-entity 340> #<edge636 340 cause 342> #<edge637 344 fragment 347>)
   (:LOWER :HYPHEN :LOWER))
  "peptide-based" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge601 345 amino-acid 346> #<edge602 346 fragment 347> #<edge23 393 due-to 395>)
   (:LOWER :HYPHEN :CELLULAR-LOCATION))
  "non-target cells" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge125 9 suggest 13> #<edge126 3 on 9> #<edge127 57 "this" 58> #<edge128 57 this 58>
    #<edge129 58 be 59>)
   (:LOWER :FORWARD-SLASH :FULL :FORWARD-SLASH :FULL))
  "oligonucleotide/DNA/RNA" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge121 15 close 16> #<edge122 14 proximity 25> #<edge123 15 close 16>)
   (:LOWER :FORWARD-SLASH :PROTEIN))
  "peptide/protein" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge216 113 "the" 114> #<edge217 113 the 114> #<edge218 114 start 115>)
   (:LOWER :HYPHEN :LOWER))
  "super-antigen" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge123 15 close 16> #<edge124 13 of 25> #<edge126 3 on 9>) (:PROTEIN :HYPHEN :SINGLE-DIGIT))
  "MAGE-1" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge118 21 of 25> #<edge119 17 of 21> #<edge121 15 close 16>)
   (:LOWER :FORWARD-SLASH :PROTEIN))
  "vaccines/liposomes" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge94 54 number 55> #<edge96 33 square-brackets 36>) (:FULL :SINGLE-DIGIT)) "MG7"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge87 46 digit-sequence 47> #<edge88 46 number 47> #<edge89 48 COMMA 49>)
   (:LOWER :HYPHEN :LOWER))
  "nano-emulsion" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge70 29 "of" 30> #<edge72 30 "the" 31> #<edge73 30 the 31>
    #<edge74 31 downstream-segment 32>)
   (:FULL :SINGLE-DIGIT :HYPHEN :CAPITALIZED))
  "MG7-Ag" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge16 314 "wild-type" 317> #<edge17 314 wild-type 317> #<edge19 319 even-if 321>)
   (:CAPITALIZED :FORWARD-SLASH :PROTEIN))
  "Nanoparticles/liposomes" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge23 393 due-to 395> #<edge25 415 protein 417>) (:PROTEIN :DIGITS)) "LM609"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge11 274 such-as 276> #<edge12 285 "close to" 287> #<edge13 285 close-to 287>)
   (:LOWER :HYPHEN :LOWER))
  "self-assembled" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge56 20 bio-entity 21> #<edge57 21 "of" 22>) (:LOWER :COLON)) "following:" :NO-EDGE)
 (((#<edge165 62 mobility 65> #<edge166 67 bio-complex 69> #<edge168 66 bio-complex 69>)
   (:LOWER :HYPHEN :LOWER))
  "half-lives" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge7 184 by-virtue-of 187> #<edge8 214 "wild-type" 217> #<edge9 214 wild-type 217>)
   (:LOWER :HYPHEN :LOWER))
  "nano-devices" MAKE-HYPHENATED-STRUCTURE)
 (((:FULL #<edge156 78 undergo 79> #<edge158 80 limit 81>) (:FULL :HYPHEN :SINGLE-DIGIT)) "LAGE-1"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge150 73 pronoun/inanimate 74> #<edge151 74 modal 75> :FULL #<edge152 75 be 76>
    #<edge154 77 "to" 78>)
   (:FULL :HYPHEN :FULL :HYPHEN :SINGLE-DIGIT))
  "NY-ESO-1" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge126 3 on 9> #<edge127 57 "this" 58> #<edge128 57 this 58>) (:LOWER :HYPHEN :LOWER))
  "particle-mediated" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge79 34 number 35> #<edge80 36 COMMA 37> #<edge81 38 digit-sequence 39>)
   (:LOWER :HYPHEN :LOWER))
  "particle-mediated" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge16 314 "wild-type" 317> #<edge17 314 wild-type 317> #<edge19 319 even-if 321>)
   (:LOWER :HYPHEN :LOWER))
  "dry-powder" MAKE-HYPHENATED-STRUCTURE)
 (((:FULL #<edge605 348 SINGLE-QUOTE 349> #<edge607 349 snap-endurant 350>
    #<edge609 351 SINGLE-QUOTE 352>)
   (:FULL :HYPHEN :DIGITS :SINGLE-LOWER))
  "ZYC-101a" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge506 289 reinitiation 290> #<edge507 290 site 291> #<edge509 268 hyphenated-pair 271>)
   (:LOWER :HYPHEN :LOWER))
  "high-grade" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge29 2 study-data 3> #<edge501 283 digit-sequence 284> #<edge503 287 "the" 288>)
   (:PROTEIN :FORWARD-SLASH :SINGLE-DIGIT))
  "CIN2/3" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge25 415 protein 417> #<edge483 266 at 267>) (:PROTEIN :SINGLE-DIGIT)) "HLA-A2"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:FULL #<edge477 261 digit-sequence 262> #<edge479 262 amino-acid 263>) (:FULL :HYPHEN :DIGITS))
  "ZYC-101" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge160 82 following-adj 83> #<edge161 82 following 83> #<edge162 83 terminate 84>
    #<edge163 58 believe 60> #<edge5 174 but-rather 176> #<edge164 60 reflect 62>
    #<edge165 62 mobility 65>)
   (:LOWER :HYPHEN :LOWER :HYPHEN :AMINO-ACID :HYPHEN :LOWER))
  "arginine-glycine-aspartic acid-containing" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge181 86 COMMA 87> #<edge182 87 "we" 88> #<edge183 87 pronoun/first/plural 88>)
   (:LOWER :FORWARD-SLASH :LOWER))
  "targeted/localized" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge10 274 "such as" 276> #<edge11 274 such-as 276> #<edge12 285 "close to" 287>)
   (:LOWER :HYPHEN :LOWER))
  "microparticle-based" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge165 62 mobility 65> #<edge166 67 bio-complex 69> #<edge167 67 lambda-expression 68>
    #<edge168 66 bio-complex 69> #<edge170 77 undergo 79>)
   (:LOWER :HYPHEN :LOWER :HYPHEN :LOWER))
  "high-molecular-weight" MAKE-HYPHENATED-TRIPLE)
 (((#<edge348 188 distance 189> #<edge349 189 between 190> #<edge350 190 where 191>)
   (:LOWER :HYPHEN :LOWER))
  "osmosis-based" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge335 177 well-bio-process 178> #<edge336 177 well-endurant 178>
    #<edge337 177 well-adverbial 178>)
   (:LOWER :FORWARD-SLASH :FULL))
  "chitosan/DNA" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge118 21 of 25> #<edge119 17 of 21> #<edge121 15 close 16>) (:LOWER :HYPHEN :PROTEIN))
  "dextran-spermine" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:LOWER #<edge112 22 open-reading-frame 25> #<edge113 31 open-reading-frame 33>)
   (:LOWER :HYPHEN :LOWER))
  "diethylaminoethyl-dextran" :NO-EDGE)
 (((:FULL #<edge90 50 digit-sequence 51> #<edge92 52 COMMA 53>) (:FULL :HYPHEN :DIGITS)) "JVRS-100"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge86 44 COMMA 45> #<edge87 46 digit-sequence 47> #<edge88 46 number 47>)
   (:LOWER :HYPHEN :FULL))
  "lipid-DNA" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge39 10 suggest 11> #<edge40 11 "the" 12> #<edge41 11 the 12>) (:LOWER :HYPHEN :PROTEIN))
  "non-CpG" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:FULL #<edge29 2 study-data 3> #<edge30 3 "on" 4>) (:FULL :FORWARD-SLASH :LOWER))
  "DOTIM/cholesterol" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge306 154 suggest 155> #<edge307 155 "that" 156> #<edge309 156 "it" 157>)
   (:LOWER :HYPHEN :LOWER))
  "first-line" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge95 5 hyphenated-pair 8> #<edge97 37 square-brackets 40>) (:PROTEIN :DIGITS)) "BLP25"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge35 6 HYPHEN 7> #<edge36 7 reinitiation 8> #<edge37 8 bio-process 9>)
   (:LOWER :HYPHEN :LOWER))
  "lipid-based" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge611 352 to 353> #<edge612 353 "the" 354> #<edge614 354 modifier 355>
    #<edge615 355 site 356> #<edge616 356 "of" 357>)
   (:LOWER :HYPHEN :LOWER :HYPHEN :LOWER))
  "drug-to-lipid" MAKE-HYPHENATED-TRIPLE)
 (((#<edge276 118 open-reading-frame 121> #<edge277 117 open-reading-frame 121>
    #<edge278 121 place 123> #<edge279 126 bio-entity 128> #<edge280 125 bio-entity 128>)
   (:PROTEIN :FORWARD-SLASH :PROTEIN :FORWARD-SLASH :FULL))
  "liposomes/protamine/DNA" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge159 81 movement 82> #<edge160 82 following-adj 83> #<edge161 82 following 83>)
   (:PROTEIN :FORWARD-SLASH :FULL))
  "Liposomes/DNA" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge140 66 "the" 67> #<edge9 214 wild-type 217>) (:LOWER :-LIKE)) "vesicular-like"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge24 415 "eif3" 417> #<edge25 415 protein 417> #<edge26 415 bio-complex 417>)
   (:CAPITALIZED :HYPHEN :LOWER))
  "Lipid-based" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge174 74 ability 77> #<edge175 73 ability 77> #<edge176 70 be 72>) (:LOWER :HYPHEN :LOWER))
  "nano-carriers" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge92 52 COMMA 53> #<edge93 54 digit-sequence 55> #<edge94 54 number 55>)
   (:CAPITALIZED :HYPHEN :LOWER))
  "Non-viral" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge301 87 show 90> #<edge302 85 show 90> #<edge303 90 that 91>) (:LOWER :HYPHEN :LOWER))
  "poxviral-based" MAKE-HYPHENATED-STRUCTURE)
 (((:FULL #<edge297 100 critical 103> #<edge298 98 critical 103>) (:FULL :HYPHEN :PROTEIN))
  "PANVAC-VF" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge261 147 position-bio-process 148> #<edge262 147 position 148> #<edge263 149 figure 150>)
   (:PROTEIN :HYPHEN :FULL))
  "PSA-TRICOM" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge154 77 "to" 78> #<edge155 77 to 78> #<edge156 78 undergo 79> #<edge157 79 only 80>)
   (:HYPHEN :PROTEIN :HYPHEN :FULL))
  "-PSA-TRICOM" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge129 58 be 59> #<edge130 59 believe 60> #<edge131 60 "to" 61>) (:PROTEIN :HYPHEN :FULL))
  "PSA-TRICOM" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge151 74 modal 75> #<edge152 75 be 76> #<edge153 76 ability 77>) (:LOWER :HYPHEN :LOWER))
  "live-attenuated" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge13 285 close-to 287> #<edge14 300 "wild-type" 303> #<edge15 300 wild-type 303>)
   (:LOWER :HYPHEN :LOWER))
  "bacteria-based" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge207 107 figure 108> #<edge208 107 article-figure 108> #<edge209 108 digit-sequence 109>)
   (:CAPITALIZED :FORWARD-SLASH :LOWER))
  "Poxvirus/vaccinia" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge13 285 close-to 287> #<edge159 81 movement 82>) (:PROTEIN :LOWER)) "anti-vector"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge171 79 limit 81> #<edge172 79 movement 82> #<edge174 74 ability 77>)
   (:FULL :HYPHEN :DIGITS))
  "UK-112" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge165 62 mobility 65> :MIXED) (:FORWARD-SLASH :MIXED)) "/pDOM" NIL)
 (((#<edge92 52 COMMA 53> #<edge94 54 number 55>) (:PROTEIN :DIGITS)) "NCT00223899"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge83 40 COMMA 41> #<edge84 42 digit-sequence 43> #<edge85 42 number 43>
    #<edge87 46 digit-sequence 47>)
   (:PROTEIN :HYPHEN :PROTEIN :DIGITS))
  "VCL-IM01" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge191 93 between 94> #<edge192 94 "the" 95> #<edge193 94 the 95>) (:LOWER :HYPHEN :LOWER))
  "electroporation-based" MAKE-HYPHENATED-STRUCTURE)
 (((:MIXED #<edge54 19 stop 20> #<edge55 19 stop-endurant 20>) (:MIXED :HYPHEN :SINGLE-CAP))
  "ChronVac-C" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge304 153 "this" 154> #<edge305 153 this 154> :MIXED) (:PROTEIN :HYPHEN :MIXED))
  "El-porCEA" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge185 89 deictic-location 90> #<edge186 90 "that" 91> #<edge187 90 that 91>)
   (:SINGLE-CAP :FORWARD-SLASH :FULL))
  "I/II" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:CAPITALIZED :TRADE_MARK_SIGN) (:CAPITALIZED :TRADE_MARK_SIGN)) "Vax™"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:CAPITALIZED :TRADE_MARK_SIGN) (:CAPITALIZED :TRADE_MARK_SIGN)) "Vax™"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:CAPITALIZED :TRADE_MARK_SIGN) (:CAPITALIZED :TRADE_MARK_SIGN)) "Vax™"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:MIXED :TRADE_MARK_SIGN) (:MIXED :TRADE_MARK_SIGN)) "DermaVax™" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:FULL #<edge63 24 protein 25> #<edge65 25 and 26>) (:FULL :HYPHEN :DIGITS)) "VGX-3100"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge178 62 mobility 69> #<edge180 85 however 86> #<edge182 87 "we" 88>
    #<edge183 87 pronoun/first/plural 88> #<edge184 88 show 89> #<edge185 89 deictic-location 90>
    #<edge10 274 "such as" 276>)
   (:PROTEIN :SINGLE-DIGIT :SINGLE-LOWER :HYPHEN :PROTEIN :FORWARD-SLASH :PROTEIN))
  "pNGVL4a-CRT/E7" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge170 77 undergo 79> #<edge171 79 limit 81> #<edge172 79 movement 82>)
   (:LOWER :HYPHEN :LOWER))
  "gun-mediated" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge161 82 following 83> #<edge162 83 terminate 84> #<edge163 58 believe 60>)
   (:LOWER :HYPHEN :LOWER))
  "electroporation-mediated" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge519 248 circumstance 250> #<edge521 257 bio-entity 259>) (:PROTEIN :DIGITS)) "tFE67"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge392 209 or 210> #<edge394 211 near 212>) (:PROTEIN :DIGITS)) "tFE67"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge127 57 "this" 58> #<edge15 300 wild-type 303>) (:PROTEIN :-LIKE)) "Fms-like"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge142 67 tethere 68> #<edge143 68 bio-complex 69> #<edge145 70 "that" 71>)
   (:CAPITALIZED :HYPHEN :LOWER))
  "Four-dose" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge366 176 well 178> #<edge367 178 bio-complex 180> #<edge369 180 tethere 183>)
   (:LOWER :HYPHEN :LOWER))
  "prime-boost" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge279 126 bio-entity 128> #<edge281 137 move-something-somewhere 139>
    #<edge282 146 position 148> #<edge283 145 position 148>)
   (:FULL :SINGLE-DIGIT :HYPHEN :LOWER))
  "AH1-specific" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge209 108 digit-sequence 109> #<edge211 110 and 111>) (:FULL :SINGLE-DIGIT)) "AH1"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge64 24 open-reading-frame 25> #<edge65 25 and 26> #<edge66 26 "the" 27>)
   (:PROTEIN :HYPHEN :LOWER))
  "EP-booster" PACKAGE-QUALIFYING-PAIR)
 (((#<edge208 107 article-figure 108> #<edge209 108 digit-sequence 109> #<edge210 108 number 109>)
   (:MIXED :FORWARD-SLASH :LOWER))
  "kV/cm" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge3 139 up-to 141> #<edge64 24 open-reading-frame 25> #<edge5 174 but-rather 176>)
   (:CANCER :FORWARD-SLASH :CANCER))
  "chronic lymphocytic leukemia/small lymphocytic lymphoma" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge117 27 start 29> #<edge119 17 of 21> #<edge121 15 close 16> #<edge122 14 proximity 25>
    #<edge123 15 close 16> #<edge124 13 of 25> #<edge20 376 "wild-type" 379>)
   (:PROTEIN :SINGLE-DIGIT :SINGLE-LOWER :HYPHEN :CAPITALIZED :FORWARD-SLASH :PROTEIN))
  "pNGVL4a-Sig/E7" PACKAGE-SLASHED-SEQUENCE)
 (((:CAPITALIZED #<edge60 22 the 23> #<edge11 274 such-as 276> #<edge61 23 upstream-segment 24>
    #<edge62 23 upstream 24> #<edge14 300 "wild-type" 303>)
   (:CAPITALIZED :FORWARD-SLASH :PROTEIN :LOWER :FORWARD-SLASH :PROTEIN))
  "Sig/E7detox/HSP70" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge108 14 proximity 17> #<edge109 19 bio-entity 21> #<edge110 18 bio-entity 21>)
   (:CAPITALIZED :HYPHEN :LOWER))
  "Non-carrier" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge82 38 number 39> #<edge83 40 COMMA 41> #<edge85 42 number 43>) (:LOWER :HYPHEN :LOWER))
  "low-pressure" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge406 223 digit-sequence 224> #<edge407 223 number 224> #<edge409 226 COMMA 227>)
   (:LOWER :HYPHEN :LOWER))
  "gene-gun" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge343 180 modal 181> #<edge344 181 be 182> #<edge346 187 "the" 188>)
   (:LOWER :HYPHEN :LOWER))
  "gene-gun" MAKE-HYPHENATED-STRUCTURE)
 (((:LOWER #<edge224 120 protein 121>) (:LOWER :DIGITS)) "gpl00" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge199 99 bio-entity 100> #<edge200 100 be 101> #<edge201 101 comparative 102>)
   (:LOWER :HYPHEN :LOWER))
  "gun-mediated" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge12 285 "close to" 287> #<edge13 285 close-to 287> #<edge14 300 "wild-type" 303>)
   (:LOWER :HYPHEN :LOWER))
  "particle-mediated" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge211 110 and 111> #<edge213 111 that 112>) (:SINGLE-CAP :SINGLE-DIGIT)) "L1"
  REIFY-TWO-PART-LABEL)
 (((#<edge178 62 mobility 69> #<edge180 85 however 86>) (:SINGLE-CAP :SINGLE-DIGIT)) "L1"
  REIFY-TWO-PART-LABEL)
 (((#<edge109 19 bio-entity 21> #<edge111 23 open-reading-frame 25>) (:SINGLE-CAP :SINGLE-DIGIT))
  "L1" REIFY-TWO-PART-LABEL)
 (((#<edge61 23 upstream-segment 24> #<edge62 23 upstream 24> #<edge63 24 protein 25>)
   (:LOWER :HYPHEN :LOWER))
  "smallpox-vaccination" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge4 174 "but rather" 176> #<edge5 174 but-rather 176> #<edge6 184 "by virtue of" 187>
    #<edge7 184 by-virtue-of 187> #<edge8 214 "wild-type" 217>)
   (:LOWER :FORWARD-SLASH :CAPITALIZED :HYPHEN :LOWER))
  "peptides/Cell-penetrating" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge3 139 up-to 141> #<edge4 174 "but rather" 176> #<edge5 174 but-rather 176>
    #<edge6 184 "by virtue of" 187> #<edge7 184 by-virtue-of 187> #<edge8 214 "wild-type" 217>)
   (:CAPITALIZED :HYPHEN :FORWARD-SLASH :CAPITALIZED :HYPHEN :LOWER))
  "Micro-/Nano-particles" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge4 174 "but rather" 176> #<edge5 174 but-rather 176> #<edge7 184 by-virtue-of 187>)
   (:LOWER :FORWARD-SLASH :PROTEIN))
  "lipids/liposomes" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge4 174 "but rather" 176> #<edge5 174 but-rather 176> #<edge6 184 "by virtue of" 187>)
   (:CAPITALIZED :HYPHEN :LOWER))
  "Non-biological" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge81 38 digit-sequence 39> #<edge82 38 number 39> #<edge84 42 digit-sequence 43>
    #<edge85 42 number 43>)
   (:PROTEIN :HYPHEN :PROTEIN :COLON))
  "EF-TEM:" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge68 27 start 28> #<edge69 28 bio-entity 29> #<edge70 29 "of" 30>) (:LOWER :HYPHEN :LOWER))
  "pathogen-associated" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge66 26 "the" 27> #<edge67 26 the 27>) (:PROTEIN :COLON)) "PAMPs:" :NO-EDGE)
 (((#<edge179 57 believe 60> #<edge23 393 due-to 395> #<edge180 85 however 86>
    #<edge182 87 "we" 88>)
   (:HYPHEN :PROTEIN :HYPHEN :PROTEIN))
  "-IL-2-PE" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge170 77 undergo 79> #<edge17 314 wild-type 317> #<edge171 79 limit 81>
    #<edge173 82 following 84>)
   (:HYPHEN :PROTEIN :HYPHEN :PROTEIN))
  "-IL-17-PE" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge189 91 the 92> #<edge165 62 mobility 65> #<edge166 67 bio-complex 69>)
   (:PROTEIN :HYPHEN :FULL))
  "anti-CD8-FITC" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge188 91 "the" 92> #<edge162 83 terminate 84> #<edge163 58 believe 60>)
   (:PROTEIN :HYPHEN :MIXED))
  "anti-CD4-PerCP" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge45 14 "the" 15> #<edge46 14 the 15> #<edge47 15 close-bio-process 16>)
   (:LOWER :HYPHEN :LOWER))
  "single-cell" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge65 25 and 26> #<edge66 26 "the" 27> #<edge67 26 the 27> #<edge68 27 start 28>
    #<edge69 28 bio-entity 29>)
   (:SINGLE-CAP :HYPHEN :PROTEIN :HYPHEN :LOWER))
  "I-Ad-biotin" MAKE-HYPHENATED-TRIPLE)
 (((#<edge9 214 wild-type 217> #<edge58 21 of 22> #<edge59 22 "the" 23>) (:PROTEIN :HYPHEN :LOWER))
  "CD86-biotin" PACKAGE-QUALIFYING-PAIR)
 (((#<edge7 184 by-virtue-of 187> #<edge82 38 number 39> #<edge79 34 number 35> :MIXED)
   (:PROTEIN :RESIDUE-ON-PROTEIN :HYPHEN :MIXED))
  "anti-B220-PerCP" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge51 17 of 18> #<edge52 18 "the" 19> #<edge3 139 up-to 141>) (:FULL :HYPHEN :PROTEIN))
  "SARS-S protein" MAKE-HYPHENATED-PAIR)
 (((#<edge71 29 of 30> #<edge72 30 "the" 31> #<edge74 31 downstream-segment 32>)
   (:SINGLE-DIGIT :COLON :SINGLE-DIGIT))
  "1:2" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge62 23 upstream 24> #<edge63 24 protein 25> #<edge65 25 and 26>)
   (:SINGLE-DIGIT :COLON :DIGITS))
  "1:20" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((:LOWER #<edge55 19 stop-endurant 20> #<edge58 21 of 22>) (:LOWER :HYPHEN :LOWER)) "pci-mock"
  :NO-EDGE)
 (((#<edge138 65 "of" 66> #<edge139 65 of 66> #<edge9 214 wild-type 217>)
   (:CAPITALIZED :HYPHEN :BIO-ENTITY))
  "Zeiss-LSM510" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge102 1 study-bio-method 3> :REGISTERED_SIGN) (:MIXED :REGISTERED_SIGN)) "ProLong®"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge69 28 bio-entity 29> #<edge70 29 "of" 30> #<edge71 29 of 30> #<edge72 30 "the" 31>
    #<edge73 30 the 31>)
   (:FULL :FORWARD-SLASH :PROTEIN :HYPHEN :LOWER))
  "PEI/Rhodamine-labeled" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge27 1 sequencer 2> :TRADE_MARK_SIGN) (:CAPITALIZED :TRADE_MARK_SIGN)) "Tracker™"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge26 415 bio-complex 417> :REGISTERED_SIGN) (:PROTEIN :REGISTERED_SIGN)) "IT®"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:FULL #<edge71 29 of 30>) (:FULL :DIGITS)) "ELS8000" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:LOWER #<edge97 37 square-brackets 40> #<edge98 41 square-brackets 44>)
   (:LOWER :HYPHEN :PROTEIN))
  "pci-neo" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge91 50 number 51> #<edge92 52 COMMA 53> #<edge94 54 number 55>)
   (:PROTEIN :HYPHEN :SINGLE-CAP))
  "tPA-S" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge75 31 downstream 32> #<edge482 266 "at" 267>) (:PROTEIN :PLUS-SIGN)) "TNF-α+"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge71 29 of 30> #<edge479 262 amino-acid 263>) (:PROTEIN :PLUS-SIGN)) "IL17+"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge63 24 protein 25> #<edge477 261 digit-sequence 262>) (:PROTEIN :PLUS-SIGN)) "TNF-α+"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge424 239 modifier 240> #<edge425 240 COMMA 241> #<edge426 241 albeit 242>)
   (:LOWER :HYPHEN :PROTEIN))
  "multi-cytokine" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge383 202 modifier 203> #<edge384 203 reinitiation 204> #<edge385 204 require 205>)
   (:LOWER :HYPHEN :PROTEIN))
  "single-cytokine" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge368 181 tethere 183> #<edge369 180 tethere 183> #<edge370 180 tethere 198>)
   (:LOWER :HYPHEN :PROTEIN))
  "multi-cytokine" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge296 101 critical 103> #<edge297 100 critical 103> #<edge298 98 critical 103>)
   (:LOWER :HYPHEN :PROTEIN))
  "multiple-cytokine" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge269 106 parentheses 110> #<edge270 148 parentheses 152> #<edge271 95 bio-complex 97>)
   (:LOWER :HYPHEN :PROTEIN))
  "non-lymphoid" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge97 37 square-brackets 40> #<edge98 41 square-brackets 44>
    #<edge99 45 square-brackets 48>)
   (:LOWER :HYPHEN :LOWER))
  "pathogen-associated" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge69 28 bio-entity 29> #<edge70 29 "of" 30> #<edge72 30 "the" 31>) (:LOWER :HYPHEN :LOWER))
  "first-line" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge250 138 move-something-somewhere 139> #<edge251 138 move-to 139>
    #<edge252 141 digit-sequence 142>)
   (:LOWER :HYPHEN :LOWER))
  "dose-dependently" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge113 31 open-reading-frame 33> #<edge114 30 open-reading-frame 33>
    #<edge115 30 open-reading-frame 36>)
   (:FULL :FORWARD-SLASH :FULL))
  "PEI/DNA" MAKE-HYPHENATED-PAIR)
 (((#<edge20 376 "wild-type" 379> #<edge21 376 wild-type 379> #<edge22 393 "due to" 395>)
   (:FULL :FORWARD-SLASH :FULL))
  "PEI/DNA" MAKE-HYPHENATED-PAIR)
 (((#<edge281 137 move-something-somewhere 139> #<edge282 146 position 148>
    #<edge283 145 position 148>)
   (:CAPITALIZED :HYPHEN :LOWER))
  "Re-stimulation" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge37 8 bio-process 9> #<edge232 125 "the" 126>) (:PROTEIN :PLUS-SIGN)) "IL-17+"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge35 6 HYPHEN 7> #<edge230 124 "of" 125>) (:PROTEIN :PLUS-SIGN)) "IL-2+"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge33 4 the 5> #<edge228 123 downstream-segment 124>) (:PROTEIN :PLUS-SIGN)) "IFN-γ+"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge56 20 bio-entity 21> #<edge43 13 "of" 14>) (:RESIDUE-ON-PROTEIN :PLUS-SIGN)) "B220+"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge332 172 reinitiation 173> #<edge333 173 efficiency 174> #<edge31 3 on 4>)
   (:FULL :FORWARD-SLASH :BIO-ENTITY))
  "PEI/pci-S" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge147 71 be 72> #<edge149 73 "it" 74>) (:PROTEIN :SINGLE-DIGIT)) "IgG2"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge87 46 digit-sequence 47> #<edge88 46 number 47> #<edge89 48 COMMA 49>
    #<edge90 50 digit-sequence 51> #<edge91 50 number 51>)
   (:SINGLE-CAP :HYPHEN :LOWER :HYPHEN :LOWER))
  "S-specific-serum" MAKE-HYPHENATED-TRIPLE)
 (((#<edge77 32 open-reading-frame 33> #<edge78 34 digit-sequence 35> #<edge9 214 wild-type 217>)
   (:FULL :FORWARD-SLASH :BIO-ENTITY))
  "PEI/pci-S" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:LOWER #<edge523 255 bio-entity 259> #<edge525 268 bio-entity 273>)
   (:LOWER :HYPHEN :SINGLE-CAP))
  "pci-S" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge500 282 article-figure 283> #<edge501 283 digit-sequence 284> :LOWER
    #<edge502 283 number 284> #<edge504 287 the 288>)
   (:FULL :FORWARD-SLASH :LOWER :HYPHEN :SINGLE-CAP))
  "PEI/pci-S" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge441 205 bio-entity 207> #<edge442 214 site 218> :LOWER #<edge443 213 site 218>
    #<edge445 227 site 230>)
   (:FULL :FORWARD-SLASH :LOWER :HYPHEN :SINGLE-CAP))
  "PEI/pci-S" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge412 229 site 230> #<edge413 230 modal 231> :LOWER #<edge414 231 be 232>
    #<edge416 233 when 234>)
   (:FULL :FORWARD-SLASH :LOWER :HYPHEN :SINGLE-CAP))
  "PEI/pci-S" PACKAGE-SLASHED-SEQUENCE)
 (((:LOWER #<edge407 223 number 224> #<edge409 226 COMMA 227>) (:LOWER :HYPHEN :SINGLE-CAP))
  "pci-S" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:LOWER #<edge308 155 that 156> #<edge310 156 pronoun/inanimate 157>)
   (:LOWER :HYPHEN :SINGLE-CAP))
  "pci-S" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge297 100 critical 103> #<edge298 98 critical 103> :LOWER #<edge299 93 between 97>
    #<edge301 87 show 90>)
   (:FULL :FORWARD-SLASH :LOWER :HYPHEN :SINGLE-CAP))
  "PEI/pci-S" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge231 124 of 125> #<edge232 125 "the" 126> :LOWER #<edge233 125 the 126>
    #<edge235 126 stop-endurant 127>)
   (:FULL :FORWARD-SLASH :LOWER :HYPHEN :SINGLE-CAP))
  "PEI/pci-S" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge181 86 COMMA 87> #<edge182 87 "we" 88> :LOWER #<edge183 87 pronoun/first/plural 88>
    #<edge185 89 deictic-location 90>)
   (:FULL :FORWARD-SLASH :LOWER :HYPHEN :SINGLE-CAP))
  "PEI/pci-S" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge80 36 COMMA 37> #<edge81 38 digit-sequence 39> #<edge82 38 number 39>)
   (:SINGLE-CAP :FORWARD-SLASH :SINGLE-CAP))
  "N/P" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge70 29 "of" 30> #<edge71 29 of 30> :LOWER #<edge72 30 "the" 31>
    #<edge74 31 downstream-segment 32>)
   (:FULL :FORWARD-SLASH :LOWER :HYPHEN :SINGLE-CAP))
  "PEI/pci-S" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge26 415 bio-complex 417> #<edge27 1 sequencer 2> :LOWER #<edge28 2 study-bio-method 3>
    #<edge30 3 "on" 4>)
   (:FULL :FORWARD-SLASH :LOWER :HYPHEN :SINGLE-CAP))
  "PEI/pci-S" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge29 2 study-data 3> #<edge30 3 "on" 4> #<edge32 4 "the" 5>) (:LOWER :HYPHEN :LOWER))
  "wind-tunnel" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge692 380 downstream-segment 381> #<edge693 380 downstream 381>
    #<edge694 381 reinitiation 382>)
   (:LOWER :HYPHEN :LOWER))
  "breathing-only" MAKE-HYPHENATED-STRUCTURE)
 (((:TILDA #<edge604 347 to 348>) (:TILDA :PERCENT)) "∼0.8%" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:TILDA #<edge603 347 "to" 348>) (:TILDA :PERCENT)) "∼99.2%" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:TILDA #<edge326 168 "per" 169>) (:TILDA :PERCENT)) "∼96%" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:TILDA #<edge274 98 bio-entity 100>) (:TILDA :DIGITS)) "∼96" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:MULTIPLICATION-SIGN #<edge231 124 of 125>) (:MULTIPLICATION-SIGN :DIGITS)) "×12"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge225 120 open-reading-frame 121> #<edge226 121 be 122>
    #<edge228 123 downstream-segment 124>)
   (:LOWER :FORWARD-SLASH :DIGITS))
  "hr/60" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:MULTIPLICATION-SIGN #<edge224 120 protein 121>) (:MULTIPLICATION-SIGN :SINGLE-DIGIT)) "×1"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge220 116 "of" 117> #<edge221 116 of 117> #<edge222 117 "the" 118>)
   (:LOWER :FORWARD-SLASH :LOWER))
  "coughs/hr" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge46 14 the 15> :MULTIPLICATION-SIGN #<edge49 16 proximity 17> #<edge50 17 "of" 18>)
   (:DIGITS :MULTIPLICATION-SIGN :HYPHENATED-NUMBER :LOWER))
  "5.27×10−5ml" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge3 139 up-to 141> #<edge41 11 the 12>) (:BIO-ENTITY :LOWER)) "2.04×10−7ml"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge1 118 protein 120> #<edge39 10 suggest 11>) (:BIO-ENTITY :LOWER)) "1.247×10−8ml"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge667 361 pronoun/first/plural 362> :MULTIPLICATION-SIGN #<edge669 363 "that" 364>)
   (:DIGITS :MULTIPLICATION-SIGN :DIGITS))
  "8.645×105" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge571 324 terminate 325> :MULTIPLICATION-SIGN #<edge574 326 "of" 327>
    #<edge575 326 of 327>)
   (:DIGITS :MULTIPLICATION-SIGN :HYPHENATED-NUMBER :LOWER))
  "5.27×10−5ml" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge494 278 digit-sequence 279> #<edge495 278 number 279> #<edge498 281 COMMA 282>)
   (:DIGITS :FORWARD-SLASH :DIGITS))
  "864,500/3,345" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge257 144 "of" 145> :MULTIPLICATION-SIGN #<edge259 145 pronoun/inanimate 146>)
   (:DIGITS :MULTIPLICATION-SIGN :DIGITS))
  "1.6×103" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge235 126 stop-endurant 127> #<edge236 127 bio-entity 128> #<edge238 129 reinitiation 130>)
   (:LOWER :HYPHEN :LOWER))
  "per-cough" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge176 70 be 72> :MULTIPLICATION-SIGN #<edge178 62 mobility 69>)
   (:DIGITS :MULTIPLICATION-SIGN :DIGITS))
  "97×103" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge170 77 undergo 79> :MULTIPLICATION-SIGN #<edge172 79 movement 82>)
   (:DIGITS :MULTIPLICATION-SIGN :DIGITS))
  "280×103" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge165 62 mobility 65> :MULTIPLICATION-SIGN #<edge167 67 lambda-expression 68>)
   (:DIGITS :MULTIPLICATION-SIGN :DIGITS))
  "350×103" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge160 82 following-adj 83> :MULTIPLICATION-SIGN #<edge162 83 terminate 84>)
   (:DIGITS :MULTIPLICATION-SIGN :DIGITS))
  "160×103" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge155 77 to 78> :MULTIPLICATION-SIGN #<edge157 79 only 80>)
   (:DIGITS :MULTIPLICATION-SIGN :DIGITS))
  "26×103" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge144 69 semicolon 70> #<edge145 70 "that" 71> #<edge146 70 that 71>)
   (:LOWER :HYPHEN :LOWER))
  "per-sneeze" MAKE-HYPHENATED-STRUCTURE)
 (((:TILDA #<edge85 42 number 43>) (:TILDA :DIGITS)) "∼250" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:TILDA #<edge1 118 protein 120> #<edge79 34 number 35>) (:TILDA :BIO-ENTITY :DIGITS)) "∼5×103"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:TILDA #<edge74 31 downstream-segment 32>) (:TILDA :DIGITS)) "∼106"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:LOWER #<edge66 26 "the" 27> #<edge67 26 the 27>) (:LOWER :HYPHEN :LOWER)) "droplet-nuclei"
  :NO-EDGE)
 (((#<edge178 62 mobility 69> :MULTIPLICATION-SIGN #<edge181 86 COMMA 87>)
   (:DIGITS :MULTIPLICATION-SIGN :HYPHENATED-NUMBER))
  "1.88×10-7" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge111 23 open-reading-frame 25> :MULTIPLICATION-SIGN #<edge114 30 open-reading-frame 33>)
   (:SINGLE-DIGIT :MULTIPLICATION-SIGN :HYPHENATED-NUMBER))
  "6×10-8" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge51 17 of 18> :MULTIPLICATION-SIGN #<edge54 19 stop 20>)
   (:DIGITS :MULTIPLICATION-SIGN :HYPHENATED-NUMBER))
  "2.04×10-7" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge28 2 study-bio-method 3> :MULTIPLICATION-SIGN #<edge31 3 on 4>)
   (:DIGITS :MULTIPLICATION-SIGN :HYPHENATED-NUMBER))
  "1.247×10-8" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge424 239 modifier 240> #<edge425 240 COMMA 241> #<edge427 242 "at" 243>)
   (:LOWER :HYPHEN :LOWER))
  "per-cough" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge305 153 this 154> #<edge306 154 suggest 155> #<edge308 155 that 156>)
   (:LOWER :HYPHEN :LOWER))
  "per-cough" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge240 131 detect 132> #<edge241 132 even 133> #<edge242 132 even 133>
    #<edge269 106 parentheses 110>)
   (:SINGLE-LOWER :HYPHEN :SINGLE-LOWER :UNIT-OF-MEASURE))
  "b-n-m" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge202 102 critical 103> #<edge203 103 "to" 104> #<edge204 103 to 104>
    #<edge217 113 the 114>)
   (:SINGLE-LOWER :HYPHEN :SINGLE-LOWER :UNIT-OF-MEASURE))
  "b-n-m" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge183 87 pronoun/first/plural 88> #<edge184 88 show 89> #<edge3 139 up-to 141>)
   (:SINGLE-LOWER :HYPHEN :MOLECULE))
  "b-n-n" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge73 30 the 31> #<edge74 31 downstream-segment 32> #<edge75 31 downstream 32>)
   (:LOWER :HYPHEN :LOWER))
  "humidity-controlled" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge169 74 be 76> #<edge170 77 undergo 79> #<edge172 79 movement 82>)
   (:LOWER :FORWARD-SLASH :SINGLE-LOWER))
  "kg/s" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge53 18 the 19> #<edge54 19 stop 20> #<edge55 19 stop-endurant 20>)
   (:SINGLE-LOWER :HYPHEN :SINGLE-LOWER))
  "κ-ε" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge49 16 proximity 17> #<edge50 17 "of" 18> #<edge51 17 of 18>) (:LOWER :HYPHEN :LOWER))
  "energy-dissipation" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge1 118 protein 120> #<edge5 174 but-rather 176> #<edge7 184 by-virtue-of 187>)
   (:MOLECULE :FORWARD-SLASH :SINGLE-LOWER))
  "m2/s" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge16 314 "wild-type" 317> #<edge17 314 wild-type 317> #<edge1 118 protein 120>)
   (:LOWER :FORWARD-SLASH :PROTEIN))
  "kg/m3" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge2 139 "up to" 141> #<edge3 139 up-to 141> #<edge5 174 but-rather 176>)
   (:SINGLE-LOWER :FORWARD-SLASH :SINGLE-LOWER))
  "m/s" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge71 29 of 30> #<edge72 30 "the" 31> #<edge73 30 the 31>) (:LOWER :HYPHEN :LOWER))
  "representative-sized" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge524 271 bio-entity 273> #<edge525 268 bio-entity 273> #<edge526 267 bio-entity 273>)
   (:LOWER :HYPHEN :LOWER))
  "well-targeted" MAKE-HYPHENATED-STRUCTURE)
 (((:CLOSE-ANGLE-BRACKET #<edge271 95 bio-complex 97>) (:CLOSE-ANGLE-BRACKET :DIGITS)) ">five"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge136 63 restrict 64> #<edge137 64 mobility 65> #<edge138 65 "of" 66>)
   (:LOWER :HYPHEN :LOWER))
  "wide-body" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge122 14 proximity 25> #<edge123 15 close 16> #<edge125 9 suggest 13>)
   (:LOWER :HYPHEN :LOWER))
  "far-field" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge180 85 however 86> #<edge181 86 COMMA 87> #<edge182 87 "we" 88>) (:LOWER :HYPHEN :LOWER))
  "breathing-only" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge168 66 bio-complex 69> #<edge169 74 be 76> #<edge170 77 undergo 79>
    #<edge171 79 limit 81> #<edge172 79 movement 82>)
   (:LOWER :HYPHEN :LOWER :HYPHEN :LOWER))
  "breathing-and-sneezing" MAKE-HYPHENATED-TRIPLE)
 (((#<edge50 17 "of" 18> #<edge51 17 of 18> #<edge52 18 "the" 19>) (:LOWER :HYPHEN :LOWER))
  "breathing-only" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge43 13 "of" 14> #<edge44 13 of 14> #<edge45 14 "the" 15> #<edge46 14 the 15>
    #<edge47 15 close-bio-process 16>)
   (:LOWER :HYPHEN :LOWER :HYPHEN :LOWER))
  "breathing-and-coughing" MAKE-HYPHENATED-TRIPLE)
 (((#<edge22 393 "due to" 395> #<edge23 393 due-to 395> #<edge24 415 "eif3" 417>
    #<edge25 415 protein 417> #<edge26 415 bio-complex 417>)
   (:LOWER :HYPHEN :LOWER :HYPHEN :LOWER))
  "breathing-and-sneezing" MAKE-HYPHENATED-TRIPLE)
 (((#<edge207 107 figure 108> :MULTIPLICATION-SIGN #<edge210 108 number 109>)
   (:DIGITS :MULTIPLICATION-SIGN :HYPHENATED-NUMBER))
  "8.1×10-6" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge94 54 number 55> #<edge95 5 hyphenated-pair 8> #<edge97 37 square-brackets 40>)
   (:LOWER :HYPHEN :LOWER))
  "coagulase-negative" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge79 34 number 35> #<edge80 36 COMMA 37> #<edge81 38 digit-sequence 39>)
   (:LOWER :HYPHEN :LOWER))
  "colony-forming" MAKE-HYPHENATED-STRUCTURE)
 (((:OPEN-ANGLE-BRACKET #<edge425 240 COMMA 241>) (:OPEN-ANGLE-BRACKET :PERCENT)) "<10%"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge394 211 near 212> #<edge395 212 COMMA 213>) (:LOWER :COLON)) "rates:" :NO-EDGE)
 (((#<edge442 214 site 218> #<edge443 213 site 218> #<edge444 228 site 230>)
   (:LOWER :HYPHEN :LOWER))
  "wide-body" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge311 157 be 158> #<edge312 158 not 159> #<edge313 159 solely 160>)
   (:SINGLE-LOWER :HYPHEN :LOWER))
  "y-axis" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge272 95 lambda-expression 96> #<edge273 94 bio-complex 97> #<edge274 98 bio-entity 100>
    #<edge275 104 efficiency 106> #<edge277 117 open-reading-frame 121>)
   (:LOWER :HYPHEN :LOWER :HYPHEN :LOWER))
  "non-window-seat" MAKE-HYPHENATED-TRIPLE)
 (((#<edge115 30 open-reading-frame 36> #<edge116 29 of 36> #<edge117 27 start 29>)
   (:LOWER :HYPHEN :LOWER))
  "ceiling-mounted" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge304 153 "this" 154> #<edge305 153 this 154> #<edge307 155 "that" 156>)
   (:DIGITS :HYPHEN :LOWER))
  "four-row" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge438 219 figure 225> #<edge439 218 parentheses 226> #<edge440 202 reinitiation 204>)
   (:LOWER :HYPHEN :LOWER))
  "particle-generation" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge435 223 point-mutation 225> #<edge436 220 point-mutation 222>
    #<edge437 220 point-mutation 225>)
   (:LOWER :HYPHEN :LOWER))
  "per-passenger" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge345 182 tethere 183> :MULTIPLICATION-SIGN #<edge348 188 distance 189>)
   (:DIGITS :MULTIPLICATION-SIGN :HYPHENATED-NUMBER))
  "4.15×10−12" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge337 177 well-adverbial 178> :MULTIPLICATION-SIGN #<edge340 178 "the" 179>)
   (:DIGITS :MULTIPLICATION-SIGN :HYPHENATED-NUMBER))
  "7.04×10−12" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge330 170 that 171> :MULTIPLICATION-SIGN #<edge333 173 efficiency 174>)
   (:DIGITS :MULTIPLICATION-SIGN :HYPHENATED-NUMBER))
  "4.67×10−12" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge313 159 solely 160> #<edge314 160 "the" 161> #<edge315 160 the 161>)
   (:LOWER :HYPHEN :LOWER))
  "particle-generation" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge310 156 pronoun/inanimate 157> #<edge311 157 be 158> #<edge312 158 not 159>)
   (:LOWER :HYPHEN :LOWER))
  "per-passenger" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge180 85 however 86> :MULTIPLICATION-SIGN #<edge183 87 pronoun/first/plural 88>
    #<edge184 88 show 89>)
   (:DIGITS :MULTIPLICATION-SIGN :HYPHENATED-NUMBER :LOWER))
  "1.24×10−8ml" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:TILDA #<edge166 67 bio-complex 69> :MULTIPLICATION-SIGN #<edge169 74 be 76>
    #<edge170 77 undergo 79>)
   (:TILDA :DIGITS :MULTIPLICATION-SIGN :HYPHENATED-NUMBER :LOWER))
  "∼5.27×10−5ml" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:TILDA #<edge154 77 "to" 78> :MULTIPLICATION-SIGN #<edge157 79 only 80> #<edge158 80 limit 81>)
   (:TILDA :DIGITS :MULTIPLICATION-SIGN :HYPHENATED-NUMBER :LOWER))
  "∼2.04×10−7ml" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge297 100 critical 103> #<edge298 98 critical 103> #<edge299 93 between 97>)
   (:LOWER :HYPHEN :LOWER))
  "colony-forming" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge272 95 lambda-expression 96> #<edge273 94 bio-complex 97> #<edge274 98 bio-entity 100>)
   (:PROTEIN :HYPHEN :LOWER))
  "antibody-based" PACKAGE-QUALIFYING-PAIR)
 (((#<edge228 123 downstream-segment 124> #<edge229 123 downstream 124> #<edge230 124 "of" 125>)
   (:LOWER :HYPHEN :FULL))
  "non-PCR" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge210 108 number 109> #<edge211 110 and 111> #<edge213 111 that 112>
    #<edge214 112 when 113> #<edge216 113 "the" 114>)
   (:LOWER :HYPHEN :LOWER :HYPHEN :LOWER))
  "time-to-answer" MAKE-HYPHENATED-TRIPLE)
 (((#<edge198 98 the 99> #<edge199 99 bio-entity 100> #<edge200 100 be 101>)
   (:PROTEIN :HYPHEN :LOWER))
  "antibody-based" PACKAGE-QUALIFYING-PAIR)
 (((#<edge141 66 the 67> #<edge142 67 tethere 68> #<edge144 69 semicolon 70>
    #<edge145 70 "that" 71> #<edge147 71 be 72>)
   (:LOWER :HYPHEN :LOWER :HYPHEN :LOWER))
  "time-to-answer" MAKE-HYPHENATED-TRIPLE)
 (((#<edge108 14 proximity 17> #<edge109 19 bio-entity 21> #<edge111 23 open-reading-frame 25>)
   (:PROTEIN :HYPHEN :LOWER))
  "polymerase-chain" PACKAGE-QUALIFYING-PAIR)
 (((#<edge105 9 suggest 11> #<edge106 11 importance 13> #<edge107 15 proximity 17>)
   (:LOWER :HYPHEN :LOWER))
  "acid-based" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge159 81 movement 82> :MULTIPLICATION-SIGN #<edge162 83 terminate 84>)
   (:DIGITS :MULTIPLICATION-SIGN :HYPHENATED-NUMBER))
  "5.9×10−5" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge139 65 of 66> :MULTIPLICATION-SIGN #<edge142 67 tethere 68>)
   (:DIGITS :MULTIPLICATION-SIGN :HYPHENATED-NUMBER))
  "4.7×10−4" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge83 40 COMMA 41> #<edge84 42 digit-sequence 43> #<edge86 44 COMMA 45>)
   (:DIGITS :HYPHEN :LOWER))
  "four-row" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge440 202 reinitiation 204> :MULTIPLICATION-SIGN #<edge442 214 site 218>)
   (:DIGITS :MULTIPLICATION-SIGN :DIGITS))
  "1.7×105" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge431 243 lower 244> :MULTIPLICATION-SIGN #<edge433 244 efficiency 245>)
   (:DIGITS :MULTIPLICATION-SIGN :DIGITS))
  "1.0×105" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge5 174 but-rather 176> #<edge417 233 when 234>) (:BIO-ENTITY :DIGITS)) "8×103"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge409 226 COMMA 227> :MULTIPLICATION-SIGN #<edge411 228 reinitiation 229>)
   (:DIGITS :MULTIPLICATION-SIGN :DIGITS))
  "1.0×107" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge388 206 bio-entity 207> :MULTIPLICATION-SIGN #<edge390 207 at 208>)
   (:SINGLE-DIGIT :MULTIPLICATION-SIGN :DIGITS))
  "6×106" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge328 169 bio-entity 170> :MULTIPLICATION-SIGN #<edge331 171 affect 172>)
   (:DIGITS :MULTIPLICATION-SIGN :HYPHENATED-NUMBER))
  "3.07×10−9" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge319 163 the 164> :MULTIPLICATION-SIGN #<edge322 166 stop 167>)
   (:DIGITS :MULTIPLICATION-SIGN :HYPHENATED-NUMBER))
  "5.12×10−9" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge311 157 be 158> :MULTIPLICATION-SIGN #<edge314 160 "the" 161>)
   (:DIGITS :MULTIPLICATION-SIGN :HYPHENATED-NUMBER))
  "3.43×10−9" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge45 14 "the" 15> #<edge46 14 the 15> #<edge47 15 close-bio-process 16>)
   (:LOWER :HYPHEN :LOWER))
  "well-mixed" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge15 300 wild-type 303> #<edge16 314 "wild-type" 317> #<edge17 314 wild-type 317>)
   (:LOWER :HYPHEN :LOWER))
  "bio-detection" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge116 29 of 36> #<edge117 27 start 29> #<edge118 21 of 25> #<edge119 17 of 21>
    #<edge120 14 proximity 21>)
   (:LOWER :HYPHEN :LOWER :HYPHEN :LOWER))
  "breathing-and-coughing" MAKE-HYPHENATED-TRIPLE)
 (((#<edge30 3 "on" 4> #<edge31 3 on 4> #<edge33 4 the 5> #<edge34 5 terminate 6>
    #<edge36 7 reinitiation 8>)
   (:LOWER :HYPHEN :LOWER :HYPHEN :LOWER))
  "second-to-last" MAKE-HYPHENATED-TRIPLE)
 (((#<edge157 79 only 80> #<edge159 81 movement 82>) (:SINGLE-CAP :SINGLE-DIGIT)) "S1"
  REIFY-TWO-PART-LABEL)
 (((#<edge406 223 digit-sequence 224> #<edge407 223 number 224> #<edge408 224 amino-acid 225>)
   (:LOWER :HYPHEN :LOWER))
  "wide-body" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge9 214 wild-type 217> #<edge353 192 bio-complex 193> #<edge355 194 and 195>)
   (:PROTEIN :FORWARD-SLASH :SINGLE-LOWER))
  "m3/s" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge304 153 "this" 154> #<edge305 153 this 154> #<edge306 154 suggest 155>)
   (:LOWER :HYPHEN :LOWER))
  "wide-body" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge234 126 stop 127> #<edge235 126 stop-endurant 127> #<edge236 127 bio-entity 128>)
   (:SINGLE-LOWER :HYPHEN :SINGLE-LOWER))
  "κ–ε" MAKE-HYPHENATED-STRUCTURE)
 (((:CAPITALIZED #<edge221 116 of 117> #<edge222 117 "the" 118>)
   (:CAPITALIZED :HYPHEN :CAPITALIZED))
  "Navier-Stokes" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge207 107 figure 108> #<edge208 107 article-figure 108> #<edge209 108 digit-sequence 109>
    #<edge210 108 number 109> #<edge211 110 and 111> #<edge212 111 "that" 112> :LOWER)
   (:LOWER :HYPHEN :LOWER :HYPHEN :LOWER :HYPHEN :LOWER))
  "di-ethyl-hexyl-sebacat" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:TILDA #<edge192 94 "the" 95>) (:TILDA :DIGITS)) "∼1368" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:TILDA #<edge183 87 pronoun/first/plural 88>) (:TILDA :DIGITS)) "∼2504"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:TILDA #<edge132 60 to 61>) (:TILDA :DIGITS)) "∼13.5" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:TILDA #<edge127 57 "this" 58>) (:TILDA :DIGITS)) "∼1.5" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:OPEN-ANGLE-BRACKET #<edge119 17 of 21>) (:OPEN-ANGLE-BRACKET :SINGLE-DIGIT)) "<1"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:OPEN-ANGLE-BRACKET #<edge107 15 proximity 17>) (:OPEN-ANGLE-BRACKET :SINGLE-DIGIT)) "<3"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge88 46 number 47> :OPEN-ANGLE-BRACKET #<edge91 50 number 51>)
   (:FULL :OPEN-ANGLE-BRACKET :HYPHENATED-NUMBER))
  "PFA<10−6" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:FULL :CLOSE-ANGLE-BRACKET #<edge76 32 protein 33>) (:FULL :CLOSE-ANGLE-BRACKET :DIGITS))
  "PD>0.9" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:DOLLAR-SIGN #<edge132 60 to 61>) (:DOLLAR-SIGN :DIGITS)) "$11 billion"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge7 184 by-virtue-of 187> #<edge36 7 reinitiation 8>) (:BIO-ENTITY :DIGITS)) "1×104"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge65 25 and 26> :MULTIPLICATION-SIGN #<edge67 26 the 27>)
   (:SINGLE-DIGIT :MULTIPLICATION-SIGN :DIGITS))
  "2×104" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge3 139 up-to 141> #<edge62 23 upstream 24>) (:BIO-ENTITY :DIGITS)) "4×104"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge33 4 the 5> #<edge34 5 terminate 6> #<edge35 6 HYPHEN 7>) (:LOWER :HYPHEN :LOWER))
  "in-vitro" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge149 73 "it" 74> :MULTIPLICATION-SIGN #<edge151 74 modal 75>)
   (:SINGLE-DIGIT :MULTIPLICATION-SIGN :DIGITS))
  "6×105" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge87 46 digit-sequence 47> #<edge88 46 number 47> #<edge89 48 COMMA 49>)
   (:PROTEIN :HYPHEN :MIXED))
  "Tris-HCl" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge58 21 of 22> #<edge59 22 "the" 23> #<edge60 22 the 23>) (:PROTEIN :HYPHEN :MIXED))
  "Tris-HCl" MAKE-HYPHENATED-STRUCTURE)
 (((:CAPITALIZED #<edge107 15 proximity 17> #<edge108 14 proximity 17> #<edge109 19 bio-entity 21>)
   (:CAPITALIZED :SINGLE-DIGIT :HYPHEN :LOWER))
  "Cy2-conjugated" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge101 53 square-brackets 56> #<edge102 1 study-bio-method 3> #<edge104 4 bio-process 9>)
   (:SINGLE-DIGIT :COLON :DIGITS))
  "1∶100" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge7 184 by-virtue-of 187> #<edge84 42 digit-sequence 43> #<edge86 44 COMMA 45>)
   (:PROTEIN :HYPHEN :DIGITS))
  "C7-50" MAKE-HYPHENATED-PAIR)
 (((#<edge78 34 digit-sequence 35> #<edge79 34 number 35> #<edge81 38 digit-sequence 39>)
   (:SINGLE-DIGIT :COLON :DIGITS))
  "1∶300" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge251 138 move-to 139> #<edge252 141 digit-sequence 142> #<edge254 142 bio-entity 143>)
   (:SINGLE-DIGIT :COLON :DIGITS))
  "1∶500" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge221 116 of 117> #<edge222 117 "the" 118> #<edge224 120 protein 121>)
   (:SINGLE-DIGIT :COLON :DIGITS))
  "1∶200" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge13 285 close-to 287> #<edge158 80 limit 81> #<edge176 70 be 72>)
   (:EXPERIMENTAL-CONDITION :FORWARD-SLASH :PERCENT))
  "fetal calf serum/10%" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge62 23 upstream 24> #<edge63 24 protein 25> #<edge66 26 "the" 27>)
   (:LOWER :HYPHEN :LOWER))
  "well-plate" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge48 15 close 16> #<edge49 16 proximity 17> #<edge51 17 of 18>) (:LOWER :HYPHEN :LOWER))
  "cover-slips" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge299 93 between 97> #<edge300 88 show 90> #<edge302 85 show 90>)
   (:SINGLE-DIGIT :COLON :SINGLE-DIGIT))
  "1∶4" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge292 123 downstream 128> #<edge293 116 of 121> #<edge295 103 to 110>)
   (:SINGLE-DIGIT :COLON :SINGLE-DIGIT))
  "1∶3" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge273 94 bio-complex 97> #<edge274 98 bio-entity 100>
    #<edge276 118 open-reading-frame 121>)
   (:SINGLE-DIGIT :HYPHEN :LOWER))
  "3-to" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge264 149 article-figure 150> #<edge265 150 digit-sequence 151>
    #<edge16 314 "wild-type" 317>)
   (:DIGITS :HYPHEN :PROTEIN))
  "25-cm2" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge9 214 wild-type 217> #<edge222 117 "the" 118>) (:BIO-ENTITY :DIGITS)) "5×106"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge67 26 the 27> #<edge69 28 bio-entity 29>) (:SINGLE-DIGIT :SINGLE-LOWER)) "1a"
  REIFY-TWO-PART-LABEL)
 (((#<edge49 16 proximity 17> #<edge50 17 "of" 18> #<edge52 18 "the" 19>)
   (:PROTEIN :HYPHEN :SINGLE-DIGIT))
  "JFH-1" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge41 11 the 12> #<edge42 12 importance 13> #<edge1 118 protein 120>)
   (:LOWER :HYPHEN :PROTEIN))
  "core-NS2" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge180 85 however 86> #<edge181 86 COMMA 87> #<edge182 87 "we" 88>)
   (:PROTEIN :HYPHEN :CAPITALIZED))
  "Santa-Cruz" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge162 83 terminate 84> #<edge163 58 believe 60> #<edge164 60 reflect 62>)
   (:PROTEIN :FORWARD-SLASH :LOWER))
  "SDS/polyacrylamide" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge23 393 due-to 395> #<edge24 415 "eif3" 417> #<edge26 415 bio-complex 417>)
   (:LOWER :HYPHEN :LOWER))
  "post-transfection" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge48 15 close 16> #<edge50 17 "of" 18>) (:SINGLE-DIGIT :SINGLE-LOWER)) "2a"
  REIFY-TWO-PART-LABEL)
 (((#<edge42 12 importance 13> #<edge43 13 "of" 14> #<edge44 13 of 14> #<edge45 14 "the" 15>
    #<edge46 14 the 15>)
   (:PROTEIN :HYPHEN :PROTEIN :HYPHEN :LOWER))
  "MBP-EGFP-full" MAKE-HYPHENATED-TRIPLE)
 (((#<edge37 8 bio-process 9> #<edge39 10 suggest 11>) (:SINGLE-DIGIT :SINGLE-LOWER)) "1b"
  REIFY-TWO-PART-LABEL)
 (((#<edge31 3 on 4> #<edge32 4 "the" 5> #<edge33 4 the 5> #<edge34 5 terminate 6>
    #<edge35 6 HYPHEN 7>)
   (:PROTEIN :HYPHEN :PROTEIN :HYPHEN :LOWER))
  "MBP-EGFP-full" MAKE-HYPHENATED-TRIPLE)
 (((#<edge64 24 open-reading-frame 25> :MULTIPLICATION-SIGN #<edge66 26 "the" 27>)
   (:DIGITS :MULTIPLICATION-SIGN :DIGITS))
  "1.5×106" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge22 393 "due to" 395> #<edge23 393 due-to 395> #<edge24 415 "eif3" 417>)
   (:LOWER :HYPHEN :LOWER))
  "calcium-phosphate" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge558 309 "the" 310> #<edge564 313 the 314>) (:PLUS-SIGN :MEASUREMENT)) "+5mM"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge531 255 bio-entity 264> #<edge532 285 close-to 291>) (:DIGITS :SINGLE-LOWER)) "70g"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge508 261 point-mutation 263> #<edge509 268 hyphenated-pair 271> #<edge510 277 number 279>)
   (:CAPITALIZED :HYPHEN :FULL))
  "Ni-NTA" MAKE-HYPHENATED-PAIR)
 (((#<edge467 254 "at" 255> #<edge468 254 at 255> #<edge469 255 "a" 256>)
   (:PROTEIN :HYPHEN :MIXED))
  "Tris-HCl" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge446 231 bio-use 233> #<edge447 230 bio-use 233> #<edge448 236 bio-entity 238>)
   (:CAPITALIZED :HYPHEN :FULL))
  "Ni-NTA" MAKE-HYPHENATED-PAIR)
 (((#<edge432 243 lower-note 244> #<edge433 244 efficiency 245>
    #<edge434 199 subordinate-conjunction 201>)
   (:LOWER :HYPHEN :LOWER))
  "over-night" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge389 207 "at" 208> #<edge390 207 at 208> #<edge391 208 COMMA 209>)
   (:PROTEIN :HYPHEN :MIXED))
  "Tris-HCl" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge343 180 modal 181> #<edge344 181 be 182>) (:DIGITS :SINGLE-LOWER)) "8000g"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge276 118 open-reading-frame 121> #<edge277 117 open-reading-frame 121>)
   (:DIGITS :SINGLE-LOWER))
  "6000g" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge214 112 when 113> #<edge215 112 when 113> #<edge216 113 "the" 114>)
   (:PROTEIN :HYPHEN :MIXED))
  "Tris-HCl" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge152 75 be 76> #<edge153 76 ability 77>) (:DIGITS :SINGLE-LOWER)) "5000g"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge10 274 "such as" 276> #<edge55 19 stop-endurant 20>) (:INITIAL :SINGLE-CAP)) "O.D"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge118 21 of 25> #<edge120 14 proximity 21>) (:SINGLE-DIGIT :SINGLE-LOWER)) "2a"
  REIFY-TWO-PART-LABEL)
 (((#<edge110 18 bio-entity 21> #<edge111 23 open-reading-frame 25>
    #<edge112 22 open-reading-frame 25> #<edge113 31 open-reading-frame 33>
    #<edge114 30 open-reading-frame 33> #<edge115 30 open-reading-frame 36> #<edge116 29 of 36>)
   (:MIXED :FORWARD-SLASH :PROTEIN :HYPHEN :PROTEIN :HYPHEN :LOWER))
  "pCMV/MBP-EGFP-full" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge52 18 "the" 19> #<edge53 18 the 19> :LOWER #<edge55 19 stop-endurant 20>
    #<edge57 21 "of" 22>)
   (:DIGITS :HYPHEN :LOWER :SINGLE-DIGIT :SINGLE-LOWER))
  "39-subful2a" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:LOWER #<edge47 15 close-bio-process 16> #<edge49 16 proximity 17>)
   (:LOWER :SINGLE-DIGIT :SINGLE-LOWER))
  "subful2a" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge29 2 study-data 3> #<edge30 3 "on" 4> :LOWER #<edge32 4 "the" 5> #<edge34 5 terminate 6>)
   (:DIGITS :HYPHEN :LOWER :SINGLE-DIGIT :SINGLE-LOWER))
  "37-subful2a" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge117 27 start 29> #<edge119 17 of 21>) (:SINGLE-DIGIT :SINGLE-LOWER)) "1b"
  REIFY-TWO-PART-LABEL)
 (((#<edge109 19 bio-entity 21> #<edge110 18 bio-entity 21> #<edge111 23 open-reading-frame 25>
    #<edge112 22 open-reading-frame 25> #<edge113 31 open-reading-frame 33>
    #<edge114 30 open-reading-frame 33> #<edge115 30 open-reading-frame 36>)
   (:MIXED :FORWARD-SLASH :PROTEIN :HYPHEN :PROTEIN :HYPHEN :LOWER))
  "pCMV/MBP-EGFP-full" PACKAGE-SLASHED-SEQUENCE)
 (((:LOWER #<edge51 17 of 18> #<edge52 18 "the" 19>) (:LOWER :SINGLE-DIGIT :SINGLE-LOWER))
  "subful1b" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:LOWER #<edge44 13 of 14> #<edge45 14 "the" 15>) (:LOWER :SINGLE-DIGIT :SINGLE-LOWER))
  "subful1b" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge27 1 sequencer 2> #<edge28 2 study-bio-method 3> :LOWER #<edge30 3 "on" 4>
    #<edge31 3 on 4>)
   (:DIGITS :HYPHEN :LOWER :SINGLE-DIGIT :SINGLE-LOWER))
  "34-subful1b" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge61 23 upstream-segment 24> #<edge62 23 upstream 24> #<edge3 139 up-to 141>)
   (:MIXED :FORWARD-SLASH :BIO-ENTITY))
  "pCMV/MBP-EGFP-NS5AB-CBD" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge46 14 the 15> #<edge47 15 close-bio-process 16> #<edge63 24 protein 25>
    #<edge52 18 "the" 19> #<edge53 18 the 19> :CAPITALIZED #<edge54 19 stop 20>
    #<edge55 19 stop-endurant 20>)
   (:MIXED :FORWARD-SLASH :RESIDUE-ON-PROTEIN :PROTEIN :FORWARD-SLASH :CAPITALIZED :HYPHEN
    :PROTEIN))
  "pCMV/H6myc/Cyto-MBP" PACKAGE-SLASHED-SEQUENCE)
 (((:MIXED #<edge21 376 wild-type 379> #<edge23 393 due-to 395>) (:MIXED :HYPHEN :DIGITS)) "pYB-44"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge6 184 "by virtue of" 187> #<edge7 184 by-virtue-of 187> #<edge1 118 protein 120>
    #<edge8 214 "wild-type" 217> #<edge9 214 wild-type 217>)
   (:PROTEIN :HYPHEN :BIO-ENTITY :HYPHEN :FULL))
  "EGFP-NS5A/B-CBD" MAKE-HYPHENATED-TRIPLE)
 (((#<edge157 79 only 80> #<edge158 80 limit 81> #<edge160 82 following-adj 83>)
   (:LOWER :HYPHEN :LOWER))
  "linker-stalk" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge152 75 be 76> #<edge154 77 "to" 78>) (:SINGLE-DIGIT :SINGLE-LOWER)) "2a"
  REIFY-TWO-PART-LABEL)
 (((#<edge74 31 downstream-segment 32> #<edge76 32 protein 33> #<edge77 32 open-reading-frame 33>)
   (:PROTEIN :SINGLE-DIGIT :LOWER))
  "RTA2aclv" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge66 26 "the" 27> #<edge68 27 start 28> #<edge69 28 bio-entity 29>)
   (:PROTEIN :SINGLE-DIGIT :LOWER))
  "RTA2aclv" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge49 16 proximity 17> #<edge50 17 "of" 18> #<edge51 17 of 18> #<edge53 18 the 19>
    #<edge54 19 stop 20>)
   (:DIGITS :HYPHEN :PROTEIN :SINGLE-DIGIT :LOWER))
  "31-RTA2aclv" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge34 5 terminate 6> #<edge35 6 HYPHEN 7> #<edge37 8 bio-process 9>)
   (:LOWER :HYPHEN :LOWER))
  "linker-stalk" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge30 3 "on" 4> #<edge31 3 on 4> #<edge3 139 up-to 141> #<edge32 4 "the" 5>
    #<edge33 4 the 5>)
   (:PROTEIN :HYPHEN :BIO-ENTITY :HYPHEN :LOWER))
  "RTA-NS5AB-short" MAKE-HYPHENATED-TRIPLE)
 (((#<edge219 115 bio-entity 116> #<edge31 3 on 4>) (:LOWER :BIO-ENTITY)) "peptide-HIS-KDEL"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge215 112 when 113> #<edge216 113 "the" 114> #<edge218 114 start 115>)
   (:LOWER :HYPHEN :LOWER))
  "linker-stalk" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge114 30 open-reading-frame 33> #<edge115 30 open-reading-frame 36> :MIXED)
   (:DIGITS :HYPHEN :MIXED))
  "30-RTAunc" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge110 18 bio-entity 21> #<edge111 23 open-reading-frame 25> :MIXED)
   (:DIGITS :HYPHEN :MIXED))
  "29-RTAunc" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge99 45 square-brackets 48> #<edge25 415 protein 417>) (:LOWER :BIO-ENTITY))
  "peptide-HIS-KDEL" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge95 5 hyphenated-pair 8> #<edge96 33 square-brackets 36> #<edge98 41 square-brackets 44>)
   (:LOWER :HYPHEN :LOWER))
  "linker-stalk" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge91 50 number 51> #<edge92 52 COMMA 53> #<edge23 393 due-to 395>
    #<edge93 54 digit-sequence 55> #<edge94 54 number 55>)
   (:PROTEIN :HYPHEN :BIO-ENTITY :HYPHEN :LOWER))
  "RTA-NS5AB-short" MAKE-HYPHENATED-TRIPLE)
 (((#<edge64 24 open-reading-frame 25> #<edge15 300 wild-type 303>) (:LOWER :BIO-ENTITY))
  "peptide-HIS-KDEL" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge60 22 the 23> #<edge61 23 upstream-segment 24> #<edge63 24 protein 25>)
   (:LOWER :HYPHEN :LOWER))
  "linker-stalk" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge56 20 bio-entity 21> #<edge57 21 "of" 22> #<edge13 285 close-to 287> #<edge58 21 of 22>
    #<edge59 22 "the" 23>)
   (:PROTEIN :HYPHEN :BIO-ENTITY :HYPHEN :LOWER))
  "RTA-NS5AB-short" MAKE-HYPHENATED-TRIPLE)
 (((#<edge3 139 up-to 141> #<edge38 9 have 10> #<edge5 174 but-rather 176>)
   (:MOLECULE :HYPHEN :PROTEIN))
  "P6-P4" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge366 176 well 178> #<edge367 178 bio-complex 180> #<edge368 181 tethere 183>
    #<edge369 180 tethere 183> #<edge370 180 tethere 198> #<edge371 178 tethere 198>
    #<edge27 1 sequencer 2>)
   (:CAPITALIZED :HYPHEN :CAPITALIZED :HYPHEN :CAPITALIZED :HYPHEN :MOLECULE))
  "Gly-Gly-Gly-Gly-Ser" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge17 314 wild-type 317> #<edge350 190 where 191> #<edge19 319 even-if 321>)
   (:MOLECULE :HYPHEN :PROTEIN))
  "P6-P4" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge293 116 of 121> #<edge294 114 start 116> #<edge296 101 critical 103>
    #<edge297 100 critical 103> #<edge298 98 critical 103>)
   (:LOWER :HYPHEN :FULL :HYPHEN :FULL))
  "peptide-HIS-KDEL" MAKE-HYPHENATED-TRIPLE)
 (((#<edge289 130 detect 132> #<edge290 130 detect 133> #<edge292 123 downstream 128>)
   (:LOWER :HYPHEN :LOWER))
  "linker-stalk" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge285 104 efficiency 110> #<edge286 144 of 152> #<edge15 300 wild-type 303>
    #<edge287 139 up-to 143> #<edge288 135 start 137>)
   (:PROTEIN :HYPHEN :BIO-ENTITY :HYPHEN :LOWER))
  "RTA-NS5AB-short" MAKE-HYPHENATED-TRIPLE)
 (((#<edge167 67 lambda-expression 68> #<edge168 66 bio-complex 69> #<edge169 74 be 76>)
   (:DIGITS :HYPHEN :PROTEIN))
  "24-RTAclv" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge143 68 bio-complex 69> #<edge145 70 "that" 71> #<edge146 70 that 71> #<edge147 71 be 72>)
   (:HYPHEN :FULL :HYPHEN :FULL))
  "-HIS-KDEL" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge136 63 restrict 64> #<edge137 64 mobility 65> #<edge138 65 "of" 66> #<edge139 65 of 66>
    #<edge140 66 "the" 67> #<edge141 66 the 67> #<edge142 67 tethere 68>)
   (:SINGLE-CAP :HYPHEN :FULL :HYPHEN :CAPITALIZED :HYPHEN :PROTEIN))
  "I-II-Ib-RTA" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge72 30 "the" 31> #<edge73 30 the 31> #<edge74 31 downstream-segment 32>)
   (:DIGITS :HYPHEN :PROTEIN))
  "23-RTAclv" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge67 26 the 27> #<edge68 27 start 28> #<edge69 28 bio-entity 29>)
   (:DIGITS :HYPHEN :PROTEIN))
  "22-RTAclv" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge204 103 to 104> #<edge206 105 efficiency 106>) (:SINGLE-DIGIT :SINGLE-LOWER)) "2a"
  REIFY-TWO-PART-LABEL)
 (((#<edge181 86 COMMA 87> #<edge182 87 "we" 88>) (:SINGLE-DIGIT :SINGLE-LOWER)) "1b"
  REIFY-TWO-PART-LABEL)
 (((#<edge82 38 number 39> :LOWER) (:PROTEIN :LOWER)) "DTA2aclv" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge81 38 digit-sequence 39> :LOWER) (:PROTEIN :LOWER)) "DTA2aclv"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge54 19 stop 20> #<edge55 19 stop-endurant 20> #<edge80 36 COMMA 37> :LOWER)
   (:DIGITS :HYPHEN :PROTEIN :LOWER))
  "19-DTA2aclv" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge52 18 "the" 19> #<edge53 18 the 19> :MIXED) (:DIGITS :HYPHEN :MIXED)) "18-DTAnoclv"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge48 15 close 16> #<edge49 16 proximity 17> :MIXED) (:DIGITS :HYPHEN :MIXED)) "17-DTAnoclv"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge250 138 move-something-somewhere 139> #<edge251 138 move-to 139>) (:DIGITS :LOWER))
  "15aa" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge129 58 be 59> #<edge130 59 believe 60> :MIXED) (:DIGITS :HYPHEN :MIXED)) "16-DTAunc"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge125 9 suggest 13> #<edge126 3 on 9> :MIXED) (:DIGITS :HYPHEN :MIXED)) "15-DTAunc"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge118 21 of 25> #<edge119 17 of 21> :MIXED) (:DIGITS :HYPHEN :MIXED)) "14-DTAunc"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge3 139 up-to 141> #<edge38 9 have 10> #<edge5 174 but-rather 176>)
   (:MOLECULE :HYPHEN :PROTEIN))
  "P6-P4" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge264 149 article-figure 150> #<edge266 150 number 151>) (:SINGLE-CAP :SINGLE-DIGIT)) "S1"
  REIFY-TWO-PART-LABEL)
 (((:FULL #<edge78 34 digit-sequence 35> #<edge80 36 COMMA 37> #<edge81 38 digit-sequence 39>
    #<edge82 38 number 39>)
   (:FULL :HYPHEN :FULL :HYPHEN :FULL))
  "HNP-HIS-KDEL" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge11 274 such-as 276> #<edge228 123 downstream-segment 124> #<edge13 285 close-to 287>)
   (:MOLECULE :HYPHEN :PROTEIN))
  "P6-P4" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge225 120 open-reading-frame 121> #<edge226 121 be 122>) (:SINGLE-DIGIT :SINGLE-LOWER))
  "1b" REIFY-TWO-PART-LABEL)
 (((#<edge64 24 open-reading-frame 25> #<edge65 25 and 26> :FULL #<edge66 26 "the" 27>
    #<edge68 27 start 28> #<edge69 28 bio-entity 29> #<edge70 29 "of" 30>)
   (:LOWER :HYPHEN :FULL :HYPHEN :FULL :HYPHEN :FULL))
  "linker-HNP-HIS-KDEL" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge3 139 up-to 141> #<edge60 22 the 23> #<edge62 23 upstream 24> #<edge63 24 protein 25>)
   (:BIO-ENTITY :HYPHEN :DIGITS :LOWER))
  "NS5AB-15aa" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge534 254 at 264> #<edge535 246 under 250> #<edge536 292 however 293>)
   (:SINGLE-DIGIT :HYPHEN :PROTEIN))
  "8-DTAclv" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge467 254 "at" 255> #<edge468 254 at 255> #<edge469 255 "a" 256>)
   (:SINGLE-DIGIT :HYPHEN :PROTEIN))
  "7-DTAclv" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge29 2 study-data 3> #<edge395 212 COMMA 213>) (:PROTEIN :PROTEIN)) "NS5AB"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge19 319 even-if 321> #<edge313 159 solely 160> #<edge314 160 "the" 161>
    #<edge316 161 distance 162> #<edge317 162 between 163> #<edge318 163 "the" 164>)
   (:PROTEIN :PROTEIN :HYPHEN :FULL :HYPHEN :FULL))
  "NS5AB-HIS-KDEL" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge249 137 be 138> #<edge250 138 move-something-somewhere 139> #<edge251 138 move-to 139>)
   (:SINGLE-DIGIT :HYPHEN :PROTEIN))
  "6-DTAclv" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge244 133 when 134> #<edge245 134 "the" 135> #<edge246 134 the 135>)
   (:SINGLE-DIGIT :HYPHEN :PROTEIN))
  "5-DTAclv" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge239 130 be 131> #<edge240 131 detect 132> #<edge241 132 even 133>)
   (:SINGLE-DIGIT :HYPHEN :PROTEIN))
  "4-DTAclv" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge173 82 following 84> #<edge174 74 ability 77> #<edge175 73 ability 77>)
   (:SINGLE-DIGIT :HYPHEN :PROTEIN))
  "3-DTAclv" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge5 174 but-rather 176> #<edge60 22 the 23> #<edge7 184 by-virtue-of 187>)
   (:MOLECULE :HYPHEN :PROTEIN))
  "P6-P4" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge47 15 close-bio-process 16> #<edge48 15 close 16> :FULL) (:PROTEIN :HYPHEN :FULL))
  "PE-QQ" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge5 174 but-rather 176> #<edge51 17 of 18> #<edge53 18 the 19>
    #<edge55 19 stop-endurant 20> #<edge56 20 bio-entity 21> :MIXED #<edge58 21 of 22>)
   (:PROTEIN :FORWARD-SLASH :SINGLE-DIGIT :SINGLE-CAP :HYPHEN :MIXED :SINGLE-DIGIT))
  "NS3/4A-pVAX1" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge38 9 have 10> #<edge40 11 "the" 12>) (:SINGLE-DIGIT :SINGLE-LOWER)) "1a"
  REIFY-TWO-PART-LABEL)
 (((#<edge115 30 open-reading-frame 36> #<edge117 27 start 29>) (:PROTEIN :DIGITS)) "Eco47"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:MIXED #<edge47 15 close-bio-process 16> #<edge1 118 protein 120>) (:MIXED :HYPHEN :PROTEIN))
  "pEGFP-C2" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge78 34 digit-sequence 35> #<edge80 36 COMMA 37>) (:SINGLE-CAP :SINGLE-DIGIT)) "S1"
  REIFY-TWO-PART-LABEL)
 (((#<edge63 24 protein 25> #<edge64 24 open-reading-frame 25> :LOWER #<edge66 26 "the" 27>)
   (:SINGLE-DIGIT :HYPHEN :LOWER :SINGLE-DIGIT))
  "2-cytons3" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge57 21 "of" 22> #<edge58 21 of 22> :LOWER #<edge60 22 the 23>)
   (:SINGLE-DIGIT :HYPHEN :LOWER :SINGLE-DIGIT))
  "1-cytons3" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:MIXED #<edge43 13 "of" 14>) (:MIXED :DIGITS)) "pMGT14" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge13 285 close-to 287> #<edge14 300 "wild-type" 303> #<edge16 314 "wild-type" 317>)
   (:LOWER :HYPHEN :LOWER))
  "single-chain" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge225 120 open-reading-frame 121> #<edge226 121 be 122> #<edge227 122 place 123>)
   (:CAPITALIZED :FORWARD-SLASH :FULL))
  "Gel/PCR" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge151 74 modal 75> #<edge152 75 be 76> #<edge154 77 "to" 78>)
   (:SINGLE-DIGIT :FORWARD-SLASH :FULL))
  "4/TO" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge144 69 semicolon 70> #<edge145 70 "that" 71> #<edge146 70 that 71>)
   (:LOWER :HYPHEN :LOWER))
  "promoter-based" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge92 52 COMMA 53> #<edge94 54 number 55> #<edge96 33 square-brackets 36>)
   (:MIXED :DIGITS :SINGLE-LOWER))
  "pET28a" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge85 42 number 43> #<edge86 44 COMMA 45> #<edge87 46 digit-sequence 47>)
   (:LOWER :HYPHEN :LOWER))
  "promoter-based" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge10 274 "such as" 276> #<edge11 274 such-as 276> #<edge13 285 close-to 287>)
   (:FULL :HYPHEN :SINGLE-DIGIT))
  "XL-1" MAKE-HYPHENATED-STRUCTURE)
 (((:TILDA #<edge76 32 protein 33>) (:TILDA :MEASUREMENT)) "∼15 fold" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge326 168 "per" 169> #<edge328 169 bio-entity 170>) (:SINGLE-DIGIT :SINGLE-LOWER)) "2a"
  REIFY-TWO-PART-LABEL)
 (((#<edge310 156 pronoun/inanimate 157> #<edge311 157 be 158>) (:SINGLE-DIGIT :SINGLE-LOWER)) "1b"
  REIFY-TWO-PART-LABEL)
 (((#<edge146 70 that 71> #<edge147 71 be 72> #<edge148 72 COMMA 73>) (:LOWER :HYPHEN :LOWER))
  "in-vitro" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge222 117 "the" 118> #<edge223 117 the 118> #<edge224 120 protein 121>)
   (:LOWER :HYPHEN :LOWER))
  "in-vitro" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge171 79 limit 81> #<edge172 79 movement 82> #<edge173 82 following 84>)
   (:LOWER :HYPHEN :LOWER))
  "in-vivo" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge143 68 bio-complex 69> #<edge144 69 semicolon 70> #<edge145 70 "that" 71>)
   (:LOWER :HYPHEN :LOWER))
  "in-vitro" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge109 19 bio-entity 21> #<edge110 18 bio-entity 21> #<edge111 23 open-reading-frame 25>)
   (:LOWER :FORWARD-SLASH :LOWER))
  "replication/maturation" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge780 403 bio-entity 405> #<edge781 408 bio-entity 410> #<edge782 423 bio-mechanism 427>)
   (:LOWER :HYPHEN :LOWER))
  "amino-acid" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge764 422 an 423> #<edge765 423 rna 424> #<edge766 424 HYPHEN 425>)
   (:LOWER :HYPHEN :PROTEIN))
  "pro-RIP" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge372 170 affect 172> #<edge373 169 bio-entity 172> #<edge374 170 lambda-expression 172>)
   (:LOWER :HYPHEN :LOWER))
  "in-vitro" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge328 169 bio-entity 170> #<edge329 170 "that" 171> #<edge330 170 that 171>)
   (:LOWER :FORWARD-SLASH :LOWER))
  "expression/activity" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge237 128 COMMA 129> #<edge238 129 reinitiation 130> #<edge240 131 detect 132>)
   (:CAPITALIZED :HYPHEN :PROTEIN))
  "Epstein-Bar" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge418 234 "the" 235> #<edge420 235 native 236>) (:SINGLE-DIGIT :SINGLE-LOWER)) "2a"
  REIFY-TWO-PART-LABEL)
 (((#<edge405 222 and 223> #<edge406 223 digit-sequence 224>) (:SINGLE-DIGIT :SINGLE-LOWER)) "1b"
  REIFY-TWO-PART-LABEL)
 (((#<edge327 168 per 169> #<edge328 169 bio-entity 170> #<edge329 170 "that" 171>
    #<edge330 170 that 171> #<edge332 172 reinitiation 173>)
   (:PROTEIN :HYPHEN :PROTEIN :HYPHEN :LOWER))
  "PE-DTA-no" MAKE-HYPHENATED-TRIPLE)
 (((#<edge319 163 the 164> #<edge320 164 start 165> #<edge321 165 and 166>)
   (:PROTEIN :HYPHEN :LOWER))
  "DTA-based" PACKAGE-QUALIFYING-PAIR)
 (((:TILDA #<edge222 117 "the" 118>) (:TILDA :DIGITS)) "∼40" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:TILDA #<edge129 58 be 59>) (:TILDA :DIGITS)) "∼2500" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge423 238 be 239> #<edge406 223 digit-sequence 224>) (:ARTICLE-FIGURE :SINGLE-CAP))
  "Fig.7B" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge350 190 where 191> #<edge352 191 the 192>) (:SINGLE-DIGIT :SINGLE-LOWER)) "2a"
  REIFY-TWO-PART-LABEL)
 (((#<edge341 178 the 179> #<edge343 180 modal 181>) (:SINGLE-DIGIT :SINGLE-LOWER)) "2a"
  REIFY-TWO-PART-LABEL)
 (((#<edge335 177 well-bio-process 178> #<edge336 177 well-endurant 178>
    #<edge337 177 well-adverbial 178> #<edge338 177 modifier 178> #<edge339 177 well 178>)
   (:PROTEIN :HYPHEN :PROTEIN :HYPHEN :LOWER))
  "PE-DTA-full" MAKE-HYPHENATED-TRIPLE)
 (((#<edge274 98 bio-entity 100> #<edge276 118 open-reading-frame 121>)
   (:SINGLE-DIGIT :SINGLE-LOWER))
  "1a" REIFY-TWO-PART-LABEL)
 (((#<edge214 112 when 113> #<edge216 113 "the" 114>) (:SINGLE-DIGIT :SINGLE-LOWER)) "2a"
  REIFY-TWO-PART-LABEL)
 (((#<edge206 105 efficiency 106> #<edge207 107 figure 108> #<edge208 107 article-figure 108>
    #<edge209 108 digit-sequence 109> #<edge210 108 number 109> #<edge211 110 and 111>
    #<edge212 111 "that" 112>)
   (:MIXED :FORWARD-SLASH :PROTEIN :HYPHEN :PROTEIN :HYPHEN :LOWER))
  "pCMV/MBP-EGFP-full" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge190 92 distance 93> #<edge191 93 between 94> #<edge192 94 "the" 95>)
   (:LOWER :HYPHEN :LOWER))
  "in-vivo" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge153 76 ability 77> #<edge155 77 to 78>) (:SINGLE-DIGIT :SINGLE-LOWER)) "1a"
  REIFY-TWO-PART-LABEL)
 (((#<edge600 345 direction 346> #<edge602 346 fragment 347>) (:SINGLE-DIGIT :SINGLE-LOWER)) "2a"
  REIFY-TWO-PART-LABEL)
 (((#<edge62 23 upstream 24> #<edge598 344 digit-sequence 345>) (:BIO-ENTITY :LOWER)) "PE-RTA-full"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge590 338 the 339> #<edge592 340 modal 341>) (:SINGLE-DIGIT :SINGLE-LOWER)) "2a"
  REIFY-TWO-PART-LABEL)
 (((#<edge584 333 amino-acid 334> #<edge585 335 COMMA 336> #<edge586 336 suggest 337>
    #<edge587 337 "that" 338> #<edge588 337 that 338>)
   (:PROTEIN :HYPHEN :PROTEIN :HYPHEN :LOWER))
  "PE-DTA-full" MAKE-HYPHENATED-TRIPLE)
 (((#<edge564 313 the 314> #<edge566 318 COMMA 319>) (:SINGLE-DIGIT :SINGLE-LOWER)) "2a"
  REIFY-TWO-PART-LABEL)
 (((#<edge48 15 close 16> #<edge554 306 locate 307> #<edge50 17 "of" 18>)
   (:MOLECULE :HYPHEN :PROTEIN))
  "P6-P4" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge474 258 bio-entity 259> #<edge476 260 article-figure 261>) (:SINGLE-DIGIT :SINGLE-LOWER))
  "2a" REIFY-TWO-PART-LABEL)
 (((#<edge454 238 modifier 240> #<edge456 233 modifier 240>) (:SINGLE-DIGIT :SINGLE-LOWER)) "2a"
  REIFY-TWO-PART-LABEL)
 (((#<edge323 166 stop-endurant 167> #<edge325 167 bio-entity 168>) (:SINGLE-DIGIT :SINGLE-LOWER))
  "2a" REIFY-TWO-PART-LABEL)
 (((#<edge319 163 the 164> #<edge320 164 start 165>) (:SINGLE-DIGIT :SINGLE-LOWER)) "1b"
  REIFY-TWO-PART-LABEL)
 (((#<edge312 158 not 159> #<edge313 159 solely 160> #<edge314 160 "the" 161>)
   (:LOWER :HYPHEN :LOWER))
  "amino-acids" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge259 145 pronoun/inanimate 146> #<edge261 147 position-bio-process 148>)
   (:SINGLE-DIGIT :SINGLE-LOWER))
  "2a" REIFY-TWO-PART-LABEL)
 (((#<edge251 138 move-to 139> #<edge252 141 digit-sequence 142> #<edge253 141 number 142>
    #<edge254 142 bio-entity 143> #<edge255 143 downstream-segment 144>
    #<edge256 143 downstream 144> #<edge257 144 "of" 145>)
   (:MIXED :FORWARD-SLASH :PROTEIN :HYPHEN :PROTEIN :HYPHEN :LOWER))
  "pCMV/MBP-EGFP-full" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge6 184 "by virtue of" 187> #<edge247 135 start 136> #<edge248 136 bio-entity 137>
    #<edge249 137 be 138>)
   (:PROTEIN :PROTEIN :HYPHEN :FULL))
  "NS5AB-CBD" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge245 134 "the" 135> #<edge246 134 the 135>) (:SINGLE-DIGIT :SINGLE-LOWER)) "1b"
  REIFY-TWO-PART-LABEL)
 (((#<edge237 128 COMMA 129> #<edge238 129 reinitiation 130> #<edge239 130 be 131>
    #<edge240 131 detect 132> #<edge241 132 even 133> #<edge242 132 even 133>
    #<edge243 133 when 134>)
   (:MIXED :FORWARD-SLASH :PROTEIN :HYPHEN :PROTEIN :HYPHEN :LOWER))
  "pCMV/MBP-EGFP-full" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge144 69 semicolon 70> #<edge146 70 that 71>) (:SINGLE-DIGIT :SINGLE-LOWER)) "2a"
  REIFY-TWO-PART-LABEL)
 (((#<edge124 13 of 25> #<edge126 3 on 9>) (:SINGLE-DIGIT :SINGLE-LOWER)) "1a"
  REIFY-TWO-PART-LABEL)
 (((:FULL #<edge114 30 open-reading-frame 33>) (:FULL :HYPHENATED-NUMBER)) "HJ3-5"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge102 1 study-bio-method 3> #<edge104 4 bio-process 9> #<edge105 9 suggest 11>
    #<edge107 15 proximity 17> #<edge109 19 bio-entity 21>)
   (:SINGLE-DIGIT :SINGLE-LOWER :FORWARD-SLASH :SINGLE-DIGIT :SINGLE-LOWER))
  "1a/2a" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge201 101 comparative 102> #<edge202 102 critical 103> #<edge203 103 "to" 104>)
   (:LOWER :HYPHEN :LOWER))
  "in-vivo" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge46 14 the 15> #<edge47 15 close-bio-process 16> #<edge48 15 close 16>)
   (:LOWER :HYPHEN :LOWER))
  "in-vivo" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge16 314 "wild-type" 317> #<edge189 91 the 92> #<edge190 92 distance 93>)
   (:BIO-ENTITY :HYPHEN :FULL))
  "6xHis-KDEL" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge73 30 the 31> #<edge74 31 downstream-segment 32> #<edge76 32 protein 33>)
   (:LOWER :HYPHEN :LOWER))
  "site-stalk" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge65 25 and 26> #<edge66 26 "the" 27> #<edge68 27 start 28>) (:LOWER :HYPHEN :LOWER))
  "site-stalk" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge46 14 the 15> #<edge47 15 close-bio-process 16> #<edge48 15 close 16>)
   (:LOWER :HYPHEN :LOWER))
  "in-vivo" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge37 8 bio-process 9> #<edge38 9 have 10> #<edge39 10 suggest 11>)
   (:PROTEIN :HYPHEN :LOWER))
  "RTA-based" PACKAGE-QUALIFYING-PAIR)
 (((#<edge67 26 the 27> #<edge69 28 bio-entity 29> #<edge70 29 "of" 30> #<edge75 31 downstream 32>)
   (:SINGLE-DIGIT :SINGLE-CAP :HYPHEN :LOWER))
  "4A-right" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge28 2 study-bio-method 3> #<edge29 2 study-data 3> #<edge31 3 on 4>)
   (:LOWER :HYPHEN :LOWER))
  "site-stalk" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge1 118 protein 120> #<edge27 1 sequencer 2>) (:BIO-ENTITY :LOWER)) "PE-RTA-cleavage"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge251 138 move-to 139> #<edge252 141 digit-sequence 142> #<edge253 141 number 142>)
   (:LOWER :HYPHEN :LOWER))
  "in-vitro" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge48 15 close 16> #<edge49 16 proximity 17> #<edge50 17 "of" 18>) (:LOWER :HYPHEN :LOWER))
  "in-vitro" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge597 343 tethere 344> #<edge598 344 digit-sequence 345> #<edge600 345 direction 346>)
   (:LOWER :HYPHEN :LOWER))
  "site-stalk" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge591 339 bio-entity 340> #<edge592 340 modal 341> #<edge593 341 cause 342>
    #<edge594 341 cause 342>)
   (:PROTEIN :HYPHEN :PROTEIN :HYPHEN))
  "PE-RTA-" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge19 319 even-if 321> #<edge561 311 always 312> #<edge21 376 wild-type 379>)
   (:MOLECULE :HYPHEN :PROTEIN))
  "P6-P4" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge549 303 bio-entity 304> #<edge550 304 and 305> #<edge552 305 ones-number 306>)
   (:LOWER :HYPHEN :LOWER))
  "site-stalk" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge544 297 modifier 298> #<edge545 298 "of" 299> #<edge546 298 of 299>
    #<edge547 299 "a" 300> #<edge548 299 a 300>)
   (:PROTEIN :HYPHEN :PROTEIN :HYPHEN :LOWER))
  "PE-RTA-cleavage" MAKE-HYPHENATED-TRIPLE)
 (((#<edge260 146 modifier 147> #<edge261 147 position-bio-process 148> #<edge263 149 figure 150>)
   (:PROTEIN :HYPHEN :SINGLE-DIGIT))
  "SLT-1" MAKE-HYPHENATED-STRUCTURE)
 (((:CAPITALIZED #<edge5 174 but-rather 176>) (:CAPITALIZED :-LIKE)) "Shiga-like"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge25 415 protein 417> #<edge26 415 bio-complex 417> #<edge27 1 sequencer 2>
    #<edge28 2 study-bio-method 3> #<edge30 3 "on" 4>)
   (:PROTEIN :HYPHEN :PROTEIN :HYPHEN :LOWER))
  "PE-DTA-no" MAKE-HYPHENATED-TRIPLE)
 (((#<edge274 98 bio-entity 100> #<edge275 104 efficiency 106>
    #<edge276 118 open-reading-frame 121> #<edge277 117 open-reading-frame 121>
    #<edge278 121 place 123>)
   (:PROTEIN :HYPHEN :PROTEIN :HYPHEN :LOWER))
  "PE-DTA-cleavage" MAKE-HYPHENATED-TRIPLE)
 (((#<edge236 127 bio-entity 128> #<edge237 128 COMMA 129> #<edge238 129 reinitiation 130>)
   (:LOWER :HYPHEN :LOWER))
  "in-vitro" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge55 19 stop-endurant 20> #<edge56 20 bio-entity 21> #<edge57 21 "of" 22>
    #<edge58 21 of 22> #<edge59 22 "the" 23>)
   (:PROTEIN :HYPHEN :PROTEIN :HYPHEN :LOWER))
  "PE-DTA-mutated" MAKE-HYPHENATED-TRIPLE)
 (((#<edge45 14 "the" 15> #<edge46 14 the 15> #<edge47 15 close-bio-process 16>
    #<edge48 15 close 16> #<edge49 16 proximity 17>)
   (:PROTEIN :HYPHEN :PROTEIN :HYPHEN :LOWER))
  "PE-DTA-cleavage" MAKE-HYPHENATED-TRIPLE)
 (((#<edge26 415 bio-complex 417> #<edge27 1 sequencer 2> #<edge28 2 study-bio-method 3>)
   (:LOWER :HYPHEN :LOWER))
  "in-vivo" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge180 85 however 86> #<edge181 86 COMMA 87> #<edge182 87 "we" 88>) (:LOWER :HYPHEN :LOWER))
  "half-life" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge277 117 open-reading-frame 121> #<edge279 126 bio-entity 128>
    #<edge280 125 bio-entity 128> #<edge285 104 efficiency 110>)
   (:SINGLE-DIGIT :SINGLE-CAP :HYPHEN :LOWER))
  "2A-right" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge225 120 open-reading-frame 121> #<edge226 121 be 122> #<edge227 122 place 123>
    #<edge228 123 downstream-segment 124> #<edge229 123 downstream 124>)
   (:PROTEIN :HYPHEN :PROTEIN :HYPHEN :LOWER))
  "PE-DTA-cleavage" MAKE-HYPHENATED-TRIPLE)
 (((#<edge176 70 be 72> #<edge177 65 of 69> #<edge178 62 mobility 69>) (:LOWER :HYPHEN :LOWER))
  "in-vitro" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge64 24 open-reading-frame 25> #<edge65 25 and 26> #<edge66 26 "the" 27>)
   (:LOWER :HYPHEN :LOWER))
  "in-vitro" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge885 inactive, resource 885> #<edge887 inactive, resource 887>)
   (:SINGLE-CAP :SINGLE-DIGIT))
  "S1" REIFY-TWO-PART-LABEL)
 (((#<edge794 387 location-of 391> #<edge795 387 copular-predication 400> #<edge796 385 such 386>
    #<edge797 384 as 386> #<edge798 384 copular-predication 400>)
   (:PROTEIN :HYPHEN :PROTEIN :HYPHEN :LOWER))
  "PE-DTA-mutated" MAKE-HYPHENATED-TRIPLE)
 (((#<edge680 369 protein 370> :MIXED #<edge681 369 protein 370>) (:SINGLE-DIGIT :MIXED :HYPHEN))
  "6xHis-" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge596 342 the 343> #<edge597 343 tethere 344> #<edge598 344 digit-sequence 345>
    #<edge599 344 number 345> #<edge600 345 direction 346>)
   (:PROTEIN :HYPHEN :PROTEIN :HYPHEN :LOWER))
  "PE-DTA-cleavage" MAKE-HYPHENATED-TRIPLE)
 (((#<edge567 321 "the" 322> :MIXED) (:SINGLE-DIGIT :MIXED)) "6xHis" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge39 10 suggest 11> #<edge507 290 site 291>) (:INITIAL :SINGLE-CAP)) "W.T"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:CAPITALIZED #<edge474 258 bio-entity 259> :CAPITALIZED) (:CAPITALIZED :HYPHEN :CAPITALIZED))
  "Guidi-Rontani" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge21 376 wild-type 379> #<edge338 177 modifier 178> #<edge23 393 due-to 395>)
   (:MOLECULE :HYPHEN :PROTEIN))
  "P6-P4" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge218 114 start 115> #<edge219 115 bio-entity 116> #<edge7 184 by-virtue-of 187>)
   (:LOWER :HYPHEN :PROTEIN))
  "mono-ADP-ribosyltransferase" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge204 103 to 104> #<edge205 104 reinitiation 105> #<edge3 139 up-to 141>)
   (:LOWER :HYPHEN :PROTEIN))
  "alpha-defensin 1" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge181 86 COMMA 87> #<edge182 87 "we" 88> #<edge183 87 pronoun/first/plural 88>)
   (:LOWER :HYPHEN :LOWER))
  "toxin-substrate" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge68 27 start 28> #<edge69 28 bio-entity 29> #<edge70 29 "of" 30>) (:LOWER :HYPHEN :LOWER))
  "toxin-substrate" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge587 337 "that" 338> #<edge588 337 that 338> #<edge589 338 "the" 339>
    #<edge590 338 the 339> #<edge591 339 bio-entity 340> #<edge592 340 modal 341>
    #<edge44 13 of 14> #<edge593 341 cause 342> #<edge594 341 cause 342> #<edge595 342 "the" 343>)
   (:MIXED :FORWARD-SLASH :PROTEIN :HYPHEN :PROTEIN :HYPHEN :PROTEIN :PROTEIN :HYPHEN :FULL))
  "pCMV/MBP-EGFP-NS5AB-CBD" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge209 108 digit-sequence 109> #<edge211 110 and 111>) (:SINGLE-DIGIT :SINGLE-LOWER)) "1a"
  REIFY-TWO-PART-LABEL)
 (((#<edge205 104 reinitiation 105> #<edge206 105 efficiency 106>) (:SINGLE-DIGIT :SINGLE-LOWER))
  "1b" REIFY-TWO-PART-LABEL)
 (((#<edge194 95 terminate 96> #<edge195 96 bio-complex 97> #<edge196 97 and 98>
    #<edge198 98 the 99> #<edge200 100 be 101>)
   (:SINGLE-DIGIT :SINGLE-LOWER :FORWARD-SLASH :SINGLE-DIGIT :SINGLE-LOWER))
  "1b/1a" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge12 285 "close to" 287> #<edge183 87 pronoun/first/plural 88>
    #<edge14 300 "wild-type" 303>)
   (:MOLECULE :HYPHEN :PROTEIN))
  "P6-P4" MAKE-HYPHENATED-STRUCTURE)
 (((:MIXED #<edge145 70 "that" 71> #<edge146 70 that 71> #<edge147 71 be 72> #<edge148 72 COMMA 73>
    #<edge149 73 "it" 74> #<edge6 184 "by virtue of" 187> #<edge150 73 pronoun/inanimate 74>
    #<edge151 74 modal 75> #<edge152 75 be 76>)
   (:MIXED :FORWARD-SLASH :PROTEIN :HYPHEN :PROTEIN :HYPHEN :PROTEIN :PROTEIN :HYPHEN :FULL))
  "pCMV/MBP-EGFP-NS5AB-CBD" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge104 4 bio-process 9> #<edge105 9 suggest 11> #<edge11 274 such-as 276>)
   (:PROTEIN :HYPHEN :BIO-ENTITY))
  "EGFP-scNS3" MAKE-HYPHENATED-PAIR)
 (((#<edge93 54 digit-sequence 55> #<edge94 54 number 55> #<edge96 33 square-brackets 36>
    :TRADE_MARK_SIGN)
   (:SINGLE-CAP :HYPHEN :PROTEIN :TRADE_MARK_SIGN))
  "T-REx™" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge33 4 the 5> #<edge34 5 terminate 6> #<edge1 118 protein 120>)
   (:PROTEIN :HYPHEN :BIO-ENTITY))
  "EGFP-scNS3" MAKE-HYPHENATED-PAIR)
 (((#<edge528 288 site 291> #<edge41 11 the 12>) (:FULL :-LIKE)) "ER-like"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge315 160 the 161> #<edge317 162 between 163>) (:SINGLE-DIGIT :SINGLE-LOWER)) "1a"
  REIFY-TWO-PART-LABEL)
 (((#<edge243 133 when 134> #<edge244 133 when 134> #<edge245 134 "the" 135>)
   (:LOWER :HYPHEN :LOWER))
  "efficiently-expressed" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge229 123 downstream 124> #<edge231 124 of 125>) (:PROTEIN :SINGLE-DIGIT)) "scNS3"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge109 19 bio-entity 21> #<edge110 18 bio-entity 21>) (:SINGLE-DIGIT :SINGLE-LOWER)) "1b"
  REIFY-TWO-PART-LABEL)
 (((#<edge73 30 the 31> #<edge74 31 downstream-segment 32> #<edge76 32 protein 33>)
   (:LOWER :HYPHEN :LOWER))
  "single-chain" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge351 191 "the" 192> #<edge352 191 the 192> #<edge353 192 bio-complex 193>)
   (:LOWER :HYPHEN :LOWER))
  "in-vitro" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge13 285 close-to 287> #<edge287 139 up-to 143> #<edge288 135 start 137>)
   (:PROTEIN :FORWARD-SLASH :SINGLE-CAP))
  "NS5A/B" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge232 125 "the" 126> #<edge233 125 the 126> #<edge234 126 stop 127>)
   (:LOWER :FORWARD-SLASH :LOWER))
  "peptide/domain" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:CAPITALIZED #<edge172 79 movement 82>) (:CAPITALIZED :SINGLE-DIGIT)) "Huh7"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge149 73 "it" 74> #<edge151 74 modal 75>) (:PROTEIN :SINGLE-DIGIT)) "JFH1"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge144 69 semicolon 70> #<edge146 70 that 71>) (:SINGLE-DIGIT :SINGLE-LOWER)) "2a"
  REIFY-TWO-PART-LABEL)
 (((#<edge390 207 at 208> #<edge391 208 COMMA 209> #<edge393 210 very 211>)
   (:SINGLE-DIGIT :FORWARD-SLASH :SINGLE-DIGIT))
  "2/3" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge340 178 "the" 179> #<edge341 178 the 179> #<edge343 180 modal 181>)
   (:LOWER :HYPHEN :PROTEIN))
  "co-factor" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge36 7 reinitiation 8> #<edge232 125 "the" 126> #<edge234 126 stop 127>
    #<edge236 127 bio-entity 128>)
   (:PROTEIN :HYPHEN :SINGLE-DIGIT :SINGLE-CAP))
  "NS3-4A" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge157 79 only 80> #<edge158 80 limit 81> #<edge160 82 following-adj 83>)
   (:LOWER :HYPHEN :PROTEIN))
  "co-factor" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge103 5 bio-process 9> #<edge105 9 suggest 11>) (:SINGLE-CAP :SINGLE-DIGIT)) "E1"
  REIFY-TWO-PART-LABEL)
 (((#<edge81 38 digit-sequence 39> #<edge82 38 number 39> #<edge83 40 COMMA 41>)
   (:LOWER :HYPHEN :LOWER))
  "so-called" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge11 274 such-as 276> #<edge13 285 close-to 287>) (:PROTEIN :-LIKE))
  "epidermal growth factor-like" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge119 17 of 21> #<edge120 14 proximity 21> #<edge121 15 close 16>) (:LOWER :HYPHEN :LOWER))
  "carboxy-terminal" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge223 117 the 118> #<edge224 120 protein 121> #<edge17 314 wild-type 317>
    #<edge225 120 open-reading-frame 121> #<edge227 122 place 123>)
   (:PROTEIN :FORWARD-SLASH :PROTEIN :HYPHEN :LOWER))
  "receptor/low density lipoprotein receptor-related" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge15 300 wild-type 303> #<edge222 117 "the" 118> :LOWER) (:PROTEIN :HYPHEN :LOWER))
  "alpha 2-macroglobulin" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge3 139 up-to 141> #<edge94 54 number 55>) (:PROTEIN :SINGLE-LOWER)) "domain 1a"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge40 11 "the" 12> #<edge41 11 the 12> #<edge42 12 importance 13>) (:DIGITS :HYPHEN :LOWER))
  "three-domain" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge435 223 point-mutation 225> #<edge436 220 point-mutation 222>
    #<edge437 220 point-mutation 225>)
   (:CAPITALIZED :HYPHEN :LOWER))
  "In-vitro" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge374 170 lambda-expression 172> #<edge375 168 per 172> #<edge378 153 suggest 155>
    #<edge379 155 that 156> #<edge381 200 COMMA 201> #<edge382 201 whilst 202>
    #<edge383 202 modifier 203>)
   (:SINGLE-CAP :HYPHEN :LOWER :HYPHEN :LOWER :HYPHEN :LOWER))
  "N-end-rule-mediated" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge236 127 bio-entity 128> #<edge237 128 COMMA 129> #<edge238 129 reinitiation 130>)
   (:LOWER :HYPHEN :LOWER))
  "longer-lived" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge23 393 due-to 395> #<edge125 9 suggest 13> #<edge126 3 on 9> #<edge127 57 "this" 58>)
   (:BIO-ENTITY :DIGITS :FORWARD-SLASH :LOWER))
  "8×105/ml" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge21 376 wild-type 379> #<edge121 15 close 16> #<edge122 14 proximity 25>)
   (:BIO-ENTITY :FORWARD-SLASH :LOWER))
  "2×106/ml" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge106 11 importance 13> #<edge107 15 proximity 17> #<edge109 19 bio-entity 21>)
   (:PROTEIN :HYPHEN :DIGITS))
  "RPMI-1640" MAKE-HYPHENATED-PAIR)
 (((#<edge10 274 "such as" 276> #<edge11 274 such-as 276> #<edge13 285 close-to 287>)
   (:PROTEIN :HYPHEN :DIGITS))
  "RPMI-1640" MAKE-HYPHENATED-PAIR)
 (((#<edge152 75 be 76> #<edge153 76 ability 77> #<edge155 77 to 78>)
   (:SINGLE-DIGIT :COLON :SINGLE-DIGIT))
  "1∶1" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge69 28 bio-entity 29> #<edge70 29 "of" 30> #<edge5 174 but-rather 176>)
   (:SINGLE-DIGIT :HYPHEN :BIO-ENTITY))
  "1-mg/ml" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge687 373 location-of 374> #<edge688 374 "of" 375> #<edge689 374 of 375>)
   (:LOWER :HYPHEN :LOWER))
  "amino-acid" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge620 332 point-mutation 334> #<edge621 344 point-mutation 346> #<edge622 331 figure 334>
    #<edge623 330 parentheses 335>)
   (:LOWER :HYPHEN :LOWER :HYPHEN))
  "liposome-coupled-" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge600 345 direction 346> #<edge601 345 amino-acid 346> #<edge5 174 but-rather 176>)
   (:SINGLE-DIGIT :HYPHEN :BIO-ENTITY))
  "5-mg/ml" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge463 250 COMMA 251> #<edge464 251 bio-complex 252> #<edge465 252 modal 253>)
   (:LOWER :FORWARD-SLASH :LOWER))
  "chloroform/methanol" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge438 219 figure 225> #<edge439 218 parentheses 226> #<edge440 202 reinitiation 204>)
   (:FULL :HYPHEN :PROTEIN))
  "DOPE-DSS" MAKE-HYPHENATED-PAIR)
 (((#<edge415 232 bio-use 233> #<edge416 233 when 234> #<edge417 233 when 234>)
   (:FULL :HYPHEN :PROTEIN))
  "DOPE-DSS" MAKE-HYPHENATED-PAIR)
 (((#<edge137 64 mobility 65> #<edge138 65 "of" 66> #<edge140 66 "the" 67>)
   (:SINGLE-DIGIT :COLON :SINGLE-DIGIT))
  "2∶1" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge25 415 protein 417> #<edge26 415 bio-complex 417> #<edge30 3 "on" 4>)
   (:PROTEIN :HYPHEN :SINGLE-CAP))
  "class-I" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge13 285 close-to 287> #<edge14 300 "wild-type" 303> #<edge15 300 wild-type 303>)
   (:PROTEIN :HYPHEN :CAPITALIZED))
  "Sigma-Aldrich" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge32 4 "the" 5> #<edge33 4 the 5> #<edge34 5 terminate 6>) (:PROTEIN :HYPHEN :LOWER))
  "CTL-based" PACKAGE-QUALIFYING-PAIR)
 (((#<edge272 95 lambda-expression 96> #<edge273 94 bio-complex 97> #<edge274 98 bio-entity 100>)
   (:PROTEIN :HYPHEN :LOWER))
  "CTL-based" PACKAGE-QUALIFYING-PAIR)
 (((#<edge248 136 bio-entity 137> #<edge249 137 be 138>
    #<edge250 138 move-something-somewhere 139>)
   (:LOWER :HYPHEN :LOWER))
  "long-lived" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge333 173 efficiency 174> #<edge334 176 how 177> #<edge335 177 well-bio-process 178>)
   (:LOWER :HYPHEN :LOWER))
  "cross-reactivity" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge229 123 downstream 124> #<edge231 124 of 125>) (:SINGLE-CAP :SINGLE-DIGIT)) "H5"
  REIFY-TWO-PART-LABEL)
 (((#<edge460 247 the 248> #<edge461 248 sequencer 249> #<edge462 249 circumstance 250>)
   (:PROTEIN :HYPHEN :LOWER))
  "TLR-ligand" PACKAGE-QUALIFYING-PAIR)
 (((:TILDA #<edge300 88 show 90> #<edge301 87 show 90> #<edge302 85 show 90>)
   (:TILDA :SINGLE-DIGIT :FORWARD-SLASH :DIGITS))
  "∼1/2000" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge27 1 sequencer 2> #<edge380 199 however 200>) (:PROTEIN :FULL)) "anti-OVA"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge21 376 wild-type 379> #<edge330 170 that 171>) (:PROTEIN :FULL)) "anti-OVA"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge133 61 reflect 62> #<edge134 62 "a" 63> #<edge135 62 a 63>) (:LOWER :HYPHEN :LOWER))
  "long-lived" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge430 243 lower-adj 244> #<edge433 244 efficiency 245>
    #<edge434 199 subordinate-conjunction 201> #<edge435 223 point-mutation 225>)
   (:FULL :HYPHENATED-NUMBER :HYPHEN :LOWER))
  "OVA257-264-liposome" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge331 171 affect 172> #<edge334 176 how 177> #<edge335 177 well-bio-process 178>
    #<edge336 177 well-endurant 178>)
   (:FULL :HYPHENATED-NUMBER :HYPHEN :LOWER))
  "OVA257-264-liposome" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge321 165 and 166> #<edge324 167 bio-entity 168> #<edge325 167 bio-entity 168>
    #<edge326 168 "per" 169>)
   (:FULL :HYPHENATED-NUMBER :HYPHEN :LOWER))
  "OVA257-264-liposome" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge295 103 to 110> #<edge296 101 critical 103> #<edge297 100 critical 103>)
   (:SINGLE-LOWER :FORWARD-SLASH :LOWER))
  "g/injection" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge262 147 position 148> #<edge265 150 digit-sequence 151> #<edge266 150 number 151>
    #<edge267 85 subordinate-conjunction 87>)
   (:FULL :HYPHENATED-NUMBER :HYPHEN :LOWER))
  "OVA257-264-liposome" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge198 98 the 99> :MULTIPLICATION-SIGN) (:SINGLE-DIGIT :MULTIPLICATION-SIGN)) "8×"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge185 89 deictic-location 90> #<edge188 91 "the" 92> #<edge189 91 the 92>
    #<edge190 92 distance 93>)
   (:FULL :HYPHENATED-NUMBER :HYPHEN :LOWER))
  "OVA257-264-liposome" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge77 32 open-reading-frame 33> #<edge80 36 COMMA 37>) (:FULL :HYPHENATED-NUMBER))
  "OVA257-264" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge30 3 "on" 4> #<edge33 4 the 5> #<edge34 5 terminate 6> #<edge35 6 HYPHEN 7>)
   (:FULL :HYPHENATED-NUMBER :HYPHEN :LOWER))
  "OVA257-264-liposome" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge348 188 distance 189> #<edge349 189 between 190> #<edge350 190 where 191>)
   (:LOWER :HYPHEN :LOWER))
  "long-lived" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge283 145 position 148> #<edge284 145 position 152> #<edge285 104 efficiency 110>)
   (:LOWER :HYPHEN :LOWER))
  "long-lived" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge215 112 when 113> #<edge216 113 "the" 114> #<edge217 113 the 114>)
   (:PROTEIN :HYPHEN :LOWER))
  "CTL-based" PACKAGE-QUALIFYING-PAIR)
 (((#<edge339 177 well 178> #<edge340 178 "the" 179> #<edge341 178 the 179>)
   (:LOWER :HYPHEN :LOWER))
  "long-lived" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge198 98 the 99> #<edge199 99 bio-entity 100> #<edge200 100 be 101>)
   (:LOWER :HYPHEN :LOWER))
  "so-called" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge113 31 open-reading-frame 33> #<edge114 30 open-reading-frame 33>
    #<edge115 30 open-reading-frame 36>)
   (:LOWER :HYPHEN :LOWER))
  "immune-mediated" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge159 81 movement 82> #<edge160 82 following-adj 83> #<edge161 82 following 83>)
   (:LOWER :HYPHEN :LOWER))
  "immune-serum" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge13 285 close-to 287> #<edge15 300 wild-type 303>) (:PROTEIN :BETACORONAVIRUS))
  "anti-SARS-CoV" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge148 72 COMMA 73> #<edge149 73 "it" 74> :MIXED) (:FULL :HYPHEN :MIXED)) "SARS-CoVpp"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge67 26 the 27> #<edge68 27 start 28> :MIXED) (:FULL :HYPHEN :MIXED)) "SARS-CoVpp"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge231 124 of 125> #<edge232 125 "the" 126> #<edge19 319 even-if 321>)
   (:FULL :HYPHEN :BINDING-DOMAIN))
  "PDZ-binding motif" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge219 115 bio-entity 116> #<edge220 116 "of" 117> #<edge221 116 of 117>)
   (:LOWER :HYPHEN :LOWER))
  "amino-acids" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge216 113 "the" 114> #<edge217 113 the 114> #<edge218 114 start 115>)
   (:LOWER :HYPHEN :LOWER))
  "carboxy-terminal" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge185 89 deictic-location 90> #<edge186 90 "that" 91> #<edge188 91 "the" 92>)
   (:LOWER :HYPHEN :LOWER))
  "pull-down" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge148 72 COMMA 73> #<edge149 73 "it" 74> #<edge150 73 pronoun/inanimate 74>)
   (:LOWER :HYPHEN :LOWER))
  "carboxy-terminal" MAKE-HYPHENATED-STRUCTURE)
 (((:FULL #<edge92 52 COMMA 53> #<edge93 54 digit-sequence 55> #<edge7 184 by-virtue-of 187>
    #<edge94 54 number 55> #<edge95 5 hyphenated-pair 8>)
   (:FULL :SINGLE-DIGIT :HYPHEN :PROTEIN :HYPHEN :PROTEIN))
  "CRUMBS3-PALS1-PATJ" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge78 34 digit-sequence 35> #<edge79 34 number 35> #<edge81 38 digit-sequence 39>)
   (:DIGITS :FORWARD-SLASH :DIGITS))
  "20/203" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge60 22 the 23> #<edge61 23 upstream-segment 24> #<edge63 24 protein 25>)
   (:DIGITS :FORWARD-SLASH :DIGITS))
  "91/203" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge5 174 but-rather 176> #<edge6 184 "by virtue of" 187> #<edge7 184 by-virtue-of 187>)
   (:CAPITALIZED :FORWARD-SLASH :LOWER))
  "Nasal/throat" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge66 26 "the" 27> #<edge67 26 the 27> #<edge1 118 protein 120>)
   (:FULL :FORWARD-SLASH :RT-PCR))
  "PCR/RT-PCR" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge5 174 but-rather 176> #<edge206 105 efficiency 106> #<edge208 107 article-figure 108>)
   (:BIO-ENTITY :FORWARD-SLASH :DIGITS))
  "A/H1N1/09" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge76 32 protein 33> #<edge77 32 open-reading-frame 33> #<edge78 34 digit-sequence 35>)
   (:LOWER :HYPHEN :PROTEIN))
  "multiplex-polymerase" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge12 285 "close to" 287> #<edge192 94 "the" 95> #<edge193 94 the 95>)
   (:DISEASE :FORWARD-SLASH :CAPITALIZED))
  "Dengue fever/Dengue" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge86 44 COMMA 45> #<edge87 46 digit-sequence 47> #<edge88 46 number 47>)
   (:PROTEIN :FORWARD-SLASH :FULL))
  "DF/DHF" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge158 80 limit 81> #<edge159 81 movement 82> #<edge161 82 following 83>)
   (:FULL :HYPHEN :SINGLE-DIGIT))
  "HSV-1" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge16 314 "wild-type" 317> #<edge17 314 wild-type 317> #<edge19 319 even-if 321>)
   (:FULL :HYPHEN :SINGLE-DIGIT))
  "HSV-1" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge3 139 up-to 141> #<edge92 52 COMMA 53> #<edge93 54 digit-sequence 55>)
   (:BIO-ENTITY :HYPHEN :LOWER))
  "Epstein-Barr-virus" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge20 376 "wild-type" 379> #<edge21 376 wild-type 379> #<edge23 393 due-to 395>)
   (:FULL :HYPHEN :SINGLE-DIGIT))
  "HSV-1" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge140 66 "the" 67> #<edge141 66 the 67> #<edge143 68 bio-complex 69>)
   (:FULL :HYPHEN :SINGLE-DIGIT))
  "HHV-6" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge367 178 bio-complex 180> #<edge368 181 tethere 183> #<edge369 180 tethere 183>)
   (:PROTEIN :HYPHEN :LOWER))
  "HLA-antigens" PACKAGE-QUALIFYING-PAIR)
 (((#<edge37 8 bio-process 9> #<edge322 166 stop 167> #<edge324 167 bio-entity 168>)
   (:MOLECULE :FORWARD-SLASH :PROTEIN))
  "beta-amyloid/antibody" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge303 90 that 91> #<edge304 153 "this" 154> #<edge305 153 this 154>)
   (:PROTEIN :HYPHEN :LOWER))
  "HLA-antigen" PACKAGE-QUALIFYING-PAIR)
 (((#<edge281 137 move-something-somewhere 139> :FULL #<edge283 145 position 148>)
   (:HYPHEN :FULL :SINGLE-DIGIT))
  "-DQ8" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge276 118 open-reading-frame 121> :FULL #<edge278 121 place 123>)
   (:HYPHEN :FULL :SINGLE-DIGIT))
  "-DQ6" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge147 71 be 72> #<edge148 72 COMMA 73> #<edge150 73 pronoun/inanimate 74>)
   (:FULL :HYPHEN :SINGLE-DIGIT))
  "HSV-1" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge147 71 be 72> #<edge149 73 "it" 74>) (:SINGLE-CAP :SINGLE-DIGIT)) "C3"
  REIFY-TWO-PART-LABEL)
 (((#<edge27 1 sequencer 2> #<edge228 123 downstream-segment 124>) (:PROTEIN :SINGLE-LOWER)) "C4d"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge222 117 "the" 118> #<edge224 120 protein 121> #<edge225 120 open-reading-frame 121>)
   (:SINGLE-CAP :SINGLE-DIGIT :SINGLE-LOWER))
  "C3d" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge19 319 even-if 321> #<edge193 94 the 95>) (:PROTEIN :SINGLE-DIGIT)) "component C3"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge32 4 "the" 5> #<edge33 4 the 5> #<edge34 5 terminate 6> #<edge35 6 HYPHEN 7>
    #<edge37 8 bio-process 9>)
   (:LOWER :HYPHEN :LOWER :HYPHEN :LOWER))
  "immune-system-related" MAKE-HYPHENATED-TRIPLE)
 (((#<edge51 17 of 18> #<edge52 18 "the" 19> #<edge54 19 stop 20>) (:FULL :HYPHEN :SINGLE-DIGIT))
  "HSV-1" MAKE-HYPHENATED-STRUCTURE)
 (((:TILDA #<edge434 199 subordinate-conjunction 201>) (:TILDA :DIGITS)) "~30"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge213 111 that 112> #<edge214 112 when 113> #<edge216 113 "the" 114>)
   (:FULL :HYPHEN :SINGLE-DIGIT))
  "HHV-6" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge106 11 importance 13> #<edge107 15 proximity 17> #<edge109 19 bio-entity 21>)
   (:FULL :HYPHEN :SINGLE-DIGIT))
  "HSV-2" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge620 332 point-mutation 334> #<edge621 344 point-mutation 346> #<edge622 331 figure 334>)
   (:LOWER :HYPHEN :PROTEIN))
  "self-antibodies" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge604 347 to 348> #<edge605 348 SINGLE-QUOTE 349> #<edge606 349 snap 350>)
   (:PROTEIN :HYPHEN :LOWER))
  "HLA-antigens" PACKAGE-QUALIFYING-PAIR)
 (((#<edge470 255 a 256> #<edge471 256 downstream-segment 257> :LOWER)
   (:LOWER :FORWARD-SLASH :LOWER))
  "uk/viralimages" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge9 214 wild-type 217> #<edge11 274 such-as 276> #<edge14 300 "wild-type" 303>)
   (:INITIAL :INITIAL :INITIAL))
  "J.B.S." REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge94 54 number 55> #<edge95 5 hyphenated-pair 8> #<edge97 37 square-brackets 40>)
   (:FULL :HYPHEN :SINGLE-DIGIT))
  "HSV-1" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge77 32 open-reading-frame 33> #<edge78 34 digit-sequence 35> #<edge80 36 COMMA 37>)
   (:FULL :HYPHEN :SINGLE-DIGIT))
  "HSV-1" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge37 8 bio-process 9> #<edge38 9 have 10> #<edge40 11 "the" 12>)
   (:FULL :HYPHEN :SINGLE-DIGIT))
  "HSV-1" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge3 139 up-to 141> #<edge4 174 "but rather" 176> #<edge6 184 "by virtue of" 187>)
   (:FULL :HYPHEN :SINGLE-DIGIT))
  "HSV-1" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge101 53 square-brackets 56> #<edge102 1 study-bio-method 3> #<edge104 4 bio-process 9>)
   (:FULL :HYPHEN :SINGLE-DIGIT))
  "HSV-1" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge67 26 the 27> #<edge68 27 start 28> #<edge70 29 "of" 30>) (:FULL :HYPHEN :SINGLE-DIGIT))
  "HSV-1" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge76 32 protein 33> #<edge77 32 open-reading-frame 33> #<edge79 34 number 35>)
   (:FULL :HYPHEN :SINGLE-DIGIT))
  "HSV-1" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge7 184 by-virtue-of 187> #<edge8 214 "wild-type" 217> #<edge10 274 "such as" 276>)
   (:FULL :HYPHEN :SINGLE-DIGIT))
  "HSV-1" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge321 165 and 166> #<edge322 166 stop 167> #<edge323 166 stop-endurant 167>)
   (:LOWER :FORWARD-SLASH :LOWER))
  "human/viral" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge224 120 protein 121> #<edge225 120 open-reading-frame 121> #<edge227 122 place 123>)
   (:LOWER :FORWARD-SLASH :LOWER))
  "uk/blasts" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge38 9 have 10> #<edge39 10 suggest 11> #<edge41 11 the 12>) (:FULL :HYPHEN :SINGLE-DIGIT))
  "HSV-1" MAKE-HYPHENATED-STRUCTURE)
 (((:FULL #<edge159 81 movement 82>) (:FULL :DIGITS)) "ALZ50" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:FULL #<edge160 82 following-adj 83>) (:FULL :POINT-MUTATION)) "APBBI1P"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge73 30 the 31> #<edge74 31 downstream-segment 32> #<edge75 31 downstream 32>)
   (:LOWER :HYPHEN :LOWER))
  "cross-react" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge22 393 "due to" 395> #<edge23 393 due-to 395> :LOWER) (:LOWER :FORWARD-SLASH :LOWER))
  "uk/alzheimer" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge248 136 bio-entity 137> #<edge249 137 be 138> #<edge251 138 move-to 139>)
   (:FULL :HYPHEN :SINGLE-DIGIT))
  "HSV-2" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge244 133 when 134> #<edge245 134 "the" 135> #<edge247 135 start 136>)
   (:FULL :HYPHEN :SINGLE-DIGIT))
  "HSV-1" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge70 29 "of" 30> #<edge71 29 of 30> #<edge73 30 the 31>) (:FULL :HYPHEN :SINGLE-DIGIT))
  "HHV-6" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge104 4 bio-process 9> #<edge105 9 suggest 11> #<edge107 15 proximity 17>)
   (:FULL :HYPHEN :SINGLE-DIGIT))
  "HSV-1" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge222 117 "the" 118> #<edge224 120 protein 121>) (:SINGLE-CAP :SINGLE-DIGIT)) "C3"
  REIFY-TWO-PART-LABEL)
 (((#<edge26 415 bio-complex 417> #<edge27 1 sequencer 2> #<edge29 2 study-data 3>)
   (:FULL :HYPHEN :SINGLE-DIGIT))
  "HSV-1" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge139 65 of 66> #<edge140 66 "the" 67> #<edge142 67 tethere 68>)
   (:LOWER :FORWARD-SLASH :FULL))
  "uk/BLASTS" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge67 26 the 27> #<edge68 27 start 28> #<edge70 29 "of" 30>) (:FULL :HYPHEN :SINGLE-DIGIT))
  "HSV-1" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge39 10 suggest 11> #<edge40 11 "the" 12> #<edge41 11 the 12>)
   (:LOWER :FORWARD-SLASH :CAPITALIZED))
  "uk/Alzheimer" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge397 213 the 214> #<edge398 217 site 218> #<edge399 219 figure 220>
    #<edge400 219 article-figure 220> :MIXED)
   (:LOWER :FORWARD-SLASH :CAPITALIZED :FORWARD-SLASH :MIXED))
  "uk/Database/welcomePage" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge365 172 efficiency 174> #<edge366 176 well 178> :LOWER) (:LOWER :FORWARD-SLASH :LOWER))
  "uk/herpeshost" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge333 173 efficiency 174> #<edge334 176 how 177> :LOWER) (:LOWER :FORWARD-SLASH :LOWER))
  "uk/alzpolys" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge11 274 such-as 276> #<edge261 147 position-bio-process 148> #<edge262 147 position 148>
    #<edge263 149 figure 150> #<edge264 149 article-figure 150> #<edge265 150 digit-sequence 151>
    :UNDER-BAR #<edge267 85 subordinate-conjunction 87>)
   (:BIO-ENTITY :LOWER :FORWARD-SLASH :LOWER :FORWARD-SLASH :LOWER :UNDER-BAR :LOWER))
  "org/main/html/tcell_tools" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge9 214 wild-type 217> #<edge258 144 of 145>) (:|HTTP://| :LOWER)) "http://tools"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge237 128 COMMA 129> #<edge238 129 reinitiation 130> #<edge240 131 detect 132>
    #<edge241 132 even 133> #<edge242 132 even 133> #<edge243 133 when 134>)
   (:LOWER :FORWARD-SLASH :LOWER :FORWARD-SLASH :MIXED :FORWARD-SLASH))
  "dk/services/BepiPred/" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge145 70 "that" 71> #<edge146 70 that 71> #<edge148 72 COMMA 73>)
   (:LOWER :FORWARD-SLASH :LOWER))
  "com/index" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge142 67 tethere 68> #<edge143 68 bio-complex 69> #<edge144 69 semicolon 70>)
   (:LOWER :HYPHEN :LOWER))
  "tagcloud-generator" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge108 14 proximity 17> #<edge109 19 bio-entity 21> #<edge111 23 open-reading-frame 25>)
   (:FULL :HYPHEN :SINGLE-DIGIT))
  "HSV-1" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge28 2 study-bio-method 3> :UNDER-BAR #<edge30 3 "on" 4>) (:FULL :UNDER-BAR :DIGITS))
  "NC_001798" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge433 244 efficiency 245> #<edge434 199 subordinate-conjunction 201>
    #<edge436 220 point-mutation 222>)
   (:FULL :HYPHEN :SINGLE-DIGIT))
  "HSV-1" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge339 177 well 178> #<edge340 178 "the" 179> #<edge342 179 bio-complex 180>)
   (:FULL :HYPHEN :SINGLE-DIGIT))
  "HSV-1" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge11 274 such-as 276> #<edge259 145 pronoun/inanimate 146> #<edge260 146 modifier 147>
    #<edge262 147 position 148>)
   (:PROTEIN :FULL :HYPHEN :SINGLE-DIGIT))
  "Anti-HSV-1" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge231 124 of 125> #<edge190 92 distance 93> #<edge192 94 "the" 95>)
   (:TREATMENT :HYPHEN :SINGLE-DIGIT))
  "anti-HSV-1" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge62 23 upstream 24> #<edge63 24 protein 25> #<edge65 25 and 26>)
   (:FULL :HYPHEN :SINGLE-DIGIT))
  "HSV-1" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge58 21 of 22> #<edge60 22 the 23>) (:PROTEIN :SINGLE-DIGIT)) "APOE4"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge27 1 sequencer 2> #<edge28 2 study-bio-method 3> #<edge30 3 "on" 4>)
   (:FULL :HYPHEN :SINGLE-DIGIT))
  "HSV-1" MAKE-HYPHENATED-STRUCTURE)
 (((:OPEN-ANGLE-BRACKET #<edge37 8 bio-process 9>) (:OPEN-ANGLE-BRACKET :RESIDUE-ON-PROTEIN)) "<q1"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:CLOSE-ANGLE-BRACKET #<edge35 6 HYPHEN 7>) (:CLOSE-ANGLE-BRACKET :RESIDUE-ON-PROTEIN)) ">q1"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:OPEN-ANGLE-BRACKET #<edge17 314 wild-type 317>) (:OPEN-ANGLE-BRACKET :FULL)) "<SE"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:CLOSE-ANGLE-BRACKET #<edge16 314 "wild-type" 317>) (:CLOSE-ANGLE-BRACKET :FULL)) ">SE"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge5 174 but-rather 176> #<edge7 184 by-virtue-of 187>) (:SINGLE-CAP :SINGLE-DIGIT)) "A2"
  REIFY-TWO-PART-LABEL)
 (((#<edge15 300 wild-type 303> #<edge17 314 wild-type 317>) (:SINGLE-CAP :SINGLE-DIGIT)) "A1"
  REIFY-TWO-PART-LABEL)
 (((#<edge3 139 up-to 141> :N-ARY_SUMMATION #<edge8 214 "wild-type" 217> :EQUAL-SIGN
    #<edge10 274 "such as" 276> #<edge11 274 such-as 276> #<edge12 285 "close to" 287>
    #<edge14 300 "wild-type" 303>)
   (:BIO-ENTITY :N-ARY_SUMMATION :SINGLE-LOWER :EQUAL-SIGN :SINGLE-DIGIT :PROTEIN :HYPHEN
    :SINGLE-DIGIT))
  "R^0∑t=1TNt−1" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:OPEN-ANGLE-BRACKET #<edge202 102 critical 103>) (:OPEN-ANGLE-BRACKET :SINGLE-DIGIT)) "<0"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge177 65 of 69> :N-ARY_SUMMATION #<edge178 62 mobility 69> :EQUAL-SIGN
    #<edge180 85 however 86> #<edge181 86 COMMA 87> #<edge17 314 wild-type 317>
    #<edge182 87 "we" 88> #<edge183 87 pronoun/first/plural 88> #<edge185 89 deictic-location 90>
    #<edge186 90 "that" 91> :N-ARY_SUMMATION #<edge187 90 that 91> :EQUAL-SIGN
    #<edge188 91 "the" 92> #<edge189 91 the 92> #<edge206 105 efficiency 106>
    #<edge194 95 terminate 96> #<edge196 97 and 98> #<edge197 98 "the" 99> #<edge198 98 the 99>
    #<edge200 100 be 101>)
   (:SINGLE-LOWER :N-ARY_SUMMATION :SINGLE-LOWER :EQUAL-SIGN :SINGLE-DIGIT :LOWER :BIO-ENTITY
    :PROTEIN :HYPHEN :SINGLE-DIGIT :PLUS-SIGN :N-ARY_SUMMATION :SINGLE-LOWER :EQUAL-SIGN :LOWER
    :PLUS-SIGN :POINT-MUTATION :HYPHEN :SINGLE-DIGIT :PROTEIN :HYPHEN :SINGLE-DIGIT))
  "r∑t=1tc+1Mt−1+∑t=tc+2T−1Mt−1" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:N-ARY_SUMMATION #<edge170 77 undergo 79> :EQUAL-SIGN #<edge172 79 movement 82>
    #<edge173 82 following 84> #<edge174 74 ability 77> #<edge176 70 be 72>)
   (:N-ARY_SUMMATION :SINGLE-LOWER :EQUAL-SIGN :SINGLE-DIGIT :PROTEIN :HYPHEN :SINGLE-DIGIT))
  "∑t=1TMt−1" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge159 81 movement 82> :N-ARY_SUMMATION #<edge160 82 following-adj 83> :EQUAL-SIGN
    #<edge162 83 terminate 84> :MIXED #<edge163 58 believe 60> #<edge164 60 reflect 62>
    #<edge166 67 bio-complex 69> :N-ARY_SUMMATION #<edge167 67 lambda-expression 68> :EQUAL-SIGN
    #<edge168 66 bio-complex 69> #<edge15 300 wild-type 303> #<edge169 74 be 76>)
   (:FULL :N-ARY_SUMMATION :SINGLE-LOWER :EQUAL-SIGN :SINGLE-DIGIT :MIXED :PLUS-SIGN :SINGLE-CAP
    :SINGLE-DIGIT :N-ARY_SUMMATION :SINGLE-LOWER :EQUAL-SIGN :LOWER :BIO-ENTITY :PROTEIN))
  "MT∑t=1tcMt+M0∑t=tc+1TMt" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge154 77 "to" 78> #<edge155 77 to 78> #<edge156 78 undergo 79>)
   (:SINGLE-DIGIT :HYPHEN :SINGLE-LOWER))
  "1−r" MAKE-HYPHENATED-STRUCTURE)
 (((:MIXED #<edge90 50 digit-sequence 51> :N-ARY_SUMMATION #<edge91 50 number 51> :EQUAL-SIGN
    #<edge93 54 digit-sequence 55> :MIXED #<edge94 54 number 55> #<edge95 5 hyphenated-pair 8>
    :N-ARY_SUMMATION #<edge96 33 square-brackets 36> :EQUAL-SIGN #<edge98 41 square-brackets 44>
    :MIXED :N-ARY_SUMMATION #<edge99 45 square-brackets 48> :EQUAL-SIGN #<edge204 103 to 104>
    #<edge104 4 bio-process 9> #<edge106 11 importance 13> #<edge107 15 proximity 17>
    #<edge108 14 proximity 17> #<edge109 19 bio-entity 21> #<edge111 23 open-reading-frame 25>
    :N-ARY_SUMMATION #<edge112 22 open-reading-frame 25> :EQUAL-SIGN
    #<edge113 31 open-reading-frame 33> #<edge11 274 such-as 276>
    #<edge114 30 open-reading-frame 33> :N-ARY_SUMMATION #<edge115 30 open-reading-frame 36>
    :EQUAL-SIGN #<edge205 104 reinitiation 105> #<edge120 14 proximity 21>
    #<edge122 14 proximity 25> #<edge123 15 close 16> #<edge124 13 of 25> #<edge125 9 suggest 13>
    :N-ARY_SUMMATION #<edge126 3 on 9> :EQUAL-SIGN #<edge128 57 this 58> #<edge129 58 be 59>
    :N-ARY_SUMMATION #<edge130 59 believe 60> :EQUAL-SIGN #<edge132 60 to 61> :MIXED
    #<edge133 61 reflect 62> :MIXED #<edge135 62 a 63> :N-ARY_SUMMATION #<edge136 63 restrict 64>
    :EQUAL-SIGN #<edge138 65 "of" 66> #<edge139 65 of 66> #<edge140 66 "the" 67> :N-ARY_SUMMATION
    #<edge141 66 the 67> :EQUAL-SIGN #<edge142 67 tethere 68> #<edge13 285 close-to 287>
    #<edge144 69 semicolon 70> #<edge145 70 "that" 71> #<edge147 71 be 72> #<edge148 72 COMMA 73>
    :N-ARY_SUMMATION #<edge149 73 "it" 74> :EQUAL-SIGN #<edge151 74 modal 75> #<edge152 75 be 76>)
   (:MIXED :SINGLE-DIGIT :N-ARY_SUMMATION :SINGLE-LOWER :EQUAL-SIGN :SINGLE-DIGIT :MIXED :PLUS-SIGN
    :SINGLE-LOWER :N-ARY_SUMMATION :SINGLE-LOWER :EQUAL-SIGN :SINGLE-DIGIT :MIXED :N-ARY_SUMMATION
    :SINGLE-LOWER :EQUAL-SIGN :POINT-MUTATION :HYPHEN :SINGLE-DIGIT :PROTEIN :PLUS-SIGN :SINGLE-CAP
    :SINGLE-DIGIT :N-ARY_SUMMATION :SINGLE-LOWER :EQUAL-SIGN :LOWER :BIO-ENTITY :PROTEIN
    :N-ARY_SUMMATION :SINGLE-LOWER :EQUAL-SIGN :POINT-MUTATION :HYPHEN :SINGLE-DIGIT :PROTEIN
    :HYPHEN :SINGLE-LOWER :N-ARY_SUMMATION :SINGLE-LOWER :EQUAL-SIGN :SINGLE-DIGIT :PROTEIN
    :N-ARY_SUMMATION :SINGLE-LOWER :EQUAL-SIGN :SINGLE-DIGIT :MIXED :HYPHEN :MIXED :SINGLE-DIGIT
    :N-ARY_SUMMATION :SINGLE-LOWER :EQUAL-SIGN :SINGLE-DIGIT :PROTEIN :HYPHEN :N-ARY_SUMMATION
    :SINGLE-LOWER :EQUAL-SIGN :LOWER :BIO-ENTITY :SINGLE-CAP :HYPHEN :SINGLE-DIGIT :PROTEIN
    :N-ARY_SUMMATION :SINGLE-LOWER :EQUAL-SIGN :SINGLE-DIGIT :PROTEIN))
  "rM0∑t=1tcMt+r∑t=1tcMt∑t=1T−1Mt+M0∑t=tc+1TMt∑t=1T−1Mt−r∑t=1TMt∑t=1tcMt−rM0∑t=1TMt−∑t=tc+1T−1Mt∑t=1TMt"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge65 25 and 26> :N-ARY_SUMMATION #<edge66 26 "the" 27> :EQUAL-SIGN #<edge68 27 start 28>
    #<edge69 28 bio-entity 29> #<edge9 214 wild-type 217> #<edge70 29 "of" 30> #<edge71 29 of 30>
    #<edge73 30 the 31> #<edge74 31 downstream-segment 32> :N-ARY_SUMMATION
    #<edge75 31 downstream 32> :EQUAL-SIGN #<edge76 32 protein 33>
    #<edge77 32 open-reading-frame 33> #<edge203 103 "to" 104> #<edge82 38 number 39>
    #<edge84 42 digit-sequence 43> #<edge85 42 number 43> #<edge86 44 COMMA 45>
    #<edge88 46 number 47>)
   (:SINGLE-LOWER :N-ARY_SUMMATION :SINGLE-LOWER :EQUAL-SIGN :SINGLE-DIGIT :LOWER :BIO-ENTITY
    :PROTEIN :HYPHEN :SINGLE-DIGIT :PLUS-SIGN :N-ARY_SUMMATION :SINGLE-LOWER :EQUAL-SIGN :LOWER
    :PLUS-SIGN :POINT-MUTATION :HYPHEN :SINGLE-DIGIT :PROTEIN :HYPHEN :SINGLE-DIGIT))
  "r∑t=1tc+1Mt−1+∑t=tc+2T−1Mt−1" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge57 21 "of" 22> :N-ARY_SUMMATION #<edge58 21 of 22> :EQUAL-SIGN #<edge60 22 the 23>
    #<edge61 23 upstream-segment 24> #<edge62 23 upstream 24> #<edge64 24 open-reading-frame 25>)
   (:SINGLE-DIGIT :N-ARY_SUMMATION :SINGLE-LOWER :EQUAL-SIGN :SINGLE-DIGIT :PROTEIN :HYPHEN
    :SINGLE-DIGIT))
  "1∑t=1TMt−1" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge1 118 protein 120> #<edge18 319 "even if" 321> #<edge3 139 up-to 141> :EQUAL-SIGN
    #<edge19 319 even-if 321> :N-ARY_SUMMATION #<edge20 376 "wild-type" 379> :EQUAL-SIGN
    #<edge22 393 "due to" 395> :MIXED #<edge23 393 due-to 395> :N-ARY_SUMMATION
    #<edge24 415 "eif3" 417> :EQUAL-SIGN #<edge25 415 protein 417> #<edge5 174 but-rather 176>
    :MIXED :N-ARY_SUMMATION #<edge26 415 bio-complex 417> :EQUAL-SIGN
    #<edge28 2 study-bio-method 3> #<edge29 2 study-data 3> #<edge7 184 by-virtue-of 187>
    #<edge30 3 "on" 4> #<edge31 3 on 4> #<edge33 4 the 5> #<edge34 5 terminate 6> :N-ARY_SUMMATION
    #<edge35 6 HYPHEN 7> :EQUAL-SIGN #<edge36 7 reinitiation 8> #<edge37 8 bio-process 9>
    #<edge39 10 suggest 11> #<edge40 11 "the" 12> #<edge41 11 the 12> #<edge43 13 "of" 14>
    #<edge44 13 of 14> :N-ARY_SUMMATION #<edge45 14 "the" 15> :EQUAL-SIGN
    #<edge47 15 close-bio-process 16> #<edge48 15 close 16> :N-ARY_SUMMATION
    #<edge49 16 proximity 17> :EQUAL-SIGN #<edge51 17 of 18> #<edge52 18 "the" 19>
    #<edge53 18 the 19> #<edge55 19 stop-endurant 20>)
   (:BIO-ENTITY :HYPHEN :BIO-ENTITY :EQUAL-SIGN :SINGLE-LOWER :N-ARY_SUMMATION :SINGLE-LOWER
    :EQUAL-SIGN :SINGLE-DIGIT :MIXED :PLUS-SIGN :N-ARY_SUMMATION :SINGLE-LOWER :EQUAL-SIGN :LOWER
    :BIO-ENTITY :MIXED :N-ARY_SUMMATION :SINGLE-LOWER :EQUAL-SIGN :SINGLE-DIGIT :LOWER :BIO-ENTITY
    :PROTEIN :HYPHEN :SINGLE-DIGIT :PLUS-SIGN :N-ARY_SUMMATION :SINGLE-LOWER :EQUAL-SIGN :LOWER
    :PLUS-SIGN :SINGLE-DIGIT :PROTEIN :HYPHEN :SINGLE-DIGIT :HYPHEN :N-ARY_SUMMATION :SINGLE-LOWER
    :EQUAL-SIGN :SINGLE-DIGIT :PROTEIN :N-ARY_SUMMATION :SINGLE-LOWER :EQUAL-SIGN :SINGLE-DIGIT
    :PROTEIN :HYPHEN :SINGLE-DIGIT))
  "R˜0−R^0=r∑t=1tcMt+∑t=tc+1TMtr∑t=1tc+1Mt−1+∑t=tc+2TMt−1−∑t=1TMt∑t=1TMt−1"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge1 118 protein 120> #<edge9 214 wild-type 217> #<edge3 139 up-to 141>)
   (:BIO-ENTITY :HYPHEN :BIO-ENTITY))
  "R˜0−R^0" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge1 118 protein 120> :EQUAL-SIGN #<edge19 319 even-if 321> #<edge76 32 protein 33>
    :N-ARY_SUMMATION #<edge23 393 due-to 395> :EQUAL-SIGN #<edge25 415 protein 417> :MIXED
    #<edge3 139 up-to 141> #<edge5 174 but-rather 176> :N-ARY_SUMMATION
    #<edge26 415 bio-complex 417> :EQUAL-SIGN #<edge27 1 sequencer 2> #<edge7 184 by-virtue-of 187>
    #<edge28 2 study-bio-method 3> #<edge30 3 "on" 4> #<edge77 32 open-reading-frame 33>
    :N-ARY_SUMMATION #<edge34 5 terminate 6> :EQUAL-SIGN #<edge36 7 reinitiation 8>
    #<edge37 8 bio-process 9> #<edge9 214 wild-type 217> #<edge38 9 have 10>
    #<edge39 10 suggest 11> #<edge41 11 the 12> #<edge11 274 such-as 276>
    #<edge13 285 close-to 287> :N-ARY_SUMMATION #<edge42 12 importance 13> :EQUAL-SIGN
    #<edge43 13 "of" 14> #<edge44 13 of 14> #<edge46 14 the 15> #<edge47 15 close-bio-process 16>
    #<edge48 15 close 16> #<edge50 17 "of" 18> :EQUAL-SIGN #<edge51 17 of 18> :N-ARY_SUMMATION
    #<edge52 18 "the" 19> :EQUAL-SIGN #<edge54 19 stop 20> :MIXED #<edge55 19 stop-endurant 20>
    :N-ARY_SUMMATION #<edge56 20 bio-entity 21> :EQUAL-SIGN #<edge57 21 "of" 22>
    #<edge15 300 wild-type 303> :MIXED :N-ARY_SUMMATION #<edge58 21 of 22> :EQUAL-SIGN
    #<edge60 22 the 23> #<edge61 23 upstream-segment 24> #<edge17 314 wild-type 317>
    #<edge62 23 upstream 24> #<edge63 24 protein 25> #<edge65 25 and 26> #<edge66 26 "the" 27>
    :N-ARY_SUMMATION #<edge67 26 the 27> :EQUAL-SIGN #<edge68 27 start 28>
    #<edge69 28 bio-entity 29> #<edge71 29 of 30> #<edge72 30 "the" 31> #<edge73 30 the 31>
    #<edge75 31 downstream 32>)
   (:BIO-ENTITY :EQUAL-SIGN :SINGLE-DIGIT :RESIDUE-ON-PROTEIN :N-ARY_SUMMATION :SINGLE-LOWER
    :EQUAL-SIGN :SINGLE-DIGIT :MIXED :BIO-ENTITY :BIO-ENTITY :N-ARY_SUMMATION :SINGLE-LOWER
    :EQUAL-SIGN :LOWER :BIO-ENTITY :PROTEIN :SINGLE-DIGIT :RESIDUE-ON-PROTEIN :N-ARY_SUMMATION
    :SINGLE-LOWER :EQUAL-SIGN :SINGLE-DIGIT :LOWER :BIO-ENTITY :PROTEIN :HYPHEN :SINGLE-DIGIT
    :BIO-ENTITY :BIO-ENTITY :N-ARY_SUMMATION :SINGLE-LOWER :EQUAL-SIGN :LOWER :PLUS-SIGN
    :SINGLE-DIGIT :PROTEIN :HYPHEN :SINGLE-DIGIT :EQUAL-SIGN :SINGLE-LOWER :N-ARY_SUMMATION
    :SINGLE-LOWER :EQUAL-SIGN :SINGLE-DIGIT :MIXED :PLUS-SIGN :N-ARY_SUMMATION :SINGLE-LOWER
    :EQUAL-SIGN :LOWER :BIO-ENTITY :MIXED :N-ARY_SUMMATION :SINGLE-LOWER :EQUAL-SIGN :SINGLE-DIGIT
    :LOWER :BIO-ENTITY :PROTEIN :HYPHEN :SINGLE-DIGIT :PLUS-SIGN :N-ARY_SUMMATION :SINGLE-LOWER
    :EQUAL-SIGN :LOWER :PLUS-SIGN :SINGLE-DIGIT :PROTEIN :HYPHEN :SINGLE-DIGIT))
  "R˜0=1q1∑t=1tcMt+1rq1∑t=tc+1TMt1q1∑t=1tc+1Mt−1+1rq1∑t=tc+2TMt−1=r∑t=1tcMt+∑t=tc+1TMtr∑t=1tc+1Mt−1+∑t=tc+2TMt−1"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge44 13 of 14> #<edge46 14 the 15>) (:LOWER :SINGLE-DIGIT)) "rq1"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge1 118 protein 120> :EQUAL-SIGN #<edge3 139 up-to 141>)
   (:BIO-ENTITY :EQUAL-SIGN :BIO-ENTITY))
  "R^0=R˜0" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge1 118 protein 120> :N-ARY_SUMMATION #<edge2 139 "up to" 141> :EQUAL-SIGN
    #<edge12 285 "close to" 287> :N-ARY_SUMMATION #<edge7 184 by-virtue-of 187> :EQUAL-SIGN
    #<edge9 214 wild-type 217> :MIXED #<edge10 274 "such as" 276> #<edge11 274 such-as 276>)
   (:BIO-ENTITY :N-ARY_SUMMATION :SINGLE-LOWER :EQUAL-SIGN :POINT-MUTATION :N-ARY_SUMMATION
    :SINGLE-LOWER :EQUAL-SIGN :SINGLE-DIGIT :MIXED :HYPHEN :SINGLE-LOWER))
  "R˜0=∑t=1TMt∑t=1T∑j=1kpjMt−j" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge205 104 reinitiation 105> #<edge206 105 efficiency 106> #<edge207 107 figure 108>)
   (:LOWER :HYPHEN :LOWER))
  "well-planned" MAKE-HYPHENATED-STRUCTURE)
 (((:LOWER #<edge9 214 wild-type 217> #<edge10 274 "such as" 276> #<edge20 376 "wild-type" 379>)
   (:LOWER :SINGLE-DIGIT :PLUS-SIGN :RESIDUE-ON-PROTEIN))
  "rtq2+q1" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge0 118 "BM2" 120> :EQUAL-SIGN #<edge18 319 "even if" 321> #<edge19 319 even-if 321>
    #<edge7 184 by-virtue-of 187>)
   (:LOWER :EQUAL-SIGN :RESIDUE-ON-PROTEIN :RESIDUE-ON-PROTEIN :PROTEIN))
  "qt=q2q1exp" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge137 64 mobility 65> :EQUAL-SIGN #<edge138 65 "of" 66> #<edge139 65 of 66>
    :N-ARY_SUMMATION :SINGLE-LOWER :EQUAL-SIGN #<edge141 66 the 67> #<edge142 67 tethere 68>)
   (:LOWER :EQUAL-SIGN :PROTEIN :FORWARD-SLASH :N-ARY_SUMMATION :SINGLE-LOWER :EQUAL-SIGN
    :SINGLE-DIGIT :PROTEIN))
  "qt=Nt/∑i=1TNi" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge231 124 of 125> :ASTERISK #<edge233 125 the 126> #<edge234 126 stop 127>
    #<edge236 127 bio-entity 128>)
   (:DIGITS :ASTERISK :FULL :HYPHEN :DIGITS))
  "2243*AR-615" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge229 123 downstream 124> :ASTERISK) (:FULL :ASTERISK)) "AR*" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge104 4 bio-process 9> #<edge105 9 suggest 11> #<edge107 15 proximity 17>)
   (:DIGITS :FORWARD-SLASH :DIGITS))
  "615/1575" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge60 22 the 23> #<edge61 23 upstream-segment 24> #<edge63 24 protein 25>)
   (:DIGITS :HYPHEN :DIGITS))
  "1977-78" LOOK-FOR-YEAR-EXPRESSION)
 (((#<edge73 30 the 31> #<edge75 31 downstream 32>) (:SINGLE-CAP :SINGLE-DIGIT)) "N0"
  REIFY-TWO-PART-LABEL)
 (((#<edge187 90 that 91> #<edge189 91 the 92> #<edge190 92 distance 93>)
   (:SINGLE-CAP :SINGLE-DIGIT :COLON))
  "R0:" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge102 1 study-bio-method 3> #<edge104 4 bio-process 9>) (:SINGLE-LOWER :SINGLE-DIGIT)) "σ2"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge20 376 "wild-type" 379> #<edge22 393 "due to" 395>) (:SINGLE-CAP :SINGLE-DIGIT)) "R0"
  REIFY-TWO-PART-LABEL)
 (((#<edge59 22 "the" 23> #<edge61 23 upstream-segment 24>) (:SINGLE-CAP :SINGLE-DIGIT)) "R0"
  REIFY-TWO-PART-LABEL)
 (((#<edge26 415 bio-complex 417> #<edge28 2 study-bio-method 3>) (:SINGLE-CAP :SINGLE-DIGIT)) "R0"
  REIFY-TWO-PART-LABEL)
 (((#<edge18 319 "even if" 321> #<edge20 376 "wild-type" 379>) (:SINGLE-CAP :SINGLE-DIGIT)) "R0"
  REIFY-TWO-PART-LABEL)
 (((#<edge3 139 up-to 141> :OPEN-ANGLE-BRACKET #<edge5 174 but-rather 176>)
   (:BIO-ENTITY :OPEN-ANGLE-BRACKET :BIO-ENTITY))
  "R^0<R˜0" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge17 314 wild-type 317> #<edge19 319 even-if 321>) (:SINGLE-CAP :SINGLE-DIGIT)) "R0"
  REIFY-TWO-PART-LABEL)
 (((#<edge3 139 up-to 141> :CLOSE-ANGLE-BRACKET #<edge5 174 but-rather 176>)
   (:BIO-ENTITY :CLOSE-ANGLE-BRACKET :BIO-ENTITY))
  "R^0>R˜0" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge3 139 up-to 141> #<edge16 314 "wild-type" 317> #<edge17 314 wild-type 317>
    :N-ARY_SUMMATION #<edge18 319 "even if" 321> :EQUAL-SIGN #<edge20 376 "wild-type" 379>
    #<edge21 376 wild-type 379> #<edge22 393 "due to" 395> #<edge24 415 "eif3" 417>
    #<edge25 415 protein 417> #<edge26 415 bio-complex 417> #<edge27 1 sequencer 2>
    #<edge29 2 study-data 3>)
   (:BIO-ENTITY :FORWARD-SLASH :LOWER :N-ARY_SUMMATION :SINGLE-LOWER :EQUAL-SIGN :SINGLE-DIGIT
    :PROTEIN :HYPHEN :SINGLE-DIGIT :FORWARD-SLASH :LOWER :HYPHEN :SINGLE-DIGIT))
  "R˜0=∑t=1TMt/qt∑t=1TMt−1/qt−1" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge1 118 protein 120> :EQUAL-SIGN :N-ARY_SUMMATION #<edge4 174 "but rather" 176> :EQUAL-SIGN
    #<edge6 184 "by virtue of" 187> #<edge7 184 by-virtue-of 187> :N-ARY_SUMMATION
    #<edge8 214 "wild-type" 217> :EQUAL-SIGN #<edge10 274 "such as" 276> #<edge11 274 such-as 276>
    #<edge12 285 "close to" 287> #<edge14 300 "wild-type" 303>)
   (:BIO-ENTITY :EQUAL-SIGN :N-ARY_SUMMATION :SINGLE-LOWER :EQUAL-SIGN :SINGLE-DIGIT :PROTEIN
    :N-ARY_SUMMATION :SINGLE-LOWER :EQUAL-SIGN :SINGLE-DIGIT :PROTEIN :HYPHEN :SINGLE-DIGIT))
  "R^0=∑t=1TMt∑t=1TMt−1" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge213 111 that 112> :CLOSE-CURLY-BRACKET) (:FULL :CLOSE-CURLY-BRACKET)) "MT}"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:OPEN-CURLY-BRACKET #<edge3 139 up-to 141>) (:OPEN-CURLY-BRACKET :CELL-LINE)) "{M1"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge187 90 that 91> :SMALL_TILDE #<edge189 91 the 92>)
   (:SINGLE-CAP :SMALL_TILDE :SINGLE-DIGIT))
  "R˜0" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge183 87 pronoun/first/plural 88> :CARET #<edge185 89 deictic-location 90>)
   (:SINGLE-CAP :CARET :SINGLE-DIGIT))
  "R^0" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge30 3 "on" 4> #<edge32 4 "the" 5>) (:SINGLE-CAP :SINGLE-DIGIT)) "R0" REIFY-TWO-PART-LABEL)
 (((:CLOSE-ANGLE-BRACKET #<edge259 145 pronoun/inanimate 146>)
   (:CLOSE-ANGLE-BRACKET :RESIDUE-ON-PROTEIN))
  ">q2" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:OPEN-ANGLE-BRACKET #<edge145 70 "that" 71>) (:OPEN-ANGLE-BRACKET :RESIDUE-ON-PROTEIN)) "<q2"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:CLOSE-ANGLE-BRACKET #<edge80 36 COMMA 37>) (:CLOSE-ANGLE-BRACKET :LOWER)) ">tc"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge2 139 "up to" 141> :SMALL_TILDE #<edge4 174 "but rather" 176> :EQUAL-SIGN
    :N-ARY_SUMMATION #<edge5 174 but-rather 176> :EQUAL-SIGN #<edge7 184 by-virtue-of 187>
    #<edge8 214 "wild-type" 217> #<edge9 214 wild-type 217> :LOWER :N-ARY_SUMMATION
    #<edge10 274 "such as" 276> :EQUAL-SIGN #<edge23 393 due-to 395> :N-ARY_SUMMATION
    #<edge15 300 wild-type 303> :EQUAL-SIGN #<edge17 314 wild-type 317> :MIXED
    #<edge18 319 "even if" 321> #<edge19 319 even-if 321> #<edge20 376 "wild-type" 379> :LOWER
    #<edge21 376 wild-type 379> #<edge22 393 "due to" 395>)
   (:SINGLE-CAP :SMALL_TILDE :SINGLE-DIGIT :EQUAL-SIGN :N-ARY_SUMMATION :SINGLE-LOWER :EQUAL-SIGN
    :SINGLE-DIGIT :PROTEIN :FORWARD-SLASH :LOWER :N-ARY_SUMMATION :SINGLE-LOWER :EQUAL-SIGN
    :POINT-MUTATION :N-ARY_SUMMATION :SINGLE-LOWER :EQUAL-SIGN :SINGLE-DIGIT :MIXED :HYPHEN
    :SINGLE-LOWER :FORWARD-SLASH :LOWER :HYPHEN :SINGLE-LOWER))
  "R˜0=∑t=1TMt/qt∑t=1T∑j=1kpjMt−j/qt−j" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge167 67 lambda-expression 68> #<edge169 74 be 76>) (:SINGLE-CAP :SINGLE-DIGIT)) "R0"
  REIFY-TWO-PART-LABEL)
 (((#<edge119 17 of 21> #<edge121 15 close 16>) (:SINGLE-CAP :SINGLE-DIGIT)) "R0"
  REIFY-TWO-PART-LABEL)
 (((#<edge55 19 stop-endurant 20> #<edge57 21 "of" 22>) (:SINGLE-CAP :SINGLE-DIGIT)) "R0"
  REIFY-TWO-PART-LABEL)
 (((#<edge0 118 "BM2" 120> :CARET #<edge2 139 "up to" 141> :EQUAL-SIGN :N-ARY_SUMMATION
    #<edge3 139 up-to 141> :EQUAL-SIGN #<edge5 174 but-rather 176> #<edge6 184 "by virtue of" 187>
    :N-ARY_SUMMATION #<edge7 184 by-virtue-of 187> :EQUAL-SIGN #<edge17 314 wild-type 317>
    :N-ARY_SUMMATION #<edge12 285 "close to" 287> :EQUAL-SIGN #<edge14 300 "wild-type" 303> :MIXED
    #<edge15 300 wild-type 303> #<edge16 314 "wild-type" 317>)
   (:SINGLE-CAP :CARET :SINGLE-DIGIT :EQUAL-SIGN :N-ARY_SUMMATION :SINGLE-LOWER :EQUAL-SIGN
    :SINGLE-DIGIT :PROTEIN :N-ARY_SUMMATION :SINGLE-LOWER :EQUAL-SIGN :POINT-MUTATION
    :N-ARY_SUMMATION :SINGLE-LOWER :EQUAL-SIGN :SINGLE-DIGIT :MIXED :HYPHEN :SINGLE-LOWER))
  "R^0=∑t=1TNt∑t=1T∑j=1kpjNt−j" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge60 22 the 23> #<edge62 23 upstream 24>) (:SINGLE-CAP :SINGLE-DIGIT)) "R0"
  REIFY-TWO-PART-LABEL)
 (((#<edge217 113 the 114> #<edge219 115 bio-entity 116>) (:SINGLE-CAP :SINGLE-DIGIT)) "R0"
  REIFY-TWO-PART-LABEL)
 (((#<edge44 13 of 14> #<edge46 14 the 15>) (:SINGLE-CAP :SINGLE-DIGIT)) "R0" REIFY-TWO-PART-LABEL)
 (((#<edge537 293 COMMA 294> #<edge538 294 if 295> #<edge539 295 modifier 296>)
   (:LOWER :HYPHEN :LOWER))
  "well-studied" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge217 113 the 114> #<edge219 115 bio-entity 116>) (:SINGLE-CAP :SINGLE-DIGIT)) "R0"
  REIFY-TWO-PART-LABEL)
 (((#<edge352 191 the 192> #<edge353 192 bio-complex 193> #<edge354 193 terminate 194>)
   (:LOWER :HYPHEN :LOWER))
  "next-generation" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge63 24 protein 25> #<edge64 24 open-reading-frame 25> #<edge65 25 and 26>)
   (:LOWER :HYPHEN :LOWER))
  "next-generation" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge2 139 "up to" 141> #<edge15 300 wild-type 303> #<edge16 314 "wild-type" 317>)
   (:AVIAN-FLU :HYPHEN :DIGITS))
  "H1N1-2009" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge200 100 be 101> #<edge201 101 comparative 102> #<edge202 102 critical 103>)
   (:PROTEIN :HYPHEN :LOWER))
  "type-specificity" PACKAGE-QUALIFYING-PAIR)
 (((#<edge125 9 suggest 13> #<edge126 3 on 9> #<edge127 57 "this" 58>) (:LOWER :HYPHEN :LOWER))
  "next-generation" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge108 14 proximity 17> #<edge109 19 bio-entity 21> #<edge110 18 bio-entity 21>)
   (:LOWER :HYPHEN :LOWER))
  "travel-induced" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge222 117 "the" 118> #<edge223 117 the 118> #<edge224 120 protein 121>)
   (:LOWER :HYPHEN :LOWER))
  "age-specificity" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge136 63 restrict 64> #<edge137 64 mobility 65> #<edge138 65 "of" 66>)
   (:LOWER :HYPHEN :LOWER))
  "age-specific" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge4 174 "but rather" 176> #<edge115 30 open-reading-frame 36> #<edge116 29 of 36>)
   (:AVIAN-FLU :HYPHEN :DIGITS))
  "H1N1-2009" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge102 1 study-bio-method 3> #<edge103 5 bio-process 9> #<edge104 4 bio-process 9>)
   (:LOWER :HYPHEN :LOWER))
  "well-studied" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge103 5 bio-process 9> #<edge104 4 bio-process 9> #<edge105 9 suggest 11>)
   (:LOWER :HYPHEN :LOWER))
  "next-generation" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge57 21 "of" 22> #<edge58 21 of 22> #<edge59 22 "the" 23>) (:LOWER :HYPHEN :LOWER))
  "next-generation" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge355 194 and 195> #<edge356 195 "the" 196> #<edge357 195 the 196>)
   (:LOWER :HYPHEN :LOWER))
  "pre-existing" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge7 184 by-virtue-of 187> #<edge291 124 of 128> #<edge292 123 downstream 128>)
   (:AVIAN-FLU :HYPHEN :DIGITS))
  "H1N1-2009" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge2 139 "up to" 141> #<edge166 67 bio-complex 69> #<edge167 67 lambda-expression 68>)
   (:AVIAN-FLU :HYPHEN :DIGITS))
  "H1N1-2009" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge30 3 "on" 4> #<edge31 3 on 4> #<edge32 4 "the" 5>) (:LOWER :HYPHEN :LOWER))
  "next-generation" MAKE-HYPHENATED-STRUCTURE)
 (((:EQUAL-SIGN #<edge15 300 wild-type 303> #<edge17 314 wild-type 317> #<edge19 319 even-if 321>
    #<edge21 376 wild-type 379> #<edge22 393 "due to" 395> #<edge24 415 "eif3" 417>
    #<edge26 415 bio-complex 417> #<edge28 2 study-bio-method 3> :EQUAL-SIGN
    #<edge29 2 study-data 3> #<edge31 3 on 4> #<edge33 4 the 5> #<edge35 6 HYPHEN 7>)
   (:EQUAL-SIGN :SINGLE-LOWER :SINGLE-DIGIT :SINGLE-LOWER :SINGLE-DIGIT :SINGLE-LOWER :SINGLE-DIGIT
    :SINGLE-LOWER :SINGLE-DIGIT :EQUAL-SIGN :SINGLE-LOWER :SINGLE-DIGIT :SINGLE-LOWER
    :SINGLE-DIGIT))
  "=π1a1π2a2=π1a1" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge340 178 "the" 179> #<edge310 156 pronoun/inanimate 157> #<edge341 178 the 179>)
   (:PERCENT :HYPHEN :PERCENT))
  "1%–58%" MAKE-HYPHENATED-STRUCTURE)
 (((:GREATER-THAN_OR_EQUAL_TO #<edge241 132 even 133>) (:GREATER-THAN_OR_EQUAL_TO :DIGITS)) "≥15"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge80 36 COMMA 37> #<edge81 38 digit-sequence 39> #<edge82 38 number 39>)
   (:DIGITS :FORWARD-SLASH :SINGLE-CAP))
  "100/R" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge391 208 COMMA 209> #<edge392 209 or 210> #<edge393 210 very 211>)
   (:LOWER :HYPHEN :LOWER))
  "well-mixed" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge161 82 following 83> #<edge162 83 terminate 84> #<edge163 58 believe 60>)
   (:LOWER :HYPHEN :LOWER))
  "next-generation" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge109 19 bio-entity 21> #<edge110 18 bio-entity 21> #<edge113 31 open-reading-frame 33>)
   (:LOWER :HYPHEN :LOWER))
  "within-group" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge68 27 start 28> #<edge69 28 bio-entity 29> #<edge70 29 "of" 30>)
   (:SINGLE-DIGIT :FORWARD-SLASH :SINGLE-CAP))
  "1/R" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge39 10 suggest 11> #<edge40 11 "the" 12> #<edge43 13 "of" 14>) (:LOWER :HYPHEN :LOWER))
  "within-group" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge132 60 to 61> #<edge133 61 reflect 62> #<edge134 62 "a" 63>) (:LOWER :HYPHEN :LOWER))
  "self-limiting" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge445 227 site 230> #<edge446 231 bio-use 233>) (:LOWER :COLON)) "broad:" :NO-EDGE)
 (((#<edge294 114 start 116> #<edge295 103 to 110> #<edge298 98 critical 103>)
   (:LOWER :HYPHEN :LOWER))
  "within-group" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge116 29 of 36> #<edge117 27 start 29> #<edge118 21 of 25>) (:LOWER :HYPHEN :LOWER))
  "so-called" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge96 33 square-brackets 36> #<edge97 37 square-brackets 40>
    #<edge98 41 square-brackets 44>)
   (:LOWER :HYPHEN :LOWER))
  "age-specific" MAKE-HYPHENATED-STRUCTURE)
 (((:SINGLE-LOWER :EQUAL-SIGN #<edge38 9 have 10>) (:SINGLE-LOWER :EQUAL-SIGN :SINGLE-LOWER)) "i=j"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge33 4 the 5> :SINGLE-LOWER #<edge34 5 terminate 6> :LOWER)
   (:SINGLE-LOWER :SINGLE-LOWER :SINGLE-LOWER :LOWER))
  "αiβjni" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge30 3 "on" 4> #<edge31 3 on 4> #<edge32 4 "the" 5>) (:SINGLE-DIGIT :HYPHEN :SINGLE-LOWER))
  "1−θ" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge25 415 protein 417> :SINGLE-LOWER #<edge26 415 bio-complex 417> #<edge27 1 sequencer 2>
    #<edge28 2 study-bio-method 3>)
   (:LOWER :SINGLE-LOWER :SINGLE-LOWER :SINGLE-LOWER :PLUS-SIGN))
  "θαiβj+" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:SINGLE-LOWER :NOT_EQUAL_TO #<edge23 393 due-to 395>)
   (:SINGLE-LOWER :NOT_EQUAL_TO :SINGLE-LOWER))
  "i≠j" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge18 319 "even if" 321> :SINGLE-LOWER #<edge19 319 even-if 321> :LOWER)
   (:SINGLE-LOWER :SINGLE-LOWER :SINGLE-LOWER :LOWER))
  "αiβjni" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge15 300 wild-type 303> #<edge16 314 "wild-type" 317> #<edge17 314 wild-type 317>)
   (:SINGLE-DIGIT :HYPHEN :SINGLE-LOWER))
  "1−θ" MAKE-HYPHENATED-STRUCTURE)
 (((:CAPITALIZED :TILDA :OPEN-CURLY-BRACKET) (:CAPITALIZED :TILDA :OPEN-CURLY-BRACKET)) "Rij~{"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge5 174 but-rather 176> :EQUAL-SIGN #<edge7 184 by-virtue-of 187>)
   (:SINGLE-LOWER :EQUAL-SIGN :SINGLE-LOWER))
  "q=a" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:EQUAL-SIGN #<edge2 139 "up to" 141> #<edge3 139 up-to 141>)
   (:EQUAL-SIGN :SINGLE-CAP :SINGLE-LOWER))
  "=Rρ" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge129 58 be 59> #<edge130 59 believe 60> #<edge131 60 "to" 61>) (:LOWER :HYPHEN :LOWER))
  "next-generation" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge6 184 "by virtue of" 187> :EQUAL-SIGN) (:CAPITALIZED :EQUAL-SIGN)) "Kb="
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:CAPITALIZED :EQUAL-SIGN) (:CAPITALIZED :EQUAL-SIGN)) "Ka=" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge116 29 of 36> #<edge117 27 start 29> #<edge118 21 of 25>) (:DIGITS :HYPHEN :LOWER))
  "two-host" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge2 139 "up to" 141> #<edge56 20 bio-entity 21> #<edge57 21 "of" 22>)
   (:AVIAN-FLU :HYPHEN :DIGITS))
  "H1N1-2009" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge89 48 COMMA 49> #<edge90 50 digit-sequence 51> #<edge91 50 number 51>)
   (:LOWER :HYPHEN :LOWER))
  "next-generation" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge48 15 close 16> #<edge49 16 proximity 17> #<edge50 17 "of" 18> #<edge52 18 "the" 19>)
   (:SINGLE-DIGIT :HYPHEN :SINGLE-LOWER :SINGLE-DIGIT))
  "1−π2" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge43 13 "of" 14> #<edge56 20 bio-entity 21>) (:PLUS-SIGN :RESIDUE-ON-PROTEIN)) "+R22"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge38 9 have 10> #<edge39 10 suggest 11> #<edge40 11 "the" 12> #<edge42 12 importance 13>)
   (:SINGLE-DIGIT :HYPHEN :SINGLE-LOWER :SINGLE-DIGIT))
  "1−π1" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge31 3 on 4> #<edge33 4 the 5> #<edge3 139 up-to 141> #<edge55 19 stop-endurant 20>)
   (:SINGLE-LOWER :SINGLE-DIGIT :BIO-ENTITY :RESIDUE-ON-PROTEIN))
  "π2=11+R12" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge25 415 protein 417> #<edge26 415 bio-complex 417> #<edge27 1 sequencer 2>
    #<edge29 2 study-data 3>)
   (:SINGLE-DIGIT :HYPHEN :SINGLE-LOWER :SINGLE-DIGIT))
  "1−π2" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge20 376 "wild-type" 379> #<edge54 19 stop 20>) (:PLUS-SIGN :RESIDUE-ON-PROTEIN)) "+R21"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge15 300 wild-type 303> #<edge16 314 "wild-type" 317> #<edge17 314 wild-type 317>
    #<edge19 319 even-if 321>)
   (:SINGLE-DIGIT :HYPHEN :SINGLE-LOWER :SINGLE-DIGIT))
  "1−π1" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge8 214 "wild-type" 217> #<edge10 274 "such as" 276> #<edge1 118 protein 120>
    #<edge53 18 the 19>)
   (:SINGLE-LOWER :SINGLE-DIGIT :BIO-ENTITY :RESIDUE-ON-PROTEIN))
  "π1=11+R11" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge5 174 but-rather 176> #<edge6 184 "by virtue of" 187> #<edge7 184 by-virtue-of 187>)
   (:DIGITS :HYPHEN :LOWER))
  "two-host" MAKE-HYPHENATED-STRUCTURE)
 (((:EQUAL-SIGN :N-ARY_PRODUCT #<edge6 184 "by virtue of" 187> :EQUAL-SIGN
    #<edge8 214 "wild-type" 217> :OPEN-CURLY-BRACKET #<edge9 214 wild-type 217> :LOWER
    :CLOSE-CURLY-BRACKET)
   (:EQUAL-SIGN :N-ARY_PRODUCT :SINGLE-LOWER :EQUAL-SIGN :DIGITS :OPEN-CURLY-BRACKET :SINGLE-LOWER
    :LOWER :CLOSE-CURLY-BRACKET))
  "=∏j=12{πjaj}" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge4 174 "but rather" 176> #<edge5 174 but-rather 176> :EQUAL-SIGN
    #<edge6 184 "by virtue of" 187>)
   (:SINGLE-LOWER :SINGLE-LOWER :EQUAL-SIGN :CAPITALIZED))
  "πj=Fj" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge37 8 bio-process 9> #<edge33 4 the 5>) (:AMOUNT-OF-TIME :SINGLE-DIGIT)) "1−s2"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge22 393 "due to" 395> #<edge23 393 due-to 395> #<edge25 415 protein 417>
    #<edge26 415 bio-complex 417>)
   (:PLUS-SIGN :SINGLE-CAP :SINGLE-DIGIT :SINGLE-LOWER))
  "+R2j" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge35 6 HYPHEN 7> #<edge21 376 wild-type 379>) (:AMOUNT-OF-TIME :SINGLE-DIGIT)) "1−s1"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge1 118 protein 120> #<edge11 274 such-as 276> #<edge13 285 close-to 287>
    #<edge14 300 "wild-type" 303>)
   (:BIO-ENTITY :SINGLE-CAP :SINGLE-DIGIT :SINGLE-LOWER))
  "=11+R1j" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge17 314 wild-type 317> #<edge18 319 "even if" 321> :LOWER) (:SINGLE-DIGIT :HYPHEN :LOWER))
  "1−sk" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:EQUAL-SIGN #<edge7 184 by-virtue-of 187> #<edge8 214 "wild-type" 217>
    #<edge9 214 wild-type 217> #<edge10 274 "such as" 276> #<edge11 274 such-as 276>
    :N-ARY_SUMMATION #<edge12 285 "close to" 287> :EQUAL-SIGN #<edge14 300 "wild-type" 303>
    #<edge15 300 wild-type 303> :LOWER)
   (:EQUAL-SIGN :SINGLE-LOWER :SINGLE-LOWER :SINGLE-LOWER :SINGLE-LOWER :PLUS-SIGN :N-ARY_SUMMATION
    :SINGLE-LOWER :EQUAL-SIGN :DIGITS :SINGLE-LOWER :LOWER))
  "=γjγj+∑k=12βkj" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge33 4 the 5> :EQUAL-SIGN #<edge35 6 HYPHEN 7>)
   (:SINGLE-LOWER :EQUAL-SIGN :NUMBER-SEQUENCE))
  "j=1,2." REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge19 319 even-if 321> #<edge21 376 wild-type 379> #<edge22 393 "due to" 395>
    #<edge36 7 reinitiation 8> #<edge28 2 study-bio-method 3> #<edge29 2 study-data 3>
    #<edge31 3 on 4>)
   (:SINGLE-LOWER :SINGLE-DIGIT :SINGLE-LOWER :AMOUNT-OF-TIME :SINGLE-DIGIT :SINGLE-LOWER
    :SINGLE-DIGIT))
  "s1x1s2x2" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge15 300 wild-type 303> #<edge17 314 wild-type 317>) (:SINGLE-LOWER :SINGLE-DIGIT)) "x2"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge11 274 such-as 276> #<edge13 285 close-to 287>) (:SINGLE-LOWER :SINGLE-DIGIT)) "x1"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:EQUAL-SIGN :N-ARY_SUMMATION :LOWER) (:EQUAL-SIGN :N-ARY_SUMMATION :LOWER)) "=∑xpj"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge46 14 the 15> :CLOSE-CURLY-BRACKET) (:SINGLE-LOWER :CLOSE-CURLY-BRACKET)) "n}"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:OPEN-CURLY-BRACKET #<edge45 14 "the" 15>) (:OPEN-CURLY-BRACKET :SINGLE-CAP)) "{X"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge14 300 "wild-type" 303> #<edge15 300 wild-type 303>) (:SINGLE-DIGIT :SINGLE-LOWER)) "2n"
  REIFY-TWO-PART-LABEL)
 (((#<edge9 214 wild-type 217> #<edge10 274 "such as" 276>) (:SINGLE-DIGIT :SINGLE-LOWER)) "1n"
  REIFY-TWO-PART-LABEL)
 (((#<edge684 371 amino-acid 372> #<edge685 372 "in" 373> #<edge687 373 location-of 374>)
   (:LOWER :HYPHEN :LOWER))
  "between-age" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge660 305 number 306> #<edge661 305 locate 307> #<edge662 319 event-relation 325>)
   (:LOWER :HYPHEN :LOWER))
  "age-specific" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge573 325 downstream 326> #<edge574 326 "of" 327> #<edge575 326 of 327>)
   (:LOWER :HYPHEN :LOWER))
  "age-specificity" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge412 229 site 230> #<edge413 230 modal 231> #<edge414 231 be 232>)
   (:LOWER :FORWARD-SLASH :SINGLE-LOWER))
  "ij/γ" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge351 191 "the" 192> #<edge352 191 the 192> #<edge353 192 bio-complex 193>
    #<edge354 193 terminate 194> #<edge356 195 "the" 196>)
   (:LOWER :HYPHEN :LOWER :HYPHEN :LOWER))
  "birth-and-death" MAKE-HYPHENATED-TRIPLE)
 (((#<edge108 14 proximity 17> #<edge109 19 bio-entity 21> #<edge110 18 bio-entity 21>)
   (:LOWER :HYPHEN :LOWER))
  "pre-existing" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge366 176 well 178> #<edge367 178 bio-complex 180> #<edge370 180 tethere 198>)
   (:LOWER :HYPHEN :LOWER))
  "between-group" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge4 174 "but rather" 176> #<edge20 376 "wild-type" 379> #<edge21 376 wild-type 379>)
   (:AVIAN-FLU :HYPHEN :DIGITS))
  "H1N1-2009" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge4 174 "but rather" 176> #<edge99 45 square-brackets 48> #<edge100 49 square-brackets 52>)
   (:AVIAN-FLU :HYPHEN :DIGITS))
  "H1N1-2009" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge38 9 have 10> #<edge39 10 suggest 11> #<edge40 11 "the" 12>) (:LOWER :HYPHEN :LOWER))
  "long-distance" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge20 376 "wild-type" 379> #<edge21 376 wild-type 379> #<edge22 393 "due to" 395>)
   (:LOWER :HYPHEN :LOWER))
  "next-generation" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge383 202 modifier 203> :N-ARY_SUMMATION #<edge384 203 reinitiation 204>)
   (:HYPHEN :N-ARY_SUMMATION :SINGLE-LOWER))
  "−∑j" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge2 139 "up to" 141> #<edge199 99 bio-entity 100> #<edge200 100 be 101>)
   (:AVIAN-FLU :HYPHEN :DIGITS))
  "H1N1-2009" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge195 96 bio-complex 97> :CLOSE-CURLY-BRACKET) (:LOWER :CLOSE-CURLY-BRACKET)) "ij}"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:OPEN-CURLY-BRACKET #<edge194 95 terminate 96>) (:OPEN-CURLY-BRACKET :SINGLE-CAP)) "{R"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge129 58 be 59> #<edge130 59 believe 60> #<edge133 61 reflect 62>) (:LOWER :HYPHEN :LOWER))
  "age-group" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge113 31 open-reading-frame 33> #<edge114 30 open-reading-frame 33> #<edge117 27 start 29>)
   (:LOWER :HYPHEN :LOWER))
  "age-group" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge83 40 COMMA 41> #<edge84 42 digit-sequence 43> #<edge85 42 number 43>)
   (:LOWER :HYPHEN :LOWER))
  "next-generation" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge43 13 "of" 14> #<edge44 13 of 14> #<edge45 14 "the" 15>) (:LOWER :HYPHEN :LOWER))
  "next-generation" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge469 255 "a" 256> #<edge470 255 a 256> #<edge471 256 downstream-segment 257>)
   (:LOWER :HYPHEN :LOWER))
  "age-specific" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge401 220 digit-sequence 221> #<edge402 220 number 221> #<edge404 221 a 222>)
   (:LOWER :HYPHEN :LOWER))
  "school-age" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge17 314 wild-type 317> #<edge395 212 COMMA 213> #<edge396 213 "the" 214>)
   (:AVIAN-FLU :HYPHEN :DIGITS))
  "H1N1-2009" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge290 130 detect 133> #<edge291 124 of 128> #<edge292 123 downstream 128>)
   (:LOWER :HYPHEN :LOWER))
  "pre-existing" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge285 104 efficiency 110> #<edge286 144 of 152> #<edge287 139 up-to 143>)
   (:LOWER :HYPHEN :LOWER))
  "age-specific" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge14 300 "wild-type" 303> #<edge275 104 efficiency 106>
    #<edge276 118 open-reading-frame 121>)
   (:AVIAN-FLU :HYPHEN :DIGITS))
  "H1N1-2009" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge11 274 such-as 276> #<edge230 124 "of" 125> #<edge231 124 of 125>)
   (:AVIAN-FLU :HYPHEN :DIGITS))
  "H1N1-2009" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge2 139 "up to" 141> #<edge41 11 the 12> #<edge42 12 importance 13>)
   (:AVIAN-FLU :HYPHEN :DIGITS))
  "H1N1-2009" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge105 9 suggest 11> #<edge107 15 proximity 17>) (:SINGLE-CAP :SINGLE-DIGIT)) "L1"
  REIFY-TWO-PART-LABEL)
 (((#<edge82 38 number 39> #<edge84 42 digit-sequence 43>) (:SINGLE-CAP :SINGLE-DIGIT)) "L1"
  REIFY-TWO-PART-LABEL)
 (((#<edge156 78 undergo 79> #<edge130 59 believe 60> #<edge157 79 only 80>)
   (:PERCENT :HYPHEN :PERCENT))
  "5%–15%" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge32 4 "the" 5> #<edge33 4 the 5> #<edge35 6 HYPHEN 7>) (:LOWER :HYPHEN :LOWER))
  "structure-function" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge122 14 proximity 25> #<edge123 15 close 16> #<edge125 9 suggest 13>)
   (:PROTEIN :HYPHEN :DIGITS))
  "Cyt-18" MAKE-HYPHENATED-PAIR)
 (((#<edge376 157 be 159> #<edge377 157 be 160> #<edge378 153 suggest 155>)
   (:LOWER :HYPHEN :LOWER))
  "single-strand" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge263 149 figure 150> #<edge265 150 digit-sequence 151>) (:SINGLE-CAP :SINGLE-DIGIT)) "L1"
  REIFY-TWO-PART-LABEL)
 (((#<edge184 88 show 89> #<edge186 90 "that" 91>) (:SINGLE-CAP :SINGLE-DIGIT)) "L1"
  REIFY-TWO-PART-LABEL)
 (((#<edge133 61 reflect 62> #<edge134 62 "a" 63> #<edge135 62 a 63>) (:LOWER :HYPHEN :LOWER))
  "end-concentration" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge111 23 open-reading-frame 25> #<edge112 22 open-reading-frame 25>
    #<edge114 30 open-reading-frame 33>)
   (:LOWER :HYPHEN :LOWER))
  "trans-splicing" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge50 17 "of" 18> #<edge51 17 of 18>) (:LOWER :COLON)) "following:" :NO-EDGE)
 (((#<edge193 94 the 95> #<edge194 95 terminate 96> #<edge195 96 bio-complex 97>)
   (:LOWER :HYPHEN :LOWER))
  "double-strand" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge141 66 the 67> #<edge3 139 up-to 141>) (:LOWER :-LIKE)) "ring-like"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge37 8 bio-process 9> #<edge38 9 have 10>) (:LOWER :COLON)) "function:" :NO-EDGE)
 (((#<edge38 9 have 10> #<edge39 10 suggest 11> #<edge42 12 importance 13>)
   (:LOWER :HYPHEN :DIGITS))
  "humans—one" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge148 72 COMMA 73> #<edge149 73 "it" 74> #<edge150 73 pronoun/inanimate 74>)
   (:SINGLE-CAP :FORWARD-SLASH :SINGLE-CAP))
  "A/U" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge115 30 open-reading-frame 36> #<edge117 27 start 29>) (:LOWER :DIGITS)) "spot42"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge32 4 "the" 5> #<edge33 4 the 5>) (:SINGLE-CAP :SINGLE-LOWER)) "Qβ"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge42 12 importance 13> #<edge43 13 "of" 14> #<edge45 14 "the" 15>)
   (:FULL :HYPHEN :SINGLE-DIGIT))
  "UUU-3" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge36 7 reinitiation 8> #<edge37 8 bio-process 9> #<edge38 9 have 10>)
   (:LOWER :HYPHEN :MIXED))
  "pre-tRNAs" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge555 307 downstream-segment 308> #<edge556 307 downstream 308> #<edge558 309 "the" 310>)
   (:LOWER :HYPHEN :LOWER))
  "cold-shock" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge366 176 well 178> #<edge367 178 bio-complex 180> #<edge369 180 tethere 183>
    #<edge370 180 tethere 198> #<edge371 178 tethere 198>)
   (:LOWER :HYPHEN :SINGLE-CAP :HYPHEN :LOWER))
  "poly-A-site" MAKE-HYPHENATED-TRIPLE)
 (((#<edge229 123 downstream 124> #<edge230 124 "of" 125> #<edge232 125 "the" 126>)
   (:LOWER :HYPHEN :LOWER))
  "trans-splicing" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge110 18 bio-entity 21> #<edge112 22 open-reading-frame 25>) (:SINGLE-CAP :SINGLE-DIGIT))
  "A1" REIFY-TWO-PART-LABEL)
 (((#<edge98 41 square-brackets 44> #<edge100 49 square-brackets 52>) (:SINGLE-CAP :SINGLE-DIGIT))
  "A1" REIFY-TWO-PART-LABEL)
 (((#<edge32 4 "the" 5> #<edge231 124 of 125>) (:PROTEIN :LOWER)) "anti-termination"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge220 116 "of" 117> #<edge221 116 of 117> #<edge223 117 the 118>) (:LOWER :HYPHEN :LOWER))
  "trans-splicing" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge49 16 proximity 17> #<edge50 17 "of" 18> #<edge51 17 of 18>) (:LOWER :HYPHEN :LOWER))
  "amino-acid" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge142 67 tethere 68> #<edge143 68 bio-complex 69> #<edge145 70 "that" 71>)
   (:LOWER :HYPHEN :LOWER))
  "cold-shock" MAKE-HYPHENATED-STRUCTURE)
 (((:FULL #<edge62 23 upstream 24>) (:FULL :SINGLE-DIGIT)) "CSDP1" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge32 4 "the" 5> #<edge33 4 the 5> #<edge35 6 HYPHEN 7>) (:CAPITALIZED :HYPHEN :LOWER))
  "Zn-finger" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge7 184 by-virtue-of 187> #<edge8 214 "wild-type" 217> #<edge10 274 "such as" 276>)
   (:CAPITALIZED :HYPHEN :LOWER))
  "Cold-shock" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge22 393 "due to" 395> #<edge23 393 due-to 395> #<edge25 415 protein 417>)
   (:LOWER :HYPHEN :LOWER))
  "cold-shock" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge93 54 digit-sequence 55> #<edge94 54 number 55> #<edge96 33 square-brackets 36>)
   (:LOWER :HYPHEN :LOWER))
  "cold-shock" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge29 2 study-data 3> #<edge30 3 "on" 4> #<edge32 4 "the" 5>) (:LOWER :HYPHEN :LOWER))
  "cold-shock" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge249 137 be 138> #<edge250 138 move-something-somewhere 139>
    #<edge252 141 digit-sequence 142>)
   (:LOWER :HYPHEN :LOWER))
  "trans-splicing" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge232 125 "the" 126> #<edge234 126 stop 127>) (:SINGLE-CAP :SINGLE-DIGIT)) "L1"
  REIFY-TWO-PART-LABEL)
 (((#<edge201 101 comparative 102> #<edge202 102 critical 103> #<edge204 103 to 104>)
   (:LOWER :HYPHEN :LOWER))
  "trans-splicing" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge72 30 "the" 31> #<edge73 30 the 31> #<edge75 31 downstream 32>) (:LOWER :HYPHEN :LOWER))
  "trans-splicing" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge132 60 to 61> #<edge133 61 reflect 62> #<edge134 62 "a" 63>) (:LOWER :HYPHEN :LOWER))
  "strand-annealing" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge92 52 COMMA 53> #<edge93 54 digit-sequence 55> #<edge94 54 number 55>)
   (:LOWER :HYPHEN :LOWER))
  "retroviral-derived" MAKE-HYPHENATED-STRUCTURE)
 (((:MIXED #<edge235 126 stop-endurant 127>) (:MIXED :SINGLE-DIGIT)) "tdSH1"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:MIXED #<edge200 100 be 101>) (:MIXED :SINGLE-DIGIT)) "tdSH1" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge171 79 limit 81> #<edge160 82 following-adj 83>) (:RESIDUE-ON-PROTEIN :SINGLE-CAP))
  "C865U" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:MIXED #<edge141 66 the 67>) (:MIXED :SINGLE-DIGIT)) "tdSH1" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge91 50 number 51> #<edge92 52 COMMA 53> #<edge93 54 digit-sequence 55>)
   (:LOWER :HYPHEN :LOWER))
  "base-pairing" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge279 126 bio-entity 128> #<edge280 125 bio-entity 128> #<edge282 146 position 148>)
   (:LOWER :HYPHEN :LOWER))
  "trans-splicing" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge267 85 subordinate-conjunction 87> #<edge269 106 parentheses 110>)
   (:SINGLE-CAP :SINGLE-DIGIT))
  "L1" REIFY-TWO-PART-LABEL)
 (((#<edge201 101 comparative 102> #<edge202 102 critical 103> #<edge203 103 "to" 104>
    #<edge204 103 to 104> #<edge206 105 efficiency 106>)
   (:LOWER :HYPHEN :LOWER :HYPHEN :LOWER))
  "trans-intron-constructs" MAKE-HYPHENATED-TRIPLE)
 (((#<edge173 82 following 84> #<edge175 73 ability 77>) (:LOWER :SINGLE-DIGIT)) "exon2"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge111 23 open-reading-frame 25> #<edge113 31 open-reading-frame 33>)
   (:LOWER :SINGLE-DIGIT))
  "exon1" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge1 118 protein 120> #<edge53 18 the 19> #<edge3 139 up-to 141>)
   (:PROTEIN :HYPHEN :MOLECULE))
  "P4-P6" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge22 393 "due to" 395> #<edge23 393 due-to 395> #<edge25 415 protein 417>)
   (:CAPITALIZED :HYPHEN :CAPITALIZED))
  "Trans-Splicing" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge105 9 suggest 11> #<edge106 11 importance 13> #<edge107 15 proximity 17>)
   (:LOWER :HYPHEN :LOWER))
  "short-exon" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge202 102 critical 103> #<edge203 103 "to" 104> #<edge204 103 to 104>)
   (:LOWER :HYPHEN :LOWER))
  "single-turnover" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge159 81 movement 82> #<edge160 82 following-adj 83> #<edge161 82 following 83>)
   (:LOWER :HYPHEN :LOWER))
  "single-turnover" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge149 73 "it" 74> #<edge150 73 pronoun/inanimate 74> #<edge151 74 modal 75>)
   (:LOWER :HYPHEN :LOWER))
  "well-studied" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge76 32 protein 33> #<edge77 32 open-reading-frame 33> #<edge78 34 digit-sequence 35>)
   (:LOWER :HYPHEN :LOWER))
  "ribozyme-substrate" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge15 300 wild-type 303> #<edge16 314 "wild-type" 317> #<edge17 314 wild-type 317>)
   (:SINGLE-DIGIT :HYPHEN :LOWER))
  "3-way" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge11 274 such-as 276> #<edge12 285 "close to" 287> #<edge13 285 close-to 287>)
   (:LOWER :HYPHEN :LOWER))
  "ribozyme-substrate" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge165 62 mobility 65> #<edge166 67 bio-complex 69> #<edge167 67 lambda-expression 68>)
   (:LOWER :HYPHEN :LOWER))
  "above-described" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge74 31 downstream-segment 32> #<edge75 31 downstream 32>
    #<edge77 32 open-reading-frame 33>)
   (:PROTEIN :HYPHEN :DIGITS))
  "Cyt-19" MAKE-HYPHENATED-PAIR)
 (((#<edge5 174 but-rather 176> #<edge67 26 the 27> #<edge7 184 by-virtue-of 187>)
   (:PROTEIN :HYPHEN :MOLECULE))
  "P4-P6" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge49 16 proximity 17> #<edge50 17 "of" 18> #<edge52 18 "the" 19>)
   (:PROTEIN :HYPHEN :DIGITS))
  "Cyt-18" MAKE-HYPHENATED-PAIR)
 (((#<edge196 97 and 98> #<edge198 98 the 99> #<edge199 99 bio-entity 100> #<edge200 100 be 101>)
   (:HYPHEN :LOWER :HYPHEN :LOWER))
  "-splice-site" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge50 17 "of" 18> #<edge51 17 of 18> #<edge52 18 "the" 19>) (:LOWER :HYPHEN :LOWER))
  "base-pairing" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge37 8 bio-process 9> #<edge38 9 have 10> #<edge5 174 but-rather 176>)
   (:PROTEIN :HYPHEN :RNA))
  "protein-ribonucleic acid" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge249 137 be 138> #<edge250 138 move-something-somewhere 139>
    #<edge252 141 digit-sequence 142>)
   (:SINGLE-CAP :HYPHEN :PROTEIN))
  "A-form" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge142 67 tethere 68> #<edge143 68 bio-complex 69> #<edge1 118 protein 120>)
   (:LOWER :HYPHEN :BIO-ENTITY))
  "non-Watson-Crick" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge310 156 pronoun/inanimate 157> #<edge311 157 be 158> #<edge313 159 solely 160>)
   (:LOWER :HYPHEN :LOWER))
  "base-pairs" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge277 117 open-reading-frame 121> #<edge278 121 place 123> #<edge280 125 bio-entity 128>)
   (:LOWER :HYPHEN :LOWER))
  "base-pairs" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge260 146 modifier 147> #<edge261 147 position-bio-process 148> #<edge263 149 figure 150>)
   (:LOWER :HYPHEN :LOWER))
  "base-pair" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge227 122 place 123> #<edge228 123 downstream-segment 124> #<edge230 124 "of" 125>)
   (:LOWER :HYPHEN :LOWER))
  "base-pairs" MAKE-HYPHENATED-STRUCTURE)
 (((:CAPITALIZED #<edge224 120 protein 121> #<edge226 121 be 122>)
   (:CAPITALIZED :HYPHEN :CAPITALIZED))
  "Watson-Crick" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge216 113 "the" 114> #<edge217 113 the 114> #<edge219 115 bio-entity 116>)
   (:SINGLE-CAP :HYPHEN :PROTEIN))
  "A-form" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge311 157 be 158> #<edge312 158 not 159> #<edge314 160 "the" 161>)
   (:PROTEIN :HYPHEN :DIGITS))
  "Cyt-18" MAKE-HYPHENATED-PAIR)
 (((#<edge139 65 of 66> #<edge140 66 "the" 67> #<edge142 67 tethere 68>)
   (:PROTEIN :HYPHEN :DIGITS))
  "Cyt-19" MAKE-HYPHENATED-PAIR)
 (((#<edge324 167 bio-entity 168> #<edge325 167 bio-entity 168>) (:LOWER :FORWARD-SLASH)) "and/"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge244 133 when 134> #<edge245 134 "the" 135> #<edge246 134 the 135>)
   (:LOWER :HYPHEN :LOWER))
  "long-lived" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge79 34 number 35> #<edge80 36 COMMA 37> #<edge82 38 number 39> #<edge85 42 number 43>
    #<edge89 48 COMMA 49>)
   (:FULL :HYPHEN :PROTEIN :HYPHENATED-NUMBER :PROTEIN))
  "DE-AC52-07NA27344" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge63 24 protein 25> #<edge64 24 open-reading-frame 25> #<edge66 26 "the" 27>)
   (:LOWER :HYPHEN :LOWER))
  "log-odds" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge52 18 "the" 19> #<edge53 18 the 19> #<edge54 19 stop 20>) (:LOWER :HYPHEN :LOWER))
  "log-likelihood" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge38 9 have 10> #<edge39 10 suggest 11> #<edge41 11 the 12>) (:LOWER :HYPHEN :LOWER))
  "log-odds" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge164 60 reflect 62> #<edge165 62 mobility 65> #<edge167 67 lambda-expression 68>)
   (:LOWER :HYPHEN :LOWER))
  "log-odds" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge105 9 suggest 11> #<edge106 11 importance 13> #<edge108 14 proximity 17>)
   (:LOWER :HYPHEN :LOWER))
  "log-odds" MAKE-HYPHENATED-STRUCTURE)
 (((:FOR_ALL #<edge52 18 "the" 19> :ELEMENT_OF #<edge54 19 stop 20>)
   (:FOR_ALL :SINGLE-LOWER :ELEMENT_OF :SINGLE-CAP))
  "∀k∈S" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:CAPITALIZED :EQUAL-SIGN #<edge51 17 of 18>) (:CAPITALIZED :EQUAL-SIGN :SINGLE-DIGIT)) "Xk=1"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge9 214 wild-type 217> :EQUAL-SIGN #<edge48 15 close 16>)
   (:BIO-ENTITY :EQUAL-SIGN :SINGLE-DIGIT))
  "Yi=0|Xj=0" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:FOR_ALL #<edge43 13 "of" 14> :ELEMENT_OF #<edge45 14 "the" 15>)
   (:FOR_ALL :SINGLE-LOWER :ELEMENT_OF :SINGLE-CAP))
  "∀k∈S" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:CAPITALIZED :EQUAL-SIGN #<edge42 12 importance 13>) (:CAPITALIZED :EQUAL-SIGN :SINGLE-DIGIT))
  "Xk=1" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge33 4 the 5> :N-ARY_SUMMATION :SINGLE-LOWER #<edge34 5 terminate 6> :CAPITALIZED
    :EQUAL-SIGN #<edge36 7 reinitiation 8> #<edge38 9 have 10>)
   (:PLUS-SIGN :N-ARY_SUMMATION :SINGLE-LOWER :COLON :CAPITALIZED :EQUAL-SIGN :SINGLE-DIGIT
    :LOWER))
  "+∑i:Yi=0log" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:FOR_ALL #<edge30 3 "on" 4> :ELEMENT_OF #<edge32 4 "the" 5>)
   (:FOR_ALL :SINGLE-LOWER :ELEMENT_OF :SINGLE-CAP))
  "∀k∈S" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:CAPITALIZED :EQUAL-SIGN #<edge29 2 study-data 3>) (:CAPITALIZED :EQUAL-SIGN :SINGLE-DIGIT))
  "Xk=1" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge5 174 but-rather 176> :EQUAL-SIGN #<edge26 415 bio-complex 417>)
   (:BIO-ENTITY :EQUAL-SIGN :SINGLE-DIGIT))
  "Yi=1|Xj=0" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:FOR_ALL #<edge21 376 wild-type 379> :ELEMENT_OF #<edge23 393 due-to 395>)
   (:FOR_ALL :SINGLE-LOWER :ELEMENT_OF :SINGLE-CAP))
  "∀k∈S" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:CAPITALIZED :EQUAL-SIGN #<edge20 376 "wild-type" 379>)
   (:CAPITALIZED :EQUAL-SIGN :SINGLE-DIGIT))
  "Xk=1" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge3 139 up-to 141> :EQUAL-SIGN #<edge17 314 wild-type 317>)
   (:BIO-ENTITY :EQUAL-SIGN :SINGLE-DIGIT))
  "Yi=1|Xj=1" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge1 118 protein 120> :EQUAL-SIGN :N-ARY_SUMMATION :SINGLE-LOWER #<edge10 274 "such as" 276>
    :CAPITALIZED :EQUAL-SIGN #<edge12 285 "close to" 287> #<edge14 300 "wild-type" 303>)
   (:BIO-ENTITY :EQUAL-SIGN :N-ARY_SUMMATION :SINGLE-LOWER :COLON :CAPITALIZED :EQUAL-SIGN
    :SINGLE-DIGIT :LOWER))
  "λj=∑i:Yi=1log" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge13 285 close-to 287> #<edge14 300 "wild-type" 303>) (:SINGLE-LOWER :SINGLE-LOWER)) "λj"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge7 184 by-virtue-of 187> #<edge8 214 "wild-type" 217> #<edge10 274 "such as" 276>)
   (:LOWER :HYPHEN :LOWER))
  "log-odds" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge49 16 proximity 17> #<edge50 17 "of" 18> #<edge51 17 of 18>) (:LOWER :HYPHEN :LOWER))
  "log-likelihood" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge32 4 "the" 5> #<edge33 4 the 5> :LOWER #<edge3 139 up-to 141> #<edge35 6 HYPHEN 7>
    #<edge37 8 bio-process 9> #<edge38 9 have 10> #<edge39 10 suggest 11>
    #<edge5 174 but-rather 176>)
   (:DIGITS :PLUS-SIGN :LOWER :BIO-ENTITY :SINGLE-LOWER :SINGLE-DIGIT :CAPITALIZED :PLUS-SIGN
    :BIO-ENTITY))
  "11+ea0+a1Si+a2Tij+a3Bij+a4Qij" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge25 415 protein 417> :N-ARY_PRODUCT #<edge26 415 bio-complex 417> #<edge27 1 sequencer 2>
    #<edge28 2 study-bio-method 3> :EQUAL-SIGN #<edge30 3 "on" 4>)
   (:HYPHEN :N-ARY_PRODUCT :SINGLE-LOWER :COLON :CAPITALIZED :EQUAL-SIGN :SINGLE-DIGIT))
  "−∏j:Xj=1" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge1 118 protein 120> :EQUAL-SIGN #<edge22 393 "due to" 395>)
   (:BIO-ENTITY :EQUAL-SIGN :SINGLE-DIGIT))
  "Yi=0|Xj=1" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge13 285 close-to 287> #<edge14 300 "wild-type" 303> :N-ARY_PRODUCT
    #<edge15 300 wild-type 303> #<edge16 314 "wild-type" 317> #<edge17 314 wild-type 317>
    :EQUAL-SIGN #<edge40 11 "the" 12>)
   (:SINGLE-DIGIT :HYPHEN :N-ARY_PRODUCT :SINGLE-LOWER :COLON :CAPITALIZED :EQUAL-SIGN
    :POINT-MUTATION))
  "1−∏j:Xj=1P" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:CAPITALIZED :EQUAL-SIGN #<edge10 274 "such as" 276> :VERTICAL-BAR #<edge11 274 such-as 276>)
   (:CAPITALIZED :EQUAL-SIGN :SINGLE-DIGIT :VERTICAL-BAR :SINGLE-CAP))
  "Yi=1|X" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge17 314 wild-type 317> #<edge19 319 even-if 321> #<edge20 376 "wild-type" 379>
    #<edge21 376 wild-type 379> #<edge5 174 but-rather 176> #<edge22 393 "due to" 395>
    #<edge23 393 due-to 395> #<edge25 415 protein 417> #<edge27 1 sequencer 2>
    #<edge28 2 study-bio-method 3>)
   (:SINGLE-LOWER :SINGLE-DIGIT :CAPITALIZED :PLUS-SIGN :PROTEIN :CAPITALIZED :PLUS-SIGN
    :SINGLE-LOWER :SINGLE-DIGIT :PROTEIN))
  "a2Tij+a3Bij+a4Qij" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge3 139 up-to 141> #<edge14 300 "wild-type" 303> #<edge15 300 wild-type 303>)
   (:BIO-ENTITY :PLUS-SIGN :CAPITALIZED))
  "a0+a1Si+Xj" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:EQUAL-SIGN #<edge10 274 "such as" 276> #<edge11 274 such-as 276>)
   (:EQUAL-SIGN :DIGITS :PLUS-SIGN))
  "=11+" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge5 174 but-rather 176> #<edge6 184 "by virtue of" 187> #<edge8 214 "wild-type" 217>)
   (:LOWER :HYPHEN :LOWER))
  "probe-target" MAKE-HYPHENATED-STRUCTURE)
 (((:CAPITALIZED :EQUAL-SIGN #<edge18 319 "even if" 321> :VERTICAL-BAR #<edge19 319 even-if 321>)
   (:CAPITALIZED :EQUAL-SIGN :SINGLE-DIGIT :VERTICAL-BAR :CAPITALIZED))
  "Yi=0|Xj" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge13 285 close-to 287> :CAPITALIZED :EQUAL-SIGN #<edge21 376 wild-type 379>)
   (:COLON :CAPITALIZED :EQUAL-SIGN :POINT-MUTATION))
  ":Yi=0P" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:N-ARY_PRODUCT :SINGLE-LOWER) (:N-ARY_PRODUCT :SINGLE-LOWER)) "∏i" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:CAPITALIZED :EQUAL-SIGN #<edge11 274 such-as 276> :VERTICAL-BAR #<edge12 285 "close to" 287>)
   (:CAPITALIZED :EQUAL-SIGN :SINGLE-DIGIT :VERTICAL-BAR :CAPITALIZED))
  "Yi=1|Xj" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge6 184 "by virtue of" 187> :CAPITALIZED :EQUAL-SIGN #<edge20 376 "wild-type" 379>)
   (:COLON :CAPITALIZED :EQUAL-SIGN :POINT-MUTATION))
  ":Yi=1P" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:EQUAL-SIGN :N-ARY_PRODUCT :SINGLE-LOWER) (:EQUAL-SIGN :N-ARY_PRODUCT :SINGLE-LOWER)) "=∏i"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge116 29 of 36> #<edge118 21 of 25>) (:SINGLE-CAP :SINGLE-DIGIT)) "X2"
  REIFY-TWO-PART-LABEL)
 (((#<edge112 22 open-reading-frame 25> #<edge114 30 open-reading-frame 33>)
   (:SINGLE-CAP :SINGLE-DIGIT))
  "X1" REIFY-TWO-PART-LABEL)
 (((#<edge16 314 "wild-type" 317> #<edge5 174 but-rather 176> #<edge18 319 "even if" 321>
    #<edge20 376 "wild-type" 379> :CAPITALIZED #<edge21 376 wild-type 379> #<edge23 393 due-to 395>
    #<edge25 415 protein 417> #<edge26 415 bio-complex 417> #<edge27 1 sequencer 2>
    #<edge7 184 by-virtue-of 187> #<edge28 2 study-bio-method 3> #<edge29 2 study-data 3>
    #<edge31 3 on 4> #<edge33 4 the 5> #<edge34 5 terminate 6>)
   (:SINGLE-LOWER :BIO-ENTITY :SINGLE-LOWER :SINGLE-DIGIT :CAPITALIZED :PLUS-SIGN :SINGLE-LOWER
    :SINGLE-DIGIT :CAPITALIZED :PLUS-SIGN :PROTEIN :CAPITALIZED :PLUS-SIGN :SINGLE-LOWER
    :SINGLE-DIGIT :PROTEIN))
  "a0+a1Sj+a2Tij+a3Bij+a4Qij" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge1 118 protein 120> #<edge10 274 "such as" 276>) (:BIO-ENTITY :LOWER)) "Yik=1|target"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge18 319 "even if" 321> #<edge1 118 protein 120> #<edge20 376 "wild-type" 379>
    #<edge22 393 "due to" 395> #<edge23 393 due-to 395>)
   (:SINGLE-LOWER :BIO-ENTITY :SINGLE-LOWER :SINGLE-DIGIT :CAPITALIZED))
  "a0+a1Si" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:EQUAL-SIGN #<edge13 285 close-to 287> #<edge14 300 "wild-type" 303>
    #<edge15 300 wild-type 303>)
   (:EQUAL-SIGN :DIGITS :PLUS-SIGN :PROTEIN))
  "=11+exp" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge3 139 up-to 141> :EQUAL-SIGN #<edge5 174 but-rather 176> :VERTICAL-BAR)
   (:CAPITALIZED :EQUAL-SIGN :SINGLE-DIGIT :VERTICAL-BAR))
  "Yik=1|" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge38 9 have 10> #<edge39 10 suggest 11>) (:LOWER :COLON)) "model:" :NO-EDGE)
 (((#<edge1 118 protein 120> #<edge10 274 "such as" 276>) (:PROTEIN :LOWER)) "log2ft"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge2 139 "up to" 141> :EQUAL-SIGN :N-ARY_SUMMATION #<edge3 139 up-to 141>
    #<edge4 174 "but rather" 176> #<edge5 174 but-rather 176> :NOT_EQUAL_TO
    #<edge7 184 by-virtue-of 187> #<edge8 214 "wild-type" 217> #<edge9 214 wild-type 217>)
   (:CAPITALIZED :EQUAL-SIGN :N-ARY_SUMMATION :SINGLE-LOWER :COLON :LOWER :NOT_EQUAL_TO
    :SINGLE-DIGIT :HYPHEN :LOWER))
  "Si=∑t:ft≠0−ft" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge222 117 "the" 118> #<edge223 117 the 118>) (:FORWARD-SLASH :SINGLE-CAP)) "/L" NIL)
 (((#<edge213 111 that 112> :ASTERISK #<edge214 112 when 113>) (:DIGITS :ASTERISK :SINGLE-CAP))
  "69.4°C" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge144 69 semicolon 70> #<edge145 70 "that" 71> #<edge147 71 be 72>)
   (:LOWER :HYPHEN :LOWER))
  "probe-target" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge235 126 stop-endurant 127> :ASTERISK #<edge236 127 bio-entity 128>)
   (:DIGITS :ASTERISK :SINGLE-CAP))
  "96°C" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge3 139 up-to 141> #<edge21 376 wild-type 379>) (:BIO-ENTITY :FORWARD-SLASH)) "gov/geo/"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge13 285 close-to 287> #<edge278 121 place 123>) (:CELL-LINE :PROTEIN)) "Cy3NHS"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge272 95 lambda-expression 96> #<edge273 94 bio-complex 97> #<edge274 98 bio-entity 100>)
   (:LOWER :HYPHEN :NUCLEOTIDE))
  "aminoallyl-dUTP" MAKE-HYPHENATED-STRUCTURE)
 (((:CAPITALIZED #<edge124 13 of 25> #<edge126 3 on 9>) (:CAPITALIZED :HYPHEN :SINGLE-DIGIT))
  "Cy-3" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge88 46 number 47> :TRADE_MARK_SIGN) (:CAPITALIZED :TRADE_MARK_SIGN)) "Superscript™"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge80 36 COMMA 37> #<edge81 38 digit-sequence 39> #<edge82 38 number 39>)
   (:LOWER :HYPHEN :LOWER))
  "double-strand" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge243 133 when 134> :EQUAL-SIGN #<edge247 135 start 136>) (:PROTEIN :EQUAL-SIGN :PROTEIN))
  "acc=GPL3429" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge7 184 by-virtue-of 187> #<edge237 128 COMMA 129> #<edge238 129 reinitiation 130>
    #<edge239 130 be 131> #<edge240 131 detect 132> #<edge241 132 even 133>)
   (:BIO-ENTITY :LOWER :FORWARD-SLASH :LOWER :FORWARD-SLASH :PROTEIN))
  "gov/geo/query/acc" PACKAGE-SLASHED-SEQUENCE)
 (((:TILDA #<edge13 285 close-to 287>) (:TILDA :DIGITS)) "~2,600" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge163 58 believe 60> :MULTIPLICATION-SIGN) (:SINGLE-DIGIT :MULTIPLICATION-SIGN)) "4×"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge3 139 up-to 141> :LOWER) (:|HTTP://| :LOWER)) "http://amigo" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge78 34 digit-sequence 35> #<edge79 34 number 35> #<edge81 38 digit-sequence 39>)
   (:PROTEIN :COLON :DIGITS))
  "GO:0009615" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge34 5 terminate 6> #<edge35 6 HYPHEN 7> #<edge36 7 reinitiation 8>)
   (:FULL :FORWARD-SLASH :MIXED))
  "DNA/mRNA" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge402 220 number 221> #<edge403 221 amino-acid 222> #<edge404 221 a 222>)
   (:LOWER :HYPHEN :LOWER))
  "target-specificity" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge388 206 bio-entity 207> #<edge390 207 at 208>) (:CAPITALIZED :SINGLE-DIGIT)) "Primer3"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge354 193 terminate 194> #<edge356 195 "the" 196>) (:CAPITALIZED :SINGLE-DIGIT)) "Primer3"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:GREEK_CAPITAL_LETTER_DELTA :CAPITALIZED) (:GREEK_CAPITAL_LETTER_DELTA :CAPITALIZED))
  "ΔGhomodimer" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:GREEK_CAPITAL_LETTER_DELTA :CAPITALIZED) (:GREEK_CAPITAL_LETTER_DELTA :CAPITALIZED))
  "ΔGhairpin" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:GREEK_CAPITAL_LETTER_DELTA #<edge165 62 mobility 65>)
   (:GREEK_CAPITAL_LETTER_DELTA :CAPITALIZED))
  "ΔGcomplement" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:GREEK_CAPITAL_LETTER_DELTA #<edge164 60 reflect 62>)
   (:GREEK_CAPITAL_LETTER_DELTA :CAPITALIZED))
  "ΔGadjusted" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:GREEK_CAPITAL_LETTER_DELTA :CAPITALIZED) (:GREEK_CAPITAL_LETTER_DELTA :CAPITALIZED))
  "ΔGhairpin" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:GREEK_CAPITAL_LETTER_DELTA :CAPITALIZED) (:GREEK_CAPITAL_LETTER_DELTA :CAPITALIZED))
  "ΔGhomodimer" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge131 60 "to" 61> :GREATER-THAN_OR_EQUAL_TO #<edge133 61 reflect 62> :ASTERISK
    #<edge134 62 "a" 63>)
   (:PROTEIN :GREATER-THAN_OR_EQUAL_TO :DIGITS :ASTERISK :SINGLE-CAP))
  "Tm≥80°C" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:GREEK_CAPITAL_LETTER_DELTA #<edge93 54 digit-sequence 55>)
   (:GREEK_CAPITAL_LETTER_DELTA :SINGLE-CAPITALIZED-LETTER))
  "ΔG's" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:GREEK_CAPITAL_LETTER_DELTA #<edge58 21 of 22>) (:GREEK_CAPITAL_LETTER_DELTA :SINGLE-CAP)) "ΔG"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge51 17 of 18> #<edge52 18 "the" 19> #<edge54 19 stop 20>) (:LOWER :HYPHEN :LOWER))
  "probe-target" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge34 5 terminate 6> #<edge36 7 reinitiation 8>) (:CAPITALIZED :SINGLE-DIGIT)) "Primer3"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge114 30 open-reading-frame 33> #<edge115 30 open-reading-frame 36> #<edge116 29 of 36>)
   (:DIGITS :HYPHEN :LOWER))
  "70-mers" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge84 42 digit-sequence 43> #<edge85 42 number 43> #<edge86 44 COMMA 45>)
   (:DIGITS :HYPHEN :PROTEIN))
  "70-mer" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge44 13 of 14> #<edge45 14 "the" 15> #<edge46 14 the 15>) (:LOWER :HYPHEN :LOWER))
  "pre-selection" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge214 112 when 113> #<edge215 112 when 113>) (:LOWER :COLON)) "set:" :NO-EDGE)
 (((#<edge102 1 study-bio-method 3> #<edge103 5 bio-process 9> #<edge104 4 bio-process 9>)
   (:LOWER :HYPHEN :LOWER))
  "whole-genome" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge79 34 number 35> #<edge80 36 COMMA 37> #<edge81 38 digit-sequence 39>)
   (:LOWER :HYPHEN :LOWER))
  "background-corrected" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge53 18 the 19> #<edge54 19 stop 20> #<edge3 139 up-to 141>) (:LOWER :HYPHEN :BIO-METHOD))
  "log-normal distribution" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge46 14 the 15> #<edge47 15 close-bio-process 16> #<edge48 15 close 16>)
   (:SINGLE-LOWER :HYPHEN :LOWER))
  "z-test" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge704 374 of 383> #<edge12 285 "close to" 287>) (:PROTEIN :-LIKE)) "TTV-like"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge437 220 point-mutation 225> :UNDER-BAR #<edge439 218 parentheses 226>)
   (:SINGLE-DIGIT :UNDER-BAR :SINGLE-DIGIT))
  "2_1" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge325 167 bio-entity 168> #<edge326 168 "per" 169> #<edge328 169 bio-entity 170>)
   (:LOWER :HYPHEN :LOWER))
  "log-odds" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge300 88 show 90> :UNDER-BAR #<edge302 85 show 90>)
   (:SINGLE-DIGIT :UNDER-BAR :SINGLE-DIGIT))
  "2_4" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge290 130 detect 133> #<edge292 123 downstream 128> #<edge293 116 of 121> :MIXED)
   (:SINGLE-CAP :SINGLE-DIGIT :HYPHEN :MIXED))
  "O2-ColV" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge282 146 position 148> :UNDER-BAR #<edge284 145 position 152>)
   (:SINGLE-DIGIT :UNDER-BAR :SINGLE-DIGIT))
  "2_3" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge82 38 number 39> :UNDER-BAR #<edge84 42 digit-sequence 43>)
   (:SINGLE-DIGIT :UNDER-BAR :SINGLE-DIGIT))
  "1_5" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge77 32 open-reading-frame 33> #<edge78 34 digit-sequence 35>) (:LOWER :COLON)) "later:"
  :NO-EDGE)
 (((#<edge378 153 suggest 155> #<edge379 155 that 156> #<edge380 199 however 200>)
   (:LOWER :FORWARD-SLASH :LOWER))
  "kcal/mol" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge290 130 detect 133> #<edge291 124 of 128> #<edge292 123 downstream 128>)
   (:LOWER :HYPHEN :LOWER))
  "cross-hybridization" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge135 62 a 63> #<edge136 63 restrict 64> #<edge138 65 "of" 66>) (:LOWER :HYPHEN :LOWER))
  "log-odds" MAKE-HYPHENATED-STRUCTURE)
 (((:FULL #<edge200 100 be 101> :FULL) (:FULL :HYPHEN :FULL)) "HCML-ARV"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge179 57 believe 60> #<edge180 85 however 86>) (:LOWER :COLON)) "following:" :NO-EDGE)
 (((:FULL #<edge477 261 digit-sequence 262>) (:FULL :DIGITS)) "HTCC2143"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge466 253 bio-entity 254> #<edge468 254 at 255> #<edge469 255 "a" 256>)
   (:PROTEIN :SINGLE-DIGIT :SINGLE-LOWER))
  "TM7b" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge360 195 bio-entity 197> #<edge361 191 bio-complex 197> #<edge362 189 between 191>)
   (:LOWER :HYPHEN :LOWER))
  "cross-hybridization" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge254 142 bio-entity 143> #<edge255 143 downstream-segment 144> #<edge257 144 "of" 145>)
   (:LOWER :HYPHEN :LOWER))
  "log-odds" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge211 110 and 111> #<edge213 111 that 112>) (:PROTEIN :SINGLE-DIGIT)) "TM7"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge175 73 ability 77> #<edge176 70 be 72> #<edge177 65 of 69>) (:LOWER :HYPHEN :LOWER))
  "cross-hybridization" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge119 17 of 21> #<edge120 14 proximity 21> #<edge121 15 close 16>)
   (:LOWER :PLUS-SIGN :FULL))
  "vaccinia+HHV" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:FULL #<edge165 62 mobility 65> #<edge167 67 lambda-expression 68>) (:FULL :HYPHEN :DIGITS))
  "VR-26" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge7 184 by-virtue-of 187> #<edge218 114 start 115>) (:VIRUS :SINGLE-CAP)) "HHV6B"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge5 174 but-rather 176> #<edge217 113 the 114>) (:VIRUS :SINGLE-CAP))
  "human herpesvirus 6B" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge138 65 "of" 66> #<edge139 65 of 66> #<edge140 66 "the" 67>) (:LOWER :HYPHEN :LOWER))
  "cross-hybridize" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge9 214 wild-type 217> #<edge10 274 "such as" 276> #<edge12 285 "close to" 287>)
   (:LOWER :HYPHEN :LOWER))
  "left-hand" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge103 5 bio-process 9> #<edge104 4 bio-process 9> #<edge105 9 suggest 11>)
   (:LOWER :HYPHEN :LOWER))
  "highest-scoring" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge77 32 open-reading-frame 33> #<edge78 34 digit-sequence 35> #<edge80 36 COMMA 37>)
   (:LOWER :HYPHEN :LOWER))
  "log-odds" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge64 24 open-reading-frame 25> #<edge65 25 and 26> #<edge67 26 the 27>)
   (:LOWER :HYPHEN :LOWER))
  "right-hand" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge48 15 close 16> #<edge49 16 proximity 17> #<edge50 17 "of" 18>) (:LOWER :HYPHEN :LOWER))
  "log-likelihood" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge429 243 comparative-modifier 244> #<edge430 243 lower-adj 244>
    #<edge432 243 lower-note 244>)
   (:LOWER :HYPHEN :LOWER))
  "probe-target" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge266 150 number 151> #<edge267 85 subordinate-conjunction 87>
    #<edge270 148 parentheses 152> #<edge271 95 bio-complex 97> #<edge272 95 lambda-expression 96>)
   (:LOWER :HYPHEN :DIGITS :HYPHEN :LOWER))
  "leave-one-out" MAKE-HYPHENATED-TRIPLE)
 (((#<edge180 85 however 86> #<edge181 86 COMMA 87> #<edge183 87 pronoun/first/plural 88>)
   (:LOWER :HYPHEN :LOWER))
  "probe-target" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge138 65 "of" 66> #<edge139 65 of 66> #<edge141 66 the 67>) (:LOWER :HYPHEN :LOWER))
  "probe-target" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge52 18 "the" 19> #<edge53 18 the 19> #<edge55 19 stop-endurant 20>)
   (:LOWER :HYPHEN :LOWER))
  "probe-target" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge321 165 and 166> #<edge322 166 stop 167> #<edge324 167 bio-entity 168>)
   (:LOWER :HYPHEN :LOWER))
  "log-odds" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge309 156 "it" 157> #<edge310 156 pronoun/inanimate 157> #<edge312 158 not 159>)
   (:LOWER :HYPHEN :LOWER))
  "log-odds" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge132 60 to 61> #<edge133 61 reflect 62> #<edge135 62 a 63>) (:LOWER :HYPHEN :LOWER))
  "probe-target" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge124 13 of 25> #<edge125 9 suggest 13> #<edge127 57 "this" 58>) (:LOWER :HYPHEN :LOWER))
  "probe-target" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge367 178 bio-complex 180> #<edge368 181 tethere 183> #<edge369 180 tethere 183>)
   (:LOWER :HYPHEN :LOWER))
  "cross-hybridization" MAKE-HYPHENATED-STRUCTURE)
 (((:TILDA #<edge209 108 digit-sequence 109>) (:TILDA :DIGITS)) "~900" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:TILDA #<edge203 103 "to" 104>) (:TILDA :DIGITS)) "~3500" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:TILDA #<edge198 98 the 99>) (:TILDA :DIGITS)) "~2200" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:TILDA #<edge192 94 "the" 95>) (:TILDA :DIGITS)) "~38,000" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge216 113 "the" 114> #<edge217 113 the 114> #<edge218 114 start 115>)
   (:LOWER :FORWARD-SLASH :LOWER))
  "detection/discovery" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge17 314 wild-type 317> #<edge18 319 "even if" 321> #<edge19 319 even-if 321>)
   (:LOWER :HYPHEN :LOWER))
  "high-density" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge158 80 limit 81> #<edge159 81 movement 82> #<edge160 82 following-adj 83>)
   (:PROTEIN :HYPHEN :LOWER))
  "TOFI-beta" PACKAGE-QUALIFYING-PAIR)
 (((#<edge127 57 "this" 58> #<edge128 57 this 58> #<edge129 58 be 59>) (:LOWER :HYPHEN :LOWER))
  "cross-hybridized" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge68 27 start 28> #<edge69 28 bio-entity 29> #<edge71 29 of 30>) (:LOWER :HYPHEN :LOWER))
  "ink-jet" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge0 118 "BM2" 120> #<edge1 118 protein 120> #<edge2 139 "up to" 141>)
   (:CAPITALIZED :FORWARD-SLASH :LOWER))
  "Detection/discovery" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge268 141 bio-entity 143> #<edge269 106 parentheses 110> #<edge271 95 bio-complex 97>)
   (:LOWER :HYPHEN :LOWER))
  "primer-target" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge29 2 study-data 3> #<edge30 3 "on" 4> #<edge31 3 on 4>) (:LOWER :HYPHEN :LOWER))
  "in-depth" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge236 127 bio-entity 128> #<edge238 129 reinitiation 130>) (:SINGLE-CAP :SINGLE-DIGIT))
  "A1" REIFY-TWO-PART-LABEL)
 (((#<edge181 86 COMMA 87> #<edge182 87 "we" 88> #<edge5 174 but-rather 176>)
   (:FULL :HYPHEN :PROTEIN))
  "TCS-SP1" MAKE-HYPHENATED-PAIR)
 (((#<edge77 32 open-reading-frame 33> :MULTIPLICATION-SIGN #<edge78 34 digit-sequence 35>)
   (:DIGITS :MULTIPLICATION-SIGN :SINGLE-LOWER))
  "4000×g" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge39 10 suggest 11> #<edge40 11 "the" 12> #<edge41 11 the 12> #<edge42 12 importance 13>
    #<edge44 13 of 14> #<edge45 14 "the" 15> #<edge47 15 close-bio-process 16>)
   (:SINGLE-CAP :FORWARD-SLASH :PROTEIN :FORWARD-SLASH :SINGLE-DIGIT :FORWARD-SLASH :DIGITS))
  "A/PR/8/34" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge105 9 suggest 11> #<edge107 15 proximity 17>) (:SINGLE-CAP :SINGLE-DIGIT)) "N1"
  REIFY-TWO-PART-LABEL)
 (((#<edge77 32 open-reading-frame 33> #<edge78 34 digit-sequence 35> #<edge79 34 number 35>
    #<edge80 36 COMMA 37> #<edge82 38 number 39> #<edge83 40 COMMA 41> #<edge85 42 number 43>)
   (:SINGLE-CAP :FORWARD-SLASH :PROTEIN :FORWARD-SLASH :SINGLE-DIGIT :FORWARD-SLASH :DIGITS))
  "A/PR/8/34" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge16 314 "wild-type" 317> #<edge17 314 wild-type 317> #<edge18 319 "even if" 321>
    #<edge19 319 even-if 321> #<edge21 376 wild-type 379> #<edge22 393 "due to" 395>
    #<edge24 415 "eif3" 417>)
   (:SINGLE-CAP :FORWARD-SLASH :PROTEIN :FORWARD-SLASH :SINGLE-DIGIT :FORWARD-SLASH :DIGITS))
  "A/PR/8/34" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge195 96 bio-complex 97> #<edge196 97 and 98> #<edge197 98 "the" 99>)
   (:SINGLE-DIGIT :COLON :DIGITS))
  "1∶2000" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge218 114 start 115> #<edge191 93 between 94> #<edge193 94 the 95>)
   (:PROTEIN :FORWARD-SLASH :SINGLE-DIGIT))
  "anti-IFITM2/3" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge180 85 however 86> #<edge181 86 COMMA 87> #<edge183 87 pronoun/first/plural 88>)
   (:FULL :HYPHEN :DIGITS))
  "FL-125" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge91 50 number 51> #<edge92 52 COMMA 53> #<edge94 54 number 55>) (:FULL :HYPHEN :DIGITS))
  "CA-074" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge387 205 an 206> :MULTIPLICATION-SIGN) (:DIGITS :MULTIPLICATION-SIGN)) "100×"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge379 155 that 156> #<edge380 199 however 200> #<edge47 15 close-bio-process 16>)
   (:FULL :HYPHEN :PROTEIN))
  "TCS-SP1" MAKE-HYPHENATED-PAIR)
 (((#<edge358 196 bio-entity 197> #<edge359 191 bio-complex 193> #<edge361 191 bio-complex 197>)
   (:SINGLE-DIGIT :COLON :DIGITS))
  "1∶500" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge267 85 subordinate-conjunction 87> #<edge268 141 bio-entity 143>
    #<edge270 148 parentheses 152>)
   (:SINGLE-DIGIT :COLON :DIGITS))
  "1∶900" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge281 137 move-something-somewhere 139> #<edge264 149 article-figure 150>)
   (:POINT-MUTATION :DIGITS))
  "9E11" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge252 141 digit-sequence 142> #<edge253 141 number 142>
    #<edge255 143 downstream-segment 144>)
   (:SINGLE-DIGIT :COLON :DIGITS))
  "1∶50" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge239 130 be 131> #<edge240 131 detect 132> #<edge242 132 even 133>)
   (:SINGLE-DIGIT :COLON :DIGITS))
  "1∶100" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge35 6 HYPHEN 7> #<edge232 125 "the" 126>) (:PROTEIN :LOWER)) "anti-early"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge223 117 the 118> #<edge224 120 protein 121> #<edge226 121 be 122>)
   (:SINGLE-DIGIT :COLON :DIGITS))
  "1∶100" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge216 113 "the" 114> #<edge217 113 the 114> #<edge220 116 "of" 117>)
   (:PROTEIN :HYPHEN :DIGITS))
  "FC-5.01" MAKE-HYPHENATED-PAIR)
 (((#<edge204 103 to 104> #<edge205 104 reinitiation 105> #<edge207 107 figure 108>)
   (:SINGLE-DIGIT :COLON :DIGITS))
  "1∶50" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge25 415 protein 417> #<edge199 99 bio-entity 100> #<edge201 101 comparative 102>)
   (:PROTEIN :SINGLE-CAP :SINGLE-DIGIT))
  "H4B4" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge187 90 that 91> #<edge188 91 "the" 92> #<edge190 92 distance 93>)
   (:SINGLE-DIGIT :COLON :DIGITS))
  "1∶50" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge15 300 wild-type 303> #<edge17 314 wild-type 317>) (:PROTEIN :PROTEIN)) "H4A3"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge81 38 digit-sequence 39> #<edge82 38 number 39> #<edge83 40 COMMA 41>)
   (:LOWER :FORWARD-SLASH :LOWER))
  "acetone/methanol" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge77 32 open-reading-frame 33> #<edge78 34 digit-sequence 35> #<edge80 36 COMMA 37>)
   (:DIGITS :FORWARD-SLASH :DIGITS))
  "50/50" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge304 153 "this" 154> #<edge31 3 on 4>) (:SINGLE-DIGIT :CELL-LINE)) "9E10"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge235 126 stop-endurant 127> :MULTIPLICATION-SIGN) (:DIGITS :MULTIPLICATION-SIGN)) "20×"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:FULL #<edge224 120 protein 121>) (:FULL :DIGITS)) "IX51" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge48 15 close 16> #<edge49 16 proximity 17> #<edge51 17 of 18>)
   (:CAPITALIZED :HYPHEN :DIGITS))
  "Alexa-649" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge43 13 "of" 14> #<edge44 13 of 14> #<edge46 14 the 15>) (:CAPITALIZED :HYPHEN :DIGITS))
  "Alexa-488" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge67 26 the 27> #<edge68 27 start 28> #<edge69 28 bio-entity 29>) (:DIGITS :HYPHEN :LOWER))
  "488-conjugated" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge60 22 the 23> #<edge5 174 but-rather 176>) (:SINGLE-DIGIT :PROTEIN)) "9G4"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge46 14 the 15> #<edge47 15 close-bio-process 16> #<edge48 15 close 16>)
   (:LOWER :HYPHEN :LOWER))
  "image-based" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge41 11 the 12> #<edge42 12 importance 13> #<edge43 13 "of" 14>) (:LOWER :HYPHEN :LOWER))
  "high-content" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge73 30 the 31> #<edge25 415 protein 417> #<edge26 415 bio-complex 417>)
   (:PERCENT :HYPHEN :LOWER))
  "10%-buffered" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge374 170 lambda-expression 172> :MULTIPLICATION-SIGN)
   (:SINGLE-DIGIT :MULTIPLICATION-SIGN))
  "5×" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge288 135 start 137> #<edge289 130 detect 132> #<edge290 130 detect 133>)
   (:DIGITS :HYPHEN :LOWER))
  "one-step" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge5 174 but-rather 176> #<edge184 88 show 89> #<edge185 89 deictic-location 90>)
   (:PROTEIN :HYPHEN :FULL))
  "reverse transcriptase-PCR" MAKE-HYPHENATED-STRUCTURE)
 (((:CAPITALIZED #<edge19 319 even-if 321>) (:CAPITALIZED :DIGITS)) "Ci67"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge274 98 bio-entity 100> #<edge275 104 efficiency 106>
    #<edge277 117 open-reading-frame 121>)
   (:PROTEIN :HYPHEN :LOWER))
  "Trypsin-bypass" PACKAGE-QUALIFYING-PAIR)
 (((#<edge57 21 "of" 22> :MULTIPLICATION-SIGN #<edge58 21 of 22>)
   (:DIGITS :MULTIPLICATION-SIGN :SINGLE-LOWER))
  "4,000×g" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge76 32 protein 33> #<edge77 32 open-reading-frame 33> #<edge78 34 digit-sequence 35>)
   (:PROTEIN :HYPHEN :LOWER))
  "pRS-based" PACKAGE-QUALIFYING-PAIR)
 (((#<edge61 23 upstream-segment 24> #<edge62 23 upstream 24> #<edge63 24 protein 25>)
   (:PROTEIN :HYPHEN :LOWER))
  "pQCXIP-based" PACKAGE-QUALIFYING-PAIR)
 (((#<edge10 274 "such as" 276> #<edge138 65 "of" 66> #<edge140 66 "the" 67>)
   (:MOLECULE :SINGLE-CAP :SINGLE-DIGIT))
  "H7N1" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge130 59 believe 60> #<edge131 60 "to" 61> :FULL #<edge132 60 to 61> :CAPITALIZED
    #<edge133 61 reflect 62> #<edge135 62 a 63>)
   (:SINGLE-CAP :FORWARD-SLASH :FULL :FORWARD-SLASH :CAPITALIZED :FORWARD-SLASH :DIGITS))
  "A/FPV/Rostock/34" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge123 15 close 16> #<edge125 9 suggest 13>) (:SINGLE-CAP :SINGLE-DIGIT)) "H5"
  REIFY-TWO-PART-LABEL)
 (((#<edge120 14 proximity 21> #<edge121 15 close 16>) (:FORWARD-SLASH :DIGITS)) "/2004" NIL)
 (((#<edge116 29 of 36> #<edge117 27 start 29> #<edge119 17 of 21>) (:PROTEIN :HYPHEN :DIGITS))
  "SP-33" MAKE-HYPHENATED-PAIR)
 (((#<edge110 18 bio-entity 21> #<edge111 23 open-reading-frame 25>
    #<edge112 22 open-reading-frame 25> #<edge113 31 open-reading-frame 33>
    #<edge115 30 open-reading-frame 36>)
   (:SINGLE-CAP :FORWARD-SLASH :CAPITALIZED :FORWARD-SLASH :SINGLE-DIGIT))
  "A/Thailand/2" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge105 9 suggest 11> #<edge107 15 proximity 17>) (:SINGLE-CAP :SINGLE-DIGIT)) "H3"
  REIFY-TWO-PART-LABEL)
 (((#<edge99 45 square-brackets 48> #<edge100 49 square-brackets 52> :CAPITALIZED
    #<edge101 53 square-brackets 56> #<edge103 5 bio-process 9>)
   (:SINGLE-CAP :FORWARD-SLASH :CAPITALIZED :FORWARD-SLASH :DIGITS))
  "A/Udorn/72" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge93 54 digit-sequence 55> #<edge95 5 hyphenated-pair 8>) (:SINGLE-CAP :SINGLE-DIGIT)) "H1"
  REIFY-TWO-PART-LABEL)
 (((#<edge83 40 COMMA 41> #<edge84 42 digit-sequence 43> #<edge85 42 number 43>
    #<edge86 44 COMMA 45> #<edge88 46 number 47> #<edge89 48 COMMA 49> #<edge91 50 number 51>)
   (:SINGLE-CAP :FORWARD-SLASH :PROTEIN :FORWARD-SLASH :SINGLE-DIGIT :FORWARD-SLASH :DIGITS))
  "A/PR/8/34" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge25 415 protein 417> #<edge329 170 "that" 171> #<edge331 171 affect 172>)
   (:PROTEIN :FORWARD-SLASH :SINGLE-DIGIT))
  "IFITM1/3" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge298 98 critical 103> #<edge299 93 between 97> #<edge300 88 show 90>)
   (:DIGITS :HYPHEN :PROTEIN))
  "29-mer" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge247 135 start 136> #<edge248 136 bio-entity 137> #<edge249 137 be 138>)
   (:LOWER :HYPHEN :LOWER))
  "vector-based" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge184 88 show 89> #<edge185 89 deictic-location 90> #<edge186 90 "that" 91>)
   (:MIXED :FORWARD-SLASH :MIXED))
  "AgeI/BamHI" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:FULL #<edge330 170 that 171> #<edge332 172 reinitiation 173>) (:FULL :HYPHEN :SINGLE-DIGIT))
  "EGM-2" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge326 168 "per" 169> #<edge327 168 per 169> #<edge329 170 "that" 171>)
   (:LOWER :HYPHEN :SINGLE-DIGIT))
  "medium-2" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge285 104 efficiency 110> #<edge286 144 of 152> #<edge288 135 start 137>)
   (:SINGLE-DIGIT :FORWARD-SLASH :SINGLE-DIGIT))
  "1/3" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge613 353 the 354> #<edge27 1 sequencer 2>) (:PROTEIN :-LIKE)) "trypsin-like"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge524 271 bio-entity 273> #<edge526 267 bio-entity 273>) (:SINGLE-CAP :SINGLE-DIGIT)) "S5"
  REIFY-TWO-PART-LABEL)
 (((#<edge153 76 ability 77> #<edge154 77 "to" 78> #<edge155 77 to 78>) (:LOWER :HYPHEN :LOWER))
  "life-cycle" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge246 134 the 135> #<edge248 136 bio-entity 137>) (:SINGLE-CAP :SINGLE-DIGIT)) "S3"
  REIFY-TWO-PART-LABEL)
 (((#<edge220 116 "of" 117> #<edge222 117 "the" 118>) (:PROTEIN :SINGLE-DIGIT)) "IFITM6"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge196 97 and 98> #<edge200 100 be 101>) (:SINGLE-CAP :POINT-MUTATION)) "S3D"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge141 66 the 67> #<edge142 67 tethere 68> #<edge143 68 bio-complex 69>)
   (:SINGLE-DIGIT :HYPHEN :LOWER))
  "2-mediated" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge55 19 stop-endurant 20> #<edge392 209 or 210>) (:CELL-LINE :SINGLE-CAP)) "S2C"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge328 169 bio-entity 170> #<edge329 170 "that" 171> #<edge330 170 that 171>)
   (:SINGLE-DIGIT :HYPHEN :LOWER))
  "2-mediated" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge162 83 terminate 84> #<edge9 214 wild-type 217>) (:SINGLE-DIGIT :PROTEIN)) "2D–F"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge131 60 "to" 61> #<edge140 66 "the" 67>) (:SINGLE-CAP :POINT-MUTATION)) "S1C"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge124 13 of 25> #<edge126 3 on 9> #<edge127 57 "this" 58> #<edge128 57 this 58>)
   (:SINGLE-DIGIT :SINGLE-CAP :HYPHEN :SINGLE-CAP))
  "2A–C" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge259 145 pronoun/inanimate 146> #<edge260 146 modifier 147>
    #<edge261 147 position-bio-process 148>)
   (:LOWER :HYPHEN :LOWER))
  "post-entry" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge163 58 believe 60> #<edge164 60 reflect 62>) (:SINGLE-DIGIT :SINGLE-CAP)) "1J"
  REIFY-TWO-PART-LABEL)
 (((#<edge717 384 as 385> #<edge718 385 such 386> #<edge719 386 COMMA 387>)
   (:SINGLE-DIGIT :HYPHEN :LOWER))
  "2-mediated" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge650 336 suggest 347> #<edge651 326 of 335> #<edge652 321 terminate 325>)
   (:SINGLE-DIGIT :HYPHEN :LOWER))
  "2-mediated" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge280 125 bio-entity 128> #<edge282 146 position 148>) (:SINGLE-CAP :SINGLE-DIGIT)) "H5"
  REIFY-TWO-PART-LABEL)
 (((#<edge321 165 and 166> #<edge322 166 stop 167> #<edge323 166 stop-endurant 167>)
   (:LOWER :HYPHEN :LOWER))
  "target-cell" MAKE-HYPHENATED-STRUCTURE)
 (((:TILDA #<edge415 232 bio-use 233>) (:TILDA :DIGITS)) "∼130" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge362 189 between 191> #<edge27 1 sequencer 2>) (:PROTEIN :PROTEIN)) "IFITM4P"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:CAPITALIZED #<edge350 190 where 191>) (:CAPITALIZED :SINGLE-DIGIT)) "Ifitm7"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:CAPITALIZED #<edge347 187 the 188>) (:CAPITALIZED :SINGLE-DIGIT)) "Ifitm6"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge100 49 square-brackets 52> :ASTERISK #<edge101 53 square-brackets 56>)
   (:DIGITS :ASTERISK :SINGLE-CAP))
  "35.4°C" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge55 19 stop-endurant 20> #<edge56 20 bio-entity 21> #<edge57 21 "of" 22>)
   (:LOWER :HYPHEN :LOWER))
  "travel-associated" MAKE-HYPHENATED-STRUCTURE)
 (((:OPEN-ANGLE-BRACKET #<edge359 191 bio-complex 193> :ASTERISK #<edge360 195 bio-entity 197>)
   (:OPEN-ANGLE-BRACKET :DIGITS :ASTERISK :SINGLE-CAP))
  "<37.2°C" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge60 22 the 23> :ASTERISK #<edge61 23 upstream-segment 24>)
   (:DIGITS :ASTERISK :SINGLE-CAP))
  "36.2°C" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:GREATER-THAN_OR_EQUAL_TO #<edge50 17 "of" 18> :ASTERISK #<edge1 118 protein 120>)
   (:GREATER-THAN_OR_EQUAL_TO :DIGITS :ASTERISK :INITIAL))
  "≥37.5°C." REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge273 94 bio-complex 97> #<edge274 98 bio-entity 100>
    #<edge276 118 open-reading-frame 121>)
   (:DIGITS :FORWARD-SLASH :DIGITS))
  "88/285" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge263 149 figure 150> #<edge264 149 article-figure 150> #<edge266 150 number 151>)
   (:SINGLE-DIGIT :FORWARD-SLASH :DIGITS))
  "7/101" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:CLOSE-ANGLE-BRACKET #<edge237 128 COMMA 129> :ASTERISK #<edge7 184 by-virtue-of 187>)
   (:CLOSE-ANGLE-BRACKET :DIGITS :ASTERISK :INITIAL))
  ">37.8°C." REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge81 38 digit-sequence 39> #<edge37 8 bio-process 9>) (:PERCENT :PROTEIN)) "99%CI"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge6 184 "by virtue of" 187> #<edge7 184 by-virtue-of 187> #<edge9 214 wild-type 217>)
   (:DIGITS :FORWARD-SLASH :DIGITS))
  "27/30" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge105 9 suggest 11> #<edge106 11 importance 13> #<edge108 14 proximity 17>)
   (:DIGITS :FORWARD-SLASH :DIGITS))
  "20/1057" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:GREATER-THAN_OR_EQUAL_TO #<edge42 12 importance 13> :ASTERISK #<edge1 118 protein 120>)
   (:GREATER-THAN_OR_EQUAL_TO :DIGITS :ASTERISK :INITIAL))
  "≥37.8°C." REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge144 69 semicolon 70> #<edge145 70 "that" 71> #<edge147 71 be 72>)
   (:DIGITS :FORWARD-SLASH :DIGITS))
  "32/1063" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge110 18 bio-entity 21> #<edge111 23 open-reading-frame 25>
    #<edge113 31 open-reading-frame 33>)
   (:CAPITALIZED :HYPHEN :DIGITS))
  "Thirty-two" MAKE-HYPHENATED-STRUCTURE)
 (((:GREATER-THAN_OR_EQUAL_TO #<edge97 37 square-brackets 40> :ASTERISK
    #<edge98 41 square-brackets 44>)
   (:GREATER-THAN_OR_EQUAL_TO :DIGITS :ASTERISK :SINGLE-CAP))
  "≥37.5°C" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge63 24 protein 25> #<edge64 24 open-reading-frame 25> #<edge66 26 "the" 27>)
   (:SINGLE-DIGIT :FORWARD-SLASH :DIGITS))
  "5/1063" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge313 159 solely 160> #<edge314 160 "the" 161> #<edge315 160 the 161>)
   (:FULL :HYPHEN :FULL))
  "MT-PCR" MAKE-HYPHENATED-PAIR)
 (((#<edge0 118 "BM2" 120> :COPYRIGHT_SIGN) (:PROTEIN :COPYRIGHT_SIGN)) "Stata©"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge72 30 "the" 31> #<edge73 30 the 31> :CAPITALIZED) (:CAPITALIZED :HYPHEN :CAPITALIZED))
  "Easy-Plex" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge40 11 "the" 12> #<edge41 11 the 12> #<edge42 12 importance 13>) (:FULL :HYPHEN :FULL))
  "MT-PCR" MAKE-HYPHENATED-PAIR)
 (((#<edge17 314 wild-type 317> :ASTERISK #<edge18 319 "even if" 321>)
   (:DIGITS :ASTERISK :SINGLE-CAP))
  "20.5°C" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge88 46 number 47> :MULTIPLICATION-SIGN #<edge90 50 digit-sequence 51>)
   (:DIGITS :MULTIPLICATION-SIGN :DIGITS))
  "160×120" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:MIXED :TRADE_MARK_SIGN) (:MIXED :TRADE_MARK_SIGN)) "ThermaCAM™" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge88 46 number 47> :COPYRIGHT_SIGN) (:CAPITALIZED :COPYRIGHT_SIGN)) "Excel©"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge163 58 believe 60> #<edge164 60 reflect 62> #<edge166 67 bio-complex 69>)
   (:DIGITS :FORWARD-SLASH :DIGITS))
  "118/963" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge84 42 digit-sequence 43> #<edge85 42 number 43> #<edge86 44 COMMA 45>)
   (:LOWER :HYPHEN :LOWER))
  "cut-off" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge42 12 importance 13> #<edge43 13 "of" 14> #<edge44 13 of 14>) (:LOWER :HYPHEN :LOWER))
  "cut-off" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge374 170 lambda-expression 172> #<edge375 168 per 172> #<edge377 157 be 160>)
   (:PROTEIN :HYPHEN :SINGLE-DIGIT))
  "DEN-1" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge299 93 between 97> #<edge300 88 show 90> #<edge301 87 show 90>) (:LOWER :HYPHEN :LOWER))
  "post-infection" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge129 58 be 59> #<edge130 59 believe 60> #<edge132 60 to 61>)
   (:PROTEIN :HYPHEN :SINGLE-DIGIT))
  "DEN-1" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge182 87 "we" 88> #<edge184 88 show 89>) (:LOWER :DIGITS)) "rs4804806"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge172 79 movement 82> #<edge173 82 following 84> #<edge175 73 ability 77>)
   (:LOWER :HYPHEN :LOWER))
  "case-control" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge147 71 be 72> #<edge149 73 "it" 74>) (:LOWER :DIGITS)) "rs4804806"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge168 66 bio-complex 69> #<edge169 74 be 76> #<edge170 77 undergo 79>)
   (:LOWER :HYPHEN :LOWER))
  "post-infection" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge396 213 "the" 214> #<edge397 213 the 214> #<edge398 217 site 218>)
   (:LOWER :HYPHEN :LOWER))
  "post-infection" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge252 141 digit-sequence 142> #<edge253 141 number 142> #<edge254 142 bio-entity 143>)
   (:LOWER :HYPHEN :LOWER))
  "post-infection" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge151 74 modal 75> #<edge152 75 be 76> #<edge153 76 ability 77>) (:LOWER :HYPHEN :LOWER))
  "post-infection" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge254 142 bio-entity 143> #<edge255 143 downstream-segment 144>
    #<edge256 143 downstream 144>)
   (:LOWER :HYPHEN :LOWER))
  "post-infection" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge186 90 "that" 91> #<edge187 90 that 91> #<edge189 91 the 92>)
   (:LOWER :FORWARD-SLASH :DIGITS))
  "copies/105" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge210 108 number 109> :MULTIPLICATION-SIGN #<edge184 88 show 89>)
   (:NUMBER-RANGE :MULTIPLICATION-SIGN :DIGITS))
  "2.32±0.68×106" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge171 79 limit 81> #<edge172 79 movement 82> #<edge174 74 ability 77>)
   (:LOWER :FORWARD-SLASH :DIGITS))
  "copies/105" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge208 107 article-figure 108> :MULTIPLICATION-SIGN #<edge169 74 be 76>)
   (:NUMBER-RANGE :MULTIPLICATION-SIGN :DIGITS))
  "4.83±0.70×105" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge158 80 limit 81> #<edge159 81 movement 82> #<edge160 82 following-adj 83>)
   (:LOWER :HYPHEN :LOWER))
  "post-infection" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge141 66 the 67> #<edge142 67 tethere 68> #<edge144 69 semicolon 70>)
   (:LOWER :FORWARD-SLASH :DIGITS))
  "copies/105" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge205 104 reinitiation 105> :MULTIPLICATION-SIGN #<edge139 65 of 66>)
   (:NUMBER-RANGE :MULTIPLICATION-SIGN :DIGITS))
  "3.90±0.67×106" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge126 3 on 9> #<edge127 57 "this" 58> #<edge129 58 be 59>) (:LOWER :FORWARD-SLASH :DIGITS))
  "copies/105" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge203 103 "to" 104> :MULTIPLICATION-SIGN #<edge124 13 of 25>)
   (:NUMBER-RANGE :MULTIPLICATION-SIGN :DIGITS))
  "1.07±0.45×106" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge113 31 open-reading-frame 33> #<edge114 30 open-reading-frame 33>
    #<edge115 30 open-reading-frame 36>)
   (:LOWER :HYPHEN :LOWER))
  "post-infection" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge64 24 open-reading-frame 25> #<edge65 25 and 26> #<edge66 26 "the" 27>)
   (:LOWER :HYPHEN :LOWER))
  "post-infection" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge279 126 bio-entity 128> #<edge280 125 bio-entity 128>
    #<edge281 137 move-something-somewhere 139>)
   (:LOWER :HYPHEN :LOWER))
  "post-infection" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge153 76 ability 77> :MULTIPLICATION-SIGN #<edge156 78 undergo 79>)
   (:SINGLE-DIGIT :MULTIPLICATION-SIGN :HYPHENATED-NUMBER))
  "2×10−5" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge225 120 open-reading-frame 121> :MULTIPLICATION-SIGN
    #<edge228 123 downstream-segment 124>)
   (:SINGLE-DIGIT :MULTIPLICATION-SIGN :HYPHENATED-NUMBER))
  "3×10−5" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge106 11 importance 13> #<edge107 15 proximity 17> #<edge108 14 proximity 17>)
   (:FULL :FORWARD-SLASH :PROTEIN))
  "GG/AG" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge161 82 following 83> #<edge162 83 terminate 84> #<edge164 60 reflect 62>)
   (:LOWER :HYPHEN :LOWER))
  "case-control" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge47 15 close-bio-process 16> #<edge48 15 close 16> #<edge50 17 "of" 18>)
   (:LOWER :HYPHEN :LOWER))
  "case-control" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge44 13 of 14> #<edge45 14 "the" 15> #<edge46 14 the 15>) (:LOWER :HYPHEN :LOWER))
  "hospital-based" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge105 9 suggest 11> #<edge106 11 importance 13> #<edge107 15 proximity 17>)
   (:DIGITS :HYPHEN :LOWER))
  "two-sided" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge37 8 bio-process 9> #<edge38 9 have 10> #<edge39 10 suggest 11>) (:LOWER :HYPHEN :LOWER))
  "post-infection" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge66 26 "the" 27> #<edge68 27 start 28> #<edge69 28 bio-entity 29>)
   (:PROTEIN :SINGLE-DIGIT :SINGLE-LOWER))
  "IgG2b" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge56 20 bio-entity 21> #<edge57 21 "of" 22> #<edge58 21 of 22>) (:LOWER :HYPHEN :LOWER))
  "isotype-matched" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge129 58 be 59> :FULL #<edge130 59 believe 60> #<edge132 60 to 61>)
   (:HYPHEN :FULL :HYPHEN :SINGLE-DIGIT))
  "-GGCTGTGACAAAGTCACATGGTT-3" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge122 14 proximity 25> :FULL #<edge123 15 close 16> #<edge125 9 suggest 13>)
   (:HYPHEN :FULL :HYPHEN :SINGLE-DIGIT))
  "-AATTGAAAAAGTGGAGCATTCAGA-3" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge114 30 open-reading-frame 33> :FULL #<edge115 30 open-reading-frame 36>
    #<edge117 27 start 29>)
   (:HYPHEN :FULL :HYPHEN :SINGLE-DIGIT))
  "-GGGACCATGGCCAAGACA-3" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge107 15 proximity 17> :FULL #<edge108 14 proximity 17> #<edge110 18 bio-entity 21>)
   (:HYPHEN :FULL :HYPHEN :SINGLE-DIGIT))
  "-AACAGCTGAGAGGCCTTGGA-3" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge5 174 but-rather 176> #<edge47 15 close-bio-process 16>) (:PROTEIN :FULL)) "B2MG"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:SINGLE-LOWER #<edge45 14 "the" 15> #<edge46 14 the 15> :LOWER)
   (:SINGLE-LOWER :SINGLE-DIGIT :HYPHEN :LOWER))
  "ß2–microglobulin" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge267 85 subordinate-conjunction 87> #<edge268 141 bio-entity 143>
    #<edge269 106 parentheses 110>)
   (:LOWER :HYPHEN :LOWER))
  "post-infection" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge170 77 undergo 79> #<edge171 79 limit 81> #<edge172 79 movement 82>)
   (:LOWER :HYPHEN :LOWER))
  "post-infection" MAKE-HYPHENATED-STRUCTURE)
 (((:MIXED #<edge215 112 when 113> #<edge217 113 the 114>) (:MIXED :HYPHEN :SINGLE-DIGIT)) "rhIL-4"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:MIXED #<edge212 111 "that" 112> #<edge213 111 that 112>) (:MIXED :HYPHEN :PROTEIN)) "rhGM-CSF"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:MIXED #<edge144 69 semicolon 70> #<edge146 70 that 71>) (:MIXED :HYPHEN :SINGLE-DIGIT))
  "rhIL-4" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:MIXED #<edge139 65 of 66> #<edge140 66 "the" 67>) (:MIXED :HYPHEN :PROTEIN)) "rhGM-CSF"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge104 4 bio-process 9> #<edge13 285 close-to 287>) (:LOWER :BIO-ENTITY)) "purity>95%"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:FULL #<edge162 83 terminate 84> #<edge164 60 reflect 62>) (:FULL :HYPHEN :SINGLE-DIGIT))
  "CTTG-3" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge128 57 this 58> :FULL #<edge129 58 be 59> #<edge131 60 "to" 61>)
   (:HYPHEN :FULL :HYPHEN :SINGLE-DIGIT))
  "-TGTGTTACACCCCCTCCACTAG-3" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge119 17 of 21> :FULL #<edge120 14 proximity 21> #<edge122 14 proximity 25>)
   (:HYPHEN :FULL :HYPHEN :SINGLE-DIGIT))
  "-GGACAGTGCTTCCAGGAACT-3" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge32 4 "the" 5> #<edge33 4 the 5> #<edge34 5 terminate 6>) (:LOWER :HYPHEN :LOWER))
  "phenol-chloroform" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge121 15 close 16> #<edge122 14 proximity 25> #<edge124 13 of 25>)
   (:SINGLE-DIGIT :FORWARD-SLASH :DIGITS))
  "1/73" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:LOWER #<edge110 18 bio-entity 21> #<edge111 23 open-reading-frame 25>)
   (:LOWER :HYPHEN :LOWER))
  "sero-positive" :NO-EDGE)
 (((:GREATER-THAN_OR_EQUAL_TO #<edge333 173 efficiency 174>) (:GREATER-THAN_OR_EQUAL_TO :PERCENT))
  "≥20%" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge279 126 bio-entity 128> #<edge280 125 bio-entity 128> #<edge282 146 position 148>
    #<edge284 145 position 152>)
   (:DIGITS :FORWARD-SLASH :LOWER :SINGLE-DIGIT))
  "000/mm3" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge92 52 COMMA 53> #<edge93 54 digit-sequence 55> #<edge95 5 hyphenated-pair 8>)
   (:LOWER :HYPHEN :LOWER))
  "acute-phase" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge116 29 of 36> #<edge117 27 start 29>) (:HYPHENATED-NUMBER :SINGLE-CAP)) "97-2111B"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge66 26 "the" 27> #<edge67 26 the 27> #<edge68 27 start 28>) (:DIGITS :HYPHEN :DIGITS))
  "2002–2003" LOOK-FOR-YEAR-EXPRESSION)
 (((#<edge27 1 sequencer 2> #<edge28 2 study-bio-method 3> :CAPITALIZED)
   (:CAPITALIZED :HYPHEN :CAPITALIZED))
  "Hospital-Kaohsiung" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge379 155 that 156> #<edge381 200 COMMA 201>) (:LOWER :DIGITS)) "rs4804803"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge334 176 how 177> #<edge336 177 well-endurant 178>) (:LOWER :DIGITS)) "rs4804803"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge19 319 even-if 321> #<edge266 150 number 151> #<edge21 376 wild-type 379>
    #<edge267 85 subordinate-conjunction 87> :FULL #<edge268 141 bio-entity 143>)
   (:PROTEIN :FORWARD-SLASH :PROTEIN :FORWARD-SLASH :FULL :HYPHEN))
  "Sp1/GATA1/CACCC-" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge213 111 that 112> #<edge215 112 when 113>) (:LOWER :DIGITS)) "rs4804803"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge108 14 proximity 17> #<edge110 18 bio-entity 21>) (:LOWER :DIGITS)) "rs4804803"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge41 11 the 12> #<edge3 139 up-to 141>) (:DIGITS :PROTEIN)) "19p13"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge76 32 protein 33> #<edge77 32 open-reading-frame 33> #<edge15 300 wild-type 303>)
   (:FULL :HYPHEN :CELL-TYPE))
  "DC-T cell" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge9 214 wild-type 217> #<edge38 9 have 10> #<edge40 11 "the" 12>)
   (:PROTEIN :HYPHEN :SINGLE-DIGIT))
  "adhesion molecule-3" MAKE-HYPHENATED-STRUCTURE)
 (((:LOWER #<edge55 19 stop-endurant 20> #<edge56 20 bio-entity 21>) (:LOWER :HYPHEN :LOWER))
  "germline-encoded" :NO-EDGE)
 (((#<edge175 73 ability 77> #<edge176 70 be 72> #<edge178 62 mobility 69>
    #<edge5 174 but-rather 176>)
   (:PROTEIN :HYPHEN :LOWER :-LIKE))
  "cytokine-storm-like" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge86 44 COMMA 45> #<edge87 46 digit-sequence 47> #<edge88 46 number 47>)
   (:LOWER :HYPHEN :LOWER))
  "self-limited" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge195 96 bio-complex 97> #<edge196 97 and 98>) (:SINGLE-DIGIT :SINGLE-LOWER)) "7b"
  REIFY-TWO-PART-LABEL)
 (((#<edge79 34 number 35> #<edge80 36 COMMA 37> #<edge81 38 digit-sequence 39>)
   (:CAPITALIZED :HYPHEN :LOWER))
  "Two-tailed" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge66 26 "the" 27> #<edge67 26 the 27>) (:SINGLE-DIGIT :SINGLE-LOWER)) "7b"
  REIFY-TWO-PART-LABEL)
 (((#<edge45 14 "the" 15> #<edge46 14 the 15> #<edge48 15 close 16>) (:DIGITS :HYPHEN :LOWER))
  "two-sample" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge20 376 "wild-type" 379> #<edge21 376 wild-type 379> #<edge22 393 "due to" 395>)
   (:SINGLE-DIGIT :HYPHEN :LOWER))
  "2-tailed" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge92 52 COMMA 53> #<edge78 34 digit-sequence 35>) (:POINT-MUTATION :HYPHENATED-NUMBER))
  "7B6-1" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge64 24 open-reading-frame 25> #<edge65 25 and 26> #<edge66 26 "the" 27>
    #<edge3 139 up-to 141>)
   (:SINGLE-DIGIT :HYPHEN :SINGLE-CAP :PROTEIN))
  "1-D1K" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge288 135 start 137> #<edge276 118 open-reading-frame 121>)
   (:POINT-MUTATION :SINGLE-DIGIT))
  "R4-6A2" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge260 146 modifier 147> #<edge262 147 position 148>) (:FULL :DIGITS)) "AN18"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge133 61 reflect 62> #<edge134 62 "a" 63> #<edge136 63 restrict 64>)
   (:PROTEIN :HYPHEN :DIGITS))
  "RPMI-1640" MAKE-HYPHENATED-PAIR)
 (((:FULL #<edge78 34 digit-sequence 35>) (:FULL :SINGLE-DIGIT)) "KHCO3"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge56 20 bio-entity 21> #<edge57 21 "of" 22> #<edge58 21 of 22>) (:LOWER :HYPHEN :LOWER))
  "single-cell" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge200 100 be 101> #<edge201 101 comparative 102>) (:SINGLE-DIGIT :SINGLE-LOWER)) "7b"
  REIFY-TWO-PART-LABEL)
 (((#<edge151 74 modal 75> #<edge152 75 be 76> #<edge5 174 but-rather 176>)
   (:LOWER :FORWARD-SLASH :EXPERIMENTAL-CONDITION))
  "photons/region of interest" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge119 17 of 21> :REGISTERED_SIGN) (:LOWER :REGISTERED_SIGN)) "image®"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge78 34 digit-sequence 35> #<edge80 36 COMMA 37> #<edge81 38 digit-sequence 39>
    #<edge82 38 number 39>)
   (:SINGLE-CAP :SINGLE-DIGIT :HYPHEN :LOWER))
  "O2-rich" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge27 1 sequencer 2> #<edge28 2 study-bio-method 3> #<edge29 2 study-data 3>)
   (:LOWER :HYPHEN :LOWER))
  "post-challenge" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge16 314 "wild-type" 317> #<edge17 314 wild-type 317> #<edge19 319 even-if 321>)
   (:PROTEIN :HYPHEN :FULL))
  "Pru-FLUC" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge272 95 lambda-expression 96> #<edge273 94 bio-complex 97> #<edge274 98 bio-entity 100>)
   (:LOWER :HYPHEN :LOWER))
  "post-immunization" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge172 79 movement 82> #<edge173 82 following 84> #<edge27 1 sequencer 2>)
   (:PROTEIN :FORWARD-SLASH :DRUG))
  "PBS/GLA-SE" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge63 24 protein 25> #<edge64 24 open-reading-frame 25> #<edge66 26 "the" 27>)
   (:DIGITS :HYPHEN :LOWER))
  "30-gauge" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge165 62 mobility 65> #<edge166 67 bio-complex 69>) (:SINGLE-DIGIT :SINGLE-LOWER)) "7b"
  REIFY-TWO-PART-LABEL)
 (((#<edge11 274 such-as 276> #<edge90 50 digit-sequence 51> #<edge92 52 COMMA 53>)
   (:ORGANISM :FORWARD-SLASH :SINGLE-DIGIT))
  "C57BL/6" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge77 32 open-reading-frame 33> #<edge78 34 digit-sequence 35>
    #<edge95 5 hyphenated-pair 8>)
   (:SINGLE-CAP :HYPHEN :MEASUREMENT))
  "H-2Kb" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge5 174 but-rather 176> #<edge48 15 close 16> #<edge49 16 proximity 17>)
   (:BIO-ENTITY :FORWARD-SLASH :CAPITALIZED))
  "HLA-A*1101/Kb" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:CAPITALIZED #<edge20 376 "wild-type" 379> :CAPITALIZED) (:CAPITALIZED :HYPHEN :CAPITALIZED))
  "Pharmexa-Epimmune" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge1 118 protein 120> #<edge14 300 "wild-type" 303> #<edge15 300 wild-type 303>)
   (:BIO-ENTITY :FORWARD-SLASH :CAPITALIZED))
  "HLA-A*1101/Kb" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:FULL #<edge237 128 COMMA 129>) (:FULL :SINGLE-DIGIT)) "GRA6" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge209 108 digit-sequence 109> #<edge210 108 number 109> #<edge212 111 "that" 112>
    #<edge213 111 that 112> #<edge214 112 when 113>)
   (:LOWER :HYPHEN :LOWER :HYPHEN :LOWER))
  "oil-in-water" MAKE-HYPHENATED-TRIPLE)
 (((#<edge71 29 of 30> #<edge73 30 the 31> #<edge74 31 downstream-segment 32> :FULL)
   (:PROTEIN :SINGLE-DIGIT :HYPHEN :FULL))
  "Pam2-KSS" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge38 9 have 10> #<edge39 10 suggest 11> #<edge40 11 "the" 12>) (:LOWER :HYPHEN :LOWER))
  "immunome-based" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge396 213 "the" 214> #<edge397 213 the 214> #<edge398 217 site 218>)
   (:LOWER :HYPHEN :LOWER))
  "epitope-based" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge193 94 the 95> :ASTERISK #<edge195 96 bio-complex 97>) (:PROTEIN :ASTERISK :DIGITS))
  "HLA*1011" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge13 285 close-to 287> #<edge187 90 that 91>) (:BIO-ENTITY :PLUS-SIGN)) "HLA-A03+"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge38 9 have 10> #<edge39 10 suggest 11> #<edge40 11 "the" 12>) (:LOWER :HYPHEN :LOWER))
  "peptide-based" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge385 204 require 205> #<edge386 205 "an" 206> #<edge387 205 an 206>)
   (:LOWER :HYPHEN :LOWER))
  "pattern-recognition" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge330 170 that 171> #<edge331 171 affect 172>) (:NUMBER-SEQUENCE :PROTEIN)) "2,3-bis"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge80 36 COMMA 37> #<edge81 38 digit-sequence 39> #<edge82 38 number 39>)
   (:SINGLE-DIGIT :HYPHEN :LOWER))
  "3-deacylated" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge7 184 by-virtue-of 187> #<edge97 37 square-brackets 40>) (:BIO-ENTITY :PROTEIN))
  "CD8+CTL" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge27 1 sequencer 2> #<edge204 103 to 104>) (:BIO-ENTITY :SINGLE-CAP)) "CD8+T"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge21 376 wild-type 379> #<edge23 393 due-to 395>) (:BIO-ENTITY :CELL-TYPE)) "CD8+T cell"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge43 13 "of" 14> #<edge44 13 of 14> #<edge45 14 "the" 15>) (:LOWER :HYPHEN :LOWER))
  "long-lived" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge129 58 be 59> #<edge130 59 believe 60> #<edge131 60 "to" 61>) (:LOWER :HYPHEN :LOWER))
  "toxicity-associated" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge60 22 the 23> #<edge61 23 upstream-segment 24> #<edge62 23 upstream 24>)
   (:SINGLE-DIGIT :HYPHEN :LOWER))
  "3-deacylated" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge220 116 "of" 117> #<edge221 116 of 117> #<edge222 117 "the" 118>)
   (:CAPITALIZED :HYPHEN :CAPITALIZED))
  "South-West" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge209 108 digit-sequence 109> #<edge210 108 number 109> #<edge211 110 and 111>)
   (:CAPITALIZED :HYPHEN :CAPITALIZED))
  "South-East" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge198 98 the 99> #<edge199 99 bio-entity 100> #<edge200 100 be 101>)
   (:CAPITALIZED :HYPHEN :CAPITALIZED))
  "North-East" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge93 54 digit-sequence 55> #<edge94 54 number 55> #<edge95 5 hyphenated-pair 8>)
   (:LOWER :HYPHEN :LOWER))
  "epitopes-based" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge77 32 open-reading-frame 33> #<edge78 34 digit-sequence 35> #<edge79 34 number 35>)
   (:LOWER :HYPHEN :LOWER))
  "web-based" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge34 5 terminate 6> #<edge35 6 HYPHEN 7> #<edge36 7 reinitiation 8>)
   (:LOWER :HYPHEN :LOWER))
  "epitope-based" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge245 134 "the" 135> #<edge246 134 the 135> #<edge248 136 bio-entity 137>)
   (:DIGITS :HYPHEN :LOWER))
  "two-sample" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge201 101 comparative 102> :CLOSE-CURLY-BRACKET) (:LOWER :CLOSE-CURLY-BRACKET))
  "deviation}" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge75 31 downstream 32> #<edge76 32 protein 33>) (:SINGLE-DIGIT :SINGLE-LOWER)) "7b"
  REIFY-TWO-PART-LABEL)
 (((#<edge170 77 undergo 79> #<edge172 79 movement 82>) (:SINGLE-DIGIT :SINGLE-LOWER)) "7a"
  REIFY-TWO-PART-LABEL)
 (((#<edge594 341 cause 342> #<edge595 342 "the" 343> #<edge596 342 the 343>)
   (:PROTEIN :HYPHEN :LOWER))
  "MHC-peptide" PACKAGE-QUALIFYING-PAIR)
 (((#<edge7 184 by-virtue-of 187> #<edge123 15 close 16>) (:PROTEIN :DIGITS)) "HLA-A11"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge3 139 up-to 141> #<edge5 174 but-rather 176>) (:BIO-ENTITY :CELL-TYPE)) "CD8+T cells"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge299 93 between 97> #<edge300 88 show 90> #<edge302 85 show 90>) (:DIGITS :HYPHEN :LOWER))
  "two-sample" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge336 177 well-endurant 178> #<edge338 177 modifier 178>) (:PROTEIN :SINGLE-DIGIT)) "RS9"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge307 155 "that" 156> #<edge309 156 "it" 157>) (:FULL :SINGLE-DIGIT)) "AM9"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge126 3 on 9> #<edge127 57 "this" 58> #<edge165 62 mobility 65>)
   (:PROTEIN :COLON :NUMBER-RANGE))
  "SFC:248 ± 65" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:MIXED #<edge254 142 bio-entity 143> #<edge255 143 downstream-segment 144>
    #<edge257 144 "of" 145> #<edge259 145 pronoun/inanimate 146> #<edge260 146 modifier 147>
    #<edge264 149 article-figure 150>)
   (:MIXED :SINGLE-DIGIT :HYPHEN :FULL :SINGLE-DIGIT :HYPHEN :PROTEIN))
  "LpKS9-AM9-RS9" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge249 137 be 138> #<edge251 138 move-to 139>) (:MIXED :SINGLE-DIGIT)) "LpRS9"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:MIXED #<edge247 135 start 136>) (:MIXED :SINGLE-DIGIT)) "LpAM9" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:MIXED #<edge244 133 when 134>) (:MIXED :SINGLE-DIGIT)) "LpKS9" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge584 333 amino-acid 334> #<edge586 336 suggest 337> #<edge587 337 "that" 338>)
   (:PROTEIN :SINGLE-DIGIT :CAPITALIZED))
  "Pam2Cys" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge411 228 reinitiation 229> #<edge412 229 site 230> #<edge413 230 modal 231>)
   (:LOWER :HYPHEN :LOWER))
  "multi-epitope" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge262 147 position 148> #<edge264 149 article-figure 150>) (:FULL :SINGLE-DIGIT)) "BSR4"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge249 137 be 138> #<edge251 138 move-to 139> #<edge252 141 digit-sequence 142>)
   (:PROTEIN :SINGLE-DIGIT :SINGLE-CAP))
  "SAG2X" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:FULL #<edge237 128 COMMA 129>) (:FULL :DIGITS)) "GRA15" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:FULL #<edge234 126 stop 127>) (:FULL :DIGITS)) "GRA10" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge39 10 suggest 11> :ASTERISK #<edge255 143 downstream-segment 144>)
   (:PROTEIN :ASTERISK :DIGITS))
  "HLA-A*1101" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge31 3 on 4> #<edge33 4 the 5> #<edge249 137 be 138>
    #<edge250 138 move-something-somewhere 139>)
   (:BIO-ENTITY :CELL-TYPE :HYPHEN :LOWER))
  "CD8+T cell-mediated" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge29 2 study-data 3> :ASTERISK #<edge245 134 "the" 135> #<edge246 134 the 135>
    #<edge247 135 start 136>)
   (:PROTEIN :ASTERISK :DIGITS :HYPHEN :LOWER))
  "HLA-A*1101-restricted" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge165 62 mobility 65> #<edge166 67 bio-complex 69> #<edge168 66 bio-complex 69>
    #<edge169 74 be 76> #<edge170 77 undergo 79>)
   (:LOWER :HYPHEN :LOWER :HYPHEN :LOWER))
  "oil-in-water" MAKE-HYPHENATED-TRIPLE)
 (((#<edge8 214 "wild-type" 217> #<edge84 42 digit-sequence 43>) (:PROTEIN :DIGITS)) "HLA-A03"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:FULL #<edge59 22 "the" 23>) (:FULL :HYPHENATED-NUMBER)) "GRA7134-142"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:FULL #<edge54 19 stop 20>) (:FULL :HYPHENATED-NUMBER)) "GRA6164-172"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge241 132 even 133> #<edge242 132 even 133> #<edge243 133 when 134>)
   (:LOWER :HYPHEN :LOWER))
  "epitope-based" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge172 79 movement 82> #<edge173 82 following 84> #<edge174 74 ability 77>)
   (:LOWER :HYPHEN :LOWER))
  "peptide-based" MAKE-HYPHENATED-STRUCTURE)
 (((:GREEK_CAPITAL_LETTER_DELTA #<edge6 184 "by virtue of" 187>)
   (:GREEK_CAPITAL_LETTER_DELTA :PROTEIN))
  "ΔRPS13" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge62 23 upstream 24> #<edge63 24 protein 25> #<edge64 24 open-reading-frame 25>)
   (:LOWER :HYPHEN :LOWER))
  "immune-compromised" MAKE-HYPHENATED-STRUCTURE)
 (((:FULL #<edge317 162 between 163>) (:FULL :COLON)) "JX:" :NO-EDGE)
 (((#<edge174 74 ability 77> #<edge175 73 ability 77>) (:FULL :COLON)) "MN:" :NO-EDGE)
 (((#<edge140 66 "the" 67> #<edge141 66 the 67>) (:FULL :COLON)) "AK:" :NO-EDGE)
 (((#<edge161 82 following 83> #<edge162 83 terminate 84>) (:MIXED :COLON)) "SOPs:" :NO-EDGE)
 (((#<edge120 14 proximity 21> #<edge121 15 close 16>) (:FULL :COLON)) "OPM:" :NO-EDGE)
 (((:FULL #<edge95 5 hyphenated-pair 8>) (:FULL :COLON)) "MOH:" :NO-EDGE)
 (((#<edge62 23 upstream 24> #<edge63 24 protein 25>) (:FULL :COLON)) "IDSR:" :NO-EDGE)
 (((#<edge24 415 "eif3" 417> #<edge25 415 protein 417>) (:SINGLE-DIGIT :SINGLE-LOWER)) "1b"
  REIFY-TWO-PART-LABEL)
 (((#<edge5 174 but-rather 176> #<edge6 184 "by virtue of" 187> #<edge7 184 by-virtue-of 187>)
   (:LOWER :HYPHEN :LOWER))
  "program-based" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge147 71 be 72> #<edge148 72 COMMA 73> #<edge149 73 "it" 74>)
   (:LOWER :FORWARD-SLASH :LOWER))
  "materials/specimens" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge227 122 place 123> #<edge228 123 downstream-segment 124> #<edge230 124 "of" 125>)
   (:LOWER :HYPHEN :LOWER))
  "multi-hazards" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge294 114 start 116> #<edge295 103 to 110> #<edge296 101 critical 103>)
   (:LOWER :HYPHEN :LOWER))
  "cross-border" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge235 126 stop-endurant 127> #<edge236 127 bio-entity 128> #<edge237 128 COMMA 129>)
   (:CAPITALIZED :HYPHEN :LOWER))
  "Cross-border" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge179 57 believe 60> #<edge180 85 however 86> #<edge182 87 "we" 88>)
   (:LOWER :HYPHEN :LOWER))
  "multi-hazards" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge145 70 "that" 71> #<edge146 70 that 71> #<edge148 72 COMMA 73>) (:LOWER :HYPHEN :LOWER))
  "multi-hazards" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge89 48 COMMA 49> #<edge90 50 digit-sequence 51> #<edge91 50 number 51>)
   (:LOWER :HYPHEN :LOWER))
  "district-based" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge155 77 to 78> #<edge156 78 undergo 79> #<edge158 80 limit 81>)
   (:CAPITALIZED :FORWARD-SLASH :CAPITALIZED))
  "Certificate/Ship" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge47 15 close-bio-process 16> #<edge48 15 close 16> #<edge50 17 "of" 18>)
   (:DIGITS :FORWARD-SLASH :DIGITS))
  "34/65" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge108 14 proximity 17> #<edge109 19 bio-entity 21> #<edge111 23 open-reading-frame 25>)
   (:DIGITS :FORWARD-SLASH :DIGITS))
  "32/65" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge1 118 protein 120> #<edge136 63 restrict 64>) (:PROTEIN :PLUS-SIGN)) "BSL2+"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge123 15 close 16> #<edge124 13 of 25> #<edge125 9 suggest 13>) (:LOWER :HYPHEN :LOWER))
  "high-containment" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge78 34 digit-sequence 35> #<edge79 34 number 35> #<edge81 38 digit-sequence 39>)
   (:DIGITS :FORWARD-SLASH :DIGITS))
  "14/65" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge58 21 of 22> #<edge59 22 "the" 23> #<edge61 23 upstream-segment 24>)
   (:SINGLE-DIGIT :FORWARD-SLASH :DIGITS))
  "8/13" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge222 117 "the" 118> #<edge223 117 the 118> #<edge225 120 open-reading-frame 121>)
   (:DIGITS :FORWARD-SLASH :DIGITS))
  "28/65" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge198 98 the 99> #<edge199 99 bio-entity 100> #<edge201 101 comparative 102>)
   (:DIGITS :FORWARD-SLASH :DIGITS))
  "10/65" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge148 72 COMMA 73> #<edge149 73 "it" 74> #<edge151 74 modal 75>)
   (:DIGITS :FORWARD-SLASH :DIGITS))
  "19/65" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge136 63 restrict 64> #<edge137 64 mobility 65> #<edge139 65 of 66>)
   (:DIGITS :FORWARD-SLASH :DIGITS))
  "11/13" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge9 214 wild-type 217> #<edge10 274 "such as" 276> #<edge11 274 such-as 276>)
   (:LOWER :HYPHEN :LOWER))
  "program-based" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge22 393 "due to" 395> #<edge23 393 due-to 395> #<edge25 415 protein 417>)
   (:LOWER :FORWARD-SLASH :LOWER))
  "data/results" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge110 18 bio-entity 21> #<edge111 23 open-reading-frame 25>
    #<edge113 31 open-reading-frame 33>)
   (:SINGLE-DIGIT :FORWARD-SLASH :DIGITS))
  "9/61" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge101 53 square-brackets 56> #<edge102 1 study-bio-method 3> #<edge104 4 bio-process 9>)
   (:DIGITS :FORWARD-SLASH :DIGITS))
  "12/61" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge86 44 COMMA 45> #<edge87 46 digit-sequence 47>) (:LOWER :FORWARD-SLASH)) "collection/"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge74 31 downstream-segment 32> #<edge75 31 downstream 32>
    #<edge77 32 open-reading-frame 33>)
   (:SINGLE-DIGIT :FORWARD-SLASH :DIGITS))
  "8/61" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge30 3 "on" 4> #<edge31 3 on 4> #<edge33 4 the 5>) (:DIGITS :FORWARD-SLASH :DIGITS))
  "16/61" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge16 314 "wild-type" 317> #<edge17 314 wild-type 317> #<edge19 319 even-if 321>)
   (:DIGITS :FORWARD-SLASH :DIGITS))
  "22/61" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge313 159 solely 160> #<edge314 160 "the" 161> #<edge316 161 distance 162>)
   (:SINGLE-DIGIT :FORWARD-SLASH :DIGITS))
  "5/13" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge271 95 bio-complex 97> #<edge272 95 lambda-expression 96> #<edge274 98 bio-entity 100>)
   (:SINGLE-DIGIT :FORWARD-SLASH :DIGITS))
  "6/13" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge66 26 "the" 27> #<edge67 26 the 27> #<edge68 27 start 28>)
   (:LOWER :FORWARD-SLASH :LOWER))
  "specialists/epidemiologists" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge22 393 "due to" 395> #<edge23 393 due-to 395> #<edge25 415 protein 417>)
   (:LOWER :HYPHEN :LOWER))
  "multi-hazards" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge271 95 bio-complex 97> #<edge272 95 lambda-expression 96> #<edge274 98 bio-entity 100>)
   (:LOWER :HYPHEN :LOWER))
  "in-service" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge243 133 when 134> #<edge244 133 when 134> #<edge245 134 "the" 135>)
   (:LOWER :HYPHEN :LOWER))
  "district-based" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge92 52 COMMA 53> #<edge93 54 digit-sequence 55> #<edge95 5 hyphenated-pair 8>)
   (:DIGITS :FORWARD-SLASH :DIGITS))
  "32/61" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge28 2 study-bio-method 3> #<edge29 2 study-data 3> #<edge31 3 on 4>)
   (:LOWER :HYPHEN :LOWER))
  "multi-hazards" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge146 70 that 71> #<edge147 71 be 72> #<edge148 72 COMMA 73>) (:LOWER :HYPHEN :LOWER))
  "cross-border" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge112 22 open-reading-frame 25> #<edge113 31 open-reading-frame 33>
    #<edge114 30 open-reading-frame 33>)
   (:LOWER :HYPHEN :LOWER))
  "cross-border" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge69 28 bio-entity 29> #<edge70 29 "of" 30> #<edge71 29 of 30>) (:LOWER :HYPHEN :LOWER))
  "cross-border" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge7 184 by-virtue-of 187> #<edge8 214 "wild-type" 217> #<edge9 214 wild-type 217>)
   (:CAPITALIZED :HYPHEN :LOWER))
  "Cross-border" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge112 22 open-reading-frame 25> #<edge113 31 open-reading-frame 33>
    #<edge115 30 open-reading-frame 36>)
   (:SINGLE-LOWER :HYPHEN :PROTEIN))
  "e-mail" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge29 2 study-data 3> #<edge30 3 "on" 4> #<edge32 4 "the" 5>)
   (:SINGLE-DIGIT :FORWARD-SLASH :DIGITS))
  "2/13" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge213 111 that 112> #<edge214 112 when 113> #<edge216 113 "the" 114>)
   (:DIGITS :FORWARD-SLASH :DIGITS))
  "10/61" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge163 58 believe 60> #<edge164 60 reflect 62> #<edge166 67 bio-complex 69>)
   (:SINGLE-DIGIT :FORWARD-SLASH :DIGITS))
  "9/13" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge115 30 open-reading-frame 36> #<edge116 29 of 36> #<edge118 21 of 25>)
   (:DIGITS :FORWARD-SLASH :DIGITS))
  "38/61" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge87 46 digit-sequence 47> #<edge88 46 number 47> #<edge89 48 COMMA 49>)
   (:LOWER :HYPHEN :LOWER))
  "paper-based" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge134 62 "a" 63> #<edge135 62 a 63> #<edge137 64 mobility 65>)
   (:SINGLE-LOWER :HYPHEN :PROTEIN))
  "e-mail" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge120 14 proximity 21> #<edge121 15 close 16> #<edge123 15 close 16>)
   (:DIGITS :FORWARD-SLASH :DIGITS))
  "10/13" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge104 4 bio-process 9> #<edge105 9 suggest 11> #<edge107 15 proximity 17>)
   (:DIGITS :FORWARD-SLASH :DIGITS))
  "40/61" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge95 5 hyphenated-pair 8> #<edge96 33 square-brackets 36> #<edge98 41 square-brackets 44>)
   (:DIGITS :FORWARD-SLASH :DIGITS))
  "35/61" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge7 184 by-virtue-of 187> #<edge8 214 "wild-type" 217> #<edge10 274 "such as" 276>)
   (:DIGITS :FORWARD-SLASH :DIGITS))
  "13/13" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge250 138 move-something-somewhere 139> #<edge251 138 move-to 139>
    #<edge253 141 number 142>)
   (:SINGLE-LOWER :HYPHEN :PROTEIN))
  "e-mail" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge256 143 downstream 144> #<edge257 144 "of" 145> #<edge259 145 pronoun/inanimate 146>)
   (:DIGITS :FORWARD-SLASH :DIGITS))
  "12/13" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge78 34 digit-sequence 35> #<edge79 34 number 35> #<edge81 38 digit-sequence 39>)
   (:LOWER :HYPHEN :LOWER))
  "multi-hazards" MAKE-HYPHENATED-STRUCTURE)
 (((:LOWER #<edge24 415 "eif3" 417> #<edge25 415 protein 417>) (:LOWER :HYPHEN :LOWER))
  "socio-economic" :NO-EDGE)
 (((#<edge141 66 the 67> #<edge142 67 tethere 68> #<edge144 69 semicolon 70>)
   (:LOWER :HYPHEN :PROTEIN))
  "sub-type" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge56 20 bio-entity 21> #<edge57 21 "of" 22> #<edge58 21 of 22>) (:LOWER :HYPHEN :LOWER))
  "cross-border" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge19 319 even-if 321> :TRADE_MARK_SIGN) (:CAPITALIZED :TRADE_MARK_SIGN)) "Info™"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge125 9 suggest 13> #<edge126 3 on 9> #<edge127 57 "this" 58>) (:LOWER :HYPHEN :LOWER))
  "pre-assessment" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge156 78 undergo 79> #<edge158 80 limit 81>) (:SINGLE-DIGIT :SINGLE-LOWER)) "1a"
  REIFY-TWO-PART-LABEL)
 (((#<edge301 87 show 90> #<edge302 85 show 90> #<edge303 90 that 91>) (:LOWER :HYPHEN :LOWER))
  "above-mentioned" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge113 31 open-reading-frame 33> #<edge114 30 open-reading-frame 33>
    #<edge115 30 open-reading-frame 36>)
   (:CAPITALIZED :HYPHEN :LOWER))
  "Non-government" MAKE-HYPHENATED-STRUCTURE)
 (((:FULL #<edge112 22 open-reading-frame 25>) (:FULL :COLON)) "NGO:" :NO-EDGE)
 (((#<edge14 300 "wild-type" 303> #<edge15 300 wild-type 303>) (:FULL :COLON)) "BLIS:" :NO-EDGE)
 (((#<edge126 3 on 9> #<edge127 57 "this" 58> #<edge129 58 be 59>) (:LOWER :HYPHEN :LOWER))
  "mid-level" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge69 28 bio-entity 29> #<edge70 29 "of" 30> #<edge72 30 "the" 31>) (:LOWER :HYPHEN :LOWER))
  "buy-in" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge307 155 "that" 156> #<edge308 155 that 156> #<edge309 156 "it" 157>)
   (:LOWER :HYPHEN :LOWER))
  "laboratory-specific" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge157 79 only 80> #<edge158 80 limit 81> #<edge159 81 movement 82>)
   (:LOWER :HYPHEN :LOWER))
  "sub-committee" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge77 32 open-reading-frame 33> #<edge78 34 digit-sequence 35> #<edge79 34 number 35>)
   (:LOWER :HYPHEN :LOWER))
  "post-assessment" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge144 69 semicolon 70> #<edge145 70 "that" 71> #<edge146 70 that 71>)
   (:FULL :HYPHEN :CAPITALIZED))
  "AFENET-Lab" MAKE-HYPHENATED-PAIR)
 (((#<edge298 98 critical 103> #<edge299 93 between 97> #<edge300 88 show 90>)
   (:FULL :HYPHEN :CAPITALIZED))
  "AFENET-Lab" MAKE-HYPHENATED-PAIR)
 (((#<edge194 95 terminate 96> #<edge195 96 bio-complex 97> #<edge196 97 and 98>)
   (:LOWER :HYPHEN :LOWER))
  "cross-border" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge140 66 "the" 67> #<edge141 66 the 67> #<edge142 67 tethere 68>)
   (:FULL :HYPHEN :CAPITALIZED))
  "AFENET-Lab" MAKE-HYPHENATED-PAIR)
 (((#<edge34 5 terminate 6> #<edge35 6 HYPHEN 7> #<edge36 7 reinitiation 8>)
   (:LOWER :HYPHEN :LOWER))
  "low-tier" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge39 10 suggest 11> #<edge40 11 "the" 12> #<edge41 11 the 12>) (:LOWER :HYPHEN :LOWER))
  "paper-based" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge16 314 "wild-type" 317> #<edge17 314 wild-type 317> #<edge19 319 even-if 321>
    #<edge20 376 "wild-type" 379> #<edge22 393 "due to" 395>)
   (:LOWER :HYPHEN :LOWER :HYPHEN :LOWER))
  "easy-to-use" MAKE-HYPHENATED-TRIPLE)
 (((#<edge148 72 COMMA 73> #<edge149 73 "it" 74> #<edge150 73 pronoun/inanimate 74>)
   (:LOWER :HYPHEN :LOWER))
  "on-site" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge8 214 "wild-type" 217> #<edge9 214 wild-type 217> #<edge10 274 "such as" 276>)
   (:LOWER :HYPHEN :LOWER))
  "in-country" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge200 100 be 101> #<edge201 101 comparative 102> #<edge202 102 critical 103>)
   (:LOWER :HYPHEN :LOWER))
  "lower-tier" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge123 15 close 16> #<edge124 13 of 25> #<edge126 3 on 9>) (:LOWER :HYPHEN :LOWER))
  "low-income" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge263 149 figure 150> #<edge264 149 article-figure 150> #<edge266 150 number 151>)
   (:LOWER :HYPHEN :LOWER))
  "senior-level" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge251 138 move-to 139> #<edge252 141 digit-sequence 142> #<edge253 141 number 142>)
   (:LOWER :HYPHEN :LOWER))
  "fast-tracking" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge109 19 bio-entity 21> #<edge110 18 bio-entity 21> #<edge112 22 open-reading-frame 25>)
   (:LOWER :HYPHEN :LOWER))
  "mini-project" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge81 38 digit-sequence 39> #<edge82 38 number 39>) (:LOWER :COLON)) "approaches:" :NO-EDGE)
 (((#<edge46 14 the 15> #<edge47 15 close-bio-process 16> #<edge48 15 close 16>)
   (:LOWER :FORWARD-SLASH :LOWER))
  "district/provincial" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge23 393 due-to 395> #<edge24 415 "eif3" 417> #<edge26 415 bio-complex 417>)
   (:LOWER :HYPHEN :LOWER))
  "mid-level" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge14 300 "wild-type" 303> #<edge15 300 wild-type 303> #<edge17 314 wild-type 317>)
   (:LOWER :HYPHEN :LOWER))
  "in-service" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge3 139 up-to 141> #<edge4 174 "but rather" 176> #<edge6 184 "by virtue of" 187>)
   (:LOWER :HYPHEN :LOWER))
  "graduate-level" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge39 10 suggest 11> #<edge40 11 "the" 12>) (:LOWER :COLON)) "approaches:" :NO-EDGE)
 (((#<edge13 285 close-to 287> #<edge14 300 "wild-type" 303> #<edge16 314 "wild-type" 317>)
   (:LOWER :HYPHEN :LOWER))
  "graduate-level" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge36 7 reinitiation 8> #<edge37 8 bio-process 9> #<edge38 9 have 10>)
   (:LOWER :HYPHEN :LOWER))
  "highly-trained" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge310 156 pronoun/inanimate 157> #<edge311 157 be 158> #<edge312 158 not 159>)
   (:LOWER :HYPHEN :LOWER))
  "well-trained" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge195 96 bio-complex 97> #<edge196 97 and 98>) (:FULL :FORWARD-SLASH)) "HIV/"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge28 2 study-bio-method 3> #<edge29 2 study-data 3> #<edge30 3 "on" 4>)
   (:LOWER :HYPHEN :LOWER))
  "resource-limited" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge201 101 comparative 102> #<edge202 102 critical 103> #<edge203 103 "to" 104>)
   (:LOWER :HYPHEN :LOWER))
  "resource-limited" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge165 62 mobility 65> #<edge166 67 bio-complex 69> #<edge167 67 lambda-expression 68>)
   (:LOWER :HYPHEN :LOWER))
  "well-organized" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge15 300 wild-type 303> #<edge16 314 "wild-type" 317>) (:FULL :COLON)) "GOARN:" :NO-EDGE)
 (((:LOWER #<edge132 60 to 61> :LOWER) (:LOWER :HYPHEN :LOWER)) "emer-gencies" :NO-EDGE)
 (((#<edge119 17 of 21> #<edge120 14 proximity 21>) (:LOWER :COLON)) "following:" :NO-EDGE)
 (((#<edge39 10 suggest 11> #<edge40 11 "the" 12> #<edge41 11 the 12>) (:LOWER :HYPHEN :LOWER))
  "case-fatality" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge228 123 downstream-segment 124> #<edge229 123 downstream 124> #<edge230 124 "of" 125>)
   (:DIGITS :HYPHEN :DIGITS))
  "2000-2010" LOOK-FOR-YEAR-EXPRESSION)
 (((#<edge200 100 be 101> #<edge201 101 comparative 102> #<edge202 102 critical 103>)
   (:LOWER :HYPHEN :LOWER))
  "sub-continent" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge83 40 COMMA 41> #<edge84 42 digit-sequence 43> #<edge85 42 number 43>)
   (:LOWER :HYPHEN :LOWER))
  "well-managed" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge135 62 a 63> #<edge136 63 restrict 64> #<edge137 64 mobility 65>)
   (:DIGITS :HYPHEN :DIGITS))
  "2009-2010" LOOK-FOR-YEAR-EXPRESSION)
 (((#<edge172 79 movement 82> #<edge173 82 following 84> #<edge174 74 ability 77>)
   (:LOWER :HYPHEN :LOWER))
  "multi-drug" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge87 46 digit-sequence 47> #<edge88 46 number 47>) (:FULL :COLON)) "USAID:" :NO-EDGE)
 (((#<edge39 10 suggest 11> #<edge40 11 "the" 12>) (:FULL :COLON)) "ICU:" :NO-EDGE)
 (((#<edge13 285 close-to 287> #<edge14 300 "wild-type" 303>) (:FULL :COLON)) "CAREC:" :NO-EDGE)
 (((#<edge412 229 site 230> #<edge413 230 modal 231> #<edge447 230 bio-use 233>)
   (:LOWER :HYPHEN :PERCENT))
  "reached—51%" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge99 45 square-brackets 48> #<edge100 49 square-brackets 52>
    #<edge101 53 square-brackets 56>)
   (:LOWER :HYPHEN :LOWER))
  "community-based" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge212 111 "that" 112> #<edge213 111 that 112> #<edge214 112 when 113>)
   (:LOWER :HYPHEN :LOWER))
  "evidence-based" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge15 300 wild-type 303> #<edge16 314 "wild-type" 317> #<edge17 314 wild-type 317>)
   (:LOWER :HYPHEN :LOWER))
  "evidence-based" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge56 20 bio-entity 21> #<edge57 21 "of" 22> #<edge59 22 "the" 23>) (:LOWER :HYPHEN :LOWER))
  "senior-level" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge46 14 the 15> #<edge47 15 close-bio-process 16> #<edge48 15 close 16>)
   (:DIGITS :FORWARD-SLASH :DIGITS))
  "2009/2010" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge39 10 suggest 11> #<edge40 11 "the" 12> #<edge41 11 the 12>)
   (:DIGITS :FORWARD-SLASH :DIGITS))
  "2008/2009" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge120 14 proximity 21> #<edge121 15 close 16> #<edge122 14 proximity 25>)
   (:LOWER :HYPHEN :LOWER))
  "laboratory-confirmed" MAKE-HYPHENATED-STRUCTURE)
 (((:CLOSE-ANGLE-BRACKET #<edge182 87 "we" 88> :ASTERISK #<edge183 87 pronoun/first/plural 88>)
   (:CLOSE-ANGLE-BRACKET :DIGITS :ASTERISK :SINGLE-CAP))
  ">38°C" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge90 50 digit-sequence 51> :ASTERISK #<edge91 50 number 51>)
   (:DIGITS :ASTERISK :SINGLE-CAP))
  "100.4°F" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge26 415 bio-complex 417> #<edge40 11 "the" 12>) (:LOWER :TIME-UNIT)) "mid-year"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge8 214 "wild-type" 217> #<edge9 214 wild-type 217> #<edge10 274 "such as" 276>)
   (:CAPITALIZED :HYPHEN :CAPITALIZED))
  "Applied-Maths" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge61 23 upstream-segment 24> :REGISTERED_SIGN) (:MIXED :REGISTERED_SIGN)) "GeneChip®"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge27 1 sequencer 2> :REGISTERED_SIGN) (:MIXED :REGISTERED_SIGN)) "GeneChip®"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge105 9 suggest 11> :ASTERISK #<edge106 11 importance 13>) (:DIGITS :ASTERISK :SINGLE-CAP))
  "45°C" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:CAPITALIZED #<edge50 17 "of" 18> #<edge51 17 of 18>) (:CAPITALIZED :HYPHEN :SINGLE-LOWER))
  "Repli-g" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge387 205 an 206> #<edge389 207 "at" 208>) (:SINGLE-CAP :SINGLE-DIGIT)) "S1"
  REIFY-TWO-PART-LABEL)
 (((#<edge232 125 "the" 126> #<edge233 125 the 126> #<edge234 126 stop 127>)
   (:LOWER :HYPHEN :CAPITALIZED))
  "gamma-Proteobacteria" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge29 2 study-data 3> #<edge30 3 "on" 4> #<edge31 3 on 4>) (:DIGITS :HYPHEN :PROTEIN))
  "25-mer" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge97 37 square-brackets 40> #<edge98 41 square-brackets 44>
    #<edge99 45 square-brackets 48>)
   (:DIGITS :HYPHEN :LOWER))
  "25-mers" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge27 1 sequencer 2> #<edge28 2 study-bio-method 3> #<edge29 2 study-data 3>)
   (:LOWER :HYPHEN :LOWER))
  "resequencing-based" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge225 120 open-reading-frame 121> #<edge226 121 be 122> #<edge227 122 place 123>)
   (:LOWER :FORWARD-SLASH :LOWER))
  "transition/transversion" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge150 73 pronoun/inanimate 74> #<edge151 74 modal 75> #<edge152 75 be 76>)
   (:CAPITALIZED :HYPHEN :CAPITALIZED))
  "Applied-Maths" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge93 54 digit-sequence 55> #<edge94 54 number 55> #<edge96 33 square-brackets 36>)
   (:SINGLE-CAP :PLUS-SIGN :SINGLE-CAP))
  "A+T" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge116 29 of 36> #<edge118 21 of 25>) (:SINGLE-CAP :SINGLE-DIGIT)) "S1"
  REIFY-TWO-PART-LABEL)
 (((#<edge375 168 per 172> #<edge377 157 be 160>) (:SINGLE-CAP :SINGLE-DIGIT)) "S1"
  REIFY-TWO-PART-LABEL)
 (((#<edge196 97 and 98> #<edge198 98 the 99>) (:SINGLE-CAP :SINGLE-DIGIT)) "S1"
  REIFY-TWO-PART-LABEL)
 (((#<edge61 23 upstream-segment 24> #<edge63 24 protein 25>) (:SINGLE-CAP :SINGLE-DIGIT)) "S1"
  REIFY-TWO-PART-LABEL)
 (((#<edge213 111 that 112> #<edge215 112 when 113>) (:SINGLE-CAP :SINGLE-DIGIT)) "S1"
  REIFY-TWO-PART-LABEL)
 (((#<edge184 88 show 89> #<edge185 89 deictic-location 90> #<edge186 90 "that" 91>)
   (:CAPITALIZED :FORWARD-SLASH :CAPITALIZED))
  "Serratia/Yersinia" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge138 65 "of" 66> #<edge139 65 of 66> #<edge140 66 "the" 67>) (:LOWER :HYPHEN :LOWER))
  "most-closely" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge50 17 "of" 18> #<edge51 17 of 18> #<edge52 18 "the" 19>)
   (:CAPITALIZED :FORWARD-SLASH :CAPITALIZED))
  "Pantoea/Erwinia" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge408 224 amino-acid 225> #<edge409 226 COMMA 227> #<edge410 227 modifier 228>)
   (:CAPITALIZED :FORWARD-SLASH :CAPITALIZED))
  "Yersinia/Serratia" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge350 190 where 191> #<edge351 191 "the" 192> #<edge354 193 terminate 194>)
   (:DIGITS :FORWARD-SLASH :DIGITS))
  "71.7/95.03" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge342 179 bio-complex 180> #<edge343 180 modal 181> #<edge346 187 "the" 188>)
   (:DIGITS :FORWARD-SLASH :DIGITS))
  "77.6/96.5" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge282 146 position 148> #<edge283 145 position 148> #<edge284 145 position 152>)
   (:CAPITALIZED :FORWARD-SLASH :CAPITALIZED))
  "Yersinia/Serratia" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge93 54 digit-sequence 55> #<edge95 5 hyphenated-pair 8>) (:SINGLE-CAP :SINGLE-DIGIT)) "S1"
  REIFY-TWO-PART-LABEL)
 (((#<edge107 15 proximity 17> #<edge108 14 proximity 17> #<edge109 19 bio-entity 21>
    #<edge110 18 bio-entity 21> #<edge111 23 open-reading-frame 25>
    #<edge112 22 open-reading-frame 25> #<edge113 31 open-reading-frame 33>)
   (:CAPITALIZED :FORWARD-SLASH :CAPITALIZED :FORWARD-SLASH :CAPITALIZED :FORWARD-SLASH
    :CAPITALIZED))
  "Citrobacter/Escherichia/Salmonella/Enterobacter" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge201 101 comparative 102> #<edge202 102 critical 103> #<edge204 103 to 104>)
   (:LOWER :HYPHEN :DIGITS))
  "near-zero" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge151 74 modal 75> #<edge153 76 ability 77>) (:SINGLE-CAP :SINGLE-DIGIT)) "S1"
  REIFY-TWO-PART-LABEL)
 (((#<edge245 134 "the" 135> #<edge235 126 stop-endurant 127> #<edge237 128 COMMA 129>
    :OPEN-ANGLE-BRACKET #<edge246 134 the 135> #<edge241 132 even 133>
    #<edge16 314 "wild-type" 317>)
   (:PATH :HYPHEN :SINGLE-CAP :OPEN-ANGLE-BRACKET :PATH :HYPHEN :PROTEIN))
  "DE1-A<DE1-E3" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge151 74 modal 75> #<edge138 65 "of" 66> #<edge140 66 "the" 67> :ALMOST_EQUAL_TO
    #<edge152 75 be 76> #<edge144 69 semicolon 70> #<edge10 274 "such as" 276>
    #<edge145 70 "that" 71> #<edge147 71 be 72>)
   (:PATH :HYPHEN :SINGLE-CAP :ALMOST_EQUAL_TO :PATH :HYPHEN :PROTEIN :FORWARD-SLASH
    :SINGLE-DIGIT))
  "DE2-A≈DE2-E3/2" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge124 13 of 25> #<edge125 9 suggest 13> #<edge127 57 "this" 58>)
   (:SINGLE-CAP :FORWARD-SLASH :SINGLE-DIGIT))
  "D/2" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge12 285 "close to" 287> #<edge13 285 close-to 287> #<edge14 300 "wild-type" 303>)
   (:CAPITALIZED :HYPHEN :LOWER))
  "High-density" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge124 13 of 25> #<edge126 3 on 9>) (:LOWER :DIGITS)) "pathologies47"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge30 3 "on" 4> #<edge31 3 on 4> #<edge32 4 "the" 5>) (:LOWER :HYPHEN :LOWER))
  "permeability-induced" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge157 79 only 80> #<edge159 81 movement 82>) (:LOWER :DIGITS)) "space104"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge129 58 be 59> #<edge165 62 mobility 65>) (:DIGITS :FOLD-ENDURANT)) "2.2-fold"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge98 41 square-brackets 44> #<edge162 83 terminate 84>) (:DIGITS :FOLD-ENDURANT))
  "1.6-fold" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge50 17 "of" 18> #<edge52 18 "the" 19>) (:LOWER :DIGITS)) "lungs105"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge191 93 between 94> #<edge193 94 the 95>) (:LOWER :DIGITS)) "currents44"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge251 138 move-to 139> #<edge253 141 number 142>) (:LOWER :DIGITS)) "hyperpermeability37"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge60 22 the 23> #<edge62 23 upstream 24>) (:LOWER :DIGITS)) "outcome34"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge48 15 close 16> #<edge50 17 "of" 18>) (:LOWER :DIGITS)) "barrier104"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge6 184 "by virtue of" 187> #<edge7 184 by-virtue-of 187> :LOWER
    #<edge8 214 "wild-type" 217> #<edge9 214 wild-type 217>)
   (:PROTEIN :FORWARD-SLASH :LOWER :HYPHEN :LOWER))
  "endo/exotoxin-treated" :NO-EDGE)
 (((#<edge323 166 stop-endurant 167> #<edge325 167 bio-entity 168>) (:LOWER :DIGITS)) "cells103"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge185 89 deictic-location 90> #<edge187 90 that 91>) (:LOWER :DIGITS)) "domain102"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge7 184 by-virtue-of 187> #<edge129 58 be 59>) (:IN-VITRO :DIGITS)) "in vitro101"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge124 13 of 25> #<edge125 9 suggest 13> #<edge126 3 on 9>) (:SINGLE-DIGIT :HYPHEN :LOWER))
  "2-mediated" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge114 30 open-reading-frame 33> #<edge132 60 to 61> #<edge119 17 of 21>)
   (:DIGITS :FOLD-ENDURANT :HYPHEN))
  "50-fold-" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge27 1 sequencer 2> #<edge28 2 study-bio-method 3> #<edge29 2 study-data 3>)
   (:LOWER :HYPHEN :LOWER))
  "triple-mutant" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge203 103 "to" 104> #<edge205 104 reinitiation 105>) (:NUCLEOTIDE :DIGITS)) "cAMP55"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge140 66 "the" 67> #<edge141 66 the 67> #<edge142 67 tethere 68>)
   (:PROTEIN :HYPHEN :LOWER))
  "ischemia-reperfusion" PACKAGE-QUALIFYING-PAIR)
 (((#<edge107 15 proximity 17> #<edge109 19 bio-entity 21>) (:LOWER :DIGITS)) "decreased56"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge65 25 and 26> #<edge67 26 the 27>) (:LOWER :DIGITS)) "activity100"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge55 19 stop-endurant 20> #<edge57 21 "of" 22>) (:LOWER :DIGITS)) "barrier99"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge38 9 have 10> #<edge40 11 "the" 12>) (:LOWER :DIGITS)) "species53"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge3 139 up-to 141> #<edge26 415 bio-complex 417>) (:CELL-TYPE :DIGITS))
  "endothelial cells93" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge21 376 wild-type 379> #<edge295 103 to 110>) (:IN-VIVO :DIGITS)) "in vivo98"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge19 319 even-if 321> #<edge242 132 even 133>) (:EXTRACELLULAR-MATRIX :DIGITS))
  "extracellular matrix97" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge207 107 figure 108> #<edge209 108 digit-sequence 109>) (:LOWER :DIGITS)) "effect96"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge9 214 wild-type 217> #<edge85 42 number 43>) (:IN-VITRO :DIGITS)) "in vitro94"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge42 12 importance 13> #<edge44 13 of 14>) (:LOWER :DIGITS)) "edema93"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge7 184 by-virtue-of 187> #<edge187 90 that 91>) (:CELL-TYPE :SINGLE-DIGIT))
  "endothelial cells7" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge42 12 importance 13> #<edge44 13 of 14>) (:LOWER :DIGITS)) "dysfunction92"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge498 281 COMMA 282> #<edge500 282 article-figure 283>) (:LOWER :DIGITS)) "current59"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge418 234 "the" 235> #<edge420 235 native 236>) (:LOWER :DIGITS)) "mechanism91"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge339 177 well 178> #<edge341 178 the 179>) (:LOWER :DIGITS)) "events90"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge258 144 of 145> #<edge260 146 modifier 147>) (:LOWER :DIGITS)) "manner89"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge130 59 believe 60> #<edge131 60 "to" 61> #<edge133 61 reflect 62>)
   (:LOWER :HYPHEN :PROTEIN))
  "gamma-subunits" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge3 139 up-to 141> #<edge87 46 digit-sequence 47>) (:BIO-ENTITY :DIGITS)) "ALI/ARDS48"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge394 211 near 212> #<edge396 213 "the" 214>) (:LOWER :DIGITS)) "mice88"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge342 179 bio-complex 180> #<edge344 181 be 182>) (:LOWER :DIGITS)) "increased87"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge278 121 place 123> #<edge280 125 bio-entity 128>) (:LOWER :DIGITS)) "absorption8586"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge246 134 the 135> #<edge248 136 bio-entity 137>) (:LOWER :DIGITS)) "space84"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge21 376 wild-type 379> #<edge235 126 stop-endurant 127> #<edge236 127 bio-entity 128>)
   (:MOLECULE :HYPHEN :PROTEIN))
  "K+-ATPase" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge19 319 even-if 321> #<edge234 126 stop 127>) (:MOLECULE :FORWARD-SLASH)) "Na+/"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge154 77 "to" 78> #<edge156 78 undergo 79>) (:LOWER :DIGITS)) "activity83"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge55 19 stop-endurant 20> #<edge57 21 "of" 22>) (:LOWER :DIGITS)) "trypanosomes81"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge334 176 how 177> #<edge336 177 well-endurant 178>) (:LOWER :DIGITS)) "unaffected81"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge307 155 "that" 156> #<edge13 285 close-to 287>) (:PROTEIN :-LIKE)) "lectin-like"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge237 128 COMMA 129> #<edge239 130 be 131>) (:LOWER :DIGITS)) "sites81"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge224 120 protein 121> #<edge226 121 be 122>) (:PROTEIN :DIGITS)) "TNF7980"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge220 116 "of" 117> #<edge11 274 such-as 276>) (:PROTEIN :-LIKE)) "lectin-like"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge205 104 reinitiation 105> #<edge9 214 wild-type 217>) (:PROTEIN :-LIKE)) "lectin-like"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge144 69 semicolon 70> #<edge146 70 that 71>) (:LOWER :DIGITS)) "parasites78"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge130 59 believe 60> #<edge7 184 by-virtue-of 187>) (:PROTEIN :-LIKE)) "lectin-like"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge218 114 start 115> #<edge220 116 "of" 117>) (:LOWER :DIGITS)) "function76"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge149 73 "it" 74> #<edge151 74 modal 75>) (:LOWER :DIGITS)) "homotrimer75"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge13 285 close-to 287> #<edge69 28 bio-entity 29> #<edge71 29 of 30>)
   (:PROTEIN :FORWARD-SLASH :DIGITS))
  "p75/80" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge7 184 by-virtue-of 187> #<edge57 21 "of" 22> #<edge59 22 "the" 23>)
   (:PROTEIN :FORWARD-SLASH :DIGITS))
  "p55/60" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge356 195 "the" 196> #<edge358 196 bio-entity 197>) (:LOWER :DIGITS)) "production74"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge230 124 "of" 125> #<edge231 124 of 125> #<edge232 125 "the" 126>)
   (:PROTEIN :HYPHEN :SINGLE-LOWER))
  "TNF-β" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge169 74 be 76> #<edge171 79 limit 81>) (:LOWER :DIGITS)) "properties6072"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge109 19 bio-entity 21> #<edge111 23 open-reading-frame 25>) (:LOWER :DIGITS)) "necrosis71"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge63 24 protein 25> #<edge64 24 open-reading-frame 25> :CAPITALIZED)
   (:CAPITALIZED :HYPHEN :CAPITALIZED))
  "Calmette-Guerin" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge39 10 suggest 11> #<edge41 11 the 12>) (:LOWER :DIGITS)) "fibroblasts70"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge124 13 of 25> #<edge126 3 on 9>) (:LOWER :DIGITS)) "reabsorption59"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge43 13 "of" 14> #<edge45 14 "the" 15>) (:LOWER :DIGITS)) "fluid58"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge16 314 "wild-type" 317> #<edge19 319 even-if 321>) (:LOWER :HYPHENATED-NUMBER))
  "clearance55–57" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge139 65 of 66> #<edge141 66 the 67>) (:LOWER :DIGITS)) "syndrome54"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge109 19 bio-entity 21> #<edge110 18 bio-entity 21> #<edge112 22 open-reading-frame 25>)
   (:LOWER :HYPHEN :LOWER))
  "late-stage" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge89 48 COMMA 49> #<edge90 50 digit-sequence 51> #<edge92 52 COMMA 53>)
   (:LOWER :HYPHEN :LOWER))
  "early-stage" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge25 415 protein 417> #<edge28 2 study-bio-method 3>) (:LOWER :HYPHENATED-NUMBER))
  "edema45–53" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge371 178 tethere 198> #<edge373 169 bio-entity 172>) (:LOWER :DIGITS)) "transplantation44"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge363 183 parentheses 198> #<edge364 166 bio-entity 168> #<edge365 172 efficiency 174>)
   (:PROTEIN :HYPHEN :LOWER))
  "ischemia-reperfusion" PACKAGE-QUALIFYING-PAIR)
 (((#<edge344 181 be 182> #<edge346 187 "the" 188>) (:LOWER :DIGITS)) "integrity43"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge211 110 and 111> #<edge214 112 when 113>) (:LOWER :DIGITS)) "processes41.42"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge204 103 to 104> #<edge205 104 reinitiation 105> #<edge206 105 efficiency 106>)
   (:LOWER :FORWARD-SLASH :LOWER))
  "granulocyte/macrophage" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge145 70 "that" 71> #<edge147 71 be 72>) (:LOWER :DIGITS)) "products40"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge13 285 close-to 287> #<edge248 136 bio-entity 137>) (:CELL-TYPE :DIGITS))
  "microvascular endothelial cells37" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge184 88 show 89> #<edge186 90 "that" 91>) (:LOWER :DIGITS)) "monolayers36"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge54 19 stop 20> #<edge56 20 bio-entity 21>) (:LOWER :DIGITS)) "hyperpermeability36"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge46 14 the 15> #<edge48 15 close 16>) (:LOWER :DIGITS)) "levels35"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge221 116 of 117> #<edge222 117 "the" 118>) (:SINGLE-CAP :PLUS-SIGN)) "G+"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge98 41 square-brackets 44> #<edge99 45 square-brackets 48>) (:LOWER :COLON)) "rate:"
  :NO-EDGE)
 (((#<edge48 15 close 16> #<edge50 17 "of" 18>) (:LOWER :DIGITS)) "toxins34"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge130 59 believe 60> #<edge132 60 to 61>) (:LOWER :DIGITS)) "activation32"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge85 42 number 43> #<edge87 46 digit-sequence 47>) (:LOWER :DIGITS)) "permeability31"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge49 16 proximity 17> #<edge52 18 "the" 19>) (:LOWER :DIGITS)) "junctions21.30"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge25 415 protein 417> #<edge281 137 move-something-somewhere 139>)
   (:CELLULAR-LOCATION :SINGLE-DIGIT))
  "adherens junctions7" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge262 147 position 148> #<edge263 149 figure 150> #<edge264 149 article-figure 150>)
   (:SINGLE-DIGIT :HYPHEN :LOWER))
  "1-mediated" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge223 117 the 118> #<edge225 120 open-reading-frame 121>) (:PROTEIN :NUMBER-SEQUENCE))
  "phosphatase28,29" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge189 91 the 92> #<edge192 94 "the" 95>) (:LOWER :HYPHENATED-NUMBER)) "regulation22–27"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge15 300 wild-type 303> #<edge144 69 semicolon 70>) (:CELLULAR-PROCESS :DIGITS))
  "cellular processes21" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge174 74 ability 77> #<edge175 73 ability 77> :LOWER) (:PROTEIN :FORWARD-SLASH :LOWER))
  "Actin/myosindriven" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge11 274 such-as 276> #<edge150 73 pronoun/inanimate 74>) (:CELLULAR-LOCATION :DIGITS))
  "actin cytoskeleton21" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge17 314 wild-type 317> #<edge139 65 of 66>) (:FLUAV :DIGITS)) "Influenza A virus18"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge15 300 wild-type 303> #<edge134 62 "a" 63>) (:BETACORONAVIRUS :DIGITS)) "SARS-CoV17"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge61 23 upstream-segment 24> #<edge63 24 protein 25>) (:LOWER :DIGITS)) "transport16"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge23 393 due-to 395> #<edge138 65 "of" 66> #<edge140 66 "the" 67>)
   (:PROTEIN :HYPHEN :SINGLE-DIGIT))
  "Nedd4-2" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge97 37 square-brackets 40> #<edge98 41 square-brackets 44>
    #<edge99 45 square-brackets 48>)
   (:LOWER :HYPHEN :LOWER))
  "stress-activated" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge253 141 number 142> #<edge255 143 downstream-segment 144>) (:LOWER :DIGITS)) "impaired13"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge165 62 mobility 65> #<edge167 67 lambda-expression 68>) (:LOWER :DIGITS)) "older12"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge115 30 open-reading-frame 36> #<edge117 27 start 29>) (:LOWER :DIGITS)) "annually11"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge217 113 the 114> #<edge219 115 bio-entity 116>) (:LOWER :SINGLE-DIGIT)) "unit8"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge129 58 be 59> #<edge130 59 believe 60> #<edge131 60 "to" 61>) (:LOWER :HYPHEN :LOWER))
  "end-expiratory" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge43 13 "of" 14> #<edge45 14 "the" 15>) (:LOWER :DIGITS)) "edema10"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge30 3 "on" 4> #<edge32 4 "the" 5>) (:LOWER :SINGLE-DIGIT)) "pressure9"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge62 23 upstream 24> #<edge63 24 protein 25> #<edge64 24 open-reading-frame 25>)
   (:LOWER :HYPHEN :LOWER))
  "pink-stained" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge31 3 on 4> #<edge32 4 "the" 5>) (:LOWER :COLON)) "processes:" :NO-EDGE)
 (((#<edge214 112 when 113> #<edge216 113 "the" 114>) (:LOWER :SINGLE-DIGIT)) "injury7"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge58 21 of 22> #<edge60 22 the 23>) (:LOWER :SINGLE-DIGIT)) "large6"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge442 214 site 218> #<edge444 228 site 230>) (:LOWER :SINGLE-DIGIT)) "surface3"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge11 274 such-as 276> #<edge435 223 point-mutation 225> #<edge436 220 point-mutation 222>)
   (:BIO-ENTITY :HYPHEN :PROTEIN))
  "Na+/K+-ATPase" MAKE-HYPHENATED-PAIR)
 (((#<edge339 177 well 178> #<edge341 178 the 179>) (:LOWER :SINGLE-DIGIT)) "sodium5"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge293 116 of 121> #<edge295 103 to 110>) (:LOWER :SINGLE-DIGIT)) "lung4"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge107 15 proximity 17> #<edge109 19 bio-entity 21>) (:LOWER :SINGLE-DIGIT)) "cells3"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge489 271 initiate 272> #<edge490 272 bio-entity 273> #<edge491 276 "the" 277>)
   (:LOWER :HYPHEN :LOWER))
  "pre-existing" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge170 77 undergo 79> #<edge171 79 limit 81> #<edge172 79 movement 82>)
   (:LOWER :HYPHEN :LOWER))
  "well-tolerated" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge63 24 protein 25> #<edge64 24 open-reading-frame 25> #<edge65 25 and 26>)
   (:LOWER :HYPHEN :LOWER))
  "long-lasting" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge469 255 "a" 256> #<edge470 255 a 256> #<edge471 256 downstream-segment 257>)
   (:LOWER :HYPHEN :LOWER))
  "short-term" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge311 157 be 158> #<edge312 158 not 159> :MIXED #<edge313 159 solely 160>
    #<edge315 160 the 161>)
   (:FULL :HYPHEN :MIXED :HYPHEN :DIGITS))
  "SFV-enhIL-12" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge174 74 ability 77> #<edge175 73 ability 77> :MIXED #<edge176 70 be 72>
    #<edge178 62 mobility 69> #<edge179 57 believe 60>)
   (:FULL :HYPHEN :MIXED :HYPHEN :DIGITS :COLON))
  "SFV-enhIL-12:" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge44 13 of 14> #<edge45 14 "the" 15> :MIXED #<edge46 14 the 15> #<edge48 15 close 16>)
   (:FULL :HYPHEN :MIXED :HYPHEN :DIGITS))
  "SFV-enhIL-12" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:MIXED #<edge437 220 point-mutation 225> #<edge439 218 parentheses 226>
    #<edge440 202 reinitiation 204> #<edge32 4 "the" 5>)
   (:MIXED :HYPHEN :DIGITS :FORWARD-SLASH :PROTEIN))
  "AdIL-12/B7" PACKAGE-SLASHED-SEQUENCE)
 (((:MIXED #<edge328 169 bio-entity 170> #<edge330 170 that 171> #<edge331 171 affect 172>
    #<edge26 415 bio-complex 417>)
   (:MIXED :HYPHEN :DIGITS :FORWARD-SLASH :PROTEIN))
  "AdIL-12/B7" PACKAGE-SLASHED-SEQUENCE)
 (((:MIXED #<edge172 79 movement 82> #<edge174 74 ability 77> #<edge175 73 ability 77>
    #<edge16 314 "wild-type" 317>)
   (:MIXED :HYPHEN :DIGITS :FORWARD-SLASH :PROTEIN))
  "AdIL-12/B7" PACKAGE-SLASHED-SEQUENCE)
 (((:MIXED #<edge73 30 the 31> #<edge75 31 downstream 32> #<edge76 32 protein 33>
    #<edge79 34 number 35>)
   (:MIXED :HYPHEN :DIGITS :FORWARD-SLASH :PROTEIN))
  "AdIL-12/B7.1" PACKAGE-SLASHED-SEQUENCE)
 (((:MIXED #<edge266 150 number 151> #<edge268 141 bio-entity 143>) (:MIXED :HYPHEN :DIGITS))
  "mIL-12" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge235 126 stop-endurant 127> #<edge236 127 bio-entity 128> #<edge237 128 COMMA 129>
    #<edge238 129 reinitiation 130> :MIXED #<edge239 130 be 131> #<edge241 132 even 133>)
   (:PROTEIN :HYPHEN :PROTEIN :FORWARD-SLASH :MIXED :HYPHEN :DIGITS))
  "HC-Ad/RUmIL-12" PACKAGE-SLASHED-SEQUENCE)
 (((:MIXED #<edge232 125 "the" 126> #<edge234 126 stop 127>) (:MIXED :HYPHEN :DIGITS)) "mIL-12"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:MIXED #<edge157 79 only 80> #<edge159 81 movement 82>) (:MIXED :HYPHEN :DIGITS)) "mIL-12"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:MIXED #<edge64 24 open-reading-frame 25> #<edge66 26 "the" 27>) (:MIXED :HYPHEN :DIGITS))
  "mIL-12" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:MIXED #<edge928 inactive, resource 928>) (:MIXED :SINGLE-LOWER)) "wTNFα"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:MIXED #<edge731 396 digit-sequence 397>) (:MIXED :SINGLE-LOWER)) "wTNFα"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:MIXED #<edge443 213 site 218>) (:MIXED :SINGLE-LOWER)) "wTNFα" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge401 220 digit-sequence 221> #<edge402 220 number 221> #<edge403 221 amino-acid 222>)
   (:LOWER :FORWARD-SLASH :LOWER))
  "clevudine/emtricitabine" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:MIXED #<edge60 22 the 23>) (:MIXED :SINGLE-LOWER)) "wIFNα" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge75 31 downstream 32> #<edge76 32 protein 33> #<edge77 32 open-reading-frame 33>)
   (:LOWER :HYPHEN :MIXED))
  "prime-AdV" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge173 82 following 84> #<edge174 74 ability 77> #<edge175 73 ability 77>)
   (:LOWER :HYPHEN :MIXED))
  "prime-AdV" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge243 133 when 134> #<edge244 133 when 134> #<edge17 314 wild-type 317>)
   (:LOWER :HYPHEN :PROTEIN))
  "plasmid-Ad5" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge62 23 upstream 24> #<edge63 24 protein 25> #<edge65 25 and 26>) (:LOWER :HYPHEN :LOWER))
  "prime-boost" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge34 5 terminate 6> #<edge35 6 HYPHEN 7> #<edge36 7 reinitiation 8>)
   (:LOWER :HYPHEN :LOWER))
  "pre-existing" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge213 111 that 112> #<edge214 112 when 113> #<edge216 113 "the" 114>)
   (:SINGLE-DIGIT :HYPHEN :LOWER))
  "3-dose" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge134 62 "a" 63> #<edge125 9 suggest 13> #<edge135 62 a 63>) (:PERCENT :HYPHEN :PERCENT))
  "45%–90%" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge7 184 by-virtue-of 187> #<edge9 214 wild-type 217>) (:PROTEIN :PROTEIN)) "Anti-Ad5"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge133 61 reflect 62> #<edge134 62 "a" 63> #<edge135 62 a 63>)
   (:CAPITALIZED :HYPHEN :LOWER))
  "Adenovirus-based" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge149 73 "it" 74> #<edge151 74 modal 75>) (:SINGLE-CAP :SINGLE-DIGIT)) "E1"
  REIFY-TWO-PART-LABEL)
 (((#<edge278 121 place 123> #<edge279 126 bio-entity 128> #<edge280 125 bio-entity 128>)
   (:LOWER :HYPHEN :LOWER))
  "antigen-based" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge468 254 at 255> #<edge469 255 "a" 256> #<edge470 255 a 256>)
   (:FULL :FORWARD-SLASH :PROTEIN))
  "DNA/proteins" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge377 157 be 160> #<edge378 153 suggest 155> #<edge379 155 that 156>)
   (:FULL :FORWARD-SLASH :PROTEIN))
  "DNA/proteins" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge178 62 mobility 69> #<edge179 57 believe 60> #<edge3 139 up-to 141>)
   (:DIGITS :HYPHEN :DNA))
  "two-plasmid DNA" MAKE-HYPHENATED-STRUCTURE)
 (((:MIXED #<edge306 154 suggest 155>) (:MIXED :SINGLE-LOWER)) "wIFNγ" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge159 81 movement 82> #<edge160 82 following-adj 83> #<edge3 139 up-to 141>)
   (:PROTEIN :FORWARD-SLASH :BIO-ENTITY))
  "WHsAg/anti-WHs" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge247 135 start 136> #<edge248 136 bio-entity 137>
    #<edge267 85 subordinate-conjunction 87>)
   (:MIXED :FORWARD-SLASH :PROTEIN))
  "HBsAg/anti-HBs" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge143 68 bio-complex 69> #<edge145 70 "that" 71> #<edge146 70 that 71>
    #<edge148 72 COMMA 73>)
   (:PROTEIN :SINGLE-DIGIT :FORWARD-SLASH :SINGLE-CAP))
  "preS2/S" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge421 236 reinitiation 237> #<edge422 237 bio-entity 238> #<edge424 239 modifier 240>)
   (:LOWER :HYPHEN :LOWER))
  "follow-up" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge9 214 wild-type 217> :MIXED) (:PROTEIN :MIXED)) "anti-WHs" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge5 174 but-rather 176> #<edge129 58 be 59> #<edge130 59 believe 60>)
   (:BIO-ENTITY :FORWARD-SLASH :LOWER))
  "mg/kg/day" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge82 38 number 39> #<edge101 53 square-brackets 56> #<edge85 42 number 43>
    #<edge86 44 COMMA 45>)
   (:HYPHENATED-NUMBER :TIME-UNIT :HYPHEN :LOWER))
  "1-2-year-old" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge39 10 suggest 11> #<edge40 11 "the" 12> #<edge41 11 the 12>) (:PROTEIN :HYPHEN :LOWER))
  "WHsAg-based" PACKAGE-QUALIFYING-PAIR)
 (((#<edge33 4 the 5> #<edge34 5 terminate 6> :FULL) (:SINGLE-CAP :HYPHEN :FULL)) "L-FMAU"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge242 132 even 133> #<edge243 133 when 134> #<edge244 133 when 134>)
   (:LOWER :HYPHEN :LOWER))
  "pre-treatment" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge9 214 wild-type 217> #<edge167 67 lambda-expression 68> #<edge11 274 such-as 276>)
   (:CELL-TYPE :FORWARD-SLASH :PROTEIN))
  "Th0/Th1" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:CAPITALIZED #<edge21 376 wild-type 379> :CAPITALIZED) (:CAPITALIZED :HYPHEN :CAPITALIZED))
  "Hervás-Stubbs" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge233 125 the 126> #<edge234 126 stop 127> #<edge235 126 stop-endurant 127>)
   (:LOWER :HYPHEN :LOWER))
  "self-limiting" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge86 44 COMMA 45> #<edge87 46 digit-sequence 47> #<edge88 46 number 47>)
   (:LOWER :HYPHEN :LOWER))
  "self-limiting" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge278 121 place 123> #<edge279 126 bio-entity 128> #<edge280 125 bio-entity 128>)
   (:SINGLE-CAP :HYPHEN :LOWER))
  "T-helper" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge261 147 position-bio-process 148> #<edge262 147 position 148> #<edge263 149 figure 150>
    #<edge264 149 article-figure 150>)
   (:HYPHEN :LOWER :HYPHEN :LOWER))
  "-adenine-based" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge195 96 bio-complex 97> #<edge196 97 and 98> #<edge197 98 "the" 99>)
   (:SINGLE-CAP :HYPHEN :LOWER))
  "T-helper" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge182 87 "we" 88> #<edge183 87 pronoun/first/plural 88> #<edge184 88 show 89>
    #<edge185 89 deictic-location 90>)
   (:HYPHEN :LOWER :HYPHEN :LOWER))
  "-adenine-based" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge125 9 suggest 13> #<edge114 30 open-reading-frame 33> #<edge126 3 on 9>)
   (:PERCENT :HYPHEN :PERCENT))
  "60%–75%" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge71 29 of 30> #<edge58 21 of 22> #<edge72 30 "the" 31>) (:PERCENT :HYPHEN :PERCENT))
  "5%–10%" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge151 74 modal 75> #<edge152 75 be 76> #<edge153 76 ability 77>) (:LOWER :HYPHEN :LOWER))
  "self-limiting" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge307 155 "that" 156> #<edge308 155 that 156> #<edge309 156 "it" 157>)
   (:PROTEIN :HYPHEN :LOWER))
  "IC-based" PACKAGE-QUALIFYING-PAIR)
 (((#<edge224 120 protein 121> #<edge225 120 open-reading-frame 121> #<edge226 121 be 122>)
   (:PROTEIN :HYPHEN :LOWER))
  "IC-based" PACKAGE-QUALIFYING-PAIR)
 (((#<edge175 73 ability 77> #<edge176 70 be 72> #<edge177 65 of 69>) (:PROTEIN :HYPHEN :LOWER))
  "IC-based" PACKAGE-QUALIFYING-PAIR)
 (((#<edge23 393 due-to 395> #<edge24 415 "eif3" 417> #<edge25 415 protein 417>)
   (:LOWER :HYPHEN :LOWER))
  "vaccine-based" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge162 83 terminate 84> #<edge163 58 believe 60> #<edge165 62 mobility 65>)
   (:LOWER :HYPHEN :LOWER))
  "follow-up" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge43 13 "of" 14> #<edge44 13 of 14> #<edge45 14 "the" 15>) (:PROTEIN :HYPHEN :LOWER))
  "lipopeptide-based" PACKAGE-QUALIFYING-PAIR)
 (((#<edge69 28 bio-entity 29> #<edge745 405 whilst 406>) (:PROTEIN :PLUS-SIGN)) "CD25+"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge133 61 reflect 62> #<edge134 62 "a" 63> #<edge136 63 restrict 64>)
   (:LOWER :HYPHEN :LOWER))
  "high-level" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge215 112 when 113> #<edge216 113 "the" 114> #<edge217 113 the 114>)
   (:LOWER :HYPHEN :LOWER))
  "acutely-infected" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge143 68 bio-complex 69> #<edge144 69 semicolon 70> #<edge145 70 "that" 71>)
   (:LOWER :HYPHEN :LOWER))
  "ligand-ligand" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge3 139 up-to 141> #<edge59 22 "the" 23>) (:PROTEIN :SINGLE-LOWER)) "interferon alpha 2a"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge261 147 position-bio-process 148> #<edge229 123 downstream 124>
    #<edge262 147 position 148>)
   (:PERCENT :HYPHEN :PERCENT))
  "40%–90%" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge214 112 when 113> #<edge203 103 "to" 104> #<edge215 112 when 113>)
   (:PERCENT :HYPHEN :PERCENT))
  "5%–10%" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge137 64 mobility 65> #<edge138 65 "of" 66> #<edge140 66 "the" 67>)
   (:DIGITS :HYPHEN :LOWER))
  "two-sample" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge131 60 "to" 61> #<edge132 60 to 61> #<edge133 61 reflect 62>) (:DIGITS :HYPHEN :LOWER))
  "two-tailed" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge727 392 likely 393> #<edge728 392 likely 393> #<edge730 395 the 396>)
   (:SINGLE-DIGIT :COLON :SINGLE-DIGIT))
  "1∶9" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge724 389 downstream 390> #<edge725 390 bio-entity 391> :LOWER) (:PROTEIN :COLON :LOWER))
  "PBS:glycerin" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge51 17 of 18> #<edge578 328 reinitiation 329>) (:PROTEIN :LOWER)) "anti-rat"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge573 325 downstream 326> #<edge574 326 "of" 327> #<edge575 326 of 327>)
   (:DIGITS :HYPHEN :LOWER))
  "568-labeled" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge555 307 downstream-segment 308> #<edge556 307 downstream 308> #<edge557 308 COMMA 309>)
   (:DIGITS :HYPHEN :LOWER))
  "568-labeled" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge541 296 "a" 297> #<edge542 296 a 297> #<edge544 297 modifier 298>)
   (:SINGLE-DIGIT :COLON :DIGITS))
  "1∶200" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge536 292 however 293> #<edge537 293 COMMA 294> #<edge538 294 if 295>)
   (:DIGITS :HYPHEN :LOWER))
  "546-conjugated" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge600 345 direction 346> #<edge601 345 amino-acid 346>) (:POINT-MUTATION :POINT-MUTATION))
  "1D4B" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge396 213 "the" 214> #<edge397 213 the 214> #<edge398 217 site 218>)
   (:LOWER :HYPHEN :FULL))
  "saponin-TBS" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge12 285 "close to" 287> #<edge370 180 tethere 198> #<edge372 170 affect 172>)
   (:PROTEIN :HYPHEN :SINGLE-DIGIT))
  "membrane protein-1" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge321 165 and 166> #<edge323 166 stop-endurant 167>) (:FULL :DIGITS)) "LSM510"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge312 158 not 159> #<edge313 159 solely 160> #<edge315 160 the 161>)
   (:SINGLE-DIGIT :COLON :SINGLE-DIGIT))
  "1∶9" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge309 156 "it" 157> #<edge310 156 pronoun/inanimate 157> :LOWER) (:PROTEIN :COLON :LOWER))
  "PBS:glycerin" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge249 137 be 138> #<edge250 138 move-something-somewhere 139> #<edge251 138 move-to 139>)
   (:LOWER :HYPHEN :MIXED))
  "glycine-HCl" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge1 118 protein 120> #<edge127 57 "this" 58> #<edge128 57 this 58>)
   (:BIO-ENTITY :HYPHEN :LOWER))
  "DQ-OVA-liposome" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge108 14 proximity 17> #<edge109 19 bio-entity 21> #<edge111 23 open-reading-frame 25>)
   (:SINGLE-DIGIT :HYPHEN :LOWER))
  "8-hole" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge81 38 digit-sequence 39> #<edge82 38 number 39> #<edge84 42 digit-sequence 43>
    #<edge85 42 number 43> #<edge86 44 COMMA 45>)
   (:PROTEIN :HYPHEN :PROTEIN :HYPHEN :LOWER))
  "DM-DsRed-expressing" MAKE-HYPHENATED-TRIPLE)
 (((#<edge176 70 be 72> #<edge177 65 of 69> #<edge178 62 mobility 69>)
   (:CAPITALIZED :HYPHEN :FULL))
  "Alexa-OVA" MAKE-HYPHENATED-PAIR)
 (((#<edge320 164 start 165> #<edge321 165 and 166> #<edge322 166 stop 167>)
   (:PROTEIN :HYPHEN :CAPITALIZED))
  "Sigma-Aldrich" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge298 98 critical 103> #<edge299 93 between 97> #<edge301 87 show 90>)
   (:SINGLE-DIGIT :COLON :SINGLE-DIGIT))
  "1∶5" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge133 61 reflect 62> #<edge135 62 a 63> #<edge136 63 restrict 64> #<edge137 64 mobility 65>
    #<edge138 65 "of" 66> #<edge140 66 "the" 67>)
   (:SINGLE-CAP :SINGLE-DIGIT :HYPHEN :PROTEIN :SINGLE-LOWER :SINGLE-DIGIT))
  "H2-DMβ2" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge120 14 proximity 21> #<edge122 14 proximity 25> #<edge123 15 close 16>
    #<edge124 13 of 25> #<edge125 9 suggest 13> #<edge127 57 "this" 58>)
   (:SINGLE-CAP :SINGLE-DIGIT :HYPHEN :PROTEIN :SINGLE-LOWER :SINGLE-DIGIT))
  "H2-DMβ2" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:MIXED #<edge90 50 digit-sequence 51>) (:MIXED :SINGLE-DIGIT)) "pDsRedN1"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge50 17 "of" 18> :FULL #<edge51 17 of 18> #<edge53 18 the 19>)
   (:HYPHEN :FULL :HYPHEN :SINGLE-DIGIT))
  "-GATGCCGTCCTTCTGGGTAGGTGGATCC-3" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge43 13 "of" 14> :FULL #<edge44 13 of 14> #<edge46 14 the 15>)
   (:HYPHEN :FULL :HYPHEN :SINGLE-DIGIT))
  "-ATGGCTGCACTCTGGCTGCTGCTGCTGGT-3" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge21 376 wild-type 379> #<edge23 393 due-to 395> #<edge24 415 "eif3" 417>
    #<edge25 415 protein 417> #<edge26 415 bio-complex 417> #<edge28 2 study-bio-method 3>)
   (:SINGLE-CAP :SINGLE-DIGIT :HYPHEN :PROTEIN :SINGLE-LOWER :SINGLE-DIGIT))
  "H2-DMβ2" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge36 7 reinitiation 8> #<edge28 2 study-bio-method 3>) (:POINT-MUTATION :SINGLE-DIGIT))
  "P388D1" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge46 14 the 15> #<edge47 15 close-bio-process 16> #<edge48 15 close 16>)
   (:SINGLE-LOWER :FORWARD-SLASH :LOWER))
  "g/mouse" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge34 5 terminate 6> #<edge35 6 HYPHEN 7> #<edge36 7 reinitiation 8>)
   (:SINGLE-LOWER :FORWARD-SLASH :LOWER))
  "l/mouse" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge30 3 "on" 4> #<edge31 3 on 4> #<edge33 4 the 5>) (:LOWER :FORWARD-SLASH :DIGITS))
  "lipid/100 µ" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge131 60 "to" 61> #<edge132 60 to 61> #<edge133 61 reflect 62>)
   (:SINGLE-LOWER :FORWARD-SLASH :LOWER))
  "g/mg" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge19 319 even-if 321> #<edge20 376 "wild-type" 379> #<edge53 18 the 19>)
   (:LOWER :HYPHEN :POINT-MUTATION))
  "methyl-14C" MAKE-HYPHENATED-STRUCTURE)
 (((:CAPITALIZED #<edge334 176 how 177> #<edge335 177 well-bio-process 178>)
   (:CAPITALIZED :HYPHEN :PROTEIN))
  "Millex-HA" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge328 169 bio-entity 170> #<edge329 170 "that" 171> #<edge330 170 that 171>)
   (:LOWER :HYPHEN :LOWER))
  "sterile-filtered" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge321 165 and 166> #<edge322 166 stop 167> #<edge323 166 stop-endurant 167>)
   (:LOWER :FORWARD-SLASH :LOWER))
  "lipid/ml" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:FULL #<edge232 125 "the" 126> #<edge239 130 be 131>) (:FULL :HYPHEN :POINT-MUTATION)) "CL-4B"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge159 81 movement 82> #<edge160 82 following-adj 83> #<edge161 82 following 83>)
   (:LOWER :HYPHEN :MIXED))
  "glycine-NaOH" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge62 23 upstream 24> #<edge63 24 protein 25> #<edge65 25 and 26> #<edge66 26 "the" 27>
    #<edge68 27 start 28> #<edge69 28 bio-entity 29> #<edge71 29 of 30>)
   (:SINGLE-DIGIT :COLON :SINGLE-DIGIT :COLON :SINGLE-DIGIT :COLON :SINGLE-DIGIT))
  "4∶3∶2∶7" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge12 285 "close to" 287> #<edge13 285 close-to 287> #<edge14 300 "wild-type" 303>)
   (:PROTEIN :HYPHEN :CAPITALIZED))
  "Sigma-Aldrich" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge51 17 of 18> #<edge768 426 bio-mechanism 427>) (:PROTEIN :PLUS-SIGN)) "CD11c+"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge38 9 have 10> #<edge697 369 protein 372> #<edge40 11 "the" 12>)
   (:PROTEIN :FORWARD-SLASH :BIO-ENTITY))
  "CD4/CD8+" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge197 98 "the" 99> #<edge198 98 the 99> #<edge199 99 bio-entity 100> #<edge200 100 be 101>
    #<edge17 314 wild-type 317>)
   (:LOWER :HYPHEN :LOWER :HYPHEN :BIO-ENTITY))
  "liposome-coupled-DQ-OVA" MAKE-HYPHENATED-TRIPLE)
 (((#<edge188 91 "the" 92> #<edge189 91 the 92> #<edge190 92 distance 93>)
   (:CAPITALIZED :HYPHEN :LOWER))
  "Co-localization" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge3 139 up-to 141> #<edge56 20 bio-entity 21> #<edge57 21 "of" 22> #<edge58 21 of 22>)
   (:BIO-ENTITY :HYPHEN :FULL :HYPHEN))
  "Alexa488-OVA-" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:FULL #<edge110 18 bio-entity 21> #<edge111 23 open-reading-frame 25>) (:FULL :HYPHEN :FULL))
  "DQ-OVA" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge41 11 the 12> #<edge43 13 "of" 14> #<edge44 13 of 14>)
   (:SINGLE-DIGIT :SINGLE-CAP :COLON))
  "1A:" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge34 5 terminate 6> #<edge35 6 HYPHEN 7> #<edge37 8 bio-process 9> #<edge38 9 have 10>)
   (:SINGLE-CAP :HYPHEN :SINGLE-DIGIT :CAPITALIZED))
  "H-2Dd" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge140 66 "the" 67> #<edge141 66 the 67> #<edge142 67 tethere 68>) (:LOWER :HYPHEN :LOWER))
  "so-called" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge19 319 even-if 321> #<edge22 393 "due to" 395>) (:INITIAL :INITIAL)) "M.S."
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge12 285 "close to" 287> #<edge15 300 wild-type 303> #<edge17 314 wild-type 317>)
   (:INITIAL :INITIAL :INITIAL))
  "S.T.Q." REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge2 139 "up to" 141> #<edge7 184 by-virtue-of 187> #<edge9 214 wild-type 217>)
   (:INITIAL :INITIAL :INITIAL))
  "E.I.L." REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge55 19 stop-endurant 20> #<edge56 20 bio-entity 21> #<edge57 21 "of" 22>)
   (:LOWER :HYPHEN :LOWER))
  "gene-environment" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge344 181 be 182> #<edge345 182 tethere 183> #<edge346 187 "the" 188>)
   (:LOWER :HYPHEN :LOWER))
  "pre-term" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge244 133 when 134> :MIXED) (:SINGLE-DIGIT :MIXED)) "9HTEo" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge334 176 how 177> #<edge23 393 due-to 395> #<edge335 177 well-bio-process 178> :MIXED)
   (:SINGLE-CAP :PROTEIN :FORWARD-SLASH :MIXED))
  "C3H/HeJ" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge289 130 detect 132> #<edge290 130 detect 133> #<edge291 124 of 128>)
   (:LOWER :HYPHEN :LOWER))
  "short-term" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge180 85 however 86> #<edge181 86 COMMA 87> #<edge182 87 "we" 88>)
   (:PROTEIN :FORWARD-SLASH :LOWER))
  "oxidant/antioxidant" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge355 194 and 195> #<edge356 195 "the" 196> #<edge358 196 bio-entity 197>)
   (:PROTEIN :HYPHEN :SINGLE-DIGIT))
  "MALP-2" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge16 314 "wild-type" 317> #<edge285 104 efficiency 110> #<edge287 139 up-to 143>)
   (:PROTEIN :HYPHEN :SINGLE-DIGIT))
  "TLR1-5" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge274 98 bio-entity 100> #<edge275 104 efficiency 106>
    #<edge276 118 open-reading-frame 121>)
   (:LOWER :HYPHEN :FULL))
  "non-CF" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge268 141 bio-entity 143> #<edge269 106 parentheses 110> #<edge271 95 bio-complex 97>
    #<edge272 95 lambda-expression 96>)
   (:DIGITS :PROTEIN :DIGITS :SINGLE-LOWER))
  "16HBE14o" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:FULL #<edge251 138 move-to 139> #<edge252 141 digit-sequence 142>)
   (:FULL :DIGITS :SINGLE-LOWER))
  "CFTE29o" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge205 104 reinitiation 105> #<edge206 105 efficiency 106> #<edge207 107 figure 108>)
   (:LOWER :HYPHEN :FULL))
  "non-CF" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge28 2 study-bio-method 3> #<edge29 2 study-data 3> #<edge30 3 "on" 4>)
   (:PROTEIN :FORWARD-SLASH :FULL))
  "ALI/ARDS" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge124 13 of 25> #<edge125 9 suggest 13> #<edge126 3 on 9>) (:CAPITALIZED :HYPHEN :PROTEIN))
  "Phospho-Akt" MAKE-HYPHENATED-STRUCTURE)
 (((:LOWER #<edge105 9 suggest 11> #<edge106 11 importance 13>) (:LOWER :HYPHEN :LOWER))
  "hyperoxia-induced" :NO-EDGE)
 (((#<edge69 28 bio-entity 29> #<edge70 29 "of" 30> #<edge72 30 "the" 31>)
   (:DIGITS :HYPHEN :LOWER))
  "two-hit" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge64 24 open-reading-frame 25> #<edge65 25 and 26> #<edge66 26 "the" 27>)
   (:LOWER :HYPHEN :LOWER))
  "so-called" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge6 184 "by virtue of" 187> #<edge105 9 suggest 11> #<edge107 15 proximity 17>)
   (:PROTEIN :HYPHEN :DIGITS))
  "TLR1-10" MAKE-HYPHENATED-PAIR)
 (((#<edge238 129 reinitiation 130> #<edge239 130 be 131> #<edge241 132 even 133>)
   (:LOWER :HYPHEN :PROTEIN))
  "non-TLR" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge159 81 movement 82> #<edge160 82 following-adj 83> #<edge13 285 close-to 287>)
   (:LOWER :HYPHEN :CELL-TYPE))
  "non-immune cells" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge21 376 wild-type 379> #<edge230 124 "of" 125>) (:PROTEIN :SINGLE-LOWER)) "MyD88s"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge153 76 ability 77> #<edge154 77 "to" 78> #<edge10 274 "such as" 276> #<edge155 77 to 78>
    #<edge12 285 "close to" 287>)
   (:PROTEIN :HYPHEN :PROTEIN :HYPHEN :PROTEIN))
  "TLR-MyD88-IRAK4" MAKE-HYPHENATED-TRIPLE)
 (((#<edge143 68 bio-complex 69> #<edge144 69 semicolon 70> #<edge146 70 that 71>)
   (:PROTEIN :HYPHEN :LOWER))
  "IRAK-family" PACKAGE-QUALIFYING-PAIR)
 (((#<edge17 314 wild-type 317> #<edge196 97 and 98>) (:PROTEIN :SINGLE-CAP)) "IL-18R"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge128 57 this 58> #<edge129 58 be 59> #<edge9 214 wild-type 217>)
   (:CAPITALIZED :HYPHEN :PROTEIN))
  "Toll-Interleukin-1 Receptor" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge247 135 start 136> #<edge15 300 wild-type 303>) (:LOWER :-LIKE)) "lupus-like"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge343 180 modal 181> #<edge344 181 be 182> #<edge345 182 tethere 183>)
   (:SINGLE-CAP :COLON :SINGLE-CAP))
  "I:C" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge28 2 study-bio-method 3> #<edge329 170 "that" 171> #<edge331 171 affect 172>)
   (:PROTEIN :FORWARD-SLASH :SINGLE-DIGIT))
  "TLR7/8" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge104 4 bio-process 9> #<edge105 9 suggest 11> #<edge106 11 importance 13>)
   (:LOWER :HYPHEN :LOWER))
  "pathogen-associated" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge560 310 bio-complex 311> #<edge29 2 study-data 3>) (:PROTEIN :-LIKE)) "NOD-like"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge30 3 "on" 4> #<edge31 3 on 4> #<edge32 4 "the" 5>) (:DIGITS :HYPHEN :LOWER)) "one-way"
  MAKE-HYPHENATED-STRUCTURE)
 (((#<edge104 4 bio-process 9> #<edge105 9 suggest 11> #<edge106 11 importance 13>)
   (:LOWER :HYPHEN :LOWER))
  "post-infection" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge390 207 at 208> #<edge391 208 COMMA 209> #<edge392 209 or 210>) (:LOWER :HYPHEN :LOWER))
  "cut-off" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge296 101 critical 103> #<edge297 100 critical 103> #<edge298 98 critical 103>)
   (:LOWER :HYPHEN :LOWER))
  "cut-off" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge209 108 digit-sequence 109> #<edge210 108 number 109>) (:NUMBER-SEQUENCE :LOWER))
  "3,3′,5,5′-tetramethylbenzidine" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge82 38 number 39> #<edge84 42 digit-sequence 43>) (:SINGLE-CAP :SINGLE-DIGIT)) "H5"
  REIFY-TWO-PART-LABEL)
 (((#<edge78 34 digit-sequence 35> #<edge79 34 number 35> #<edge80 36 COMMA 37>)
   (:LOWER :FORWARD-SLASH :LOWER))
  "ug/ml" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge603 347 "to" 348> #<edge604 347 to 348> #<edge609 351 SINGLE-QUOTE 352>)
   (:SINGLE-LOWER :FORWARD-SLASH :LOWER))
  "l/well" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge587 337 "that" 338> #<edge588 337 that 338> #<edge589 338 "the" 339>)
   (:FULL :HYPHEN :PROTEIN))
  "TPCK-trypsin" MAKE-HYPHENATED-PAIR)
 (((#<edge536 292 however 293> #<edge537 293 COMMA 294> #<edge539 295 modifier 296>)
   (:LOWER :HYPHEN :LOWER))
  "flat-bottom" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge509 268 hyphenated-pair 271> #<edge510 277 number 279> #<edge511 260 figure 263>)
   (:LOWER :FORWARD-SLASH :LOWER))
  "serum/virus" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge374 170 lambda-expression 172> #<edge375 168 per 172> #<edge376 157 be 159>
    #<edge377 157 be 160> #<edge379 155 that 156> #<edge380 199 however 200>
    #<edge381 200 COMMA 201>)
   (:SINGLE-CAP :FORWARD-SLASH :CAPITALIZED :FORWARD-SLASH :DIGITS :FORWARD-SLASH :DIGITS))
  "A/Hanoi/30408/2005" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge328 169 bio-entity 170> #<edge329 170 "that" 171> #<edge331 171 affect 172>)
   (:SINGLE-CAP :HYPHEN :LOWER))
  "V-bottom" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge305 153 this 154> #<edge306 154 suggest 155> #<edge311 157 be 158>)
   (:SINGLE-LOWER :FORWARD-SLASH :LOWER))
  "l/well" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge193 94 the 95> #<edge194 95 terminate 96> #<edge195 96 bio-complex 97>
    #<edge196 97 and 98> #<edge198 98 the 99> #<edge199 99 bio-entity 100> #<edge200 100 be 101>)
   (:SINGLE-CAP :FORWARD-SLASH :CAPITALIZED :FORWARD-SLASH :DIGITS :FORWARD-SLASH :DIGITS))
  "A/Hanoi/30408/2005" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge162 83 terminate 84> #<edge163 58 believe 60> #<edge165 62 mobility 65>)
   (:LOWER :HYPHEN :LOWER))
  "round-bottom" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge128 57 this 58> #<edge129 58 be 59> #<edge131 60 "to" 61>)
   (:SINGLE-DIGIT :COLON :DIGITS))
  "1∶10" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge122 14 proximity 25> :ASTERISK #<edge1 118 protein 120>) (:DIGITS :ASTERISK :INITIAL))
  "56°C." REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge89 48 COMMA 49> #<edge90 50 digit-sequence 51> #<edge92 52 COMMA 53>)
   (:SINGLE-DIGIT :COLON :SINGLE-DIGIT))
  "1∶3" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge21 376 wild-type 379> #<edge146 70 that 71> #<edge147 71 be 72>)
   (:PROTEIN :HYPHEN :FULL))
  "CD8-FITC" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge57 21 "of" 22> #<edge58 21 of 22>) (:SINGLE-DIGIT :PROTEIN)) "8mer"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge40 11 "the" 12> #<edge41 11 the 12> #<edge42 12 importance 13>) (:LOWER :HYPHEN :LOWER))
  "post-vaccination" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge368 181 tethere 183> #<edge369 180 tethere 183> #<edge40 11 "the" 12>)
   (:FULL :HYPHEN :PROTEIN))
  "ELISPOT-IFNγ" MAKE-HYPHENATED-PAIR)
 (((#<edge322 166 stop 167> #<edge323 166 stop-endurant 167> #<edge324 167 bio-entity 168>
    #<edge325 167 bio-entity 168> #<edge327 168 per 169> #<edge328 169 bio-entity 170>
    #<edge330 170 that 171>)
   (:SINGLE-CAP :FORWARD-SLASH :MIXED :FORWARD-SLASH :SINGLE-DIGIT :FORWARD-SLASH :DIGITS))
  "A/PuertoRico/8/34" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge296 101 critical 103> #<edge297 100 critical 103>) (:SINGLE-DIGIT :PROTEIN)) "9mer"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge228 123 downstream-segment 124> #<edge229 123 downstream 124> #<edge230 124 "of" 125>
    #<edge231 124 of 125> #<edge232 125 "the" 126>)
   (:SINGLE-DIGIT :HYPHEN :SINGLE-LOWER :HYPHEN :LOWER))
  "2-β-mercaptoethanol" MAKE-HYPHENATED-TRIPLE)
 (((#<edge222 117 "the" 118> :MULTIPLICATION-SIGN #<edge225 120 open-reading-frame 121>)
   (:SINGLE-DIGIT :MULTIPLICATION-SIGN :HYPHENATED-NUMBER))
  "5×10−3" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge191 93 between 94> #<edge192 94 "the" 95> #<edge193 94 the 95>) (:LOWER :HYPHEN :LOWER))
  "post-immunization" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge125 9 suggest 13> #<edge126 3 on 9>) (:DIGITS :PROTEIN)) "15mer"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge85 42 number 43> #<edge86 44 COMMA 45> #<edge7 184 by-virtue-of 187>)
   (:FULL :HYPHEN :PROTEIN))
  "ELISPOT-IFNγ" MAKE-HYPHENATED-PAIR)
 (((#<edge402 220 number 221> #<edge403 221 amino-acid 222> #<edge405 222 and 223>)
   (:PROTEIN :FORWARD-SLASH :FULL))
  "NML/PHAC" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge177 65 of 69> #<edge9 214 wild-type 217>) (:DIGITS :BIO-ENTITY)) "100LD50"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge151 74 modal 75> #<edge152 75 be 76> #<edge153 76 ability 77> #<edge154 77 "to" 78>
    #<edge156 78 undergo 79> #<edge157 79 only 80> #<edge158 80 limit 81>)
   (:SINGLE-CAP :FORWARD-SLASH :CAPITALIZED :FORWARD-SLASH :DIGITS :FORWARD-SLASH :DIGITS))
  "A/Hanoi/30408/2005" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge30 3 "on" 4> #<edge32 4 "the" 5>) (:SINGLE-CAP :SINGLE-DIGIT)) "E1" REIFY-TWO-PART-LABEL)
 (((#<edge391 208 COMMA 209> #<edge392 209 or 210> #<edge394 211 near 212>)
   (:SINGLE-DIGIT :COLON :DIGITS))
  "1∶250" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge384 203 reinitiation 204> #<edge385 204 require 205> #<edge387 205 an 206>)
   (:SINGLE-DIGIT :COLON :DIGITS))
  "1∶220" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge378 153 suggest 155> #<edge379 155 that 156> #<edge381 200 COMMA 201>)
   (:SINGLE-DIGIT :COLON :DIGITS))
  "1∶250" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge372 170 affect 172> #<edge373 169 bio-entity 172> #<edge375 168 per 172>)
   (:SINGLE-DIGIT :COLON :DIGITS))
  "1∶150" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge362 189 between 191> #<edge363 183 parentheses 198> #<edge365 172 efficiency 174>)
   (:SINGLE-DIGIT :COLON :DIGITS))
  "1∶300" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge355 194 and 195> #<edge356 195 "the" 196> #<edge358 196 bio-entity 197>)
   (:SINGLE-DIGIT :COLON :DIGITS))
  "1∶250" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge349 189 between 190> #<edge350 190 where 191> #<edge352 191 the 192>)
   (:SINGLE-DIGIT :COLON :DIGITS))
  "1∶333" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge343 180 modal 181> #<edge344 181 be 182> #<edge346 187 "the" 188>)
   (:SINGLE-DIGIT :COLON :DIGITS))
  "1∶285" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge242 132 even 133> #<edge244 133 when 134>) (:FULL :DIGITS)) "OD260"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge93 54 digit-sequence 55> #<edge95 5 hyphenated-pair 8>) (:SINGLE-CAP :SINGLE-DIGIT)) "E1"
  REIFY-TWO-PART-LABEL)
 (((#<edge160 82 following-adj 83> #<edge162 83 terminate 84>) (:MIXED :DIGITS)) "pFPAV227"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge152 75 be 76> #<edge154 77 "to" 78> #<edge155 77 to 78> #<edge156 78 undergo 79> :MIXED
    #<edge158 80 limit 81>)
   (:PROTEIN :DIGITS :FULL :FORWARD-SLASH :MIXED :SINGLE-DIGIT))
  "Eco47III/TthIII1" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge21 376 wild-type 379> #<edge23 393 due-to 395>) (:BIO-ENTITY :BIO-ENTITY))
  "pPAV227-HA-PolyA" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:FULL #<edge145 70 "that" 71>) (:FULL :DIGITS)) "BJ5183" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge127 57 "this" 58> #<edge129 58 be 59> #<edge130 59 believe 60> #<edge131 60 "to" 61>)
   (:MIXED :DIGITS :HYPHEN :PROTEIN))
  "pFPAV227-HA" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge94 54 number 55> #<edge95 5 hyphenated-pair 8> :MIXED #<edge96 33 square-brackets 36>
    #<edge97 37 square-brackets 40> #<edge98 41 square-brackets 44> :MIXED)
   (:SINGLE-CAP :HYPHEN :MIXED :FORWARD-SLASH :FULL :HYPHEN :MIXED))
  "I-CeuI/PI-SceI" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge48 15 close 16> #<edge50 17 "of" 18>) (:MIXED :DIGITS)) "pFPAV227"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:GREEK_CAPITAL_LETTER_DELTA #<edge38 9 have 10> #<edge40 11 "the" 12>
    :GREEK_CAPITAL_LETTER_DELTA #<edge7 184 by-virtue-of 187>)
   (:GREEK_CAPITAL_LETTER_DELTA :SINGLE-CAP :SINGLE-DIGIT :GREEK_CAPITAL_LETTER_DELTA :PROTEIN))
  "ΔE1ΔE3" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge3 139 up-to 141> #<edge5 174 but-rather 176>) (:BIO-ENTITY :BIO-ENTITY))
  "pPAV227-HA-PolyA" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge261 147 position-bio-process 148> #<edge262 147 position 148> :MIXED)
   (:PROTEIN :HYPHEN :MIXED))
  "HA-PolyA" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:MIXED #<edge259 145 pronoun/inanimate 146> #<edge260 146 modifier 147>)
   (:MIXED :DIGITS :HYPHEN))
  "pPAV227-" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge253 141 number 142> #<edge255 143 downstream-segment 144>) (:MIXED :SINGLE-DIGIT))
  "pShuttle2" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:MIXED #<edge238 129 reinitiation 130>) (:MIXED :DIGITS)) "pPAV227"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:MIXED #<edge210 108 number 109> #<edge211 110 and 111> #<edge212 111 "that" 112>)
   (:MIXED :SINGLE-DIGIT :HYPHEN :PROTEIN))
  "pShuttle2-HA" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:MIXED #<edge194 95 terminate 96>) (:MIXED :SINGLE-DIGIT)) "pShuttle2"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:MIXED #<edge157 79 only 80>) (:MIXED :DIGITS)) "pPAV227" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:MIXED #<edge153 76 ability 77>) (:MIXED :SINGLE-DIGIT)) "pShuttle2"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge131 60 "to" 61> #<edge132 60 to 61> #<edge133 61 reflect 62> #<edge134 62 "a" 63>)
   (:PROTEIN :SINGLE-LOWER :HYPHEN :PROTEIN))
  "pCAGα-HA" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge105 9 suggest 11> #<edge106 11 importance 13> #<edge107 15 proximity 17>
    #<edge108 14 proximity 17>)
   (:PROTEIN :SINGLE-LOWER :HYPHEN :PROTEIN))
  "pCAGα-HA" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge95 5 hyphenated-pair 8> #<edge96 33 square-brackets 36> #<edge7 184 by-virtue-of 187>)
   (:LOWER :HYPHEN :PROTEIN))
  "chicken-β-actin" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge88 46 number 47> #<edge89 48 COMMA 49>) (:PROTEIN :SINGLE-LOWER)) "pCAGα"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge23 393 due-to 395> #<edge24 415 "eif3" 417> #<edge25 415 protein 417>
    #<edge26 415 bio-complex 417> #<edge28 2 study-bio-method 3> #<edge29 2 study-data 3>
    #<edge30 3 "on" 4>)
   (:SINGLE-CAP :FORWARD-SLASH :CAPITALIZED :FORWARD-SLASH :DIGITS :FORWARD-SLASH :DIGITS))
  "A/Hanoi/30408/2005" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge343 180 modal 181> #<edge345 182 tethere 183>) (:SINGLE-CAP :SINGLE-DIGIT)) "E1"
  REIFY-TWO-PART-LABEL)
 (((#<edge303 90 that 91> #<edge304 153 "this" 154> #<edge305 153 this 154>)
   (:FULL :HYPHEN :PROTEIN))
  "TPCK-trypsin" MAKE-HYPHENATED-PAIR)
 (((#<edge221 116 of 117> #<edge222 117 "the" 118> #<edge223 117 the 118>
    #<edge224 120 protein 121> #<edge226 121 be 122> #<edge227 122 place 123>
    #<edge228 123 downstream-segment 124>)
   (:SINGLE-CAP :FORWARD-SLASH :CAPITALIZED :FORWARD-SLASH :DIGITS :FORWARD-SLASH :DIGITS))
  "A/Hanoi/30408/2005" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge119 17 of 21> #<edge121 15 close 16>) (:SINGLE-CAP :SINGLE-DIGIT)) "E1"
  REIFY-TWO-PART-LABEL)
 (((#<edge11 274 such-as 276> #<edge117 27 start 29>) (:PROTEIN :PROTEIN)) "VR1BL"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge25 415 protein 417> :SHARP-SIGN) (:FULL :SHARP-SIGN)) "ID#" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge16 314 "wild-type" 317> #<edge160 82 following-adj 83> #<edge161 82 following 83>)
   (:PROTEIN :HYPHEN :LOWER))
  "PAV3-may" PACKAGE-QUALIFYING-PAIR)
 (((#<edge8 214 "wild-type" 217> #<edge88 46 number 47> #<edge90 50 digit-sequence 51>)
   (:AVIAN-FLU :HYPHEN :DIGITS))
  "H1N1-1918" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge383 202 modifier 203> #<edge384 203 reinitiation 204> #<edge385 204 require 205>)
   (:LOWER :HYPHEN :LOWER))
  "pre-existing" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge375 168 per 172> #<edge376 157 be 159> #<edge377 157 be 160>)
   (:LOWER :FORWARD-SLASH :LOWER))
  "particles/kg" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge273 94 bio-complex 97> #<edge274 98 bio-entity 100> #<edge275 104 efficiency 106>)
   (:LOWER :HYPHEN :LOWER))
  "pre-existing" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge207 107 figure 108> #<edge208 107 article-figure 108> #<edge209 108 digit-sequence 109>)
   (:LOWER :HYPHEN :LOWER))
  "post-immunization" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge162 83 terminate 84> #<edge163 58 believe 60> #<edge164 60 reflect 62>)
   (:LOWER :HYPHEN :LOWER))
  "pre-existing" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge7 184 by-virtue-of 187> #<edge104 4 bio-process 9> #<edge105 9 suggest 11>)
   (:BIO-ENTITY :HYPHEN :PROTEIN))
  "BAV3-HA" MAKE-HYPHENATED-PAIR)
 (((#<edge62 23 upstream 24> #<edge63 24 protein 25> #<edge64 24 open-reading-frame 25>)
   (:LOWER :HYPHEN :LOWER))
  "post-exposure" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge477 261 digit-sequence 262> #<edge478 261 number 262> #<edge479 262 amino-acid 263>)
   (:LOWER :HYPHEN :LOWER))
  "post-vaccination" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge346 187 "the" 188> #<edge347 187 the 188> #<edge348 188 distance 189>)
   (:LOWER :HYPHEN :LOWER))
  "short-term" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge5 174 but-rather 176> #<edge83 40 COMMA 41> #<edge84 42 digit-sequence 43>)
   (:PROTEIN :HYPHEN :LOWER))
  "AdHu5-based" PACKAGE-QUALIFYING-PAIR)
 (((#<edge408 224 amino-acid 225> #<edge409 226 COMMA 227> #<edge410 227 modifier 228>)
   (:PROTEIN :HYPHEN :LOWER))
  "Ad-based" PACKAGE-QUALIFYING-PAIR)
 (((#<edge399 219 figure 220> #<edge400 219 article-figure 220> #<edge402 220 number 221>)
   (:LOWER :FORWARD-SLASH :LOWER))
  "prime/boost" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge268 141 bio-entity 143> #<edge269 106 parentheses 110> #<edge270 148 parentheses 152>)
   (:LOWER :HYPHEN :LOWER))
  "pre-existing" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge144 69 semicolon 70> #<edge145 70 "that" 71> #<edge146 70 that 71>)
   (:LOWER :HYPHEN :LOWER))
  "pre-existing" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge11 274 such-as 276> #<edge125 9 suggest 13> #<edge126 3 on 9>) (:PROTEIN :HYPHEN :LOWER))
  "AdHu5-based" PACKAGE-QUALIFYING-PAIR)
 (((#<edge573 325 downstream 326> #<edge574 326 "of" 327> #<edge575 326 of 327>)
   (:LOWER :HYPHEN :LOWER))
  "post-vaccination" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge504 287 the 288> #<edge505 288 native 289>) (:SINGLE-DIGIT :SINGLE-LOWER)) "6b"
  REIFY-TWO-PART-LABEL)
 (((#<edge379 155 that 156> #<edge381 200 COMMA 201>) (:SINGLE-DIGIT :SINGLE-LOWER)) "6a"
  REIFY-TWO-PART-LABEL)
 (((#<edge361 191 bio-complex 197> #<edge362 189 between 191> #<edge363 183 parentheses 198>)
   (:LOWER :HYPHEN :LOWER))
  "post-immunization" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge164 60 reflect 62> #<edge165 62 mobility 65> #<edge166 67 bio-complex 69>)
   (:PROTEIN :HYPHEN :LOWER))
  "Ad-based" PACKAGE-QUALIFYING-PAIR)
 (((#<edge10 274 "such as" 276> #<edge12 285 "close to" 287>) (:INITIAL :INITIAL)) "I.M."
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:MIXED #<edge544 297 modifier 298> #<edge545 298 "of" 299> #<edge546 298 of 299>)
   (:MIXED :DIGITS :FORWARD-SLASH :SINGLE-LOWER))
  "logTCID50/g" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge534 254 at 264> :MULTIPLICATION-SIGN #<edge562 312 select 313> :MULTIPLICATION-SIGN
    #<edge542 296 a 297>)
   (:DIGITS :MULTIPLICATION-SIGN :NUMBER-RANGE :MULTIPLICATION-SIGN :DIGITS))
  "3.52×106±5.76×106" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge521 257 bio-entity 259> :MULTIPLICATION-SIGN #<edge560 310 bio-complex 311>
    :MULTIPLICATION-SIGN #<edge529 287 site 291>)
   (:DIGITS :MULTIPLICATION-SIGN :NUMBER-RANGE :MULTIPLICATION-SIGN :DIGITS))
  "1.03×107±6.9×106" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge509 268 hyphenated-pair 271> :MULTIPLICATION-SIGN #<edge558 309 "the" 310>
    :MULTIPLICATION-SIGN #<edge517 274 such-as 281>)
   (:DIGITS :MULTIPLICATION-SIGN :NUMBER-RANGE :MULTIPLICATION-SIGN :DIGITS))
  "1.64×107±8.60×106" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge21 376 wild-type 379> #<edge490 272 bio-entity 273> #<edge491 276 "the" 277>)
   (:BIO-ENTITY :FORWARD-SLASH :SINGLE-LOWER))
  "TCID50/g" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge481 265 or 266> :MULTIPLICATION-SIGN #<edge556 307 downstream 308> :MULTIPLICATION-SIGN
    #<edge489 271 initiate 272>)
   (:DIGITS :MULTIPLICATION-SIGN :NUMBER-RANGE :MULTIPLICATION-SIGN :DIGITS))
  "4.82×106±6.57×106" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge468 254 at 255> :MULTIPLICATION-SIGN #<edge554 306 locate 307> :MULTIPLICATION-SIGN
    #<edge476 260 article-figure 261>)
   (:DIGITS :MULTIPLICATION-SIGN :NUMBER-RANGE :MULTIPLICATION-SIGN :DIGITS))
  "1.40×106±4.87×106" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge456 233 modifier 240> :MULTIPLICATION-SIGN #<edge552 305 ones-number 306>
    :MULTIPLICATION-SIGN #<edge464 251 bio-complex 252>)
   (:DIGITS :MULTIPLICATION-SIGN :NUMBER-RANGE :MULTIPLICATION-SIGN :DIGITS))
  "3.57×106±6.26×106" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge422 237 bio-entity 238> #<edge423 238 be 239>) (:SINGLE-DIGIT :SINGLE-LOWER)) "4d"
  REIFY-TWO-PART-LABEL)
 (((#<edge377 157 be 160> #<edge379 155 that 156>) (:SINGLE-DIGIT :SINGLE-LOWER)) "4c"
  REIFY-TWO-PART-LABEL)
 (((#<edge310 156 pronoun/inanimate 157> #<edge311 157 be 158>) (:SINGLE-DIGIT :SINGLE-LOWER)) "4b"
  REIFY-TWO-PART-LABEL)
 (((#<edge269 106 parentheses 110> #<edge270 148 parentheses 152> #<edge271 95 bio-complex 97>)
   (:LOWER :HYPHEN :LOWER))
  "post-vaccination" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge259 145 pronoun/inanimate 146> #<edge261 147 position-bio-process 148>)
   (:SINGLE-DIGIT :SINGLE-LOWER))
  "4a" REIFY-TWO-PART-LABEL)
 (((#<edge248 136 bio-entity 137> #<edge249 137 be 138>
    #<edge250 138 move-something-somewhere 139>)
   (:LOWER :HYPHEN :LOWER))
  "post-vaccination" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge216 113 "the" 114> #<edge217 113 the 114> #<edge218 114 start 115>)
   (:LOWER :HYPHEN :LOWER))
  "post-infection" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge203 103 "to" 104> #<edge204 103 to 104> #<edge205 104 reinitiation 105>)
   (:LOWER :HYPHEN :LOWER))
  "post-vaccination" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge43 13 "of" 14> #<edge44 13 of 14> #<edge45 14 "the" 15>) (:LOWER :HYPHEN :LOWER))
  "post-vaccination" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge43 13 "of" 14> #<edge314 160 "the" 161>) (:PROTEIN :PROTEIN)) "AdHu5HA"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge212 111 "that" 112> #<edge214 112 when 113>) (:SINGLE-DIGIT :SINGLE-LOWER)) "3c"
  REIFY-TWO-PART-LABEL)
 (((#<edge15 300 wild-type 303> #<edge154 77 "to" 78> #<edge155 77 to 78>)
   (:PROTEIN :HYPHEN :FULL))
  "CD8-FITC" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge106 11 importance 13> #<edge107 15 proximity 17> #<edge108 14 proximity 17>)
   (:LOWER :HYPHEN :LOWER))
  "post-immunization" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge561 311 always 312> #<edge562 312 select 313> #<edge564 313 the 314>)
   (:LOWER :FORWARD-SLASH :DIGITS))
  "sfc/million" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge532 285 close-to 291> #<edge533 266 at 285> #<edge534 254 at 264>)
   (:CAPITALIZED :HYPHEN :LOWER))
  "Re-stimulation" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge505 288 native 289> #<edge506 289 reinitiation 290> #<edge507 290 site 291>)
   (:LOWER :HYPHEN :LOWER))
  "post-immunization" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge413 230 modal 231> #<edge414 231 be 232> #<edge416 233 when 234>)
   (:LOWER :FORWARD-SLASH :DIGITS))
  "sfc/million" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge345 182 tethere 183> #<edge346 187 "the" 188>) (:SINGLE-DIGIT :SINGLE-LOWER)) "3b"
  REIFY-TWO-PART-LABEL)
 (((#<edge321 165 and 166> #<edge322 166 stop 167> #<edge324 167 bio-entity 168>)
   (:LOWER :FORWARD-SLASH :DIGITS))
  "sfc/million" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge306 154 suggest 155> #<edge307 155 "that" 156> #<edge309 156 "it" 157>)
   (:LOWER :FORWARD-SLASH :DIGITS))
  "sfc/million" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge216 113 "the" 114> :OPEN-ANGLE-BRACKET #<edge219 115 bio-entity 116>)
   (:LITTLE-P :OPEN-ANGLE-BRACKET :DIGITS))
  "p<0.005" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge192 94 "the" 95> #<edge193 94 the 95> #<edge195 96 bio-complex 97>)
   (:LOWER :FORWARD-SLASH :DIGITS))
  "sfc/million" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge163 58 believe 60> #<edge164 60 reflect 62> #<edge166 67 bio-complex 69>)
   (:LOWER :FORWARD-SLASH :DIGITS))
  "sfc/million" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge73 30 the 31> #<edge74 31 downstream-segment 32> #<edge75 31 downstream 32>)
   (:LOWER :HYPHEN :LOWER))
  "spot-forming" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge253 141 number 142> #<edge254 142 bio-entity 143> :MIXED
    #<edge255 143 downstream-segment 144> #<edge257 144 "of" 145> #<edge258 144 of 145>
    #<edge260 146 modifier 147>)
   (:SINGLE-CAP :FORWARD-SLASH :MIXED :FORWARD-SLASH :SINGLE-DIGIT :FORWARD-SLASH :DIGITS))
  "A/PuertoRico/8/34" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge190 92 distance 93> #<edge192 94 "the" 95> #<edge193 94 the 95>
    #<edge194 95 terminate 96>)
   (:SINGLE-CAP :DIGITS :HYPHEN :PROTEIN))
  "H05-HA" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge364 166 bio-entity 168> #<edge365 172 efficiency 174>) (:SINGLE-DIGIT :SINGLE-LOWER))
  "2d" REIFY-TWO-PART-LABEL)
 (((#<edge141 66 the 67> #<edge143 68 bio-complex 69>) (:SINGLE-DIGIT :SINGLE-LOWER)) "2c"
  REIFY-TWO-PART-LABEL)
 (((#<edge104 4 bio-process 9> #<edge148 72 COMMA 73>) (:DIGITS :PLUS-MINUS-NUMBER)) "1066±330"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge51 17 of 18> #<edge52 18 "the" 19> #<edge53 18 the 19>) (:LOWER :HYPHEN :LOWER))
  "post-immunization" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge258 144 of 145> #<edge259 145 pronoun/inanimate 146>) (:SINGLE-DIGIT :SINGLE-LOWER)) "2b"
  REIFY-TWO-PART-LABEL)
 (((#<edge64 24 open-reading-frame 25> #<edge65 25 and 26> #<edge70 29 "of" 30>)
   (:LOWER :FORWARD-SLASH :LOWER))
  "pfu/well" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge640 342 fragment 347> #<edge642 354 site 356>) (:SINGLE-DIGIT :SINGLE-LOWER)) "2a"
  REIFY-TWO-PART-LABEL)
 (((#<edge47 15 close-bio-process 16> #<edge621 344 point-mutation 346> #<edge622 331 figure 334>)
   (:BIO-ENTITY :HYPHEN :PROTEIN))
  "AdHu5-HA" MAKE-HYPHENATED-PAIR)
 (((#<edge420 235 native 236> #<edge421 236 reinitiation 237> #<edge422 237 bio-entity 238>)
   (:LOWER :HYPHEN :LOWER))
  "post-immunization" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge35 6 HYPHEN 7> #<edge383 202 modifier 203> #<edge384 203 reinitiation 204>)
   (:BIO-ENTITY :HYPHEN :PROTEIN))
  "AdHu5-HA" MAKE-HYPHENATED-PAIR)
 (((#<edge375 168 per 172> #<edge376 157 be 159> #<edge377 157 be 160>)
   (:LOWER :FORWARD-SLASH :LOWER))
  "vp/mouse" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge249 137 be 138> #<edge250 138 move-something-somewhere 139>)
   (:SINGLE-DIGIT :SINGLE-LOWER))
  "1b" REIFY-TWO-PART-LABEL)
 (((#<edge243 133 when 134> #<edge244 133 when 134> #<edge245 134 "the" 135>)
   (:LOWER :HYPHEN :LOWER))
  "post-immunization" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge23 393 due-to 395> #<edge230 124 "of" 125> #<edge231 124 of 125>)
   (:BIO-ENTITY :HYPHEN :PROTEIN))
  "AdHu5-HA" MAKE-HYPHENATED-PAIR)
 (((#<edge192 94 "the" 95> #<edge194 95 terminate 96>) (:SINGLE-DIGIT :SINGLE-LOWER)) "1a"
  REIFY-TWO-PART-LABEL)
 (((#<edge185 89 deictic-location 90> #<edge187 90 that 91>) (:PROTEIN :DIGITS)) "AB12"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge178 62 mobility 69> #<edge180 85 however 86>) (:SINGLE-CAP :SINGLE-DIGIT)) "E1"
  REIFY-TWO-PART-LABEL)
 (((#<edge13 285 close-to 287> #<edge169 74 be 76> #<edge170 77 undergo 79>)
   (:BIO-ENTITY :HYPHEN :PROTEIN))
  "AdHu5-HA" MAKE-HYPHENATED-PAIR)
 (((#<edge7 184 by-virtue-of 187> #<edge121 15 close 16> #<edge122 14 proximity 25>)
   (:BIO-ENTITY :HYPHEN :PROTEIN))
  "AdHu5-HA" MAKE-HYPHENATED-PAIR)
 (((#<edge83 40 COMMA 41> #<edge85 42 number 43> #<edge86 44 COMMA 45> #<edge5 174 but-rather 176>)
   (:SINGLE-CAP :SINGLE-DIGIT :FORWARD-SLASH :PROTEIN))
  "E1/E3" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge267 85 subordinate-conjunction 87> #<edge268 141 bio-entity 143>
    #<edge269 106 parentheses 110>)
   (:LOWER :HYPHEN :LOWER))
  "cross-reactivity" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge235 126 stop-endurant 127> :MULTIPLICATION-SIGN #<edge238 129 reinitiation 130>)
   (:DIGITS :MULTIPLICATION-SIGN :HYPHENATED-NUMBER))
  "5.0×10−2" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge229 123 downstream 124> #<edge230 124 "of" 125> #<edge232 125 "the" 126>)
   (:SINGLE-DIGIT :COLON :DIGITS))
  "1∶20" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge198 98 the 99> :MULTIPLICATION-SIGN #<edge201 101 comparative 102>)
   (:DIGITS :MULTIPLICATION-SIGN :HYPHENATED-NUMBER))
  "6.25×10−3" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge192 94 "the" 95> #<edge193 94 the 95> #<edge195 96 bio-complex 97>)
   (:SINGLE-DIGIT :COLON :DIGITS))
  "1∶160" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge81 38 digit-sequence 39> #<edge82 38 number 39> #<edge84 42 digit-sequence 43>)
   (:SINGLE-DIGIT :COLON :SINGLE-DIGIT))
  "1∶4" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge38 9 have 10> #<edge39 10 suggest 11> #<edge40 11 "the" 12>) (:LOWER :HYPHEN :LOWER))
  "cross-reactivity" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge7 184 by-virtue-of 187> #<edge68 27 start 28> #<edge69 28 bio-entity 29>)
   (:BIO-ENTITY :HYPHEN :PROTEIN))
  "PAV3-HA" MAKE-HYPHENATED-PAIR)
 (((#<edge5 174 but-rather 176> #<edge59 22 "the" 23> #<edge61 23 upstream-segment 24>
    #<edge63 24 protein 25>)
   (:H5N1 :HYPHEN :SINGLE-CAP :DIGITS))
  "H5N1-H05" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge52 18 "the" 19> #<edge53 18 the 19> :CAPITALIZED #<edge54 19 stop 20>
    #<edge56 20 bio-entity 21> #<edge57 21 "of" 22> #<edge58 21 of 22>)
   (:SINGLE-CAP :FORWARD-SLASH :CAPITALIZED :FORWARD-SLASH :DIGITS :FORWARD-SLASH :DIGITS))
  "A/Hanoi/30408/2005" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge280 125 bio-entity 128> #<edge15 300 wild-type 303>) (:LOWER :-LIKE)) "swine-like"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:CLOSE-ANGLE-BRACKET #<edge254 142 bio-entity 143>) (:CLOSE-ANGLE-BRACKET :PERCENT)) ">60%"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge214 112 when 113> #<edge215 112 when 113> #<edge217 113 the 114> #<edge218 114 start 115>
    #<edge219 115 bio-entity 116> #<edge220 116 "of" 117> #<edge221 116 of 117>)
   (:LOWER :HYPHEN :LOWER :HYPHEN :LOWER :HYPHEN :LOWER))
  "human-to-human-transmission" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge183 87 pronoun/first/plural 88> #<edge184 88 show 89> #<edge185 89 deictic-location 90>)
   (:LOWER :HYPHEN :LOWER))
  "cross-transmission" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge495 278 number 279> #<edge497 280 bio-entity 281>) (:FULL :SINGLE-DIGIT)) "PAV3"
  #:PSR-262211)
 (((#<edge452 213 site 226> #<edge453 242 at 245> #<edge454 238 modifier 240>)
   (:LOWER :HYPHEN :LOWER))
  "pre-existing" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge441 205 bio-entity 207> #<edge443 213 site 218> #<edge444 228 site 230>
    #<edge445 227 site 230>)
   (:FULL :SINGLE-DIGIT :HYPHEN :LOWER))
  "PAV3-based" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge388 206 bio-entity 207> #<edge390 207 at 208>) (:FULL :SINGLE-DIGIT)) "PAV3"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:MIXED #<edge349 189 between 190>) (:MIXED :SINGLE-DIGIT)) "AdHu5" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge342 179 bio-complex 180> #<edge343 180 modal 181> #<edge344 181 be 182>)
   (:LOWER :HYPHEN :LOWER))
  "pre-existing" MAKE-HYPHENATED-STRUCTURE)
 (((:FULL #<edge319 163 the 164>) (:FULL :SINGLE-DIGIT)) "BAV3" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:MIXED #<edge168 66 bio-complex 69>) (:MIXED :SINGLE-DIGIT)) "AdHu5"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge162 83 terminate 84> #<edge163 58 believe 60> #<edge164 60 reflect 62>)
   (:CAPITALIZED :HYPHEN :LOWER))
  "Pre-existing" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge57 21 "of" 22> #<edge58 21 of 22> #<edge59 22 "the" 23>) (:LOWER :HYPHEN :LOWER))
  "well-characterized" MAKE-HYPHENATED-STRUCTURE)
 (((:MIXED #<edge50 17 "of" 18>) (:MIXED :SINGLE-DIGIT)) "AdHu5" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge19 319 even-if 321> #<edge20 376 "wild-type" 379> #<edge21 376 wild-type 379>)
   (:LOWER :HYPHEN :LOWER))
  "adenovirus-based" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge41 11 the 12> #<edge42 12 importance 13> #<edge43 13 "of" 14> #<edge44 13 of 14>
    #<edge45 14 "the" 15>)
   (:LOWER :HYPHEN :LOWER :HYPHEN :LOWER))
  "cell-surface-localized" MAKE-HYPHENATED-TRIPLE)
 (((#<edge27 1 sequencer 2> #<edge318 163 "the" 164>) (:PROTEIN :LOWER)) "anti-hypertensive"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge229 123 downstream 124> #<edge230 124 "of" 125> #<edge15 300 wild-type 303>
    #<edge231 124 of 125> #<edge232 125 "the" 126>)
   (:PROTEIN :FORWARD-SLASH :PROTEIN :HYPHEN :LOWER))
  "VEGF/VEGFR2-mediated" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge1 118 protein 120> #<edge71 29 of 30>) (:PROTEIN :LOWER)) "anti-hypertensive"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge901 inactive, resource 901> #<edge902 inactive, resource 902>
    #<edge903 inactive, resource 903>)
   (:LOWER :HYPHEN :LOWER))
  "interrogans-host" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge786 407 to 421> #<edge787 405 tethere 407> #<edge788 402 to 405>)
   (:LOWER :FORWARD-SLASH :LOWER))
  "adhesion/tissue" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge533 266 at 285> #<edge534 254 at 264> #<edge535 246 under 250>)
   (:LOWER :HYPHEN :PROTEIN))
  "non-proteoglycan" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge368 181 tethere 183> #<edge369 180 tethere 183> #<edge370 180 tethere 198>)
   (:LOWER :HYPHEN :PROTEIN))
  "non-proteoglycan" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge408 224 amino-acid 225> #<edge409 226 COMMA 227> #<edge410 227 modifier 228>)
   (:LOWER :HYPHEN :LOWER))
  "post-infection" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge141 66 the 67> #<edge142 67 tethere 68>) (:SINGLE-LOWER :SINGLE-LOWER)) "αv"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge133 61 reflect 62> #<edge135 62 a 63>) (:SINGLE-LOWER :SINGLE-DIGIT)) "β1"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge154 77 "to" 78> #<edge155 77 to 78> #<edge157 79 only 80>) (:LOWER :HYPHEN :DIGITS))
  "alpha-13" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge289 130 detect 132> #<edge290 130 detect 133> #<edge291 124 of 128>)
   (:PROTEIN :HYPHEN :MIXED))
  "APO-BrdU" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge83 40 COMMA 41> #<edge84 42 digit-sequence 43> #<edge85 42 number 43>)
   (:FULL :HYPHEN :FULL))
  "CT-CMFDA" MAKE-HYPHENATED-PAIR)
 (((#<edge375 168 per 172> #<edge376 157 be 159> #<edge378 153 suggest 155>)
   (:LOWER :HYPHEN :LOWER))
  "dark-field" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge37 8 bio-process 9> #<edge38 9 have 10> #<edge6 184 "by virtue of" 187>)
   (:LOWER :FORWARD-SLASH :PROTEIN))
  "pores/cm2" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge34 5 terminate 6> :MULTIPLICATION-SIGN #<edge36 7 reinitiation 8>)
   (:SINGLE-DIGIT :MULTIPLICATION-SIGN :DIGITS))
  "2×106" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge712 363 that 364> #<edge714 363 there-exists 372>) (:SINGLE-CAP :SINGLE-DIGIT)) "Z1"
  REIFY-TWO-PART-LABEL)
 (((#<edge643 353 site 356> #<edge644 327 window 335> #<edge645 356 of 358>)
   (:LOWER :HYPHEN :LOWER))
  "charge-coupled" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge33 4 the 5> #<edge560 310 bio-complex 311>) (:PROTEIN :CAPITALIZED)) "Anti-Fade"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge512 259 parentheses 264> #<edge513 279 bio-entity 281> #<edge514 277 bio-entity 281>)
   (:LOWER :HYPHEN :FULL))
  "phalloidin-FITC" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge507 290 site 291> #<edge508 261 point-mutation 263> #<edge510 277 number 279>)
   (:SINGLE-DIGIT :COLON :DIGITS))
  "1∶1000" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge501 283 digit-sequence 284> #<edge502 283 number 284> #<edge503 287 "the" 288>)
   (:PROTEIN :HYPHEN :FULL))
  "IgG-TRITC" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge493 277 HYPHEN 278> #<edge494 278 digit-sequence 279> #<edge496 279 bio-entity 280>)
   (:SINGLE-DIGIT :COLON :DIGITS))
  "1∶1000" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge23 393 due-to 395> #<edge25 415 protein 417>) (:PROTEIN :INITIAL)) "anti-L."
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge477 261 digit-sequence 262> #<edge478 261 number 262> #<edge480 264 COMMA 265>)
   (:SINGLE-DIGIT :COLON :DIGITS))
  "1∶5000" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge19 319 even-if 321> #<edge21 376 wild-type 379>) (:PROTEIN :INITIAL)) "anti-L."
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge219 115 bio-entity 116> #<edge220 116 "of" 117> #<edge9 214 wild-type 217>)
   (:LOWER :HYPHEN :CELL-TYPE))
  "bacterial-endothelial cell" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge287 139 up-to 143> #<edge289 130 detect 132>) (:PROTEIN :DIGITS)) "GSE23172"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge209 108 digit-sequence 109> #<edge210 108 number 109> #<edge211 110 and 111>)
   (:DIGITS :HYPHEN :LOWER))
  "two-tailed" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge178 62 mobility 69> #<edge179 57 believe 60> #<edge180 85 however 86>)
   (:LOWER :FORWARD-SLASH :LOWER))
  "infected/uninfected" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:CAPITALIZED #<edge174 74 ability 77> #<edge175 73 ability 77>) (:CAPITALIZED :HYPHEN :LOWER))
  "Cy-dye" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge157 79 only 80> #<edge158 80 limit 81> #<edge159 81 movement 82>)
   (:PROTEIN :HYPHEN :LOWER))
  "NHS-ester" PACKAGE-QUALIFYING-PAIR)
 (((#<edge137 64 mobility 65> #<edge138 65 "of" 66> #<edge139 65 of 66> #<edge140 66 "the" 67>
    #<edge141 66 the 67>)
   (:LOWER :HYPHEN :NUCLEOTIDE :HYPHEN :LOWER))
  "aa-dUTP-labeled" MAKE-HYPHENATED-TRIPLE)
 (((#<edge24 415 "eif3" 417> #<edge25 415 protein 417>) (:DIGITS :PROTEIN)) "70mer"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge275 104 efficiency 106> :MULTIPLICATION-SIGN #<edge277 117 open-reading-frame 121>)
   (:SINGLE-DIGIT :MULTIPLICATION-SIGN :DIGITS))
  "2×107" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:CAPITALIZED #<edge322 166 stop 167> :CAPITALIZED) (:CAPITALIZED :HYPHEN :CAPITALIZED))
  "Petroff-Hausser" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge227 122 place 123> #<edge228 123 downstream-segment 124> #<edge229 123 downstream 124>)
   (:PROTEIN :HYPHEN :CAPITALIZED))
  "Sigma-Aldrich" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge218 114 start 115> #<edge219 115 bio-entity 116> #<edge220 116 "of" 117>)
   (:SINGLE-DIGIT :HYPHEN :LOWER))
  "5-fluorouracil" MAKE-HYPHENATED-STRUCTURE)
 (((:LESS-THAN_OR_EQUAL_TO #<edge200 100 be 101>) (:LESS-THAN_OR_EQUAL_TO :LOWER)) "≤passage"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge229 123 downstream 124> #<edge230 124 "of" 125> #<edge231 124 of 125>)
   (:PROTEIN :HYPHEN :CAPITALIZED))
  "Sigma-Aldrich" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge15 300 wild-type 303> #<edge185 89 deictic-location 90> #<edge17 314 wild-type 317>)
   (:INITIAL :HYPHEN :INITIAL))
  "C.-J." MAKE-HYPHENATED-STRUCTURE)
 (((:LOWER #<edge163 58 believe 60>) (:LOWER :DIGITS)) "hy926" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge145 70 "that" 71> #<edge146 70 that 71> #<edge147 71 be 72>)
   (:PROTEIN :HYPHEN :CAPITALIZED))
  "Sigma-Aldrich" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge107 15 proximity 17> #<edge108 14 proximity 17> #<edge109 19 bio-entity 21>)
   (:PROTEIN :HYPHEN :CAPITALIZED))
  "Sigma-Aldrich" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge89 48 COMMA 49> #<edge90 50 digit-sequence 51> #<edge91 50 number 51>)
   (:LOWER :HYPHEN :LOWER))
  "host-pathogen" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge56 20 bio-entity 21> #<edge57 21 "of" 22> #<edge58 21 of 22>) (:LOWER :HYPHEN :LOWER))
  "host-pathogen" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge3 139 up-to 141> #<edge4 174 "but rather" 176> #<edge7 184 by-virtue-of 187>
    #<edge8 214 "wild-type" 217> #<edge10 274 "such as" 276> #<edge11 274 such-as 276>
    #<edge13 285 close-to 287> #<edge14 300 "wild-type" 303> #<edge15 300 wild-type 303>)
   (:LOWER :FORWARD-SLASH :HYPHENATED-NUMBER :FORWARD-SLASH :DIGITS :FORWARD-SLASH :DIGITS
    :FORWARD-SLASH :LOWER))
  "com/1471-2334/10/340/prepub" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge2 139 "up to" 141> #<edge3 139 up-to 141> #<edge4 174 "but rather" 176>)
   (:LOWER :HYPHEN :LOWER))
  "pre-publication" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge148 72 COMMA 73> #<edge149 73 "it" 74> #<edge150 73 pronoun/inanimate 74>)
   (:LOWER :HYPHEN :CAPITALIZED))
  "non-Hodgking" MAKE-HYPHENATED-STRUCTURE)
 (((:OPEN-ANGLE-BRACKET #<edge100 49 square-brackets 52>) (:OPEN-ANGLE-BRACKET :HYPHENATED-NUMBER))
  "<100-500" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:OPEN-ANGLE-BRACKET #<edge97 37 square-brackets 40>) (:OPEN-ANGLE-BRACKET :DIGITS)) "<100"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge408 224 amino-acid 225> #<edge409 226 COMMA 227> #<edge411 228 reinitiation 229>)
   (:LOWER :HYPHEN :LOWER))
  "in-house" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge379 155 that 156> :ASTERISK #<edge13 285 close-to 287>) (:DIGITS :ASTERISK :INITIAL))
  "60°C." REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge257 144 "of" 145> #<edge258 144 of 145> #<edge5 174 but-rather 176>)
   (:DIGITS :HYPHEN :BIO-ENTITY))
  "50-μL" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge173 82 following 84> #<edge174 74 ability 77> #<edge175 73 ability 77> :FULL
    #<edge176 70 be 72> :FULL)
   (:SINGLE-DIGIT :PROTEIN :HYPHEN :FULL :HYPHEN :FULL))
  "6FAM-CACCACGGCCGAGC-MGB" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge148 72 COMMA 73> :FULL #<edge149 73 "it" 74> #<edge151 74 modal 75>)
   (:HYPHEN :FULL :HYPHEN :SINGLE-DIGIT))
  "-GCGCGGCTACAGCTTCA-3" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge66 26 "the" 27> #<edge67 26 the 27> #<edge68 27 start 28>) (:PROTEIN :HYPHEN :LOWER))
  "RS-virus" PACKAGE-QUALIFYING-PAIR)
 (((#<edge53 18 the 19> #<edge54 19 stop 20> #<edge55 19 stop-endurant 20>)
   (:SINGLE-CAP :PLUS-SIGN :SINGLE-CAP))
  "A+B" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge294 114 start 116> :ASTERISK #<edge295 103 to 110>) (:DIGITS :ASTERISK :SINGLE-CAP))
  "80°C" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge246 134 the 135> #<edge247 135 start 136> #<edge248 136 bio-entity 137>)
   (:PROTEIN :HYPHEN :CAPITALIZED))
  "Sigma-Aldrich" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge224 120 protein 121> :ASTERISK #<edge5 174 but-rather 176>) (:DIGITS :ASTERISK :INITIAL))
  "80°C." REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge171 79 limit 81> #<edge172 79 movement 82> #<edge173 82 following 84>)
   (:LOWER :HYPHEN :LOWER))
  "broad-spectrum" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge56 20 bio-entity 21> #<edge57 21 "of" 22> #<edge59 22 "the" 23>
    #<edge61 23 upstream-segment 24>)
   (:LOWER :FORWARD-SLASH :LOWER :SINGLE-DIGIT))
  "cells/mm3" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:LESS-THAN_OR_EQUAL_TO #<edge55 19 stop-endurant 20>) (:LESS-THAN_OR_EQUAL_TO :DIGITS)) "≤500"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:GREATER-THAN_OR_EQUAL_TO #<edge38 9 have 10> :ASTERISK #<edge39 10 suggest 11>)
   (:GREATER-THAN_OR_EQUAL_TO :DIGITS :ASTERISK :SINGLE-CAP))
  "≥38.5°C" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:CLOSE-ANGLE-BRACKET #<edge32 4 "the" 5> :ASTERISK #<edge33 4 the 5>)
   (:CLOSE-ANGLE-BRACKET :DIGITS :ASTERISK :SINGLE-CAP))
  ">38.0°C" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge3 139 up-to 141> #<edge4 174 "but rather" 176> #<edge7 184 by-virtue-of 187>
    #<edge8 214 "wild-type" 217> #<edge10 274 "such as" 276> #<edge11 274 such-as 276>
    #<edge13 285 close-to 287> #<edge14 300 "wild-type" 303> #<edge15 300 wild-type 303>)
   (:LOWER :FORWARD-SLASH :HYPHENATED-NUMBER :FORWARD-SLASH :DIGITS :FORWARD-SLASH :DIGITS
    :FORWARD-SLASH :LOWER))
  "com/1471-2334/10/330/prepub" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge2 139 "up to" 141> #<edge3 139 up-to 141> #<edge4 174 "but rather" 176>)
   (:LOWER :HYPHEN :LOWER))
  "pre-publication" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge117 27 start 29> #<edge119 17 of 21>) (:PROTEIN :DIGITS)) "CI000359"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:FULL #<edge44 13 of 14> #<edge45 14 "the" 15> #<edge46 14 the 15> #<edge48 15 close 16>
    #<edge49 16 proximity 17> #<edge51 17 of 18> #<edge52 18 "the" 19> #<edge53 18 the 19>
    #<edge54 19 stop 20> #<edge55 19 stop-endurant 20> #<edge56 20 bio-entity 21>
    #<edge58 21 of 22>)
   (:FULL :FORWARD-SLASH :DIGITS :FORWARD-SLASH :DIGITS :FORWARD-SLASH :DIGITS :HYPHEN :PROTEIN
    :FORWARD-SLASH :DIGITS :FORWARD-SLASH :DIGITS))
  "OJ/2008/07/08-PROC/2008/019" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge11 274 such-as 276> #<edge13 285 close-to 287>) (:INITIAL :INITIAL)) "P.P."
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge6 184 "by virtue of" 187> #<edge9 214 wild-type 217>) (:INITIAL :INITIAL)) "L.W."
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge1 118 protein 120> #<edge4 174 "but rather" 176>) (:INITIAL :INITIAL)) "P.S."
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge118 21 of 25> #<edge119 17 of 21> :LOWER) (:CAPITALIZED :HYPHEN :LOWER)) "Tick-borne"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge100 49 square-brackets 52> #<edge101 53 square-brackets 56>
    #<edge102 1 study-bio-method 3>)
   (:CAPITALIZED :HYPHEN :LOWER))
  "Post-exposure" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge85 42 number 43> #<edge86 44 COMMA 45> #<edge87 46 digit-sequence 47>)
   (:LOWER :FORWARD-SLASH :LOWER))
  "resistant/extensively" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge82 38 number 39> #<edge83 40 COMMA 41> #<edge84 42 digit-sequence 43>)
   (:CAPITALIZED :HYPHEN :LOWER))
  "Multi-drug" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge76 32 protein 33> #<edge77 32 open-reading-frame 33> #<edge78 34 digit-sequence 35>)
   (:PROTEIN :FORWARD-SLASH :FULL))
  "MDR/XDR" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge63 24 protein 25> #<edge64 24 open-reading-frame 25> #<edge65 25 and 26>
    #<edge66 26 "the" 27> #<edge68 27 start 28> #<edge69 28 bio-entity 29> #<edge71 29 of 30>)
   (:CAPITALIZED :FORWARD-SLASH :LOWER :FORWARD-SLASH :LOWER :FORWARD-SLASH :PROTEIN))
  "Missionary/volunteer/research/aid" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge121 15 close 16> #<edge122 14 proximity 25> :FULL) (:FULL :FORWARD-SLASH :FULL))
  "EU/EFTA" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge70 29 "of" 30> #<edge71 29 of 30> #<edge73 30 the 31>) (:CAPITALIZED :HYPHEN :LOWER))
  "Pre-travel" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge36 7 reinitiation 8> #<edge37 8 bio-process 9> #<edge39 10 suggest 11>)
   (:LOWER :HYPHEN :LOWER))
  "post-travel" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge28 2 study-bio-method 3> #<edge29 2 study-data 3> #<edge31 3 on 4>)
   (:LOWER :HYPHEN :LOWER))
  "pre-travel" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge209 108 digit-sequence 109> #<edge210 108 number 109> #<edge212 111 "that" 112>)
   (:LOWER :HYPHEN :LOWER))
  "pre-travel" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge151 74 modal 75> #<edge152 75 be 76> :LOWER) (:LOWER :HYPHEN :LOWER)) "tick-borne"
  :NO-EDGE)
 (((#<edge114 30 open-reading-frame 33> #<edge115 30 open-reading-frame 36> #<edge117 27 start 29>)
   (:LOWER :HYPHEN :LOWER))
  "pre-travel" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge107 15 proximity 17> #<edge108 14 proximity 17> #<edge109 19 bio-entity 21>)
   (:LOWER :HYPHEN :LOWER))
  "pre-exposure" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge24 415 "eif3" 417> #<edge25 415 protein 417> #<edge28 2 study-bio-method 3>)
   (:LOWER :HYPHEN :PROTEIN))
  "tick-bite" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge171 79 limit 81> #<edge172 79 movement 82> #<edge174 74 ability 77>)
   (:LOWER :HYPHEN :LOWER))
  "break-up" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge108 14 proximity 17> #<edge109 19 bio-entity 21> #<edge111 23 open-reading-frame 25>)
   (:LOWER :HYPHEN :LOWER))
  "pre-travel" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge33 4 the 5> #<edge34 5 terminate 6> #<edge35 6 HYPHEN 7>) (:LOWER :HYPHEN :LOWER))
  "travel-specific" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge5 174 but-rather 176> #<edge6 184 "by virtue of" 187> #<edge8 214 "wild-type" 217>)
   (:LOWER :HYPHEN :LOWER))
  "pre-travel" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge24 415 "eif3" 417> #<edge25 415 protein 417> #<edge26 415 bio-complex 417>)
   (:DIGITS :HYPHEN :DIGITS))
  "2005-2009" LOOK-FOR-YEAR-EXPRESSION)
 (((#<edge262 147 position 148> #<edge263 149 figure 150> #<edge265 150 digit-sequence 151>)
   (:LOWER :HYPHEN :LOWER))
  "pre-travel" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge419 234 the 235> #<edge420 235 native 236> #<edge421 236 reinitiation 237>)
   (:MIXED :FORWARD-SLASH :CAPITALIZED))
  "EuroTravNet/Geosentinel" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge205 104 reinitiation 105> #<edge206 105 efficiency 106> #<edge207 107 figure 108>)
   (:LOWER :HYPHEN :LOWER))
  "travel-associated" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge102 1 study-bio-method 3> #<edge103 5 bio-process 9> #<edge104 4 bio-process 9>)
   (:LOWER :HYPHEN :LOWER))
  "post-exposure" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge79 34 number 35> #<edge80 36 COMMA 37> #<edge82 38 number 39>) (:LOWER :HYPHEN :LOWER))
  "pre-travel" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge95 5 hyphenated-pair 8> #<edge96 33 square-brackets 36> #<edge98 41 square-brackets 44>)
   (:LOWER :HYPHEN :LOWER))
  "pre-travel" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge39 10 suggest 11> #<edge40 11 "the" 12> #<edge41 11 the 12>) (:LOWER :HYPHEN :LOWER))
  "newly-diagnosed" MAKE-HYPHENATED-STRUCTURE)
 (((:LOWER #<edge6 184 "by virtue of" 187> #<edge7 184 by-virtue-of 187>) (:LOWER :HYPHEN :LOWER))
  "genito-urinary" :NO-EDGE)
 (((#<edge203 103 "to" 104> #<edge204 103 to 104> #<edge205 104 reinitiation 105>)
   (:LOWER :FORWARD-SLASH :LOWER))
  "disseminated/miliary" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge68 27 start 28> #<edge69 28 bio-entity 29> #<edge70 29 "of" 30>) (:LOWER :HYPHEN :LOWER))
  "post-exposure" MAKE-HYPHENATED-STRUCTURE)
 (((:LOWER #<edge49 16 proximity 17> #<edge50 17 "of" 18>) (:LOWER :HYPHEN :LOWER))
  "gastro-intestinal" :NO-EDGE)
 (((:CAPITALIZED #<edge6 184 "by virtue of" 187> #<edge7 184 by-virtue-of 187>)
   (:CAPITALIZED :HYPHEN :LOWER))
  "Gastro-intestinal" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge130 59 believe 60> #<edge131 60 "to" 61> #<edge133 61 reflect 62>)
   (:LOWER :HYPHEN :LOWER))
  "data-collection" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge121 15 close 16> #<edge122 14 proximity 25> #<edge123 15 close 16>)
   (:CAPITALIZED :FORWARD-SLASH :MIXED))
  "Geosentinel/EuroTravNet" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge4 174 "but rather" 176> #<edge5 174 but-rather 176> #<edge7 184 by-virtue-of 187>)
   (:LOWER :HYPHEN :LOWER))
  "data-collection" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge115 30 open-reading-frame 36> #<edge116 29 of 36> #<edge119 17 of 21>)
   (:LOWER :HYPHEN :LOWER))
  "sub-groups" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge16 314 "wild-type" 317> :REGISTERED_SIGN) (:RESIDUE-ON-PROTEIN :REGISTERED_SIGN))
  "v16.0®" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge96 33 square-brackets 36> #<edge97 37 square-brackets 40>
    #<edge100 49 square-brackets 52>)
   (:LOWER :FORWARD-SLASH :LOWER))
  "country/region" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge55 19 stop-endurant 20> #<edge56 20 bio-entity 21> #<edge57 21 "of" 22>)
   (:LOWER :HYPHEN :LOWER))
  "sub-analysis" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge151 74 modal 75> #<edge152 75 be 76> #<edge154 77 "to" 78>) (:LOWER :HYPHEN :LOWER))
  "health-care" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge132 60 to 61> #<edge133 61 reflect 62> #<edge134 62 "a" 63> #<edge135 62 a 63>
    #<edge137 64 mobility 65> #<edge138 65 "of" 66> #<edge140 66 "the" 67>)
   (:LOWER :FORWARD-SLASH :LOWER :FORWARD-SLASH :LOWER :FORWARD-SLASH :PROTEIN))
  "missionary/volunteer/research/aid" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge126 3 on 9> #<edge127 57 "this" 58>) (:LOWER :COLON)) "as:" :NO-EDGE)
 (((#<edge224 120 protein 121> #<edge225 120 open-reading-frame 121> #<edge227 122 place 123>)
   (:LOWER :HYPHEN :LOWER))
  "sub-analyses" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge152 75 be 76> #<edge153 76 ability 77> #<edge154 77 "to" 78>) (:LOWER :HYPHEN :LOWER))
  "evidence-based" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge169 74 be 76> #<edge170 77 undergo 79> #<edge171 79 limit 81>)
   (:LOWER :HYPHEN :CAPITALIZED))
  "intra-European" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge69 28 bio-entity 29> #<edge78 34 digit-sequence 35>) (:PLUS-SIGN :PERCENT)) "+0.3%"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge500 282 article-figure 283> #<edge501 283 digit-sequence 284> #<edge37 8 bio-process 9>)
   (:LOWER :HYPHEN :BIO-ENTITY))
  "non-PfEMP1" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge221 116 of 117> #<edge223 117 the 118> #<edge224 120 protein 121>
    #<edge225 120 open-reading-frame 121>)
   (:PROTEIN :SINGLE-DIGIT :HYPHEN :MIXED))
  "FCR3-IEs" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge11 274 such-as 276> #<edge174 74 ability 77> #<edge175 73 ability 77>)
   (:BIO-ENTITY :HYPHEN :LOWER))
  "VAR2CSA-expressing" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge617 356 of 357> #<edge619 292 subordinate-conjunction 294> :LOWER
    #<edge620 332 point-mutation 334> #<edge621 344 point-mutation 346>)
   (:LOWER :SINGLE-DIGIT :LOWER :HYPHEN :SINGLE-CAP))
  "var2csa-B" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge610 352 "to" 353> #<edge612 353 "the" 354> :LOWER #<edge613 353 the 354>
    #<edge615 355 site 356>)
   (:LOWER :SINGLE-DIGIT :LOWER :HYPHEN :SINGLE-CAP))
  "var2csa-A" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge583 332 number 333> :SINGLE-LOWER) (:SINGLE-DIGIT :SINGLE-LOWER)) "1i"
  REIFY-TWO-PART-LABEL)
 (((#<edge574 326 "of" 327> #<edge576 327 "the" 328> #<edge577 327 the 328>
    #<edge579 329 window 330>)
   (:PROTEIN :SINGLE-DIGIT :HYPHEN :PROTEIN))
  "FCR3-type" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge539 295 modifier 296> #<edge541 296 "a" 297> :LOWER #<edge542 296 a 297>
    #<edge543 297 choice-endurant 298>)
   (:LOWER :SINGLE-DIGIT :LOWER :HYPHEN :SINGLE-CAP))
  "var2csa-B" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge532 285 close-to 291> #<edge534 254 at 264> :LOWER #<edge535 246 under 250>
    #<edge537 293 COMMA 294>)
   (:LOWER :SINGLE-DIGIT :LOWER :HYPHEN :SINGLE-CAP))
  "var2csa-A" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge465 252 modal 253> #<edge467 254 "at" 255>) (:PROTEIN :DIGITS)) "PFL0030"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge450 234 bio-entity 238> #<edge452 213 site 226> :LOWER #<edge453 242 at 245>
    #<edge455 234 modifier 240>)
   (:LOWER :SINGLE-DIGIT :LOWER :HYPHEN :SINGLE-CAP))
  "var2csa-A" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge432 243 lower-note 244> #<edge434 199 subordinate-conjunction 201>
    #<edge435 223 point-mutation 225> #<edge437 220 point-mutation 225>)
   (:PROTEIN :SINGLE-DIGIT :HYPHEN :PROTEIN))
  "FCR3-type" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge421 236 reinitiation 237> #<edge423 238 be 239> :LOWER #<edge424 239 modifier 240>
    #<edge425 240 COMMA 241>)
   (:LOWER :SINGLE-DIGIT :LOWER :HYPHEN :SINGLE-CAP))
  "var2csa-B" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge396 213 "the" 214> #<edge398 217 site 218> :LOWER #<edge399 219 figure 220>
    #<edge401 220 digit-sequence 221>)
   (:LOWER :SINGLE-DIGIT :LOWER :HYPHEN :SINGLE-CAP))
  "var2csa-A" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge385 204 require 205> #<edge387 205 an 206> :LOWER #<edge388 206 bio-entity 207>
    #<edge389 207 "at" 208>)
   (:LOWER :SINGLE-DIGIT :LOWER :HYPHEN :SINGLE-CAP))
  "var2csa-B" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge263 149 figure 150> #<edge265 150 digit-sequence 151> :LOWER #<edge266 150 number 151>
    #<edge267 85 subordinate-conjunction 87>)
   (:LOWER :SINGLE-DIGIT :LOWER :HYPHEN :SINGLE-CAP))
  "var2csa-B" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge181 86 COMMA 87> #<edge183 87 pronoun/first/plural 88> :LOWER #<edge184 88 show 89>
    #<edge186 90 "that" 91>)
   (:LOWER :SINGLE-DIGIT :LOWER :HYPHEN :SINGLE-CAP))
  "var2csa-A" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge157 79 only 80> #<edge159 81 movement 82> :LOWER #<edge160 82 following-adj 83>
    #<edge161 82 following 83>)
   (:LOWER :SINGLE-DIGIT :LOWER :HYPHEN :SINGLE-CAP))
  "var2csa-B" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge150 73 pronoun/inanimate 74> #<edge152 75 be 76> :LOWER #<edge153 76 ability 77>
    #<edge155 77 to 78>)
   (:LOWER :SINGLE-DIGIT :LOWER :HYPHEN :SINGLE-CAP))
  "var2csa-A" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge122 14 proximity 25> #<edge123 15 close 16>) (:SINGLE-DIGIT :SINGLE-LOWER)) "1g"
  REIFY-TWO-PART-LABEL)
 (((#<edge44 13 of 14> #<edge46 14 the 15> #<edge48 15 close 16>) (:PROTEIN :DIGITS :SINGLE-LOWER))
  "PFL0030c" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge755 413 bio-complex 414> #<edge756 414 with 415>) (:SINGLE-DIGIT :SINGLE-LOWER)) "1f"
  REIFY-TWO-PART-LABEL)
 (((#<edge699 364 there-exists 366> #<edge700 366 require 368> #<edge701 381 site 383>)
   (:LOWER :HYPHEN :LOWER))
  "sex-specificity" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge643 353 site 356> #<edge644 327 window 335>) (:SINGLE-DIGIT :SINGLE-LOWER)) "1f"
  REIFY-TWO-PART-LABEL)
 (((#<edge628 311 select 313> #<edge630 313 bio-entity 318> #<edge631 321 bio-complex 323>
    #<edge632 323 terminate 325> #<edge633 328 window 330> #<edge634 327 window 330>)
   (:PROTEIN :SINGLE-DIGIT :HYPHEN :SINGLE-LOWER :HYPHEN :LOWER))
  "DBL5-ɛ-specific" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge615 355 site 356> #<edge617 356 of 357>) (:SINGLE-DIGIT :SINGLE-LOWER)) "1c"
  REIFY-TWO-PART-LABEL)
 (((#<edge589 338 "the" 339> #<edge590 338 the 339> #<edge591 339 bio-entity 340>)
   (:LOWER :HYPHEN :LOWER))
  "sex-specific" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge488 270 cognate 271> #<edge489 271 initiate 272>) (:SINGLE-DIGIT :SINGLE-LOWER)) "1e"
  REIFY-TWO-PART-LABEL)
 (((#<edge491 276 "the" 277> :MIDDLE-DOT #<edge463 250 COMMA 251>)
   (:PROTEIN :MIDDLE-DOT :SINGLE-DIGIT))
  "PAM4·7" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge490 272 bio-entity 273> :MIDDLE-DOT #<edge457 204 require 207>)
   (:PROTEIN :MIDDLE-DOT :DIGITS))
  "PAM3·10" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge389 207 "at" 208> #<edge390 207 at 208>) (:SINGLE-DIGIT :SINGLE-LOWER)) "1b"
  REIFY-TWO-PART-LABEL)
 (((#<edge373 169 bio-entity 172> #<edge374 170 lambda-expression 172> #<edge375 168 per 172>)
   (:LOWER :HYPHEN :LOWER))
  "sex-specific" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge21 376 wild-type 379> #<edge348 188 distance 189> #<edge349 189 between 190>)
   (:BIO-ENTITY :HYPHEN :MIXED))
  "HB3-IEs" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge288 135 start 137> #<edge289 130 detect 132>) (:SINGLE-DIGIT :SINGLE-LOWER)) "1d"
  REIFY-TWO-PART-LABEL)
 (((#<edge15 300 wild-type 303> #<edge276 118 open-reading-frame 121>
    #<edge277 117 open-reading-frame 121>)
   (:BIO-ENTITY :HYPHEN :MIXED))
  "HB3-IEs" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge241 132 even 133> #<edge242 132 even 133> #<edge243 133 when 134>)
   (:LOWER :HYPHEN :LOWER))
  "surface-expressed" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge206 105 efficiency 106> #<edge208 107 article-figure 108>) (:SINGLE-DIGIT :SINGLE-LOWER))
  "1a" REIFY-TWO-PART-LABEL)
 (((#<edge3 139 up-to 141> #<edge99 45 square-brackets 48> #<edge100 49 square-brackets 52>)
   (:BIO-ENTITY :HYPHEN :MIXED))
  "HB3-IEs" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge154 77 "to" 78> #<edge155 77 to 78> #<edge156 78 undergo 79>)
   (:CAPITALIZED :HYPHEN :LOWER))
  "Parity-dependency" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge126 3 on 9> #<edge127 57 "this" 58> #<edge128 57 this 58> #<edge129 58 be 59>
    #<edge130 59 believe 60>)
   (:LOWER :HYPHEN :LOWER :HYPHEN :LOWER))
  "non-normal-distributed" MAKE-HYPHENATED-TRIPLE)
 (((:CAPITALIZED #<edge116 29 of 36> #<edge118 21 of 25>) (:CAPITALIZED :HYPHEN :DRUG))
  "Holm-Sidak's" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge94 54 number 55> :MIDDLE-DOT #<edge96 33 square-brackets 36>)
   (:SINGLE-DIGIT :MIDDLE-DOT :DIGITS))
  "0·05" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge46 14 the 15> #<edge47 15 close-bio-process 16> #<edge48 15 close 16>)
   (:DIGITS :HYPHEN :LOWER))
  "one-way" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge36 7 reinitiation 8> #<edge37 8 bio-process 9> #<edge38 9 have 10>)
   (:DIGITS :HYPHEN :LOWER))
  "one-way" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge225 120 open-reading-frame 121> #<edge227 122 place 123>) (:SINGLE-CAP :SINGLE-DIGIT))
  "S1" REIFY-TWO-PART-LABEL)
 (((#<edge42 12 importance 13> #<edge43 13 "of" 14> #<edge45 14 "the" 15>) (:LOWER :HYPHEN :LOWER))
  "ring-stage" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge15 300 wild-type 303> #<edge16 314 "wild-type" 317> #<edge18 319 "even if" 321>)
   (:CAPITALIZED :HYPHEN :LOWER))
  "Late-stage" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge483 266 at 267> #<edge484 267 "a" 268> #<edge485 267 a 268>) (:LOWER :HYPHEN :LOWER))
  "sex-specific" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge398 217 site 218> #<edge399 219 figure 220> #<edge400 219 article-figure 220>)
   (:LOWER :HYPHEN :LOWER))
  "parity-dependency" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge260 146 modifier 147> #<edge261 147 position-bio-process 148>
    #<edge262 147 position 148>)
   (:PROTEIN :HYPHEN :LOWER))
  "IE-surface" PACKAGE-QUALIFYING-PAIR)
 (((#<edge249 137 be 138> #<edge250 138 move-something-somewhere 139> #<edge251 138 move-to 139>)
   (:LOWER :HYPHEN :LOWER))
  "sex-specific" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge219 115 bio-entity 116> #<edge220 116 "of" 117> #<edge221 116 of 117>)
   (:LOWER :HYPHEN :LOWER))
  "sex-specificity" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge9 214 wild-type 217> #<edge71 29 of 30> #<edge72 30 "the" 31>)
   (:BIO-ENTITY :HYPHEN :MIXED))
  "HB3-IEs" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge196 97 and 98> #<edge197 98 "the" 99>) (:SINGLE-DIGIT :PLUS-SIGN)) "0+"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge138 65 "of" 66> #<edge139 65 of 66> #<edge140 66 "the" 67>)
   (:SINGLE-CAP :FORWARD-SLASH :FULL))
  "I/CDC" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge49 16 proximity 17> #<edge51 17 of 18>) (:PROTEIN :DIGITS)) "NF54"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:FULL #<edge30 3 "on" 4>) (:FULL :SINGLE-DIGIT)) "HB3" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge253 141 number 142> #<edge255 143 downstream-segment 144> #<edge256 143 downstream 144>
    #<edge257 144 "of" 145>)
   (:PROTEIN :SINGLE-DIGIT :HYPHEN :SINGLE-LOWER))
  "DBL5-ɛ" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge245 134 "the" 135> #<edge247 135 start 136> #<edge248 136 bio-entity 137>
    #<edge249 137 be 138>)
   (:PROTEIN :SINGLE-DIGIT :HYPHEN :SINGLE-CAP))
  "DBL3-X" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge235 126 stop-endurant 127> #<edge236 127 bio-entity 128> #<edge237 128 COMMA 129>)
   (:LOWER :HYPHEN :LOWER))
  "inter-clonally" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge171 79 limit 81> #<edge172 79 movement 82> #<edge173 82 following 84>)
   (:LOWER :HYPHEN :PROTEIN))
  "non-PAM" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge75 31 downstream 32> #<edge76 32 protein 33> #<edge77 32 open-reading-frame 33>)
   (:LOWER :HYPHEN :LOWER))
  "surface-expressed" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge613 353 the 354> #<edge615 355 site 356> #<edge616 356 "of" 357>)
   (:PROTEIN :SINGLE-DIGIT :SINGLE-CAP))
  "DBL3X" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge603 347 "to" 348> #<edge604 347 to 348> #<edge605 348 SINGLE-QUOTE 349>)
   (:LOWER :HYPHEN :LOWER))
  "inter-clonally" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge598 344 digit-sequence 345> #<edge599 344 number 345> #<edge600 345 direction 346>)
   (:LOWER :HYPHEN :LOWER))
  "well-defined" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge623 330 parentheses 335> :MIDDLE-DOT #<edge583 332 number 333>)
   (:PROTEIN :MIDDLE-DOT :SINGLE-DIGIT))
  "PAM8·1" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge540 295 give 296> #<edge542 296 a 297> #<edge21 376 wild-type 379>)
   (:PROTEIN :SINGLE-DIGIT :BIO-ENTITY))
  "PAM1·4" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge505 288 native 289> #<edge506 289 reinitiation 290> #<edge507 290 site 291>)
   (:LOWER :HYPHEN :LOWER))
  "above-mentioned" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge271 95 bio-complex 97> #<edge273 94 bio-complex 97>) (:MIXED :SINGLE-DIGIT)) "PfEMP1"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:FULL #<edge255 143 downstream-segment 144> #<edge256 143 downstream 144>)
   (:FULL :SINGLE-DIGIT :PROTEIN))
  "VAR2CSA" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge58 21 of 22> #<edge59 22 "the" 23>) (:FULL :COLON)) "SES:" :NO-EDGE)
 (((#<edge38 9 have 10> #<edge39 10 suggest 11>) (:PROTEIN :COLON)) "PE:" :NO-EDGE)
 (((#<edge23 393 due-to 395> #<edge24 415 "eif3" 417>) (:FULL :COLON)) "IOM:" :NO-EDGE)
 (((#<edge8 214 "wild-type" 217> #<edge9 214 wild-type 217> #<edge10 274 "such as" 276>)
   (:LOWER :FORWARD-SLASH :LOWER))
  "damp/moldy" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge8 214 "wild-type" 217> :EQUAL-SIGN) (:PROTEIN :EQUAL-SIGN)) "ARP="
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge241 132 even 133> #<edge242 132 even 133>) (:LOWER :COLON)) "following:" :NO-EDGE)
 (((:DOLLAR-SIGN #<edge135 62 a 63>) (:DOLLAR-SIGN :DIGITS)) "$17 billion"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge244 133 when 134> #<edge245 134 "the" 135> #<edge246 134 the 135>
    #<edge247 135 start 136> #<edge248 136 bio-entity 137>)
   (:LOWER :FORWARD-SLASH :LOWER :FORWARD-SLASH :LOWER))
  "gas/oil/kerosene" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge102 1 study-bio-method 3> #<edge103 5 bio-process 9> #<edge104 4 bio-process 9>)
   (:LOWER :HYPHEN :LOWER))
  "researcher-based" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge97 37 square-brackets 40> #<edge98 41 square-brackets 44>
    #<edge99 45 square-brackets 48>)
   (:LOWER :HYPHEN :LOWER))
  "occupant-reported" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge120 14 proximity 21> #<edge121 15 close 16> #<edge122 14 proximity 25>)
   (:LOWER :HYPHEN :LOWER))
  "well-adjusted" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge92 52 COMMA 53> #<edge93 54 digit-sequence 55> #<edge95 5 hyphenated-pair 8>)
   (:LOWER :HYPHEN :LOWER))
  "sub-analyses" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge347 187 the 188> #<edge348 188 distance 189> #<edge349 189 between 190>)
   (:LOWER :FORWARD-SLASH :LOWER))
  "children/infants" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge314 160 "the" 161> #<edge315 160 the 161> #<edge316 161 distance 162>)
   (:LOWER :FORWARD-SLASH :LOWER))
  "children/infants" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:OPEN-ANGLE-BRACKET #<edge136 63 restrict 64>) (:OPEN-ANGLE-BRACKET :DIGITS)) "<0.0001"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge5 174 but-rather 176> #<edge6 184 "by virtue of" 187> #<edge8 214 "wild-type" 217>)
   (:LOWER :HYPHEN :LOWER))
  "within-study" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge5 174 but-rather 176> #<edge6 184 "by virtue of" 187> #<edge8 214 "wild-type" 217>)
   (:LOWER :HYPHEN :LOWER))
  "between-study" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge32 4 "the" 5> :ASTERISK #<edge34 5 terminate 6>) (:SINGLE-LOWER :ASTERISK :SINGLE-DIGIT))
  "σ*2" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge3 139 up-to 141> :SINGLE-LOWER) (:BIO-ENTITY :SINGLE-LOWER)) "β0i"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge1 118 protein 120> :SINGLE-LOWER) (:BIO-ENTITY :SINGLE-LOWER)) "β0i"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge0 118 "BM2" 120> #<edge2 139 "up to" 141>) (:SINGLE-LOWER :SINGLE-DIGIT)) "β0"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge10 274 "such as" 276> #<edge11 274 such-as 276> #<edge13 285 close-to 287>)
   (:LOWER :HYPHEN :LOWER))
  "sub-study" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge13 285 close-to 287> :LOWER #<edge15 300 wild-type 303>)
   (:SINGLE-LOWER :LOWER :SINGLE-DIGIT))
  "σij2" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge5 174 but-rather 176> #<edge7 184 by-virtue-of 187> #<edge8 214 "wild-type" 217>
    #<edge9 214 wild-type 217> #<edge11 274 such-as 276> :SINGLE-LOWER)
   (:SINGLE-LOWER :SINGLE-DIGIT :PLUS-SIGN :SINGLE-LOWER :SINGLE-DIGIT :SINGLE-LOWER))
  "β0+β0i" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:LOWER :TILDA #<edge4 174 "but rather" 176>) (:LOWER :TILDA :SINGLE-CAP)) "yij~N"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge333 173 efficiency 174> #<edge334 176 how 177> #<edge336 177 well-endurant 178>)
   (:LOWER :HYPHEN :LOWER))
  "between-study" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge321 165 and 166> #<edge322 166 stop 167> #<edge324 167 bio-entity 168>)
   (:LOWER :HYPHEN :LOWER))
  "within-study" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge265 150 digit-sequence 151> #<edge266 150 number 151> #<edge268 141 bio-entity 143>)
   (:LOWER :HYPHEN :LOWER))
  "within-study" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge469 255 "a" 256> #<edge470 255 a 256> #<edge471 256 downstream-segment 257>)
   (:LOWER :HYPHEN :LOWER))
  "researcher-reported" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge462 249 circumstance 250> #<edge463 250 COMMA 251> #<edge464 251 bio-complex 252>)
   (:LOWER :HYPHEN :LOWER))
  "occupant-reported" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge10 274 "such as" 276> #<edge11 274 such-as 276> #<edge13 285 close-to 287>)
   (:LOWER :HYPHEN :LOWER))
  "building-level" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge3 139 up-to 141> #<edge4 174 "but rather" 176> #<edge7 184 by-virtue-of 187>
    #<edge8 214 "wild-type" 217> #<edge10 274 "such as" 276> #<edge11 274 such-as 276>
    #<edge13 285 close-to 287> #<edge14 300 "wild-type" 303> #<edge15 300 wild-type 303>)
   (:LOWER :FORWARD-SLASH :HYPHENATED-NUMBER :FORWARD-SLASH :DIGITS :FORWARD-SLASH :DIGITS
    :FORWARD-SLASH :LOWER))
  "com/1471-2458/10/697/prepub" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge2 139 "up to" 141> #<edge3 139 up-to 141> #<edge4 174 "but rather" 176>)
   (:LOWER :HYPHEN :LOWER))
  "pre-publication" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge530 267 bio-entity 285> #<edge531 255 bio-entity 264> #<edge532 285 close-to 291>)
   (:LOWER :HYPHEN :LOWER))
  "over-reacted" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge525 268 bio-entity 273> #<edge526 267 bio-entity 273> #<edge527 289 site 291>)
   (:LOWER :HYPHEN :LOWER))
  "over-reported" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge220 116 "of" 117> #<edge221 116 of 117> #<edge223 117 the 118>) (:LOWER :HYPHEN :LOWER))
  "risk-benefit" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge128 57 this 58> #<edge129 58 be 59> #<edge130 59 believe 60>) (:LOWER :HYPHEN :LOWER))
  "self-efficacy" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge86 44 COMMA 45> #<edge87 46 digit-sequence 47> #<edge88 46 number 47>)
   (:LOWER :HYPHEN :LOWER))
  "over-reacting" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge34 5 terminate 6> #<edge35 6 HYPHEN 7> #<edge36 7 reinitiation 8>)
   (:LOWER :HYPHEN :LOWER))
  "over-reacted" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge395 212 COMMA 213> #<edge396 213 "the" 214> #<edge397 213 the 214>
    #<edge398 217 site 218> #<edge400 219 article-figure 220> #<edge401 220 digit-sequence 221>
    #<edge403 221 amino-acid 222> #<edge404 221 a 222> #<edge405 222 and 223>
    #<edge406 223 digit-sequence 224> #<edge407 223 number 224>)
   (:LOWER :FORWARD-SLASH :LOWER :FORWARD-SLASH :DIGITS :FORWARD-SLASH :LOWER :DIGITS :LOWER
    :HYPHEN :LOWER))
  "uk/media/416533/the2009influenzapandemic-review" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge201 101 comparative 102> #<edge202 102 critical 103> #<edge203 103 "to" 104>)
   (:LOWER :HYPHEN :LOWER))
  "self-efficacy" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge136 63 restrict 64> #<edge137 64 mobility 65> #<edge139 65 of 66>)
   (:SINGLE-DIGIT :COLON :SINGLE-DIGIT))
  "5:1" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge22 393 "due to" 395> #<edge23 393 due-to 395> #<edge24 415 "eif3" 417>)
   (:LOWER :HYPHEN :LOWER))
  "in-depth" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge300 88 show 90> #<edge302 85 show 90>) (:FULL :DIGITS)) "FG12"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge288 135 start 137> #<edge289 130 detect 132>) (:LOWER :COLON)) "was:" :NO-EDGE)
 (((:LOWER #<edge201 101 comparative 102>) (:LOWER :COLON)) "said:" :NO-EDGE)
 (((#<edge182 87 "we" 88> #<edge183 87 pronoun/first/plural 88> #<edge185 89 deictic-location 90>)
   (:LOWER :HYPHEN :LOWER))
  "side-effects" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge299 93 between 97> #<edge301 87 show 90>) (:FULL :SINGLE-DIGIT)) "FG6"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:CAPITALIZED #<edge0 118 "BM2" 120>) (:CAPITALIZED :COLON)) "Kyla:" :NO-EDGE)
 (((:CAPITALIZED #<edge2 139 "up to" 141>) (:CAPITALIZED :COLON)) "Craig:" :NO-EDGE)
 (((#<edge13 285 close-to 287> #<edge14 300 "wild-type" 303> :CAPITALIZED)
   (:SINGLE-CAP :HYPHEN :CAPITALIZED))
  "C-Diff" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:CAPITALIZED #<edge0 118 "BM2" 120>) (:CAPITALIZED :COLON)) "Sarah:" :NO-EDGE)
 (((#<edge445 227 site 230> #<edge446 231 bio-use 233>) (:LOWER :COLON)) "flu:" :NO-EDGE)
 (((:LOWER #<edge76 32 protein 33>) (:LOWER :COLON)) "said:" :NO-EDGE)
 (((#<edge31 3 on 4> #<edge32 4 "the" 5>) (:LOWER :COLON)) "flu:" :NO-EDGE)
 (((:LOWER #<edge172 79 movement 82>) (:LOWER :COLON)) "said:" :NO-EDGE)
 (((#<edge187 90 that 91> #<edge189 91 the 92>) (:FULL :DIGITS)) "FG10"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge165 62 mobility 65> #<edge166 67 bio-complex 69>) (:LOWER :COLON)) "as:" :NO-EDGE)
 (((:CAPITALIZED #<edge1 118 protein 120>) (:CAPITALIZED :COLON)) "Sophie:" :NO-EDGE)
 (((:CAPITALIZED #<edge0 118 "BM2" 120>) (:CAPITALIZED :COLON)) "Ellie:" :NO-EDGE)
 (((:CAPITALIZED #<edge6 184 "by virtue of" 187>) (:CAPITALIZED :COLON)) "Beth:" :NO-EDGE)
 (((#<edge413 230 modal 231> #<edge415 232 bio-use 233>) (:FULL :SINGLE-DIGIT)) "FG8"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge120 14 proximity 21> #<edge122 14 proximity 25>) (:FULL :SINGLE-DIGIT)) "FG4"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge472 256 downstream 257> #<edge474 258 bio-entity 259>) (:FULL :SINGLE-DIGIT)) "FG5"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge246 134 the 135> #<edge248 136 bio-entity 137>) (:FULL :SINGLE-DIGIT)) "FG1"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge215 112 when 113> #<edge216 113 "the" 114>) (:LOWER :COLON)) "responded:" :NO-EDGE)
 (((#<edge138 65 "of" 66> #<edge139 65 of 66> #<edge140 66 "the" 67>) (:LOWER :HYPHEN :LOWER))
  "field-notes" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge82 38 number 39> #<edge83 40 COMMA 41> #<edge84 42 digit-sequence 43>)
   (:LOWER :HYPHEN :LOWER))
  "cross-compared" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge55 19 stop-endurant 20> #<edge56 20 bio-entity 21> #<edge58 21 of 22>)
   (:LOWER :FORWARD-SLASH :LOWER))
  "leisure/sport" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:LOWER :SHARP-SIGN #<edge163 58 believe 60>) (:LOWER :SHARP-SIGN :LOWER)) "aspx#mostvulnerable"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge151 74 modal 75> #<edge152 75 be 76> #<edge154 77 "to" 78> #<edge155 77 to 78>
    #<edge156 78 undergo 79> #<edge157 79 only 80> #<edge159 81 movement 82>
    #<edge160 82 following-adj 83> #<edge161 82 following 83> #<edge162 83 terminate 84> :FULL)
   (:LOWER :FORWARD-SLASH :CAPITALIZED :FORWARD-SLASH :CAPITALIZED :HYPHEN :LOWER :FORWARD-SLASH
    :CAPITALIZED :FORWARD-SLASH :FULL))
  "uk/Conditions/Pandemic-flu/Pages/QA" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge545 298 "of" 299> #<edge546 298 of 299> #<edge547 299 "a" 300>) (:LOWER :HYPHEN :LOWER))
  "over-reacted" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge168 66 bio-complex 69> #<edge169 74 be 76> #<edge171 79 limit 81>)
   (:LOWER :HYPHEN :LOWER))
  "top-down" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge93 54 digit-sequence 55> #<edge94 54 number 55> #<edge96 33 square-brackets 36>)
   (:FULL :HYPHEN :CAPITALIZED))
  "AH-Cut" MAKE-HYPHENATED-PAIR)
 (((#<edge7 184 by-virtue-of 187> #<edge8 214 "wild-type" 217> #<edge9 214 wild-type 217>)
   (:LOWER :HYPHEN :LOWER))
  "variable-neighborhood" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge79 34 number 35> #<edge80 36 COMMA 37> #<edge82 38 number 39>)
   (:FULL :HYPHEN :CAPITALIZED))
  "AH-Cut" MAKE-HYPHENATED-PAIR)
 (((#<edge73 30 the 31> #<edge74 31 downstream-segment 32> #<edge75 31 downstream 32>)
   (:LOWER :HYPHEN :LOWER))
  "fixed-parameter" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge29 2 study-data 3> #<edge30 3 "on" 4> #<edge31 3 on 4>) (:LOWER :HYPHEN :LOWER))
  "fixed-parameter" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge26 415 bio-complex 417> #<edge27 1 sequencer 2> #<edge29 2 study-data 3>)
   (:FULL :HYPHEN :CAPITALIZED))
  "AH-Cut" MAKE-HYPHENATED-PAIR)
 (((#<edge60 22 the 23> #<edge61 23 upstream-segment 24> #<edge64 24 open-reading-frame 25>)
   (:FULL :HYPHEN :CUT-ENDURANT))
  "AH-Cut's" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge35 6 HYPHEN 7> #<edge36 7 reinitiation 8> #<edge38 9 have 10>)
   (:FULL :HYPHEN :CAPITALIZED))
  "AH-Cut" MAKE-HYPHENATED-PAIR)
 (((#<edge29 2 study-data 3> #<edge30 3 "on" 4> #<edge31 3 on 4>) (:LOWER :HYPHEN :LOWER))
  "fixed-parameter" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge108 14 proximity 17> #<edge109 19 bio-entity 21> #<edge111 23 open-reading-frame 25>)
   (:FULL :HYPHEN :CAPITALIZED))
  "AH-Cut" MAKE-HYPHENATED-PAIR)
 (((#<edge53 18 the 19> #<edge54 19 stop 20> #<edge56 20 bio-entity 21>)
   (:CAPITALIZED :HYPHEN :CAPITALIZED))
  "Normalized-Cut" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge39 10 suggest 11> #<edge40 11 "the" 12> #<edge42 12 importance 13>)
   (:FULL :HYPHEN :CAPITALIZED))
  "AH-Cut" MAKE-HYPHENATED-PAIR)
 (((#<edge56 20 bio-entity 21> #<edge57 21 "of" 22> #<edge58 21 of 22>) (:LOWER :HYPHEN :LOWER))
  "fixed-parameter" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge37 8 bio-process 9> #<edge38 9 have 10> #<edge40 11 "the" 12>)
   (:FULL :HYPHEN :CAPITALIZED))
  "AH-Cut" MAKE-HYPHENATED-PAIR)
 (((#<edge14 300 "wild-type" 303> #<edge15 300 wild-type 303> #<edge17 314 wild-type 317>)
   (:CAPITALIZED :HYPHEN :CAPITALIZED))
  "Normalized-Cut" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge7 184 by-virtue-of 187> #<edge8 214 "wild-type" 217> #<edge10 274 "such as" 276>)
   (:FULL :HYPHEN :CAPITALIZED))
  "AH-Cut" MAKE-HYPHENATED-PAIR)
 (((#<edge28 2 study-bio-method 3> #<edge29 2 study-data 3> #<edge31 3 on 4>)
   (:FULL :HYPHEN :CAPITALIZED))
  "AH-Cut" MAKE-HYPHENATED-PAIR)
 (((#<edge15 300 wild-type 303> #<edge16 314 "wild-type" 317> #<edge18 319 "even if" 321>)
   (:FULL :HYPHEN :CAPITALIZED))
  "AH-Cut" MAKE-HYPHENATED-PAIR)
 (((#<edge87 46 digit-sequence 47> #<edge88 46 number 47> #<edge90 50 digit-sequence 51>)
   (:CAPITALIZED :HYPHEN :CAPITALIZED))
  "Normalized-Cut" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge53 18 the 19> #<edge54 19 stop 20> #<edge56 20 bio-entity 21>)
   (:CAPITALIZED :HYPHEN :CAPITALIZED))
  "Normalized-Cut" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge7 184 by-virtue-of 187> #<edge8 214 "wild-type" 217> #<edge10 274 "such as" 276>)
   (:FULL :HYPHEN :CAPITALIZED))
  "AH-Cut" MAKE-HYPHENATED-PAIR)
 (((#<edge147 71 be 72> #<edge148 72 COMMA 73> #<edge150 73 pronoun/inanimate 74>)
   (:FULL :HYPHEN :CAPITALIZED))
  "AH-Cut" MAKE-HYPHENATED-PAIR)
 (((#<edge12 285 "close to" 287> #<edge13 285 close-to 287> #<edge15 300 wild-type 303>)
   (:FULL :HYPHEN :CAPITALIZED))
  "AH-Cut" MAKE-HYPHENATED-PAIR)
 (((#<edge0 118 "BM2" 120> #<edge1 118 protein 120> #<edge3 139 up-to 141>)
   (:CAPITALIZED :HYPHEN :CAPITALIZED))
  "Normalized-Cut" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge601 345 amino-acid 346> #<edge603 347 "to" 348>) (:FULL :SINGLE-DIGIT)) "TV2"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:FULL #<edge415 232 bio-use 233>) (:FULL :SINGLE-DIGIT)) "EV1" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge369 180 tethere 183> #<edge370 180 tethere 198> #<edge371 178 tethere 198>)
   (:LOWER :HYPHEN :NUCLEOTIDE))
  "tetra-nucleotide" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge195 96 bio-complex 97> #<edge196 97 and 98> #<edge198 98 the 99>)
   (:FULL :HYPHEN :CAPITALIZED))
  "AH-Cut" MAKE-HYPHENATED-PAIR)
 (((#<edge166 67 bio-complex 69> #<edge167 67 lambda-expression 68> #<edge169 74 be 76>)
   (:CAPITALIZED :HYPHEN :CAPITALIZED))
  "Normalized-Cut" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge161 82 following 83> #<edge162 83 terminate 84> #<edge164 60 reflect 62>)
   (:FULL :HYPHEN :CAPITALIZED))
  "AH-Cut" MAKE-HYPHENATED-PAIR)
 (((#<edge101 53 square-brackets 56> #<edge102 1 study-bio-method 3> #<edge103 5 bio-process 9>)
   (:LOWER :HYPHEN :NUCLEOTIDE))
  "tetra-nucleotide" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge15 300 wild-type 303> #<edge16 314 "wild-type" 317> #<edge18 319 "even if" 321>)
   (:CAPITALIZED :HYPHEN :CAPITALIZED))
  "Normalized-Cut" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge2 139 "up to" 141> #<edge3 139 up-to 141> #<edge5 174 but-rather 176>)
   (:CAPITALIZED :HYPHEN :CAPITALIZED))
  "Normalized-Cut" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge236 127 bio-entity 128> #<edge237 128 COMMA 129> #<edge239 130 be 131>)
   (:FULL :HYPHEN :CAPITALIZED))
  "AH-Cut" MAKE-HYPHENATED-PAIR)
 (((#<edge197 98 "the" 99> #<edge198 98 the 99> #<edge200 100 be 101>)
   (:FULL :HYPHEN :CAPITALIZED))
  "AH-Cut" MAKE-HYPHENATED-PAIR)
 (((#<edge11 274 such-as 276> #<edge12 285 "close to" 287> #<edge14 300 "wild-type" 303>)
   (:CAPITALIZED :HYPHEN :CAPITALIZED))
  "Normalized-Cut" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge19 319 even-if 321> #<edge20 376 "wild-type" 379> #<edge21 376 wild-type 379>
    #<edge22 393 "due to" 395> #<edge23 393 due-to 395>)
   (:LOWER :HYPHEN :LOWER :HYPHEN :LOWER))
  "melanoma-colon-leukemia" MAKE-HYPHENATED-TRIPLE)
 (((#<edge5 174 but-rather 176> #<edge6 184 "by virtue of" 187> #<edge7 184 by-virtue-of 187>)
   (:LOWER :HYPHEN :LOWER))
  "fixed-parameter" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge0 118 "BM2" 120> #<edge1 118 protein 120> #<edge3 139 up-to 141>)
   (:FULL :HYPHEN :CAPITALIZED))
  "AH-Cut" MAKE-HYPHENATED-PAIR)
 (((#<edge10 274 "such as" 276> #<edge11 274 such-as 276>) (:LOWER :COLON)) "result:" :NO-EDGE)
 (((#<edge10 274 "such as" 276> #<edge11 274 such-as 276> #<edge13 285 close-to 287>)
   (:FULL :HYPHEN :CAPITALIZED))
  "AH-Cut" MAKE-HYPHENATED-PAIR)
 (((#<edge9 214 wild-type 217> #<edge10 274 "such as" 276> #<edge12 285 "close to" 287>)
   (:FULL :HYPHEN :CAPITALIZED))
  "AH-Cut" MAKE-HYPHENATED-PAIR)
 (((#<edge174 74 ability 77> #<edge175 73 ability 77> #<edge177 65 of 69>)
   (:FULL :HYPHEN :CAPITALIZED))
  "AH-Cut" MAKE-HYPHENATED-PAIR)
 (((#<edge80 36 COMMA 37> #<edge81 38 digit-sequence 39> #<edge83 40 COMMA 41>)
   (:FULL :HYPHEN :CAPITALIZED))
  "AH-Cut" MAKE-HYPHENATED-PAIR)
 (((#<edge67 26 the 27> #<edge68 27 start 28> #<edge70 29 "of" 30>)
   (:PROTEIN :HYPHEN :CAPITALIZED))
  "Max-Cut" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge45 14 "the" 15> #<edge46 14 the 15> #<edge48 15 close 16>)
   (:PROTEIN :HYPHEN :CAPITALIZED))
  "Max-Cut" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge19 319 even-if 321> #<edge20 376 "wild-type" 379> #<edge22 393 "due to" 395>)
   (:FULL :HYPHEN :CAPITALIZED))
  "AH-Cut" MAKE-HYPHENATED-PAIR)
 (((#<edge0 118 "BM2" 120> #<edge1 118 protein 120> #<edge3 139 up-to 141>)
   (:FULL :HYPHEN :CAPITALIZED))
  "AH-Cut" MAKE-HYPHENATED-PAIR)
 (((#<edge133 61 reflect 62> #<edge134 62 "a" 63> #<edge136 63 restrict 64>)
   (:CAPITALIZED :COLON :CAPITALIZED))
  "Therefore:As" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge134 62 "a" 63> #<edge135 62 a 63> #<edge137 64 mobility 65>)
   (:FULL :HYPHEN :CAPITALIZED))
  "AH-Cut" MAKE-HYPHENATED-PAIR)
 (((#<edge58 21 of 22> #<edge59 22 "the" 23> #<edge61 23 upstream-segment 24>)
   (:FULL :HYPHEN :CAPITALIZED))
  "AH-Cut" MAKE-HYPHENATED-PAIR)
 (((#<edge13 285 close-to 287> #<edge14 300 "wild-type" 303> #<edge16 314 "wild-type" 317>)
   (:FULL :HYPHEN :CAPITALIZED))
  "AH-Cut" MAKE-HYPHENATED-PAIR)
 (((#<edge71 29 of 30> #<edge72 30 "the" 31> #<edge73 30 the 31>) (:LOWER :HYPHEN :LOWER))
  "fixed-parameter" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge26 415 bio-complex 417> #<edge27 1 sequencer 2> #<edge29 2 study-data 3>)
   (:FULL :HYPHEN :CAPITALIZED))
  "AH-Cut" MAKE-HYPHENATED-PAIR)
 (((#<edge140 66 "the" 67> #<edge141 66 the 67> #<edge143 68 bio-complex 69>)
   (:FULL :HYPHEN :CAPITALIZED))
  "AH-Cut" MAKE-HYPHENATED-PAIR)
 (((#<edge101 53 square-brackets 56> #<edge102 1 study-bio-method 3> #<edge104 4 bio-process 9>)
   (:CAPITALIZED :HYPHEN :CAPITALIZED))
  "Normalized-Cut" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge27 1 sequencer 2> #<edge28 2 study-bio-method 3> #<edge30 3 "on" 4>)
   (:FULL :HYPHEN :CAPITALIZED))
  "AH-Cut" MAKE-HYPHENATED-PAIR)
 (((#<edge143 68 bio-complex 69> #<edge144 69 semicolon 70> #<edge145 70 "that" 71>)
   (:LOWER :HYPHEN :LOWER))
  "fixed-parameter" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge138 65 "of" 66> #<edge139 65 of 66> #<edge141 66 the 67>) (:FULL :HYPHEN :CAPITALIZED))
  "AH-Cut" MAKE-HYPHENATED-PAIR)
 (((#<edge69 28 bio-entity 29> #<edge70 29 "of" 30> #<edge72 30 "the" 31>)
   (:PROTEIN :HYPHEN :CAPITALIZED))
  "Max-Cut" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge49 16 proximity 17> #<edge50 17 "of" 18> #<edge52 18 "the" 19>)
   (:FULL :HYPHEN :CAPITALIZED))
  "AH-Cut" MAKE-HYPHENATED-PAIR)
 (((#<edge27 1 sequencer 2> #<edge28 2 study-bio-method 3> #<edge30 3 "on" 4>)
   (:FULL :HYPHEN :CAPITALIZED))
  "AH-Cut" MAKE-HYPHENATED-PAIR)
 (((#<edge239 130 be 131> #<edge240 131 detect 132> #<edge242 132 even 133>)
   (:CAPITALIZED :HYPHEN :CAPITALIZED))
  "Normalized-Cut" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge200 100 be 101> #<edge201 101 comparative 102> #<edge203 103 "to" 104>)
   (:LOWER :HYPHEN :LOWER))
  "ratio-cuts" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge96 33 square-brackets 36> #<edge97 37 square-brackets 40>
    #<edge98 41 square-brackets 44>)
   (:LOWER :HYPHEN :LOWER))
  "base-level" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge88 46 number 47> #<edge89 48 COMMA 49> #<edge91 50 number 51>)
   (:CAPITALIZED :HYPHEN :CAPITALIZED))
  "Normalized-Cut" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge48 15 close 16> #<edge49 16 proximity 17> #<edge51 17 of 18>)
   (:CAPITALIZED :HYPHEN :CAPITALIZED))
  "Normalized-Cut" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge18 319 "even if" 321> #<edge19 319 even-if 321> #<edge21 376 wild-type 379>)
   (:LOWER :HYPHEN :LOWER))
  "intra-cluster" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge8 214 "wild-type" 217> #<edge9 214 wild-type 217> #<edge11 274 such-as 276>)
   (:CAPITALIZED :HYPHEN :CAPITALIZED))
  "Ratio-Cut" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge3 139 up-to 141> #<edge4 174 "but rather" 176> #<edge6 184 "by virtue of" 187>)
   (:PROTEIN :HYPHEN :CAPITALIZED))
  "Max-Cut" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge239 130 be 131> #<edge240 131 detect 132> #<edge242 132 even 133>)
   (:CAPITALIZED :HYPHEN :CAPITALIZED))
  "Normalized-Cut" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge190 92 distance 93> #<edge191 93 between 94> #<edge194 95 terminate 96>)
   (:CAPITALIZED :HYPHEN :CUT-ENDURANT))
  "Normalized-Cut's" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge163 58 believe 60> #<edge164 60 reflect 62> #<edge167 67 lambda-expression 68>)
   (:CAPITALIZED :HYPHEN :CUT-ENDURANT))
  "Normalized-Cut's" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge120 14 proximity 21> #<edge121 15 close 16> #<edge123 15 close 16>)
   (:CAPITALIZED :HYPHEN :CAPITALIZED))
  "Normalized-Cut" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge114 30 open-reading-frame 33> #<edge115 30 open-reading-frame 36> #<edge116 29 of 36>)
   (:LOWER :HYPHEN :LOWER))
  "real-valued" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge42 12 importance 13> #<edge43 13 "of" 14> #<edge45 14 "the" 15>) (:LOWER :HYPHEN :LOWER))
  "real-values" MAKE-HYPHENATED-STRUCTURE)
 (((:LOWER #<edge27 1 sequencer 2> #<edge29 2 study-data 3>) (:LOWER :HYPHEN :LOWER)) "eigen-value"
  :NO-EDGE)
 (((#<edge18 319 "even if" 321> #<edge19 319 even-if 321> #<edge21 376 wild-type 379>)
   (:CAPITALIZED :HYPHEN :CAPITALIZED))
  "Normalized-Cut" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge144 69 semicolon 70> #<edge145 70 "that" 71> #<edge147 71 be 72>)
   (:CAPITALIZED :HYPHEN :CAPITALIZED))
  "Normalized-Cut" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge38 9 have 10> #<edge39 10 suggest 11> #<edge41 11 the 12>)
   (:CAPITALIZED :HYPHEN :CAPITALIZED))
  "Min-Cut" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge24 415 "eif3" 417> #<edge25 415 protein 417> #<edge27 1 sequencer 2>)
   (:PROTEIN :HYPHEN :CAPITALIZED))
  "Max-Cut" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge62 23 upstream 24> #<edge63 24 protein 25>) (:LOWER :COLON)) "function:" :NO-EDGE)
 (((#<edge42 12 importance 13> #<edge43 13 "of" 14> #<edge45 14 "the" 15>)
   (:CAPITALIZED :HYPHEN :CAPITALIZED))
  "Normalized-Cut" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge17 314 wild-type 317> #<edge18 319 "even if" 321> #<edge20 376 "wild-type" 379>)
   (:CAPITALIZED :HYPHEN :CAPITALIZED))
  "Normalized-Cut" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge83 40 COMMA 41> #<edge84 42 digit-sequence 43> #<edge86 44 COMMA 45>)
   (:LOWER :HYPHEN :LOWER))
  "inter-cluster" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge12 285 "close to" 287> #<edge13 285 close-to 287> #<edge14 300 "wild-type" 303>)
   (:LOWER :COLON :CAPITALIZED))
  "funtion:If" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge2 139 "up to" 141> #<edge3 139 up-to 141> #<edge5 174 but-rather 176>)
   (:CAPITALIZED :HYPHEN :CAPITALIZED))
  "Average-Cut" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge36 7 reinitiation 8> #<edge37 8 bio-process 9> #<edge39 10 suggest 11>)
   (:CAPITALIZED :HYPHEN :CAPITALIZED))
  "Ratio-Cut" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge10 274 "such as" 276> #<edge11 274 such-as 276> #<edge13 285 close-to 287>)
   (:LOWER :COLON :CAPITALIZED))
  "function:In" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge0 118 "BM2" 120> #<edge1 118 protein 120> #<edge3 139 up-to 141>)
   (:CAPITALIZED :HYPHEN :CAPITALIZED))
  "Ratio-Cut" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge232 125 "the" 126> #<edge233 125 the 126> #<edge236 127 bio-entity 128>)
   (:PROTEIN :HYPHEN :CUT-ENDURANT))
  "Max-Cut 's" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge214 112 when 113> #<edge215 112 when 113> #<edge217 113 the 114>)
   (:PROTEIN :HYPHEN :CAPITALIZED))
  "Max-Cut" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge204 103 to 104> #<edge205 104 reinitiation 105> #<edge206 105 efficiency 106>)
   (:LOWER :COLON :CAPITALIZED))
  "is:Although" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge200 100 be 101> #<edge201 101 comparative 102> #<edge203 103 "to" 104>)
   (:PROTEIN :HYPHEN :CAPITALIZED))
  "Max-Cut" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge143 68 bio-complex 69> #<edge144 69 semicolon 70> #<edge146 70 that 71>)
   (:PROTEIN :HYPHEN :CAPITALIZED))
  "Max-Cut" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge126 3 on 9> #<edge127 57 "this" 58> #<edge129 58 be 59>) (:PROTEIN :HYPHEN :CAPITALIZED))
  "Max-Cut" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge144 69 semicolon 70> #<edge145 70 "that" 71> #<edge146 70 that 71>)
   (:LOWER :HYPHEN :LOWER))
  "squared-error" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge280 125 bio-entity 128> #<edge281 137 move-something-somewhere 139>
    #<edge283 145 position 148>)
   (:LOWER :HYPHEN :LOWER))
  "paired-end" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge248 136 bio-entity 137> #<edge249 137 be 138> #<edge251 138 move-to 139>
    #<edge252 141 digit-sequence 142> #<edge253 141 number 142>)
   (:LOWER :HYPHEN :LOWER :HYPHEN :LOWER))
  "coefficient-of-variation" MAKE-HYPHENATED-TRIPLE)
 (((#<edge201 101 comparative 102> #<edge202 102 critical 103> #<edge203 103 "to" 104>)
   (:LOWER :HYPHEN :LOWER))
  "paired-ends" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge294 114 start 116> #<edge296 101 critical 103>) (:SINGLE-CAP :SINGLE-DIGIT)) "S1"
  REIFY-TWO-PART-LABEL)
 (((#<edge7 184 by-virtue-of 187> #<edge246 134 the 135>) (:INITIAL :SINGLE-LOWER)) "F.s"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge83 40 COMMA 41> #<edge84 42 digit-sequence 43> :LOWER) (:LOWER :HYPHEN :LOWER))
  "wild-caught" :NO-EDGE)
 (((#<edge309 156 "it" 157> #<edge310 156 pronoun/inanimate 157> #<edge312 158 not 159>)
   (:DIGITS :FORWARD-SLASH :DIGITS))
  "50/57" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge254 142 bio-entity 143> #<edge255 143 downstream-segment 144> #<edge257 144 "of" 145>)
   (:DIGITS :FORWARD-SLASH :DIGITS))
  "68/92" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge195 96 bio-complex 97> #<edge196 97 and 98> #<edge198 98 the 99>)
   (:DIGITS :FORWARD-SLASH :DIGITS))
  "24/92" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge185 89 deictic-location 90> #<edge187 90 that 91>) (:SINGLE-CAP :SINGLE-DIGIT)) "S3"
  REIFY-TWO-PART-LABEL)
 (((#<edge91 50 number 51> #<edge92 52 COMMA 53> #<edge94 54 number 55>) (:LOWER :HYPHEN :LOWER))
  "base-pair" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge60 22 the 23> #<edge61 23 upstream-segment 24> #<edge63 24 protein 25>)
   (:LOWER :HYPHEN :LOWER))
  "base-pairs" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge232 125 "the" 126> #<edge233 125 the 126>) (:PROTEIN :COLON)) "factors:" :NO-EDGE)
 (((#<edge408 224 amino-acid 225> #<edge409 226 COMMA 227> #<edge410 227 modifier 228>)
   (:LOWER :HYPHEN :LOWER))
  "high-quality" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge94 54 number 55> #<edge95 5 hyphenated-pair 8> :LOWER) (:LOWER :FORWARD-SLASH :LOWER))
  "ng/ul" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge6 184 "by virtue of" 187> :UNDER-BAR #<edge3 139 up-to 141>
    #<edge4 174 "but rather" 176>)
   (:RESIDUE-ON-PROTEIN :UNDER-BAR :PROTEIN :COLON))
  "M13_Rev:" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge6 184 "by virtue of" 187> :UNDER-BAR #<edge4 174 "but rather" 176>
    #<edge5 174 but-rather 176>)
   (:RESIDUE-ON-PROTEIN :UNDER-BAR :CAPITALIZED :COLON))
  "M13_For:" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:LOWER #<edge16 314 "wild-type" 317> #<edge17 314 wild-type 317>) (:LOWER :HYPHEN :SINGLE-CAP))
  "lac-Z" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge0 118 "BM2" 120> :UNDER-BAR #<edge1 118 protein 120> #<edge2 139 "up to" 141>)
   (:PROTEIN :UNDER-BAR :PROTEIN :COLON))
  "Pos_Rev:" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge0 118 "BM2" 120> :UNDER-BAR #<edge2 139 "up to" 141> #<edge3 139 up-to 141>)
   (:PROTEIN :UNDER-BAR :CAPITALIZED :COLON))
  "Pos_For:" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge81 38 digit-sequence 39> #<edge82 38 number 39> #<edge84 42 digit-sequence 43>)
   (:DIGITS :FORWARD-SLASH :DIGITS))
  "43/45" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge0 118 "BM2" 120> #<edge1 118 protein 120> #<edge3 139 up-to 141>)
   (:CAPITALIZED :HYPHEN :DIGITS))
  "Forty-five" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge174 74 ability 77> #<edge176 70 be 72>) (:SINGLE-CAP :SINGLE-DIGIT)) "S3"
  REIFY-TWO-PART-LABEL)
 (((#<edge147 71 be 72> #<edge148 72 COMMA 73> #<edge150 73 pronoun/inanimate 74>)
   (:DIGITS :FORWARD-SLASH :DIGITS))
  "92/93" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge132 60 to 61> #<edge133 61 reflect 62> #<edge134 62 "a" 63>) (:LOWER :HYPHEN :LOWER))
  "low-quality" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge25 415 protein 417> #<edge26 415 bio-complex 417> #<edge28 2 study-bio-method 3>)
   (:LOWER :HYPHEN :LOWER))
  "fosmid-end" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge784 408 bio-entity 421> #<edge785 421 by 427> #<edge788 402 to 405>)
   (:PROTEIN :FORWARD-SLASH :HYPHENATED-NUMBER))
  "SNP/5-600" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge713 364 there-exists 372> #<edge714 363 there-exists 372> #<edge715 359 show 372>)
   (:LOWER :HYPHEN :LOWER))
  "multi-species" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge685 372 "in" 373> #<edge687 373 location-of 374>) (:PROTEIN :DIGITS)) "ENr112"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:TILDA #<edge653 319 terminate 325>) (:TILDA :PERCENT)) "~4%" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge590 338 the 339> #<edge591 339 bio-entity 340> #<edge594 341 cause 342>)
   (:DIGITS :FORWARD-SLASH :DIGITS))
  "2.0/2.5" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge578 328 reinitiation 329> #<edge579 329 window 330> #<edge581 331 article-figure 332>)
   (:LOWER :HYPHEN :LOWER))
  "base-pair" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge213 111 that 112> #<edge215 112 when 113>) (:SINGLE-CAP :SINGLE-DIGIT)) "S1"
  REIFY-TWO-PART-LABEL)
 (((#<edge113 31 open-reading-frame 33> #<edge124 13 of 25>) (:DIGITS :FOLD-ENDURANT)) "2.8-fold"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge241 132 even 133> :LOWER) (:PROTEIN :LOWER)) "ABI3730xl" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge224 120 protein 121> #<edge225 120 open-reading-frame 121> #<edge226 121 be 122>)
   (:PROTEIN :HYPHEN :LOWER))
  "SPRI-based" PACKAGE-QUALIFYING-PAIR)
 (((#<edge200 100 be 101> #<edge201 101 comparative 102> #<edge203 103 "to" 104>)
   (:LOWER :HYPHEN :LOWER))
  "paired-end" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge147 71 be 72> #<edge149 73 "it" 74> #<edge151 74 modal 75>)
   (:MIXED :SINGLE-DIGIT :PROTEIN))
  "pCC2fos" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge515 276 bio-entity 281> :UNDER-BAR #<edge516 282 article-figure 284> :UNDER-BAR
    #<edge527 289 site 291>)
   (:FULL :UNDER-BAR :FULL :UNDER-BAR :POINT-MUTATION))
  "CAT_POLY_V17E" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:FULL #<edge510 277 number 279>) (:FULL :DIGITS)) "ACBE00000000" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge436 220 point-mutation 222> #<edge437 220 point-mutation 225>
    #<edge439 218 parentheses 226> #<edge440 202 reinitiation 204> #<edge441 205 bio-entity 207>)
   (:LOWER :HYPHEN :LOWER :HYPHEN :LOWER))
  "depth-of-coverage" MAKE-HYPHENATED-TRIPLE)
 (((:TILDA #<edge365 172 efficiency 174>) (:TILDA :PERCENT)) "~60%" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge18 319 "even if" 321> #<edge19 319 even-if 321> #<edge20 376 "wild-type" 379>)
   (:LOWER :HYPHEN :NUCLEOTIDE))
  "single-nucleotide" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge317 162 between 163> #<edge318 163 "the" 164>) (:DIGITS :SINGLE-CAP)) "1.9X"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge72 30 "the" 31> #<edge73 30 the 31> #<edge75 31 downstream 32>) (:LOWER :HYPHEN :LOWER))
  "sexual-contact" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge312 158 not 159> #<edge313 159 solely 160> #<edge314 160 "the" 161>)
   (:LOWER :HYPHEN :LOWER))
  "within-host" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge287 139 up-to 143> #<edge288 135 start 137> #<edge289 130 detect 132>)
   (:LOWER :HYPHEN :LOWER))
  "within-host" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge182 87 "we" 88> #<edge183 87 pronoun/first/plural 88> #<edge184 88 show 89>)
   (:LOWER :HYPHEN :LOWER))
  "within-host" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge145 70 "that" 71> #<edge146 70 that 71> #<edge147 71 be 72>) (:LOWER :HYPHEN :LOWER))
  "within-host" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge62 23 upstream 24> #<edge63 24 protein 25> #<edge64 24 open-reading-frame 25>)
   (:LOWER :HYPHEN :LOWER))
  "super-spreading" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge379 155 that 156> #<edge380 199 however 200> #<edge381 200 COMMA 201>)
   (:DIGITS :HYPHEN :LOWER))
  "one-third" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge60 22 the 23> #<edge61 23 upstream-segment 24> #<edge62 23 upstream 24>)
   (:LOWER :HYPHEN :LOWER))
  "real-world" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge197 98 "the" 99> #<edge198 98 the 99> #<edge199 99 bio-entity 100>)
   (:LOWER :HYPHEN :LOWER))
  "real-world" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge82 38 number 39> #<edge83 40 COMMA 41> #<edge84 42 digit-sequence 43>)
   (:LOWER :HYPHEN :LOWER))
  "contact-network" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge322 166 stop 167> #<edge323 166 stop-endurant 167> #<edge324 167 bio-entity 168>)
   (:LOWER :HYPHEN :LOWER))
  "low-degree" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge301 87 show 90> #<edge302 85 show 90> #<edge304 153 "this" 154>)
   (:LOWER :FORWARD-SLASH :LOWER))
  "his/her" :NO-EDGE)
 (((#<edge261 147 position-bio-process 148> #<edge262 147 position 148> #<edge263 149 figure 150>)
   (:LOWER :HYPHEN :LOWER))
  "lower-degree" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge243 133 when 134> #<edge244 133 when 134> #<edge245 134 "the" 135>)
   (:LOWER :HYPHEN :LOWER))
  "high-degree" MAKE-HYPHENATED-STRUCTURE)
 (((:CAPITALIZED :EQUAL-SIGN #<edge7 184 by-virtue-of 187> #<edge8 214 "wild-type" 217>
    #<edge10 274 "such as" 276> :ALMOST_EQUAL_TO #<edge1 118 protein 120>)
   (:CAPITALIZED :EQUAL-SIGN :SINGLE-CAP :HYPHEN :DIGITS :ALMOST_EQUAL_TO :MOLECULE))
  "Ne=I−12≈I2" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge2 139 "up to" 141> :EQUAL-SIGN :CAPITALIZED) (:SINGLE-LOWER :EQUAL-SIGN :CAPITALIZED))
  "τ=Iri" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge177 65 of 69> #<edge190 92 distance 93>) (:LOWER :TIME)) "continuous-time"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge79 34 number 35> #<edge93 54 digit-sequence 55>) (:LOWER :TIME)) "discrete-time"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge32 4 "the" 5> #<edge40 11 "the" 12>) (:LOWER :TIME)) "continuous-time"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge8 214 "wild-type" 217> :LOWER) (:FORWARD-SLASH :LOWER)) "/ri" NIL)
 (((#<edge4 174 "but rather" 176> :EQUAL-SIGN #<edge6 184 "by virtue of" 187>
    #<edge7 184 by-virtue-of 187> :EQUAL-SIGN)
   (:LOWER :EQUAL-SIGN :SINGLE-DIGIT :PROTEIN :EQUAL-SIGN))
  "ypred=1riP=" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge4 174 "but rather" 176> :EQUAL-SIGN #<edge6 184 "by virtue of" 187>
    #<edge7 184 by-virtue-of 187>)
   (:SINGLE-CAP :EQUAL-SIGN :SINGLE-DIGIT :FORWARD-SLASH))
  "P=1/" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:LOWER :EQUAL-SIGN :CAPITALIZED #<edge2 139 "up to" 141> :EQUAL-SIGN)
   (:LOWER :EQUAL-SIGN :CAPITALIZED :SINGLE-LOWER :EQUAL-SIGN))
  "yrec=Neτ=" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge7 184 by-virtue-of 187> #<edge8 214 "wild-type" 217> #<edge10 274 "such as" 276>)
   (:LOWER :HYPHEN :LOWER))
  "population-size" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge40 11 "the" 12> #<edge41 11 the 12> :LOWER #<edge42 12 importance 13> #<edge44 13 of 14>)
   (:DIGITS :PLUS-SIGN :LOWER :HYPHEN :SINGLE-DIGIT))
  "1.13+dsfg-1" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:CAPITALIZED #<edge366 176 well 178> :CAPITALIZED) (:CAPITALIZED :HYPHEN :CAPITALIZED))
  "Erdös-Rényi" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge220 116 "of" 117> #<edge221 116 of 117> #<edge222 117 "the" 118>)
   (:LOWER :HYPHEN :LOWER))
  "contact-network" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge354 193 terminate 194> #<edge355 194 and 195> #<edge356 195 "the" 196>)
   (:LOWER :HYPHEN :LOWER))
  "contact-network" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge214 112 when 113> #<edge215 112 when 113> #<edge217 113 the 114>)
   (:LOWER :HYPHEN :LOWER))
  "population-size" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge258 144 of 145> #<edge259 145 pronoun/inanimate 146> #<edge260 146 modifier 147>)
   (:LOWER :HYPHEN :LOWER))
  "contact-network" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge93 54 digit-sequence 55> #<edge94 54 number 55> #<edge95 5 hyphenated-pair 8>)
   (:CAPITALIZED :HYPHEN :LOWER))
  "Contact-network" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge273 94 bio-complex 97> #<edge274 98 bio-entity 100> #<edge275 104 efficiency 106>)
   (:LOWER :HYPHEN :LOWER))
  "cross-species" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge199 99 bio-entity 100> #<edge200 100 be 101> :LOWER) (:LOWER :HYPHEN :LOWER))
  "post-mortem" :NO-EDGE)
 (((#<edge179 57 believe 60> #<edge181 86 COMMA 87>) (:SINGLE-CAP :DIGITS)) "O86"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:SINGLE-LOWER #<edge93 54 digit-sequence 55>) (:SINGLE-LOWER :COLON)) "i:" :NO-EDGE)
 (((:OPEN-ANGLE-BRACKET #<edge192 94 "the" 95>) (:OPEN-ANGLE-BRACKET :DIGITS)) "<0.001"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge332 172 reinitiation 173> #<edge334 176 how 177>) (:SINGLE-CAP :SINGLE-DIGIT)) "H5"
  REIFY-TWO-PART-LABEL)
 (((#<edge254 142 bio-entity 143> #<edge256 143 downstream 144>) (:SINGLE-CAP :SINGLE-DIGIT)) "S1"
  REIFY-TWO-PART-LABEL)
 (((#<edge1 118 protein 120> :LOWER) (:PROTEIN :LOWER)) "anti-inflamatories"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge353 192 bio-complex 193> #<edge354 193 terminate 194> #<edge356 195 "the" 196>)
   (:LOWER :HYPHEN :LOWER))
  "pre-hatch" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge264 149 article-figure 150> #<edge265 150 digit-sequence 151> #<edge266 150 number 151>)
   (:LOWER :HYPHEN :LOWER))
  "immunodepression-mediated" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge104 4 bio-process 9> #<edge105 9 suggest 11> #<edge106 11 importance 13>)
   (:CAPITALIZED :HYPHEN :LOWER))
  "Two-tailed" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge78 34 digit-sequence 35> #<edge79 34 number 35> #<edge81 38 digit-sequence 39>)
   (:CAPITALIZED :HYPHEN :LOWER))
  "Two-sample" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge410 227 modifier 228> #<edge411 228 reinitiation 229> #<edge412 229 site 230>)
   (:PROTEIN :HYPHEN :CAPITALIZED))
  "NA-Star" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge376 157 be 159> #<edge378 153 suggest 155>) (:SINGLE-CAP :SINGLE-DIGIT)) "S1"
  REIFY-TWO-PART-LABEL)
 (((:CAPITALIZED #<edge364 166 bio-entity 168> :CAPITALIZED) (:CAPITALIZED :HYPHEN :CAPITALIZED))
  "Madin-Darby" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge185 89 deictic-location 90> #<edge186 90 "that" 91> #<edge187 90 that 91>)
   (:FULL :FORWARD-SLASH :FULL))
  "WHO/CDC" MAKE-HYPHENATED-PAIR)
 (((:FULL #<edge167 67 lambda-expression 68> :CAPITALIZED) (:FULL :FORWARD-SLASH :CAPITALIZED))
  "IOC/Fiocruz" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:CAPITALIZED #<edge25 415 protein 417> #<edge27 1 sequencer 2>) (:CAPITALIZED :HYPHEN :LOWER))
  "Dacron-swab" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge77 32 open-reading-frame 33> #<edge78 34 digit-sequence 35> #<edge79 34 number 35>)
   (:LOWER :HYPHEN :LOWER))
  "in-hospital" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge91 50 number 51> #<edge92 52 COMMA 53> #<edge94 54 number 55>) (:DIGITS :HYPHEN :LOWER))
  "160-bed" MAKE-HYPHENATED-STRUCTURE)
 (((:FULL #<edge84 42 digit-sequence 43> #<edge86 44 COMMA 45>) (:FULL :HYPHEN :PROTEIN))
  "HCI-INCa" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge28 2 study-bio-method 3> #<edge29 2 study-data 3> #<edge33 4 the 5>
    #<edge34 5 terminate 6> #<edge36 7 reinitiation 8>)
   (:PROTEIN :HYPHEN :SINGLE-CAP :HYPHEN :PROTEIN))
  "HC-I-INCa" MAKE-HYPHENATED-TRIPLE)
 (((#<edge17 314 wild-type 317> #<edge18 319 "even if" 321> #<edge22 393 "due to" 395>)
   (:CAPITALIZED :HYPHEN :SINGLE-CAP))
  "Câncer-I" MAKE-HYPHENATED-STRUCTURE)
 (((:SHARP-SIGN #<edge70 29 "of" 30> #<edge71 29 of 30> #<edge72 30 "the" 31>)
   (:SHARP-SIGN :DIGITS :FORWARD-SLASH :DIGITS))
  "#18/2010" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge16 314 "wild-type" 317> :EQUAL-SIGN #<edge18 319 "even if" 321>)
   (:LOWER :EQUAL-SIGN :DIGITS))
  "id=2380" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:LOWER #<edge11 274 such-as 276> :LOWER :UNDER-BAR #<edge13 285 close-to 287>)
   (:LOWER :FORWARD-SLASH :LOWER :UNDER-BAR :LOWER))
  "br/conteudo_view" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge179 57 believe 60> #<edge180 85 however 86> #<edge181 86 COMMA 87>)
   (:LOWER :HYPHEN :LOWER))
  "in-depth" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge148 72 COMMA 73> #<edge149 73 "it" 74> #<edge150 73 pronoun/inanimate 74>)
   (:LOWER :HYPHEN :LOWER))
  "age-matched" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge3 139 up-to 141> #<edge5 174 but-rather 176>) (:PROTEIN :BIO-ENTITY)) "anti-H1N1pdm"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge59 22 "the" 23> #<edge60 22 the 23> #<edge62 23 upstream 24>) (:LOWER :HYPHEN :LOWER))
  "follow-up" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge162 83 terminate 84> #<edge163 58 believe 60> #<edge164 60 reflect 62>)
   (:LOWER :HYPHEN :LOWER))
  "age-matched" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge77 32 open-reading-frame 33> #<edge78 34 digit-sequence 35> #<edge79 34 number 35>)
   (:LOWER :HYPHEN :LOWER))
  "placebo-treated" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge85 42 number 43> #<edge86 44 COMMA 45> #<edge87 46 digit-sequence 47>)
   (:LOWER :HYPHEN :LOWER))
  "multi-organ" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge601 345 amino-acid 346> #<edge602 346 fragment 347> #<edge603 347 "to" 348>
    #<edge604 347 to 348> #<edge606 349 snap 350> #<edge29 2 study-data 3>)
   (:SINGLE-CAP :FORWARD-SLASH :CAPITALIZED :FORWARD-SLASH :DIGITS :-LIKE))
  "A/California/07-like" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge538 294 if 295> #<edge561 311 always 312>) (:LOWER :UNIT-OF-MEASURE)) "high-IC50"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge320 164 start 165> #<edge321 165 and 166> #<edge322 166 stop 167>)
   (:CAPITALIZED :HYPHEN :LOWER))
  "Co-infections" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge428 242 at 243> #<edge406 223 digit-sequence 224> #<edge407 223 number 224>
    #<edge409 226 COMMA 227>)
   (:AMOUNT-OF-TIME :SINGLE-DIGIT :FORWARD-SLASH :DIGITS))
  "5645s3/09" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge367 178 bio-complex 180> #<edge309 156 "it" 157> #<edge310 156 pronoun/inanimate 157>
    #<edge312 158 not 159>)
   (:AMOUNT-OF-TIME :SINGLE-DIGIT :FORWARD-SLASH :DIGITS))
  "5645s3/09" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge262 147 position 148> #<edge264 149 article-figure 150>) (:SINGLE-CAP :SINGLE-DIGIT))
  "H1" REIFY-TWO-PART-LABEL)
 (((#<edge7 184 by-virtue-of 187> #<edge235 126 stop-endurant 127>) (:PROTEIN :SINGLE-CAP)) "P100S"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge214 112 when 113> #<edge215 112 when 113> #<edge217 113 the 114>)
   (:FULL :FORWARD-SLASH :DIGITS))
  "CA/04" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge266 150 number 151> #<edge207 107 figure 108> #<edge208 107 article-figure 108>
    #<edge210 108 number 109>)
   (:AMOUNT-OF-TIME :SINGLE-DIGIT :FORWARD-SLASH :DIGITS))
  "5645s2/09" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge172 79 movement 82> #<edge148 72 COMMA 73> #<edge149 73 "it" 74> #<edge151 74 modal 75>)
   (:AMOUNT-OF-TIME :SINGLE-DIGIT :FORWARD-SLASH :DIGITS))
  "5645s3/09" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge171 79 limit 81> #<edge138 65 "of" 66> #<edge139 65 of 66> #<edge141 66 the 67>)
   (:AMOUNT-OF-TIME :SINGLE-DIGIT :FORWARD-SLASH :DIGITS))
  "5645s2/09" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge89 48 COMMA 49> #<edge62 23 upstream 24> #<edge63 24 protein 25> #<edge65 25 and 26>)
   (:AMOUNT-OF-TIME :SINGLE-DIGIT :FORWARD-SLASH :DIGITS))
  "5645s3/09" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge88 46 number 47> #<edge52 18 "the" 19> #<edge53 18 the 19> #<edge55 19 stop-endurant 20>)
   (:AMOUNT-OF-TIME :SINGLE-DIGIT :FORWARD-SLASH :DIGITS))
  "5645s2/09" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge150 73 pronoun/inanimate 74> #<edge152 75 be 76>) (:SINGLE-CAP :SINGLE-DIGIT)) "S1"
  REIFY-TWO-PART-LABEL)
 (((#<edge101 53 square-brackets 56> #<edge102 1 study-bio-method 3> #<edge104 4 bio-process 9>)
   (:LOWER :HYPHEN :LOWER))
  "time-points" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge34 5 terminate 6> #<edge35 6 HYPHEN 7> #<edge36 7 reinitiation 8>)
   (:LOWER :FORWARD-SLASH :LOWER))
  "signs/symptoms" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge113 31 open-reading-frame 33> #<edge114 30 open-reading-frame 33>) (:LOWER :COLON))
  "range:" :NO-EDGE)
 (((#<edge91 50 number 51> #<edge93 54 digit-sequence 55> #<edge94 54 number 55> :MIXED
    #<edge96 33 square-brackets 36>)
   (:PROTEIN :SINGLE-DIGIT :FORWARD-SLASH :MIXED :SINGLE-DIGIT))
  "PaO2/FiO2" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge14 300 "wild-type" 303> #<edge15 300 wild-type 303> #<edge16 314 "wild-type" 317>)
   (:LOWER :HYPHEN :LOWER))
  "broad-spectrum" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge359 191 bio-complex 193> #<edge360 195 bio-entity 197> #<edge362 189 between 191>)
   (:SINGLE-DIGIT :FORWARD-SLASH :DIGITS))
  "5/18" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge447 230 bio-use 233> #<edge449 235 bio-entity 238>) (:SINGLE-CAP :SINGLE-DIGIT)) "S5"
  REIFY-TWO-PART-LABEL)
 (((#<edge442 214 site 218> #<edge444 228 site 230>) (:SINGLE-CAP :SINGLE-DIGIT)) "S4"
  REIFY-TWO-PART-LABEL)
 (((#<edge437 220 point-mutation 225> #<edge439 218 parentheses 226>) (:SINGLE-CAP :SINGLE-DIGIT))
  "S3" REIFY-TWO-PART-LABEL)
 (((#<edge431 243 lower 244> #<edge433 244 efficiency 245>) (:SINGLE-CAP :SINGLE-DIGIT)) "S1"
  REIFY-TWO-PART-LABEL)
 (((#<edge356 195 "the" 196> #<edge358 196 bio-entity 197>) (:SINGLE-CAP :SINGLE-DIGIT)) "S5"
  REIFY-TWO-PART-LABEL)
 (((#<edge288 135 start 137> #<edge289 130 detect 132> #<edge291 124 of 128> #<edge293 116 of 121>)
   (:PROTEIN :FORWARD-SLASH :LOWER :SINGLE-DIGIT))
  "neutrophils/mm3" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:OPEN-ANGLE-BRACKET #<edge287 139 up-to 143>) (:OPEN-ANGLE-BRACKET :DIGITS)) "<500"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge228 123 downstream-segment 124> #<edge230 124 "of" 125>) (:SINGLE-CAP :SINGLE-DIGIT))
  "S4" REIFY-TWO-PART-LABEL)
 (((:TILDA #<edge175 73 ability 77>) (:TILDA :PERCENT)) "∼92%" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge127 57 "this" 58> #<edge129 58 be 59>) (:SINGLE-CAP :SINGLE-DIGIT)) "S3"
  REIFY-TWO-PART-LABEL)
 (((#<edge138 65 "of" 66> #<edge140 66 "the" 67>) (:SINGLE-CAP :SINGLE-DIGIT)) "S1"
  REIFY-TWO-PART-LABEL)
 (((#<edge72 30 "the" 31> #<edge74 31 downstream-segment 32>) (:SINGLE-CAP :SINGLE-DIGIT)) "S1"
  REIFY-TWO-PART-LABEL)
 (((#<edge30 3 "on" 4> #<edge31 3 on 4> #<edge33 4 the 5>) (:LOWER :HYPHEN :LOWER)) "high-risk"
  MAKE-HYPHENATED-STRUCTURE)
 (((#<edge10 274 "such as" 276> :LOWER #<edge123 15 close 16> #<edge125 9 suggest 13>)
   (:AVIAN-FLU :LOWER :HYPHEN :LOWER))
  "H1N1pdm-related" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge7 184 by-virtue-of 187> :LOWER) (:AVIAN-FLU :LOWER)) "H1N1pdm"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge83 40 COMMA 41> #<edge84 42 digit-sequence 43> #<edge85 42 number 43>)
   (:LOWER :FORWARD-SLASH :LOWER))
  "fall/winter" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge4 174 "but rather" 176> :LOWER) (:AVIAN-FLU :LOWER)) "H1N1pdm"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:MIXED #<edge82 38 number 39> #<edge17 314 wild-type 317> #<edge83 40 COMMA 41>
    #<edge84 42 digit-sequence 43>)
   (:MIXED :HYPHEN :PROTEIN :FORWARD-SLASH :CAPITALIZED))
  "rhEFN-B3/Fc" PACKAGE-SLASHED-SEQUENCE)
 (((:MIXED #<edge75 31 downstream 32> #<edge13 285 close-to 287> #<edge76 32 protein 33>
    #<edge77 32 open-reading-frame 33>)
   (:MIXED :HYPHEN :PROTEIN :FORWARD-SLASH :CAPITALIZED))
  "rmEFN-B2/Fc" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge65 25 and 26> #<edge66 26 "the" 27> #<edge9 214 wild-type 217>)
   (:CAPITALIZED :HYPHEN :BIO-ENTITY))
  "Sc-NiV-FC2" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge56 20 bio-entity 21> #<edge59 22 "the" 23>) (:MIXED :DIGITS)) "mAb102.4"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:FULL #<edge311 157 be 158>) (:FULL :DIGITS)) "IX81" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge305 153 this 154> #<edge306 154 suggest 155> #<edge307 155 "that" 156>)
   (:LOWER :HYPHEN :LOWER))
  "post-infection" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge230 124 "of" 125> #<edge231 124 of 125>) (:CAPITALIZED :COLON)) "Model:" :NO-EDGE)
 (((#<edge121 15 close 16> #<edge122 14 proximity 25> #<edge123 15 close 16>)
   (:LOWER :FORWARD-SLASH :LOWER))
  "fusion/infection" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge110 18 bio-entity 21> #<edge111 23 open-reading-frame 25>
    #<edge112 22 open-reading-frame 25>)
   (:FULL :HYPHEN :CAPITALIZED))
  "DEAE-Dextran" MAKE-HYPHENATED-PAIR)
 (((#<edge62 23 upstream 24> #<edge63 24 protein 25> #<edge64 24 open-reading-frame 25>)
   (:CAPITALIZED :HYPHEN :CAPITALIZED))
  "Beckman-Coulter" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge186 90 "that" 91> #<edge187 90 that 91> #<edge190 92 distance 93>)
   (:SINGLE-DIGIT :COLON :DIGITS))
  "1:25,000" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge173 82 following 84> #<edge175 73 ability 77>) (:SINGLE-CAP :SINGLE-DIGIT)) "F1"
  REIFY-TWO-PART-LABEL)
 (((#<edge163 58 believe 60> #<edge164 60 reflect 62> #<edge167 67 lambda-expression 68>)
   (:SINGLE-DIGIT :COLON :DIGITS))
  "1:25,000" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge120 14 proximity 21> #<edge121 15 close 16> #<edge122 14 proximity 25>)
   (:SINGLE-DIGIT :HYPHEN :LOWER))
  "2-mercaptoethanol" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge43 13 "of" 14> #<edge44 13 of 14> #<edge45 14 "the" 15>) (:PROTEIN :HYPHEN :MIXED))
  "Tris-HCl" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge520 247 circumstance 250> #<edge521 257 bio-entity 259> #<edge522 256 bio-entity 259>)
   (:CAPITALIZED :HYPHEN :MIXED))
  "Hepes-NaCl" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge436 220 point-mutation 222> #<edge437 220 point-mutation 225> #<edge438 219 figure 225>)
   (:CAPITALIZED :HYPHEN :MIXED))
  "Hepes-NaCl" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge431 243 lower 244> #<edge432 243 lower-note 244> :LOWER)
   (:WILD-TYPE :FORWARD-SLASH :LOWER))
  "wt/vol" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge205 104 reinitiation 105> #<edge206 105 efficiency 106> #<edge209 108 digit-sequence 109>
    #<edge210 108 number 109> #<edge213 111 that 112>)
   (:SINGLE-DIGIT :COLON :DIGITS :COLON :DIGITS))
  "1:0.2:0.8" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge108 14 proximity 17> #<edge109 19 bio-entity 21> #<edge111 23 open-reading-frame 25>)
   (:LOWER :HYPHEN :LOWER))
  "flat-bottom" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge588 337 that 338> #<edge589 338 "the" 339> #<edge590 338 the 339>
    #<edge591 339 bio-entity 340> :LOWER)
   (:LOWER :HYPHEN :SINGLE-LOWER :HYPHEN :LOWER))
  "red-d-galactopyranoside" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge472 256 downstream 257> #<edge473 257 bio-entity 258> #<edge475 260 figure 261>)
   (:SINGLE-DIGIT :COLON :SINGLE-DIGIT))
  "1:1" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge382 201 whilst 202> :ASTERISK #<edge383 202 modifier 203>)
   (:DIGITS :ASTERISK :SINGLE-CAP))
  "31°C" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:MIXED #<edge356 195 "the" 196> #<edge32 4 "the" 5>) (:MIXED :DIGITS :INITIAL)) "vCB21R."
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:MIXED #<edge341 178 the 179>) (:MIXED :DIGITS)) "vTF7.3" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:MIXED #<edge151 74 modal 75>) (:MIXED :POINT-MUTATION)) "vCB21R" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:MIXED #<edge114 30 open-reading-frame 33>) (:MIXED :DIGITS)) "vTF7.3"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge544 297 modifier 298> #<edge545 298 "of" 299> #<edge548 299 a 300>)
   (:SINGLE-DIGIT :COLON :DIGITS))
  "1:25,000" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge531 255 bio-entity 264> #<edge533 266 at 285>) (:SINGLE-CAP :SINGLE-DIGIT)) "F1"
  REIFY-TWO-PART-LABEL)
 (((#<edge521 257 bio-entity 259> #<edge522 256 bio-entity 259> #<edge525 268 bio-entity 273>)
   (:SINGLE-DIGIT :COLON :DIGITS))
  "1:25,000" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge478 261 number 262> #<edge479 262 amino-acid 263> #<edge480 264 COMMA 265>)
   (:SINGLE-DIGIT :HYPHEN :LOWER))
  "2-mercaptoethanol" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge420 235 native 236> #<edge421 236 reinitiation 237> #<edge422 237 bio-entity 238>)
   (:PROTEIN :HYPHEN :MIXED))
  "Tris-HCl" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge304 153 "this" 154> #<edge305 153 this 154> #<edge306 154 suggest 155>)
   (:CAPITALIZED :HYPHEN :PROTEIN))
  "Agarose-Avidin" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge283 145 position 148> #<edge351 191 "the" 192>) (:DIGITS :HALF)) "one-half"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge251 138 move-to 139> #<edge252 141 digit-sequence 142> #<edge253 141 number 142>)
   (:PROTEIN :HYPHEN :MIXED))
  "Tris-HCl" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge75 31 downstream 32> #<edge4 174 "but rather" 176>) (:RESIDUE-ON-PROTEIN :PROTEIN))
  "T25cm2" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge379 155 that 156> #<edge381 200 COMMA 201>) (:SINGLE-CAP :SINGLE-DIGIT)) "D3"
  REIFY-TWO-PART-LABEL)
 (((#<edge330 170 that 171> #<edge332 172 reinitiation 173>) (:SINGLE-CAP :SINGLE-DIGIT)) "D2"
  REIFY-TWO-PART-LABEL)
 (((#<edge230 124 "of" 125> #<edge232 125 "the" 126>) (:SINGLE-CAP :SINGLE-DIGIT)) "D1"
  REIFY-TWO-PART-LABEL)
 (((#<edge331 171 affect 172> :CAPITALIZED) (:SINGLE-DIGIT :CAPITALIZED)) "4Aand"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge188 91 "the" 92> #<edge189 91 the 92> #<edge19 319 even-if 321>)
   (:CAPITALIZED :HYPHEN :BIO-ENTITY))
  "Sc-NiV-FC2" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge11 274 such-as 276> #<edge152 75 be 76> #<edge153 76 ability 77>)
   (:ORGANIZATION :HYPHEN :CAPITALIZED))
  "National Cancer Institute-Frederick" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge93 54 digit-sequence 55> #<edge94 54 number 55> #<edge3 139 up-to 141>)
   (:SINGLE-CAP :HYPHEN :INITIAL))
  "L-F." MAKE-HYPHENATED-STRUCTURE)
 (((#<edge57 21 "of" 22> #<edge59 22 "the" 23> #<edge60 22 the 23>
    #<edge61 23 upstream-segment 24>)
   (:SINGLE-CAP :SINGLE-DIGIT :HYPHEN :LOWER))
  "F1-specific" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge186 90 "that" 91> #<edge187 90 that 91> #<edge189 91 the 92>) (:FULL :HYPHEN :DIGITS))
  "DMEM-10" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge59 22 "the" 23> #<edge61 23 upstream-segment 24> #<edge62 23 upstream 24>
    #<edge64 24 open-reading-frame 25>)
   (:FULL :SINGLE-DIGIT :SINGLE-CAP :SINGLE-DIGIT))
  "HOST4X4" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:MIXED #<edge27 1 sequencer 2> #<edge3 139 up-to 141>) (:MIXED :HYPHEN :CELL-LINE)) "HuTK-143B"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge302 85 show 90> #<edge304 153 "this" 154>) (:SINGLE-CAP :SINGLE-DIGIT)) "F0"
  REIFY-TWO-PART-LABEL)
 (((#<edge224 120 protein 121> #<edge226 121 be 122>) (:SINGLE-CAP :SINGLE-DIGIT)) "F0"
  REIFY-TWO-PART-LABEL)
 (((#<edge65 25 and 26> #<edge67 26 the 27>) (:SINGLE-CAP :SINGLE-DIGIT)) "F0"
  REIFY-TWO-PART-LABEL)
 (((#<edge530 267 bio-entity 285> #<edge532 285 close-to 291>) (:SINGLE-CAP :SINGLE-DIGIT)) "F1"
  REIFY-TWO-PART-LABEL)
 (((#<edge526 267 bio-entity 273> #<edge528 288 site 291>) (:SINGLE-CAP :SINGLE-DIGIT)) "F0"
  REIFY-TWO-PART-LABEL)
 (((#<edge509 268 hyphenated-pair 271> #<edge511 260 figure 263>) (:SINGLE-CAP :SINGLE-DIGIT)) "F0"
  REIFY-TWO-PART-LABEL)
 (((#<edge407 223 number 224> #<edge408 224 amino-acid 225> #<edge410 227 modifier 228>)
   (:FULL :HYPHEN :SINGLE-DIGIT))
  "HPIV-2" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge348 188 distance 189> #<edge349 189 between 190> #<edge351 191 "the" 192>)
   (:FULL :HYPHEN :SINGLE-DIGIT))
  "HPIV-2" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge323 166 stop-endurant 167> #<edge325 167 bio-entity 168>) (:FULL :SINGLE-DIGIT)) "SV5"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge267 85 subordinate-conjunction 87> #<edge268 141 bio-entity 143>
    #<edge270 148 parentheses 152> #<edge271 95 bio-complex 97> #<edge272 95 lambda-expression 96>)
   (:LOWER :HYPHEN :LOWER :HYPHEN :LOWER))
  "cell-to-cell" MAKE-HYPHENATED-TRIPLE)
 (((#<edge15 300 wild-type 303> #<edge253 141 number 142>) (:PROTEIN :SINGLE-CAP)) "p2E"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge335 177 well-bio-process 178> #<edge336 177 well-endurant 178>
    #<edge337 177 well-adverbial 178>)
   (:LOWER :HYPHEN :LOWER))
  "well-characterized" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge285 104 efficiency 110> :PERIOD #<edge269 106 parentheses 110>)
   (:RESIDUE-ON-PROTEIN :PERIOD :SINGLE-DIGIT))
  "m120.4" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge260 146 modifier 147> #<edge261 147 position-bio-process 148>
    #<edge262 147 position 148>)
   (:LOWER :HYPHEN :LOWER))
  "well-characterized" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge545 298 "of" 299> #<edge546 298 of 299> #<edge548 299 a 300>)
   (:PROTEIN :HYPHEN :SINGLE-DIGIT))
  "HR-2" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge397 213 the 214> #<edge398 217 site 218> #<edge400 219 article-figure 220>)
   (:PROTEIN :HYPHEN :SINGLE-DIGIT))
  "HR-2" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge377 157 be 160> #<edge378 153 suggest 155> #<edge380 199 however 200>)
   (:PROTEIN :HYPHEN :SINGLE-DIGIT))
  "HR-1" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge342 179 bio-complex 180> #<edge343 180 modal 181> #<edge344 181 be 182>
    #<edge345 182 tethere 183> #<edge347 187 the 188>)
   (:DIGITS :HYPHEN :LOWER :HYPHEN :LOWER))
  "six-helix-bundle" MAKE-HYPHENATED-TRIPLE)
 (((#<edge195 96 bio-complex 97> #<edge196 97 and 98> #<edge197 98 "the" 99> #<edge198 98 the 99>
    #<edge200 100 be 101>)
   (:DIGITS :HYPHEN :LOWER :HYPHEN :LOWER))
  "six-helix-bundle" MAKE-HYPHENATED-TRIPLE)
 (((#<edge190 92 distance 93> #<edge191 93 between 94> #<edge192 94 "the" 95>)
   (:LOWER :HYPHEN :LOWER))
  "post-fusion" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge35 6 HYPHEN 7> #<edge36 7 reinitiation 8> #<edge37 8 bio-process 9>)
   (:LOWER :HYPHEN :LOWER))
  "lentivirus-based" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge30 3 "on" 4> #<edge31 3 on 4> #<edge32 4 "the" 5>) (:LOWER :HYPHEN :LOWER))
  "reporter-gene" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge1001 inactive, resource 1001> #<edge1003 inactive, resource 1003>)
   (:SINGLE-CAP :SINGLE-DIGIT))
  "F0" REIFY-TWO-PART-LABEL)
 (((#<edge972 inactive, resource 972> #<edge974 inactive, resource 974>)
   (:SINGLE-CAP :SINGLE-DIGIT))
  "F0" REIFY-TWO-PART-LABEL)
 (((#<edge735 398 fragment 399> #<edge737 399 be 400>) (:SINGLE-CAP :SINGLE-DIGIT)) "F0"
  REIFY-TWO-PART-LABEL)
 (((#<edge722 388 of 389> #<edge724 389 downstream 390>) (:SINGLE-CAP :SINGLE-DIGIT)) "F2"
  REIFY-TWO-PART-LABEL)
 (((#<edge718 385 such 386> #<edge720 387 location-of 388>) (:SINGLE-CAP :SINGLE-DIGIT)) "F1"
  REIFY-TWO-PART-LABEL)
 (((#<edge714 363 there-exists 372> #<edge716 384 as 385>) (:SINGLE-CAP :SINGLE-DIGIT)) "F0"
  REIFY-TWO-PART-LABEL)
 (((#<edge754 412 in 413> :PERIOD) (:POINT-MUTATION :PERIOD)) "7C." REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge497 280 bio-entity 281> #<edge499 282 figure 283>) (:SINGLE-CAP :SINGLE-DIGIT)) "F0"
  REIFY-TWO-PART-LABEL)
 (((#<edge99 45 square-brackets 48> #<edge100 49 square-brackets 52>
    #<edge101 53 square-brackets 56>)
   (:LOWER :HYPHEN :LOWER))
  "lentivirus-based" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge661 305 locate 307> #<edge662 319 event-relation 325> #<edge663 309 event-relation 325>)
   (:LOWER :HYPHEN :LOWER))
  "miss-leading" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge641 349 direction 351> #<edge643 353 site 356>) (:SINGLE-CAP :SINGLE-DIGIT)) "F0"
  REIFY-TWO-PART-LABEL)
 (((#<edge330 170 that 171> #<edge332 172 reinitiation 173>) (:SINGLE-CAP :SINGLE-DIGIT)) "F0"
  REIFY-TWO-PART-LABEL)
 (((#<edge142 67 tethere 68> #<edge143 68 bio-complex 69> #<edge144 69 semicolon 70>)
   (:LOWER :HYPHEN :LOWER))
  "reporter-gene" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge7 184 by-virtue-of 187> #<edge139 65 of 66> #<edge140 66 "the" 67>)
   (:VIRUS :HYPHEN :LOWER))
  "vaccinia virus-based" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge136 63 restrict 64> #<edge137 64 mobility 65> #<edge138 65 "of" 66>)
   (:LOWER :HYPHEN :LOWER))
  "well-characterized" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge436 220 point-mutation 222> #<edge438 219 figure 225>) (:SINGLE-CAP :SINGLE-DIGIT)) "F0"
  REIFY-TWO-PART-LABEL)
 (((#<edge353 192 bio-complex 193> #<edge355 194 and 195>) (:SINGLE-CAP :SINGLE-DIGIT)) "F0"
  REIFY-TWO-PART-LABEL)
 (((#<edge338 177 modifier 178> #<edge340 178 "the" 179>) (:SINGLE-CAP :SINGLE-DIGIT)) "F1"
  REIFY-TWO-PART-LABEL)
 (((#<edge320 164 start 165> #<edge322 166 stop 167>) (:SINGLE-CAP :SINGLE-DIGIT)) "F0"
  REIFY-TWO-PART-LABEL)
 (((#<edge225 120 open-reading-frame 121> #<edge227 122 place 123>) (:SINGLE-CAP :SINGLE-DIGIT))
  "F0" REIFY-TWO-PART-LABEL)
 (((#<edge183 87 pronoun/first/plural 88> #<edge185 89 deictic-location 90>)
   (:SINGLE-CAP :SINGLE-DIGIT))
  "F0" REIFY-TWO-PART-LABEL)
 (((#<edge97 37 square-brackets 40> #<edge99 45 square-brackets 48>) (:SINGLE-CAP :SINGLE-DIGIT))
  "F1" REIFY-TWO-PART-LABEL)
 (((#<edge80 36 COMMA 37> #<edge82 38 number 39>) (:SINGLE-CAP :SINGLE-DIGIT)) "F0"
  REIFY-TWO-PART-LABEL)
 (((#<edge438 219 figure 225> #<edge35 6 HYPHEN 7> #<edge440 202 reinitiation 204>)
   (:SINGLE-CAP :BIO-ENTITY :SINGLE-DIGIT))
  "FΔCt4" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge413 230 modal 231> #<edge414 231 be 232> #<edge416 233 when 234>)
   (:SINGLE-DIGIT :COLON :SINGLE-DIGIT))
  "1:1" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge399 219 figure 220> #<edge401 220 digit-sequence 221>) (:SINGLE-CAP :SINGLE-DIGIT)) "F0"
  REIFY-TWO-PART-LABEL)
 (((#<edge394 211 near 212> #<edge396 213 "the" 214>) (:SINGLE-CAP :SINGLE-DIGIT)) "F1"
  REIFY-TWO-PART-LABEL)
 (((#<edge315 160 the 161> #<edge31 3 on 4> #<edge317 162 between 163>)
   (:SINGLE-CAP :BIO-ENTITY :SINGLE-DIGIT))
  "FΔCt6" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge303 90 that 91> #<edge27 1 sequencer 2> #<edge305 153 this 154>)
   (:SINGLE-CAP :BIO-ENTITY :SINGLE-DIGIT))
  "FΔCt6" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge299 93 between 97> #<edge25 415 protein 417> #<edge301 87 show 90>)
   (:SINGLE-CAP :BIO-ENTITY :SINGLE-DIGIT))
  "FΔCt5" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge295 103 to 110> #<edge23 393 due-to 395> #<edge297 100 critical 103>)
   (:SINGLE-CAP :BIO-ENTITY :SINGLE-DIGIT))
  "FΔCt4" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge291 124 of 128> #<edge21 376 wild-type 379> #<edge293 116 of 121>)
   (:SINGLE-CAP :BIO-ENTITY :SINGLE-DIGIT))
  "FΔCt3" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge268 141 bio-entity 143> #<edge270 148 parentheses 152>) (:SINGLE-CAP :SINGLE-DIGIT)) "F0"
  REIFY-TWO-PART-LABEL)
 (((#<edge264 149 article-figure 150> #<edge266 150 number 151>) (:SINGLE-CAP :SINGLE-DIGIT)) "F1"
  REIFY-TWO-PART-LABEL)
 (((#<edge239 130 be 131> #<edge241 132 even 133>) (:SINGLE-CAP :SINGLE-DIGIT)) "F0"
  REIFY-TWO-PART-LABEL)
 (((#<edge191 93 between 94> #<edge193 94 the 95>) (:SINGLE-CAP :SINGLE-DIGIT)) "F1"
  REIFY-TWO-PART-LABEL)
 (((#<edge177 65 of 69> #<edge178 62 mobility 69> #<edge179 57 believe 60>)
   (:PROTEIN :HYPHEN :LOWER))
  "Avidin-agarose" PACKAGE-QUALIFYING-PAIR)
 (((#<edge212 111 "that" 112> #<edge13 285 close-to 287> #<edge214 112 when 113>)
   (:SINGLE-CAP :BIO-ENTITY :SINGLE-DIGIT))
  "FΔCt2" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge208 107 article-figure 108> #<edge11 274 such-as 276> #<edge210 108 number 109>)
   (:SINGLE-CAP :BIO-ENTITY :SINGLE-DIGIT))
  "FΔCt1" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge135 62 a 63> #<edge9 214 wild-type 217> #<edge137 64 mobility 65>)
   (:SINGLE-CAP :BIO-ENTITY :SINGLE-DIGIT))
  "FΔCt7" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge130 59 believe 60> #<edge7 184 by-virtue-of 187> #<edge132 60 to 61>)
   (:SINGLE-CAP :BIO-ENTITY :SINGLE-DIGIT))
  "FΔCt1" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge556 307 downstream 308> :PERIOD #<edge524 271 bio-entity 273>)
   (:RESIDUE-ON-PROTEIN :PERIOD :SINGLE-DIGIT))
  "m102.4" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge475 260 figure 261> :PERIOD #<edge450 234 bio-entity 238>)
   (:RESIDUE-ON-PROTEIN :PERIOD :SINGLE-DIGIT))
  "m102.4" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge426 241 albeit 242> :PERIOD #<edge421 236 reinitiation 237>)
   (:RESIDUE-ON-PROTEIN :PERIOD :SINGLE-DIGIT))
  "m102.4" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge11 274 such-as 276> #<edge413 230 modal 231>) (:PROTEIN :LOWER)) "anti-henipavirus"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge298 98 critical 103> #<edge299 93 between 97> #<edge300 88 show 90>)
   (:SINGLE-DIGIT :HYPHEN :LOWER))
  "6-helix" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge268 141 bio-entity 143> :TRADE_MARK_SIGN) (:CAPITALIZED :TRADE_MARK_SIGN)) "Fuzeon™"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge246 134 the 135> #<edge247 135 start 136> #<edge248 136 bio-entity 137>
    #<edge250 138 move-something-somewhere 139>)
   (:MIXED :HYPHEN :PROTEIN :SINGLE-DIGIT))
  "NiV-FC2" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:FULL #<edge158 80 limit 81>) (:FULL :SINGLE-DIGIT)) "GSM7" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge127 57 "this" 58> #<edge128 57 this 58> #<edge129 58 be 59>) (:LOWER :HYPHEN :LOWER))
  "post-infection" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge48 15 close 16> #<edge51 17 of 18> #<edge52 18 "the" 19> #<edge53 18 the 19>
    #<edge54 19 stop 20> #<edge56 20 bio-entity 21> #<edge57 21 "of" 22> #<edge58 21 of 22>
    #<edge59 22 "the" 23>)
   (:PROTEIN :HYPHENATED-NUMBER :HYPHEN :PROTEIN :HYPHEN :SINGLE-CAP :HYPHEN :SINGLE-CAP
    :PLUS-SIGN))
  "pNL4-3-GFP-E-R+" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge441 205 bio-entity 207> #<edge442 214 site 218> #<edge443 213 site 218>
    #<edge445 227 site 230>)
   (:SINGLE-CAP :HYPHEN :PROTEIN :SINGLE-DIGIT))
  "G-SM7" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge242 132 even 133> #<edge244 133 when 134>) (:PROTEIN :SINGLE-DIGIT)) "SM7"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge810 inactive, resource 810> #<edge812 inactive, resource 812>)
   (:SINGLE-CAP :SINGLE-DIGIT))
  "S1" REIFY-TWO-PART-LABEL)
 (((#<edge765 423 rna 424> :EQUAL-SIGN #<edge767 425 loop 426>) (:LOWER :EQUAL-SIGN :SINGLE-DIGIT))
  "method=7" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge760 419 transcription-factor 420> #<edge761 421 "by" 422> :LOWER #<edge762 421 by 422>
    #<edge763 422 "an" 423> #<edge764 422 an 423> :LOWER)
   (:LOWER :FORWARD-SLASH :LOWER :HYPHEN :PROTEIN :FORWARD-SLASH :LOWER))
  "uk/asd-srv/wb" PACKAGE-SLASHED-SEQUENCE)
 (((:FULL #<edge756 414 with 415> #<edge757 417 and 418>) (:FULL :HYPHEN :PROTEIN)) "EMBL-EBI"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge329 170 "that" 171> #<edge330 170 that 171> :FULL) (:MIXED :HYPHEN :FULL)) "HeLa-USU"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge223 117 the 118> #<edge224 120 protein 121> :FULL) (:MIXED :HYPHEN :FULL)) "HeLa-USU"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:FULL #<edge190 92 distance 93> #<edge19 319 even-if 321>) (:FULL :SINGLE-DIGIT :MOLECULE))
  "HOSX4T4" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge3 139 up-to 141> #<edge83 40 COMMA 41> #<edge85 42 number 43>)
   (:PROTEIN :HYPHEN :SINGLE-DIGIT))
  "NL4-3" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge61 23 upstream-segment 24> #<edge64 24 open-reading-frame 25> #<edge65 25 and 26>
    #<edge66 26 "the" 27> #<edge67 26 the 27> #<edge69 28 bio-entity 29> #<edge70 29 "of" 30>
    #<edge71 29 of 30> #<edge72 30 "the" 31>)
   (:PROTEIN :HYPHENATED-NUMBER :HYPHEN :PROTEIN :HYPHEN :SINGLE-CAP :HYPHEN :SINGLE-CAP
    :PLUS-SIGN))
  "pNL4-3-Luc-E-R+" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:FULL #<edge370 180 tethere 198> #<edge372 170 affect 172>) (:FULL :HYPHEN :SINGLE-DIGIT))
  "BSL-2" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge355 194 and 195> #<edge356 195 "the" 196> #<edge357 195 the 196>)
   (:LOWER :HYPHEN :LOWER))
  "lentivirus-based" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge376 157 be 159> #<edge377 157 be 160> #<edge378 153 suggest 155>)
   (:LOWER :HYPHEN :LOWER))
  "gene-delivery" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge313 159 solely 160> #<edge314 160 "the" 161> :GREEK_CAPITAL_LETTER_DELTA
    #<edge315 160 the 161>)
   (:PROTEIN :HYPHEN :GREEK_CAPITAL_LETTER_DELTA :SINGLE-CAP))
  "VSV-ΔG" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:FULL #<edge44 13 of 14> #<edge46 14 the 15>) (:FULL :HYPHEN :SINGLE-DIGIT)) "BSL-4"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge40 11 "the" 12> #<edge41 11 the 12> #<edge43 13 "of" 14>) (:LOWER :HYPHEN :SINGLE-DIGIT))
  "level-4" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge336 177 well-endurant 178> #<edge337 177 well-adverbial 178> #<edge338 177 modifier 178>)
   (:LOWER :HYPHEN :LOWER))
  "cell-fusion" MAKE-HYPHENATED-STRUCTURE)
 (((:TILDA #<edge284 145 position 152>) (:TILDA :PERCENT)) "~88%" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge100 49 square-brackets 52> #<edge102 1 study-bio-method 3>) (:SINGLE-CAP :SINGLE-DIGIT))
  "F2" REIFY-TWO-PART-LABEL)
 (((#<edge96 33 square-brackets 36> #<edge98 41 square-brackets 44>) (:SINGLE-CAP :SINGLE-DIGIT))
  "F1" REIFY-TWO-PART-LABEL)
 (((#<edge84 42 digit-sequence 43> #<edge86 44 COMMA 45>) (:SINGLE-CAP :SINGLE-DIGIT)) "F0"
  REIFY-TWO-PART-LABEL)
 (((#<edge278 121 place 123> #<edge279 126 bio-entity 128>
    #<edge281 137 move-something-somewhere 139> #<edge282 146 position 148>
    #<edge283 145 position 148>)
   (:LOWER :HYPHEN :LOWER :HYPHEN :LOWER))
  "person-to-person" MAKE-HYPHENATED-TRIPLE)
 (((:TILDA #<edge307 155 "that" 156>) (:TILDA :PERCENT)) "~75%" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge92 52 COMMA 53> #<edge93 54 digit-sequence 55> #<edge95 5 hyphenated-pair 8>)
   (:DIGITS :HYPHEN :DIGITS))
  "1998-99" LOOK-FOR-YEAR-EXPRESSION)
 (((#<edge1323 inactive, resource 1323> #<edge1324 inactive, resource 1324>
    #<edge1325 inactive, resource 1325>)
   (:LOWER :HYPHEN :LOWER))
  "natural-product" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge1287 inactive, resource 1287> #<edge1288 inactive, resource 1288>
    #<edge1289 inactive, resource 1289>)
   (:LOWER :HYPHEN :LOWER))
  "natural-product" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge1178 inactive, resource 1178> #<edge1179 inactive, resource 1179>
    #<edge1180 inactive, resource 1180>)
   (:LOWER :HYPHEN :LOWER))
  "natural-product" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge299 93 between 97> #<edge300 88 show 90> #<edge301 87 show 90>) (:LOWER :HYPHEN :LOWER))
  "sponge-specific" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge403 221 amino-acid 222> #<edge404 221 a 222> #<edge406 223 digit-sequence 224>)
   (:LOWER :FORWARD-SLASH :SINGLE-LOWER))
  "compound/s" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge151 74 modal 75> #<edge152 75 be 76> #<edge153 76 ability 77>) (:LOWER :HYPHEN :LOWER))
  "sponge-associated" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge173 82 following 84> #<edge174 74 ability 77> #<edge175 73 ability 77>)
   (:SINGLE-CAP :HYPHEN :SINGLE-CAP))
  "A–D" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge104 4 bio-process 9> #<edge105 9 suggest 11> #<edge106 11 importance 13>)
   (:LOWER :HYPHEN :LOWER))
  "sponge-derived" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge229 123 downstream 124> #<edge230 124 "of" 125> :LOWER) (:SINGLE-DIGIT :HYPHEN :LOWER))
  "6-deoxymanzamine" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge223 117 the 118> #<edge224 120 protein 121> :LOWER) (:SINGLE-DIGIT :HYPHEN :LOWER))
  "8-hydroxymanzamine" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge134 62 "a" 63> #<edge135 62 a 63> #<edge136 63 restrict 64>) (:LOWER :HYPHEN :LOWER))
  "half-life" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge226 121 be 122> #<edge227 122 place 123> #<edge228 123 downstream-segment 124>)
   (:FULL :HYPHEN :FULL))
  "HSV-II" MAKE-HYPHENATED-PAIR)
 (((#<edge90 50 digit-sequence 51> #<edge91 50 number 51> :LOWER) (:SINGLE-LOWER :HYPHEN :LOWER))
  "β-carboline" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge23 393 due-to 395> #<edge24 415 "eif3" 417> #<edge26 415 bio-complex 417>)
   (:FULL :HYPHEN :SINGLE-DIGIT))
  "HSV-1" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge61 23 upstream-segment 24> #<edge62 23 upstream 24> #<edge63 24 protein 25>
    #<edge64 24 open-reading-frame 25> #<edge66 26 "the" 27> #<edge67 26 the 27> :CAPITALIZED)
   (:SINGLE-DIGIT :HYPHEN :SINGLE-CAP :HYPHEN :SINGLE-DIGIT :HYPHEN :CAPITALIZED))
  "9-O-4-Ethylbenzoylisoaaptamine" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge30 3 "on" 4> #<edge31 3 on 4> #<edge32 4 "the" 5>) (:SINGLE-DIGIT :HYPHEN :LOWER))
  "4-methylaaptamine" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge292 123 downstream 128> #<edge293 116 of 121> #<edge294 114 start 116>)
   (:LOWER :HYPHEN :LOWER))
  "immediate-early" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge288 135 start 137> #<edge289 130 detect 132> #<edge291 124 of 128>)
   (:FULL :HYPHEN :SINGLE-DIGIT))
  "HSV-1" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge253 141 number 142> #<edge254 142 bio-entity 143> #<edge256 143 downstream 144>)
   (:FULL :HYPHEN :SINGLE-DIGIT))
  "HSV-1" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge224 120 protein 121> #<edge225 120 open-reading-frame 121> #<edge227 122 place 123>
    #<edge228 123 downstream-segment 124> #<edge229 123 downstream 124>)
   (:FULL :HYPHEN :SINGLE-DIGIT :HYPHEN :LOWER))
  "HSV-1-infection" MAKE-HYPHENATED-TRIPLE)
 (((#<edge214 112 when 113> #<edge215 112 when 113> #<edge216 113 "the" 114>)
   (:SINGLE-DIGIT :HYPHEN :CAPITALIZED))
  "4-Methylaaptamine" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge147 71 be 72> #<edge148 72 COMMA 73> #<edge149 73 "it" 74>)
   (:SINGLE-DIGIT :HYPHEN :LOWER))
  "4-methylaaptamine" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge181 86 COMMA 87> #<edge140 66 "the" 67> #<edge142 67 tethere 68>)
   (:TREATMENT :HYPHEN :SINGLE-DIGIT))
  "anti-HSV-1" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge63 24 protein 25> #<edge64 24 open-reading-frame 25> #<edge66 26 "the" 27>)
   (:FULL :HYPHEN :SINGLE-DIGIT))
  "HSV-1" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge23 393 due-to 395> #<edge24 415 "eif3" 417> #<edge25 415 protein 417>)
   (:SINGLE-DIGIT :HYPHEN :LOWER))
  "4-methylaaptamine" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge7 184 by-virtue-of 187> #<edge156 78 undergo 79>) (:PROTEIN :FULL)) "Anti-HIV"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge126 3 on 9> #<edge127 57 "this" 58> #<edge128 57 this 58> #<edge129 58 be 59>
    #<edge5 174 but-rather 176> #<edge130 59 believe 60> #<edge131 60 "to" 61> #<edge132 60 to 61>)
   (:SINGLE-LOWER :HYPHEN :LOWER :HYPHEN :PHOSPHORYLATE :LOWER :HYPHEN :LOWER))
  "β-hydroxy-p-bromo-phenylalanine" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge114 30 open-reading-frame 33> #<edge115 30 open-reading-frame 36> :LOWER)
   (:SINGLE-CAP :HYPHEN :LOWER))
  "N-methylglutamine" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge109 19 bio-entity 21> #<edge110 18 bio-entity 21> :LOWER) (:SINGLE-LOWER :HYPHEN :LOWER))
  "β-methylisoleucine" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge157 79 only 80> #<edge160 82 following-adj 83>) (:LOWER :DIGITS)) "of3.6"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:LOWER #<edge65 25 and 26> #<edge67 26 the 27> :LOWER #<edge68 27 start 28>)
   (:LOWER :HYPHEN :NUMBER-SEQUENCE :LOWER :HYPHEN))
  "dihydroxy-2,6,8-trimethyldeca-" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge55 19 stop-endurant 20> #<edge56 20 bio-entity 21>) (:NUMBER-SEQUENCE :LOWER))
  "2,3-diaminobutanoic" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge52 18 "the" 19> :LOWER) (:NUMBER-SEQUENCE :LOWER)) "3,4-dimethylglutamine"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge48 15 close 16> #<edge49 16 proximity 17> :LOWER) (:SINGLE-DIGIT :HYPHEN :LOWER))
  "3-hydroxyleucine" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge44 13 of 14> #<edge45 14 "the" 15> :LOWER) (:SINGLE-LOWER :HYPHEN :LOWER))
  "β-methoxytyrosine" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge41 11 the 12> #<edge42 12 importance 13> :LOWER) (:SINGLE-DIGIT :HYPHEN :LOWER))
  "3-methoxyalanine" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge37 8 bio-process 9> #<edge38 9 have 10> :LOWER) (:SINGLE-CAP :HYPHEN :LOWER))
  "N-methylthreonine" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge154 77 "to" 78> #<edge155 77 to 78> #<edge156 78 undergo 79>) (:FULL :HYPHEN :FULL))
  "HTLV-III" MAKE-HYPHENATED-PAIR)
 (((#<edge68 27 start 28> :LOWER #<edge69 28 bio-entity 29> #<edge70 29 "of" 30>)
   (:FORWARD-SLASH :LOWER :HYPHEN :LOWER))
  "/lymphadenopathy-associated" NIL)
 (((#<edge95 5 hyphenated-pair 8> #<edge96 33 square-brackets 36> #<edge5 174 but-rather 176>)
   (:DIGITS :HYPHEN :AMINO-ACID))
  "13-amino acid" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge258 144 of 145> #<edge259 145 pronoun/inanimate 146> #<edge260 146 modifier 147>)
   (:LOWER :FORWARD-SLASH :LOWER))
  "ng/disc" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge210 108 number 109> #<edge211 110 and 111> #<edge212 111 "that" 112>)
   (:LOWER :FORWARD-SLASH :LOWER))
  "ng/disc" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge9 214 wild-type 217> #<edge10 274 "such as" 276> #<edge11 274 such-as 276>)
   (:LOWER :FORWARD-SLASH :LOWER))
  "analogues/derivatives" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge273 94 bio-complex 97> #<edge274 98 bio-entity 100> #<edge275 104 efficiency 106>)
   (:LOWER :HYPHEN :LOWER))
  "marine-derived" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge15 300 wild-type 303> #<edge16 314 "wild-type" 317> #<edge1 118 protein 120>)
   (:LOWER :FORWARD-SLASH :CLINICAL-TRIAL))
  "preclinical/clinical trials" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge3 139 up-to 141> #<edge4 174 "but rather" 176> #<edge7 184 by-virtue-of 187>
    #<edge8 214 "wild-type" 217> #<edge10 274 "such as" 276> #<edge11 274 such-as 276>
    #<edge13 285 close-to 287> #<edge14 300 "wild-type" 303> #<edge15 300 wild-type 303>)
   (:LOWER :FORWARD-SLASH :HYPHENATED-NUMBER :FORWARD-SLASH :DIGITS :FORWARD-SLASH :DIGITS
    :FORWARD-SLASH :LOWER))
  "com/1471-2334/10/322/prepub" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge2 139 "up to" 141> #<edge3 139 up-to 141> #<edge4 174 "but rather" 176>)
   (:LOWER :HYPHEN :LOWER))
  "pre-publication" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge5 174 but-rather 176> #<edge6 184 "by virtue of" 187> #<edge7 184 by-virtue-of 187>)
   (:LOWER :HYPHEN :LOWER))
  "consultation-liaison" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge537 293 COMMA 294> #<edge538 294 if 295> #<edge540 295 give 296>)
   (:LOWER :HYPHEN :LOWER))
  "self-report" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge171 79 limit 81> #<edge172 79 movement 82> #<edge174 74 ability 77>)
   (:FULL :HYPHEN :DIGITS))
  "GHQ-12" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge154 77 "to" 78> #<edge155 77 to 78> #<edge157 79 only 80>)
   (:DIGITS :FORWARD-SLASH :SINGLE-DIGIT))
  "7.4/9" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge66 26 "the" 27> #<edge67 26 the 27> #<edge69 28 bio-entity 29>)
   (:SINGLE-DIGIT :FORWARD-SLASH :SINGLE-DIGIT))
  "8/9" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge59 22 "the" 23> #<edge60 22 the 23> #<edge62 23 upstream 24>)
   (:SINGLE-DIGIT :FORWARD-SLASH :SINGLE-DIGIT))
  "7/9" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge25 415 protein 417> #<edge26 415 bio-complex 417> #<edge27 1 sequencer 2>)
   (:LOWER :FORWARD-SLASH :LOWER))
  "ward/department" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge94 54 number 55> #<edge95 5 hyphenated-pair 8> #<edge97 37 square-brackets 40>)
   (:SINGLE-DIGIT :FORWARD-SLASH :SINGLE-DIGIT))
  "5/9" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge54 19 stop 20> #<edge55 19 stop-endurant 20> #<edge57 21 "of" 22>)
   (:SINGLE-DIGIT :FORWARD-SLASH :SINGLE-DIGIT))
  "6/9" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:CLOSE-ANGLE-BRACKET #<edge188 91 "the" 92>) (:CLOSE-ANGLE-BRACKET :DIGITS)) ">11"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:CLOSE-ANGLE-BRACKET #<edge97 37 square-brackets 40>) (:CLOSE-ANGLE-BRACKET :SINGLE-DIGIT))
  ">5" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge38 9 have 10> #<edge39 10 suggest 11> #<edge41 11 the 12>)
   (:CAPITALIZED :HYPHEN :DIGITS))
  "Ninety-seven" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge676 366 acknowledgement 367> #<edge677 367 require 368> #<edge679 368 for 369>)
   (:FULL :HYPHEN :DIGITS))
  "GHQ-28" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge667 361 pronoun/first/plural 362> #<edge668 362 show 363> #<edge669 363 "that" 364>)
   (:LOWER :HYPHEN :LOWER))
  "receiver-operating" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge651 326 of 335> #<edge652 321 terminate 325> #<edge653 319 terminate 325>)
   (:LOWER :HYPHEN :LOWER))
  "cut-off" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge345 182 tethere 183> #<edge346 187 "the" 188> #<edge347 187 the 188>)
   (:DIGITS :HYPHEN :LOWER))
  "two-tailed" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge340 178 "the" 179> #<edge341 178 the 179> #<edge342 179 bio-complex 180>)
   (:SINGLE-CAP :FORWARD-SLASH :SINGLE-CAP))
  "M/F" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge334 176 how 177> #<edge335 177 well-bio-process 178> :FULL)
   (:SINGLE-DIGIT :FORWARD-SLASH :FULL))
  "5/GHQ" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge228 123 downstream-segment 124> #<edge229 123 downstream 124> #<edge230 124 "of" 125>)
   (:DIGITS :HYPHEN :LOWER))
  "two-tailed" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge212 111 "that" 112> #<edge213 111 that 112> #<edge216 113 "the" 114>)
   (:SINGLE-CAP :FORWARD-SLASH :SINGLE-CAP))
  "Y/N" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge109 19 bio-entity 21> #<edge110 18 bio-entity 21> #<edge111 23 open-reading-frame 25>)
   (:DIGITS :HYPHEN :LOWER))
  "one-way" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge86 44 COMMA 45> #<edge87 46 digit-sequence 47> :CAPITALIZED)
   (:CAPITALIZED :HYPHEN :CAPITALIZED))
  "Kolmogorov-Smirnov" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge359 191 bio-complex 193> #<edge360 195 bio-entity 197> #<edge364 166 bio-entity 168>)
   (:DIGITS :FORWARD-SLASH :DIGITS))
  "38/31.8.2009" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge275 104 efficiency 106> #<edge276 118 open-reading-frame 121>) (:LOWER :COLON)) "groups:"
  :NO-EDGE)
 (((#<edge236 127 bio-entity 128> #<edge237 128 COMMA 129>) (:LOWER :COLON)) "rate:" :NO-EDGE)
 (((#<edge23 393 due-to 395> #<edge24 415 "eif3" 417> #<edge25 415 protein 417>)
   (:CAPITALIZED :HYPHEN :CAPITALIZED))
  "Vivo-Morpholinos" MAKE-HYPHENATED-STRUCTURE)
 (((:MIXED #<edge369 180 tethere 183>) (:MIXED :DIGITS)) "phophoP38" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge82 38 number 39> #<edge83 40 COMMA 41>) (:PROTEIN :LOWER)) "pNFκβ"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge139 65 of 66> #<edge188 91 "the" 92>) (:LOWER :FOLD-ENDURANT)) "many-fold"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge76 32 protein 33> #<edge77 32 open-reading-frame 33> #<edge79 34 number 35>)
   (:LOWER :HYPHEN :LOWER))
  "custom-sequence" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge48 15 close 16> #<edge49 16 proximity 17> #<edge50 17 "of" 18>)
   (:CAPITALIZED :HYPHEN :CAPITALIZED))
  "Vivo-Morpholino" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge238 129 reinitiation 130> #<edge239 130 be 131> #<edge240 131 detect 132>)
   (:LOWER :HYPHEN :LOWER))
  "arginine-based" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge203 103 "to" 104> #<edge204 103 to 104> #<edge205 104 reinitiation 105>
    #<edge206 105 efficiency 106> #<edge207 107 figure 108>)
   (:SINGLE-DIGIT :HYPHEN :LOWER :HYPHEN :LOWER))
  "6-aminohexanoic-spaced" MAKE-HYPHENATED-TRIPLE)
 (((#<edge151 74 modal 75> #<edge152 75 be 76> #<edge153 76 ability 77>) (:LOWER :HYPHEN :LOWER))
  "splice-modifying" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge112 22 open-reading-frame 25> #<edge113 31 open-reading-frame 33>
    #<edge114 30 open-reading-frame 33>)
   (:LOWER :HYPHEN :LOWER))
  "mock-infected" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge412 229 site 230> #<edge414 231 be 232> :AND-SIGN #<edge415 232 bio-use 233>)
   (:SINGLE-DIGIT :SINGLE-CAP :AND-SIGN :SINGLE-CAP))
  "6A&D" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge286 144 of 152> #<edge288 135 start 137> :AND-SIGN #<edge289 130 detect 132>)
   (:SINGLE-DIGIT :SINGLE-CAP :AND-SIGN :SINGLE-CAP))
  "6A&C" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge192 94 "the" 95> #<edge194 95 terminate 96> :AND-SIGN #<edge195 96 bio-complex 97>)
   (:SINGLE-DIGIT :SINGLE-CAP :AND-SIGN :SINGLE-CAP))
  "6A&B" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge254 142 bio-entity 143> :AND-SIGN #<edge253 141 number 142>)
   (:POINT-MUTATION :AND-SIGN :SINGLE-CAP))
  "5G&H" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge70 29 "of" 30> :AND-SIGN #<edge649 337 cause 347>) (:MOLECULE :AND-SIGN :SINGLE-CAP))
  "5B&C" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge517 274 such-as 281> :AND-SIGN #<edge519 248 circumstance 250>)
   (:SINGLE-CAP :AND-SIGN :SINGLE-CAP))
  "D&E" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge309 156 "it" 157> #<edge307 155 "that" 156> #<edge308 155 that 156>)
   (:POINT-MUTATION :HYPHEN :SINGLE-CAP))
  "4C–F" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge112 22 open-reading-frame 25> #<edge113 31 open-reading-frame 33>
    #<edge114 30 open-reading-frame 33>)
   (:LOWER :FORWARD-SLASH :LOWER))
  "unhealthy/dying" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge233 125 the 126> #<edge231 124 of 125> #<edge232 125 "the" 126>)
   (:POINT-MUTATION :HYPHEN :SINGLE-CAP))
  "3B–D" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge243 133 when 134> #<edge244 133 when 134>) (:FULL :PLUS-SIGN)) "JEV+"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge36 7 reinitiation 8> #<edge37 8 bio-process 9> #<edge38 9 have 10>)
   (:DIGITS :HYPHEN :LOWER))
  "one-way" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge141 66 the 67> #<edge142 67 tethere 68> #<edge144 69 semicolon 70>)
   (:SINGLE-DIGIT :COLON :DIGITS))
  "1∶100" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge120 14 proximity 21> :VULGAR_FRACTION_ONE_HALF)
   (:SINGLE-DIGIT :VULGAR_FRACTION_ONE_HALF))
  "1½" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge80 36 COMMA 37> #<edge81 38 digit-sequence 39> #<edge82 38 number 39>)
   (:LOWER :HYPHEN :LOWER))
  "mock-infected" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge30 3 "on" 4> #<edge31 3 on 4> #<edge34 5 terminate 6>) (:LOWER :FORWARD-SLASH :LOWER))
  "cells/plate" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge273 94 bio-complex 97> #<edge274 98 bio-entity 100> #<edge11 274 such-as 276>)
   (:PROTEIN :HYPHEN :DRUG))
  "CM-H2DCFDA" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge173 82 following 84> #<edge174 74 ability 77> #<edge9 214 wild-type 217>)
   (:PROTEIN :HYPHEN :DRUG))
  "CM-H2DCFDA" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge133 61 reflect 62> #<edge134 62 "a" 63> #<edge7 184 by-virtue-of 187>)
   (:PROTEIN :HYPHEN :DRUG))
  "CM-H2DCFDA" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge88 46 number 47> #<edge89 48 COMMA 49> #<edge5 174 but-rather 176>)
   (:PROTEIN :HYPHEN :DRUG))
  "CM-H2DCFDA" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge57 21 "of" 22> #<edge58 21 of 22> #<edge3 139 up-to 141>) (:PROTEIN :HYPHEN :DRUG))
  "CM-H2DCFDA" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge53 18 the 19> :LOWER #<edge54 19 stop 20> #<edge56 20 bio-entity 21> :LOWER)
   (:HYPHEN :LOWER :HYPHEN :NUMBER-SEQUENCE :LOWER))
  "-chlromethyl-20,70-dichlorodihydrofluoresceindiacetate" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge81 38 digit-sequence 39> #<edge82 38 number 39> #<edge84 42 digit-sequence 43>)
   (:SINGLE-DIGIT :COLON :SINGLE-DIGIT))
  "1∶1" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge77 32 open-reading-frame 33> #<edge78 34 digit-sequence 35> #<edge79 34 number 35>)
   (:LOWER :HYPHEN :LOWER))
  "alcohol-dioxane" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge11 274 such-as 276> :LOWER #<edge13 285 close-to 287> #<edge251 138 move-to 139>)
   (:BIO-ENTITY :LOWER :BIO-ENTITY :LOWER))
  "-6-diamidino-2-phenylindole" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge154 77 "to" 78> #<edge155 77 to 78> #<edge157 79 only 80>)
   (:SINGLE-DIGIT :COLON :DIGITS))
  "1∶250" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge295 103 to 110> #<edge296 101 critical 103> :CAPITALIZED)
   (:PROTEIN :HYPHEN :CAPITALIZED))
  "PBS–Tween" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge253 141 number 142> #<edge254 142 bio-entity 143> :CAPITALIZED)
   (:PROTEIN :HYPHEN :CAPITALIZED))
  "PBS–Tween" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge228 123 downstream-segment 124> #<edge229 123 downstream 124> #<edge231 124 of 125>)
   (:SINGLE-DIGIT :COLON :DIGITS))
  "1∶1000" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((:MIXED #<edge220 116 "of" 117>) (:MIXED :DIGITS)) "phosphoP38" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge154 77 "to" 78> #<edge155 77 to 78> :CAPITALIZED) (:CAPITALIZED :HYPHEN :CAPITALIZED))
  "Upstate-Chemicon" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:CAPITALIZED #<edge141 66 the 67> :CAPITALIZED) (:CAPITALIZED :HYPHEN :CAPITALIZED))
  "Chun-Jung" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge82 38 number 39> #<edge83 40 COMMA 41> #<edge84 42 digit-sequence 43>)
   (:LOWER :HYPHEN :LOWER))
  "whole-brain" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge24 415 "eif3" 417> #<edge25 415 protein 417> #<edge26 415 bio-complex 417>)
   (:LOWER :HYPHEN :LOWER))
  "whole-brain" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge404 221 a 222> #<edge405 222 and 223> #<edge406 223 digit-sequence 224>)
   (:CAPITALIZED :HYPHEN :LOWER))
  "Sham-treatment" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge188 91 "the" 92> :MULTIPLICATION-SIGN #<edge190 92 distance 93>)
   (:SINGLE-DIGIT :MULTIPLICATION-SIGN :DIGITS))
  "3×105" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge106 11 importance 13> #<edge107 15 proximity 17> #<edge109 19 bio-entity 21>)
   (:FULL :PLUS-SIGN :SINGLE-DIGIT))
  "JEV+5" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge77 32 open-reading-frame 33> #<edge78 34 digit-sequence 35> #<edge80 36 COMMA 37>)
   (:FULL :PLUS-SIGN :SINGLE-DIGIT))
  "JEV+3" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge52 18 "the" 19> #<edge53 18 the 19> #<edge54 19 stop 20> #<edge55 19 stop-endurant 20>
    #<edge57 21 "of" 22>)
   (:FULL :PLUS-SIGN :FULL :HYPHEN :FULL))
  "JEV+SC-MO" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge5 174 but-rather 176> #<edge192 94 "the" 95>) (:BIO-ENTITY :FULL)) "gov/BLAST"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge11 274 such-as 276> #<edge12 285 "close to" 287> #<edge13 285 close-to 287>)
   (:CAPITALIZED :HYPHEN :CAPITALIZED))
  "Vivo-Morpholino" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge370 180 tethere 198> #<edge371 178 tethere 198> #<edge372 170 affect 172>
    #<edge373 169 bio-entity 172> #<edge375 168 per 172>)
   (:LOWER :HYPHEN :LOWER :HYPHEN :LOWER))
  "low-melting-point" MAKE-HYPHENATED-TRIPLE)
 (((#<edge171 79 limit 81> :MULTIPLICATION-SIGN) (:DIGITS :MULTIPLICATION-SIGN)) "10,000×"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:CAPITALIZED #<edge40 11 "the" 12> #<edge42 12 importance 13>)
   (:CAPITALIZED :SINGLE-DIGIT :SINGLE-CAP))
  "Neuro2A" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:FULL #<edge53 18 the 19> #<edge54 19 stop 20> #<edge55 19 stop-endurant 20>
    #<edge56 20 bio-entity 21> #<edge57 21 "of" 22> #<edge59 22 "the" 23>)
   (:FULL :FORWARD-SLASH :FULL :FORWARD-SLASH :DIGITS :FORWARD-SLASH :DIGITS))
  "NBRC/IAEC/2007/36" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge449 235 bio-entity 238> #<edge450 234 bio-entity 238> #<edge451 243 efficiency 245>)
   (:CAPITALIZED :HYPHEN :CAPITALIZED))
  "Vivo-Morpholinos" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge404 221 a 222> #<edge405 222 and 223> #<edge406 223 digit-sequence 224>)
   (:CAPITALIZED :HYPHEN :CAPITALIZED))
  "Vivo-Morpholinos" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge343 180 modal 181> #<edge344 181 be 182> #<edge345 182 tethere 183>)
   (:CAPITALIZED :HYPHEN :CAPITALIZED))
  "Vivo-Morpholinos" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge310 156 pronoun/inanimate 157> #<edge311 157 be 158> #<edge312 158 not 159>)
   (:CAPITALIZED :HYPHEN :CAPITALIZED))
  "Vivo-Morpholinos" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge165 62 mobility 65> #<edge166 67 bio-complex 69> #<edge167 67 lambda-expression 68>)
   (:CAPITALIZED :HYPHEN :CAPITALIZED))
  "Vivo-Morpholino" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge108 14 proximity 17> #<edge109 19 bio-entity 21> #<edge110 18 bio-entity 21>)
   (:CAPITALIZED :HYPHEN :CAPITALIZED))
  "Vivo-Morpholino" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge212 111 "that" 112> #<edge213 111 that 112> #<edge214 112 when 113>)
   (:FULL :HYPHEN :FULL))
  "RNA-RNA" MAKE-HYPHENATED-PAIR)
 (((#<edge45 14 "the" 15> #<edge46 14 the 15> :LOWER) (:DIGITS :HYPHEN :LOWER)) "585-neucleotide"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge34 5 terminate 6> #<edge35 6 HYPHEN 7> :LOWER) (:DIGITS :HYPHEN :LOWER)) "95-neucleotide"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge3 139 up-to 141> #<edge4 174 "but rather" 176> #<edge7 184 by-virtue-of 187>
    #<edge8 214 "wild-type" 217> #<edge10 274 "such as" 276> #<edge11 274 such-as 276>
    #<edge13 285 close-to 287> #<edge14 300 "wild-type" 303> #<edge15 300 wild-type 303>)
   (:LOWER :FORWARD-SLASH :HYPHENATED-NUMBER :FORWARD-SLASH :DIGITS :FORWARD-SLASH :DIGITS
    :FORWARD-SLASH :LOWER))
  "com/1471-2350/11/161/prepub" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge2 139 "up to" 141> #<edge3 139 up-to 141> #<edge4 174 "but rather" 176>)
   (:LOWER :HYPHEN :LOWER))
  "pre-publication" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge4 174 "but rather" 176> #<edge5 174 but-rather 176>) (:LOWER :COLON)) "study:" :NO-EDGE)
 (((#<edge106 11 importance 13> #<edge107 15 proximity 17> #<edge109 19 bio-entity 21>)
   (:LOWER :HYPHEN :LOWER))
  "case-control" MAKE-HYPHENATED-STRUCTURE)
 (((:CAPITALIZED #<edge290 130 detect 133> :CAPITALIZED) (:CAPITALIZED :HYPHEN :CAPITALIZED))
  "Guerreiro-Cacais" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge720 387 location-of 388> #<edge721 388 "of" 389> #<edge722 388 of 389>)
   (:CAPITALIZED :HYPHEN :PROTEIN))
  "Ben-Ali" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge43 13 "of" 14> #<edge45 14 "the" 15>) (:PROTEIN :-LIKE)) "Sp1-like"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge576 327 "the" 328> #<edge577 327 the 328> :CAPITALIZED) (:LOWER :HYPHEN :CAPITALIZED))
  "sub-Saharan" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge13 285 close-to 287> #<edge127 57 "this" 58> #<edge128 57 this 58> #<edge129 58 be 59>
    #<edge130 59 believe 60> :LOWER)
   (:BIO-ENTITY :LOWER :FORWARD-SLASH :PROTEIN :FORWARD-SLASH :LOWER))
  "gov/projects/SNP/snp" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge19 319 even-if 321> #<edge996 inactive, resource 996> #<edge998 inactive, resource 998>)
   (:PROTEIN :HYPHEN :DIGITS))
  "DC-SIGN-139" MAKE-HYPHENATED-PAIR)
 (((#<edge747 407 "to" 408> #<edge835 inactive, resource 835>) (:DIGITS :FOLD-ENDURANT))
  "2.56-fold" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge527 289 site 291> #<edge569 322 bio-complex 323>) (:DIGITS :FOLD-ENDURANT)) "1.47-fold"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge380 199 however 200> #<edge421 236 reinitiation 237>) (:DIGITS :FOLD-ENDURANT))
  "1.42-fold" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge277 117 open-reading-frame 121> #<edge327 168 per 169>) (:DIGITS :FOLD-ENDURANT))
  "2.10-fold" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge259 145 pronoun/inanimate 146> #<edge323 166 stop-endurant 167>)
   (:DIGITS :FOLD-ENDURANT))
  "1.41-fold" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge121 15 close 16> #<edge165 62 mobility 65>) (:DIGITS :FOLD-ENDURANT)) "1.99-fold"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge103 5 bio-process 9> #<edge161 82 following 83>) (:DIGITS :FOLD-ENDURANT)) "1.42-fold"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge172 79 movement 82> #<edge173 82 following 84> :CAPITALIZED)
   (:CAPITALIZED :HYPHEN :CAPITALIZED))
  "Hardy-Weinberg" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:CLOSE-ANGLE-BRACKET #<edge145 70 "that" 71>) (:CLOSE-ANGLE-BRACKET :DIGITS)) ">0.05"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge46 14 the 15> #<edge47 15 close-bio-process 16> #<edge48 15 close 16>)
   (:SINGLE-CAP :FORWARD-SLASH :SINGLE-CAP))
  "A/G" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge116 29 of 36> #<edge117 27 start 29> #<edge118 21 of 25>) (:DIGITS :HYPHEN :LOWER))
  "two-tailed" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge438 219 figure 225> :ASTERISK #<edge439 218 parentheses 226>)
   (:DIGITS :ASTERISK :SINGLE-CAP))
  "61°C" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge403 221 amino-acid 222> #<edge404 221 a 222>) (:LOWER :COLON)) "conditions:" :NO-EDGE)
 (((#<edge308 155 that 156> #<edge309 156 "it" 157> #<edge311 157 be 158>)
   (:SINGLE-CAP :HYPHEN :SINGLE-DIGIT))
  "L-1" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge189 91 the 92> :UNDER-BAR #<edge192 94 "the" 95>) (:FULL :UNDER-BAR :DIGITS))
  "NC_000019.9" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge114 30 open-reading-frame 33> :FULL #<edge115 30 open-reading-frame 36>
    #<edge117 27 start 29>)
   (:HYPHEN :FULL :HYPHEN :SINGLE-DIGIT))
  "-AGCATACAGAAACCCCGTTG-3" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge98 41 square-brackets 44> :FULL #<edge99 45 square-brackets 48>
    #<edge101 53 square-brackets 56>)
   (:HYPHEN :FULL :HYPHEN :SINGLE-DIGIT))
  "-TGCTGCTGTCCTCATTTTTG-3" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge122 14 proximity 25> #<edge123 15 close 16> #<edge124 13 of 25>) (:LOWER :HYPHEN :LOWER))
  "community-based" MAKE-HYPHENATED-STRUCTURE)
 (((:CAPITALIZED #<edge44 13 of 14> :CAPITALIZED) (:CAPITALIZED :HYPHEN :CAPITALIZED)) "Yat-Sen"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge31 3 on 4> #<edge32 4 "the" 5> #<edge34 5 terminate 6>) (:LOWER :HYPHEN :LOWER))
  "case-control" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge68 27 start 28> #<edge115 30 open-reading-frame 36>) (:DIGITS :PROTEIN)) "19p13.3"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge57 21 "of" 22> #<edge58 21 of 22> #<edge59 22 "the" 23>) (:LOWER :HYPHEN :PROTEIN))
  "non-integrin" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge87 46 digit-sequence 47> #<edge88 46 number 47> #<edge89 48 COMMA 49>)
   (:LOWER :HYPHEN :LOWER))
  "dose-response" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge3 139 up-to 141> #<edge4 174 "but rather" 176> #<edge7 184 by-virtue-of 187>
    #<edge8 214 "wild-type" 217> #<edge10 274 "such as" 276> #<edge11 274 such-as 276>
    #<edge13 285 close-to 287> #<edge14 300 "wild-type" 303> #<edge15 300 wild-type 303>)
   (:LOWER :FORWARD-SLASH :HYPHENATED-NUMBER :FORWARD-SLASH :DIGITS :FORWARD-SLASH :DIGITS
    :FORWARD-SLASH :LOWER))
  "com/1471-2458/10/661/prepub" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge2 139 "up to" 141> #<edge3 139 up-to 141> #<edge4 174 "but rather" 176>)
   (:LOWER :HYPHEN :LOWER))
  "pre-publication" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge112 22 open-reading-frame 25> #<edge113 31 open-reading-frame 33>
    #<edge115 30 open-reading-frame 36>)
   (:LOWER :HYPHEN :LOWER))
  "mini-drills" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge5 174 but-rather 176> #<edge6 184 "by virtue of" 187> #<edge8 214 "wild-type" 217>)
   (:LOWER :HYPHEN :LOWER))
  "front-line" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge47 15 close-bio-process 16> #<edge48 15 close 16> #<edge50 17 "of" 18>
    #<edge62 23 upstream 24>)
   (:LOWER :HYPHEN :LOWER :TIME-UNIT))
  "day-by-day" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge10 274 "such as" 276> #<edge11 274 such-as 276> #<edge12 285 "close to" 287>)
   (:LOWER :HYPHEN :LOWER))
  "mini-epidemics" MAKE-HYPHENATED-STRUCTURE)
 (((:LOWER #<edge153 76 ability 77> #<edge154 77 "to" 78>) (:LOWER :HYPHEN :LOWER)) "psycho-social"
  :NO-EDGE)
 (((#<edge363 183 parentheses 198> #<edge364 166 bio-entity 168> #<edge366 176 well 178>
    #<edge371 178 tethere 198>)
   (:LOWER :HYPHEN :LOWER :TIME-UNIT))
  "day-to-day" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge319 163 the 164> #<edge320 164 start 165> #<edge321 165 and 166>)
   (:LOWER :HYPHEN :LOWER))
  "self-demonstrate" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge166 67 bio-complex 69> :AMPERSAND :LOWER) (:LOWER :AMPERSAND :LOWER)) "flu@rcgp"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge26 415 bio-complex 417> #<edge44 13 of 14>) (:DIGITS :QUARTER)) "one-quarter"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge349 189 between 190> #<edge350 190 where 191> #<edge351 191 "the" 192>)
   (:LOWER :HYPHEN :LOWER))
  "home-based" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge138 65 "of" 66> #<edge139 65 of 66> #<edge140 66 "the" 67>)
   (:CAPITALIZED :HYPHEN :CAPITALIZED))
  "South-East" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge143 68 bio-complex 69> #<edge144 69 semicolon 70> #<edge145 70 "that" 71>)
   (:LOWER :HYPHEN :LOWER))
  "laboratory-confirmed" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge326 168 "per" 169> #<edge327 168 per 169> #<edge328 169 bio-entity 170>)
   (:LOWER :HYPHEN :LOWER))
  "lysate-based" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge227 122 place 123> #<edge228 123 downstream-segment 124> #<edge230 124 "of" 125>)
   (:LOWER :HYPHEN :LOWER))
  "follow-up" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge185 89 deictic-location 90> #<edge186 90 "that" 91> #<edge187 90 that 91>)
   (:LOWER :HYPHEN :LOWER))
  "kit-based" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge120 14 proximity 21> #<edge121 15 close 16> #<edge122 14 proximity 25>)
   (:LOWER :HYPHEN :LOWER))
  "lysate-based" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge386 205 "an" 206> #<edge387 205 an 206> #<edge388 206 bio-entity 207>)
   (:FULL :HYPHEN :CAPITALIZED))
  "RBD-Fc" MAKE-HYPHENATED-PAIR)
 (((#<edge237 128 COMMA 129> #<edge238 129 reinitiation 130> #<edge239 130 be 131>)
   (:FULL :HYPHEN :CAPITALIZED))
  "RBD-His" MAKE-HYPHENATED-PAIR)
 (((#<edge161 82 following 83> #<edge162 83 terminate 84> #<edge163 58 believe 60>)
   (:FULL :HYPHEN :CAPITALIZED))
  "RBD-Fc" MAKE-HYPHENATED-PAIR)
 (((#<edge110 18 bio-entity 21> #<edge111 23 open-reading-frame 25>
    #<edge113 31 open-reading-frame 33>)
   (:LOWER :HYPHEN :LOWER))
  "convalescent-phase" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge473 257 bio-entity 258> #<edge474 258 bio-entity 259> #<edge475 260 figure 261>)
   (:LOWER :HYPHEN :LOWER))
  "lysate-based" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge464 251 bio-complex 252> #<edge465 252 modal 253> #<edge467 254 "at" 255>)
   (:SINGLE-DIGIT :FORWARD-SLASH :DIGITS))
  "8/19" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge304 153 "this" 154> #<edge305 153 this 154> #<edge307 155 "that" 156>)
   (:LOWER :HYPHEN :LOWER))
  "follow-up" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge257 144 "of" 145> #<edge258 144 of 145> #<edge260 146 modifier 147>)
   (:SINGLE-DIGIT :COLON :DIGITS))
  "1:10" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge149 73 "it" 74> #<edge150 73 pronoun/inanimate 74> #<edge151 74 modal 75>)
   (:FULL :HYPHEN :CAPITALIZED))
  "RBD-His" MAKE-HYPHENATED-PAIR)
 (((#<edge41 11 the 12> #<edge42 12 importance 13> #<edge44 13 of 14>) (:LOWER :HYPHEN :LOWER))
  "followed-up" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge313 159 solely 160> #<edge315 160 the 161>) (:FULL :DIGITS)) "OD450"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge303 90 that 91> #<edge304 153 "this" 154> #<edge305 153 this 154>)
   (:FULL :HYPHEN :CAPITALIZED))
  "RBD-His" MAKE-HYPHENATED-PAIR)
 (((#<edge223 117 the 118> #<edge224 120 protein 121> #<edge225 120 open-reading-frame 121>)
   (:FULL :HYPHEN :CAPITALIZED))
  "RBD-His" MAKE-HYPHENATED-PAIR)
 (((:CAPITALIZED :TRADE_MARK_SIGN) (:CAPITALIZED :TRADE_MARK_SIGN)) "Modulus™"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge366 176 well 178> #<edge367 178 bio-complex 180> #<edge369 180 tethere 183>)
   (:LOWER :HYPHEN :LOWER))
  "flat-bottom" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge19 319 even-if 321> #<edge161 82 following 83> #<edge21 376 wild-type 379>)
   (:CELL-LINE :FORWARD-SLASH :PROTEIN))
  "293T/ACE2" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge152 75 be 76> #<edge153 76 ability 77> #<edge154 77 "to" 78>) (:LOWER :HYPHEN :LOWER))
  "single-cycle" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge144 69 semicolon 70> #<edge145 70 "that" 71> #<edge147 71 be 72>)
   (:LOWER :HYPHEN :LOWER))
  "post-transfection" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge116 29 of 36> :TRADE_MARK_SIGN) (:CAPITALIZED :TRADE_MARK_SIGN)) "Lipofectamine™"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge286 144 of 152> #<edge287 139 up-to 143> #<edge289 130 detect 132>)
   (:CAPITALIZED :HYPHEN :DIGITS))
  "Ultra-15" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge208 107 article-figure 108> #<edge209 108 digit-sequence 109> #<edge210 108 number 109>)
   (:LOWER :HYPHEN :MIXED))
  "glycine-HCl" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge119 17 of 21> #<edge120 14 proximity 21> #<edge121 15 close 16>)
   (:FULL :HYPHEN :CAPITALIZED))
  "RBD-Fc" MAKE-HYPHENATED-PAIR)
 (((:LOWER #<edge66 26 "the" 27> #<edge67 26 the 27>) (:LOWER :HYPHEN :LOWER))
  "cyanogenbromide-activated" :NO-EDGE)
 (((#<edge56 20 bio-entity 21> #<edge57 21 "of" 22> #<edge58 21 of 22>)
   (:FULL :HYPHEN :CAPITALIZED))
  "RBD-Fc" MAKE-HYPHENATED-PAIR)
 (((:FULL #<edge364 166 bio-entity 168> :FULL) (:FULL :HYPHEN :FULL)) "BJI-GBI"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge358 196 bio-entity 197> #<edge359 191 bio-complex 193> #<edge360 195 bio-entity 197>)
   (:LOWER :HYPHEN :LOWER))
  "lysates-based" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge285 104 efficiency 110> #<edge286 144 of 152>) (:NUMBER-SEQUENCE :LOWER))
  "3,3',5,5'-tetramethylbenzidine" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge56 20 bio-entity 21> #<edge57 21 "of" 22> #<edge58 21 of 22>)
   (:FULL :HYPHEN :CAPITALIZED))
  "RBD-His" MAKE-HYPHENATED-PAIR)
 (((#<edge1 118 protein 120> #<edge25 415 protein 417>) (:PROTEIN :FULL)) "anti-RBD"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge5 174 but-rather 176> #<edge207 107 figure 108> #<edge208 107 article-figure 108>)
   (:PROTEIN :HYPHEN :CAPITALIZED))
  "protein A-Sepharose" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge199 99 bio-entity 100> #<edge200 100 be 101> #<edge201 101 comparative 102>)
   (:FULL :HYPHEN :CAPITALIZED))
  "RBD-Fc" MAKE-HYPHENATED-PAIR)
 (((#<edge185 89 deictic-location 90> #<edge186 90 "that" 91> #<edge187 90 that 91>)
   (:FULL :HYPHEN :CAPITALIZED))
  "RBD-His" MAKE-HYPHENATED-PAIR)
 (((#<edge143 68 bio-complex 69> #<edge144 69 semicolon 70> #<edge146 70 that 71>)
   (:LOWER :HYPHEN :LOWER))
  "post-transfection" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge134 62 "a" 63> #<edge135 62 a 63> #<edge136 63 restrict 64>)
   (:CAPITALIZED :HYPHEN :CAPITALIZED))
  "Reduced-Serum" MAKE-HYPHENATED-STRUCTURE)
 (((:FULL #<edge128 57 this 58> #<edge129 58 be 59>) (:FULL :HYPHEN :FULL)) "OPTI-MEM"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge80 36 COMMA 37> #<edge81 38 digit-sequence 39> #<edge82 38 number 39>)
   (:FULL :HYPHEN :CAPITALIZED))
  "RBD-Fc" MAKE-HYPHENATED-PAIR)
 (((#<edge76 32 protein 33> #<edge77 32 open-reading-frame 33> #<edge78 34 digit-sequence 35>)
   (:FULL :HYPHEN :CAPITALIZED))
  "RBD-His" MAKE-HYPHENATED-PAIR)
 (((#<edge28 2 study-bio-method 3> #<edge29 2 study-data 3> #<edge30 3 "on" 4>)
   (:PROTEIN :HYPHEN :CAPITALIZED))
  "IgG-Fc" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge21 376 wild-type 379> #<edge22 393 "due to" 395> #<edge23 393 due-to 395>)
   (:FULL :HYPHEN :CAPITALIZED))
  "RBD-Fc" MAKE-HYPHENATED-PAIR)
 (((#<edge17 314 wild-type 317> #<edge18 319 "even if" 321> #<edge19 319 even-if 321>)
   (:CAPITALIZED :HYPHEN :LOWER))
  "His-tag" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge8 214 "wild-type" 217> #<edge9 214 wild-type 217> #<edge10 274 "such as" 276>)
   (:FULL :HYPHEN :CAPITALIZED))
  "RBD-His" MAKE-HYPHENATED-PAIR)
 (((#<edge145 70 "that" 71> #<edge146 70 that 71> #<edge148 72 COMMA 73>) (:LOWER :HYPHEN :LOWER))
  "follow-up" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge63 24 protein 25> #<edge64 24 open-reading-frame 25> #<edge66 26 "the" 27>)
   (:LOWER :HYPHEN :LOWER))
  "convalescent-phase" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge41 11 the 12> #<edge42 12 importance 13>) (:LOWER :COLON)) "functions:" :NO-EDGE)
 (((#<edge26 415 bio-complex 417> #<edge27 1 sequencer 2> #<edge28 2 study-bio-method 3>)
   (:LOWER :HYPHEN :LOWER))
  "positive-stranded" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge3 139 up-to 141> #<edge170 77 undergo 79>) (:PHOSPHORYLATE :LOWER)) "p-value"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge1 118 protein 120> #<edge104 4 bio-process 9>) (:PHOSPHORYLATE :LOWER)) "p-value"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge393 210 very 211> #<edge395 212 COMMA 213>) (:SINGLE-CAP :SINGLE-DIGIT)) "S1"
  REIFY-TWO-PART-LABEL)
 (((#<edge240 131 detect 132> :MULTIPLICATION-SIGN #<edge243 133 when 134>)
   (:DIGITS :MULTIPLICATION-SIGN :HYPHENATED-NUMBER))
  "6.7×10−3" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge137 64 mobility 65> #<edge138 65 "of" 66> #<edge139 65 of 66>) (:LOWER :HYPHEN :LOWER))
  "cross-reactivity" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge50 17 "of" 18> #<edge51 17 of 18> #<edge52 18 "the" 19>) (:LOWER :HYPHEN :LOWER))
  "cross-reactivity" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge1 118 protein 120> #<edge148 72 COMMA 73> #<edge150 73 pronoun/inanimate 74>)
   (:H5N1 :FORWARD-SLASH :DIGITS))
  "H5N1/97" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge47 15 close-bio-process 16> #<edge48 15 close 16> #<edge50 17 "of" 18>)
   (:LOWER :HYPHEN :SINGLE-LOWER))
  "duck—a" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge35 6 HYPHEN 7> #<edge36 7 reinitiation 8> #<edge37 8 bio-process 9>)
   (:LOWER :HYPHEN :LOWER))
  "live-animals" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge151 74 modal 75> #<edge152 75 be 76> #<edge154 77 "to" 78>) (:LOWER :HYPHEN :LOWER))
  "centralities—pinpoint" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge137 64 mobility 65> #<edge138 65 "of" 66> #<edge139 65 of 66>) (:LOWER :HYPHEN :LOWER))
  "metrics—terminal" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge144 69 semicolon 70> #<edge145 70 "that" 71> #<edge146 70 that 71>)
   (:LOWER :HYPHEN :LOWER))
  "cross-reactivity" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge65 25 and 26> #<edge66 26 "the" 27>) (:LOWER :COLON)) "picture:" :NO-EDGE)
 (((#<edge58 21 of 22> #<edge59 22 "the" 23>) (:LOWER :COLON)) "bias:" :NO-EDGE)
 (((#<edge167 67 lambda-expression 68> #<edge171 79 limit 81>) (:SINGLE-CAP :POINT-MUTATION)) "S5D"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge129 58 be 59> #<edge134 62 "a" 63>) (:SINGLE-CAP :POINT-MUTATION)) "S5C"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge33 4 the 5> #<edge37 8 bio-process 9>) (:SINGLE-CAP :POINT-MUTATION)) "S4C"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge143 68 bio-complex 69> #<edge144 69 semicolon 70> #<edge145 70 "that" 71>)
   (:LOWER :HYPHEN :LOWER))
  "low-scoring" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge115 30 open-reading-frame 36> #<edge116 29 of 36> #<edge117 27 start 29>)
   (:LOWER :HYPHEN :LOWER))
  "high-scoring" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge77 32 open-reading-frame 33> #<edge78 34 digit-sequence 35>) (:LOWER :COLON)) "sinks:"
  :NO-EDGE)
 (((#<edge48 15 close 16> #<edge49 16 proximity 17>) (:LOWER :COLON)) "sources:" :NO-EDGE)
 (((#<edge299 93 between 97> #<edge301 87 show 90>) (:SINGLE-CAP :SINGLE-DIGIT)) "S1"
  REIFY-TWO-PART-LABEL)
 (((#<edge355 194 and 195> :PERIOD) (:POINT-MUTATION :PERIOD)) "4C." REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge53 18 the 19> #<edge55 19 stop-endurant 20> #<edge57 21 "of" 22>)
   (:SINGLE-CAP :SINGLE-DIGIT :SINGLE-CAP))
  "S5A" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge212 111 "that" 112> #<edge214 112 when 113>) (:SINGLE-CAP :SINGLE-DIGIT)) "S1"
  REIFY-TWO-PART-LABEL)
 (((#<edge52 18 "the" 19> #<edge100 49 square-brackets 52>) (:SINGLE-CAP :POINT-MUTATION)) "S3C"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge258 144 of 145> #<edge260 146 modifier 147>) (:SINGLE-CAP :SINGLE-DIGIT)) "S1"
  REIFY-TWO-PART-LABEL)
 (((#<edge252 141 digit-sequence 142> #<edge254 142 bio-entity 143>) (:SINGLE-CAP :SINGLE-DIGIT))
  "S1" REIFY-TWO-PART-LABEL)
 (((#<edge212 111 "that" 112> #<edge213 111 that 112> #<edge214 112 when 113>)
   (:LOWER :HYPHEN :LOWER))
  "well-defined" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge10 274 "such as" 276> #<edge11 274 such-as 276> #<edge13 285 close-to 287>)
   (:PROTEIN :HYPHEN :LOWER))
  "sink-source" PACKAGE-QUALIFYING-PAIR)
 (((#<edge345 182 tethere 183> #<edge346 187 "the" 188> #<edge348 188 distance 189>
    #<edge349 189 between 190> #<edge350 190 where 191> #<edge3 139 up-to 141>)
   (:CAPITALIZED :FORWARD-SLASH :DIGITS :FORWARD-SLASH :DIGITS :-LIKE))
  "Fujian/411/2002-like" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge342 179 bio-complex 180> #<edge343 180 modal 181> #<edge344 181 be 182>)
   (:LOWER :HYPHEN :LOWER))
  "tropically-derived" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge320 164 start 165> #<edge321 165 and 166> #<edge322 166 stop 167>)
   (:DIGITS :HYPHEN :DIGITS))
  "2003–2004" LOOK-FOR-YEAR-EXPRESSION)
 (((#<edge237 128 COMMA 129> #<edge238 129 reinitiation 130> #<edge240 131 detect 132>)
   (:LOWER :HYPHEN :LOWER))
  "inter-cluster" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge175 73 ability 77> #<edge176 70 be 72> #<edge177 65 of 69>) (:LOWER :HYPHEN :LOWER))
  "over-representation" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge186 90 "that" 91> #<edge188 91 "the" 92>) (:SINGLE-CAP :SINGLE-DIGIT)) "S1"
  REIFY-TWO-PART-LABEL)
 (((#<edge196 97 and 98> #<edge225 120 open-reading-frame 121> #<edge203 103 "to" 104>)
   (:SINGLE-CAP :POINT-MUTATION :SINGLE-DIGIT))
  "H2N2" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge135 62 a 63> #<edge136 63 restrict 64> #<edge137 64 mobility 65>)
   (:LOWER :HYPHEN :LOWER))
  "cross-immunity" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge30 3 "on" 4> #<edge31 3 on 4> #<edge32 4 "the" 5>) (:CAPITALIZED :HYPHEN :CAPITALIZED))
  "East-Southeast" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge266 150 number 151> #<edge267 85 subordinate-conjunction 87>
    #<edge268 141 bio-entity 143>)
   (:LOWER :HYPHEN :LOWER))
  "low-level" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge130 59 believe 60> #<edge131 60 "to" 61> #<edge133 61 reflect 62>)
   (:LOWER :HYPHEN :LOWER))
  "flu-related" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge129 58 be 59> #<edge130 59 believe 60> #<edge132 60 to 61> #<edge133 61 reflect 62>
    #<edge134 62 "a" 63>)
   (:CAPITALIZED :FORWARD-SLASH :DIGITS :FORWARD-SLASH :DIGITS))
  "Fujian/411/2002" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge129 58 be 59> #<edge130 59 believe 60> :FULL) (:SINGLE-CAP :HYPHEN :FULL)) "S-OIV"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge123 15 close 16> #<edge124 13 of 25> #<edge125 9 suggest 13>) (:LOWER :HYPHEN :LOWER))
  "swine-origin" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge8 214 "wild-type" 217> #<edge9 214 wild-type 217> #<edge11 274 such-as 276>)
   (:LOWER :HYPHEN :LOWER))
  "negative-sense" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge5 174 but-rather 176> #<edge7 184 by-virtue-of 187>) (:PROTEIN :-/-)) "Slc26a4−/−"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge74 31 downstream-segment 32> #<edge75 31 downstream 32>
    #<edge77 32 open-reading-frame 33> #<edge78 34 digit-sequence 35> #<edge79 34 number 35>)
   (:LOWER :HYPHEN :LOWER :HYPHEN :LOWER))
  "cell-to-cell" MAKE-HYPHENATED-TRIPLE)
 (((#<edge38 9 have 10> #<edge39 10 suggest 11> #<edge41 11 the 12> #<edge42 12 importance 13>
    #<edge44 13 of 14>)
   (:LOWER :HYPHEN :LOWER :HYPHEN :LOWER))
  "loss-of-function" MAKE-HYPHENATED-TRIPLE)
 (((#<edge434 199 subordinate-conjunction 201> #<edge435 223 point-mutation 225>
    #<edge437 220 point-mutation 225> #<edge438 219 figure 225> #<edge439 218 parentheses 226>)
   (:LOWER :HYPHEN :LOWER :HYPHEN :LOWER))
  "cell-to-cell" MAKE-HYPHENATED-TRIPLE)
 (((#<edge396 213 "the" 214> #<edge397 213 the 214> #<edge399 219 figure 220>
    #<edge400 219 article-figure 220> #<edge401 220 digit-sequence 221>)
   (:LOWER :HYPHEN :LOWER :HYPHEN :LOWER))
  "cell-to-cell" MAKE-HYPHENATED-TRIPLE)
 (((#<edge21 376 wild-type 379> #<edge23 393 due-to 395>) (:PROTEIN :-/-)) "Slc26a4−/−"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge143 68 bio-complex 69> #<edge144 69 semicolon 70> #<edge146 70 that 71>
    #<edge147 71 be 72> #<edge149 73 "it" 74>)
   (:LOWER :HYPHEN :LOWER :HYPHEN :LOWER))
  "loss-of-function" MAKE-HYPHENATED-TRIPLE)
 (((#<edge36 7 reinitiation 8> #<edge37 8 bio-process 9> #<edge39 10 suggest 11>
    #<edge40 11 "the" 12> #<edge41 11 the 12>)
   (:LOWER :HYPHEN :LOWER :HYPHEN :LOWER))
  "cell-to-cell" MAKE-HYPHENATED-TRIPLE)
 (((:TILDA #<edge75 31 downstream 32> #<edge89 48 COMMA 49>) (:TILDA :DIGITS :FOLD-ENDURANT))
  "∼10-fold" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge1 118 protein 120> #<edge3 139 up-to 141>) (:PROTEIN :-/-)) "Slc26a4−/−"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge19 319 even-if 321> #<edge21 376 wild-type 379>) (:PROTEIN :-/-)) "Slc26a4−/−"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge15 300 wild-type 303> #<edge17 314 wild-type 317>) (:PROTEIN :+/-)) "Slc26a4+/−"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge134 62 "a" 63> #<edge135 62 a 63> #<edge137 64 mobility 65> #<edge138 65 "of" 66>
    #<edge139 65 of 66>)
   (:LOWER :HYPHEN :LOWER :HYPHEN :PROTEIN))
  "base-to-apex" MAKE-HYPHENATED-TRIPLE)
 (((#<edge52 18 "the" 19> #<edge53 18 the 19> #<edge55 19 stop-endurant 20>
    #<edge56 20 bio-entity 21> #<edge57 21 "of" 22>)
   (:LOWER :HYPHEN :LOWER :HYPHEN :PROTEIN))
  "base-to-apex" MAKE-HYPHENATED-TRIPLE)
 (((:TILDA #<edge213 111 that 112>) (:TILDA :SINGLE-DIGIT)) "∼4" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge716 384 as 385> #<edge717 384 as 385> #<edge718 385 such 386>) (:LOWER :HYPHEN :LOWER))
  "product-inhibition" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge701 381 site 383> #<edge702 376 site 383> #<edge703 375 site 383> #<edge51 17 of 18>)
   (:CAPITALIZED :HYPHEN :FORWARD-SLASH :MOLECULE))
  "Cl−/HCO3" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge619 292 subordinate-conjunction 294> #<edge620 332 point-mutation 334>
    #<edge621 344 point-mutation 346> #<edge43 13 "of" 14>)
   (:CAPITALIZED :HYPHEN :FORWARD-SLASH :MOLECULE))
  "Cl−/HCO3" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge532 285 close-to 291> #<edge533 266 at 285> #<edge534 254 at 264> #<edge35 6 HYPHEN 7>)
   (:CAPITALIZED :HYPHEN :FORWARD-SLASH :MOLECULE))
  "Cl−/HCO3" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge408 224 amino-acid 225> #<edge409 226 COMMA 227> #<edge410 227 modifier 228>
    #<edge25 415 protein 417>)
   (:CAPITALIZED :HYPHEN :FORWARD-SLASH :MOLECULE))
  "Cl−/HCO3" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge332 172 reinitiation 173> #<edge333 173 efficiency 174> #<edge334 176 how 177>
    #<edge21 376 wild-type 379>)
   (:CAPITALIZED :HYPHEN :FORWARD-SLASH :MOLECULE))
  "Cl−/HCO3" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge13 285 close-to 287> #<edge318 163 "the" 164> #<edge15 300 wild-type 303>)
   (:MOLECULE :FORWARD-SLASH :MOLECULE))
  "Na+/K+" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge303 90 that 91> #<edge304 153 "this" 154>) (:SINGLE-CAP :PLUS-SIGN)) "H+"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge15 300 wild-type 303> #<edge17 314 wild-type 317>) (:PROTEIN :-/-)) "Slc26a4−/−"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge11 274 such-as 276> #<edge13 285 close-to 287>) (:PROTEIN :+/-)) "Slc26a4+/−"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:TILDA #<edge1 118 protein 120>) (:TILDA :CELL-LINE)) "∼E10" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge19 319 even-if 321> #<edge21 376 wild-type 379>) (:PROTEIN :-/-)) "Slc26a4−/−"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge15 300 wild-type 303> #<edge17 314 wild-type 317>) (:PROTEIN :+/-)) "Slc26a4+/−"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge11 274 such-as 276> #<edge13 285 close-to 287>) (:PROTEIN :-/-)) "Slc26a4−/−"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge3 139 up-to 141> #<edge5 174 but-rather 176>) (:PROTEIN :+/-)) "Slc26a4+/−"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge19 319 even-if 321> #<edge21 376 wild-type 379>) (:PROTEIN :-/-)) "Slc26a4−/−"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge15 300 wild-type 303> #<edge17 314 wild-type 317>) (:PROTEIN :+/-)) "Slc26a4+/−"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge9 214 wild-type 217> #<edge11 274 such-as 276>) (:PROTEIN :-/-)) "Slc26a4−/−"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge3 139 up-to 141> #<edge5 174 but-rather 176>) (:PROTEIN :+/-)) "Slc26a4+/−"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge175 73 ability 77> #<edge176 70 be 72> #<edge177 65 of 69>) (:LOWER :HYPHEN :LOWER))
  "micro-surgically" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge35 6 HYPHEN 7> #<edge37 8 bio-process 9>) (:PROTEIN :-/-)) "Slc26a4−/−"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge31 3 on 4> #<edge33 4 the 5>) (:PROTEIN :+/-)) "Slc26a4+/−" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge25 415 protein 417> #<edge27 1 sequencer 2>) (:PROTEIN :-/-)) "Slc26a4−/−"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge21 376 wild-type 379> #<edge23 393 due-to 395>) (:PROTEIN :+/-)) "Slc26a4+/−"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge15 300 wild-type 303> #<edge17 314 wild-type 317>) (:PROTEIN :+/-)) "Slc26a4+/−"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge11 274 such-as 276> #<edge13 285 close-to 287>) (:PROTEIN :-/-)) "Slc26a4−/−"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:TILDA #<edge85 42 number 43>) (:TILDA :PROTEIN)) "∼P4.5" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge5 174 but-rather 176> #<edge7 184 by-virtue-of 187>) (:PROTEIN :-/-)) "Slc26a4−/−"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge1 118 protein 120> #<edge3 139 up-to 141>) (:PROTEIN :+/-)) "Slc26a4+/−"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge407 223 number 224> #<edge408 224 amino-acid 225> #<edge411 228 reinitiation 229>)
   (:SINGLE-DIGIT :COLON :DIGITS))
  "1∶1,000" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge401 220 digit-sequence 221> #<edge402 220 number 221> #<edge404 221 a 222>)
   (:SINGLE-DIGIT :COLON :DIGITS))
  "1∶40" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge376 157 be 159> #<edge378 153 suggest 155>) (:CAPITALIZED :DIGITS)) "Alexa488"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge332 172 reinitiation 173> #<edge333 173 efficiency 174> #<edge336 177 well-endurant 178>)
   (:SINGLE-DIGIT :COLON :DIGITS))
  "1∶1,000" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge323 166 stop-endurant 167> #<edge325 167 bio-entity 168>) (:CAPITALIZED :DIGITS))
  "Alexa594" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge253 141 number 142> #<edge254 142 bio-entity 143> #<edge256 143 downstream 144>)
   (:SINGLE-DIGIT :COLON :DIGITS))
  "1∶200" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge11 274 such-as 276> #<edge13 285 close-to 287> #<edge244 133 when 134>
    #<edge15 300 wild-type 303>)
   (:PROTEIN :MOLECULE :FORWARD-SLASH :MOLECULE))
  "anti-Na+/K+" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge203 103 "to" 104> #<edge204 103 to 104> #<edge207 107 figure 108>)
   (:SINGLE-DIGIT :COLON :DIGITS))
  "1∶1,000" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge197 98 "the" 99> #<edge198 98 the 99> #<edge200 100 be 101>)
   (:SINGLE-DIGIT :COLON :DIGITS))
  "1∶40" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge145 70 "that" 71> #<edge147 71 be 72>) (:CAPITALIZED :DIGITS)) "Alexa488"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge92 52 COMMA 53> #<edge93 54 digit-sequence 55> #<edge94 54 number 55>
    #<edge95 5 hyphenated-pair 8> #<edge97 37 square-brackets 40>)
   (:CAPITALIZED :HYPHEN :SINGLE-CAP :HYPHEN :DIGITS))
  "Triton-X-100" MAKE-HYPHENATED-TRIPLE)
 (((#<edge5 174 but-rather 176> #<edge7 184 by-virtue-of 187>) (:CELL-LINE :PROTEIN)) "KH2PO4"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge71 29 of 30> #<edge73 30 the 31> #<edge99 45 square-brackets 48>)
   (:CAPITALIZED :SINGLE-DIGIT :PROTEIN))
  "Na2HPO4" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge1 118 protein 120> #<edge35 6 HYPHEN 7>) (:BIO-ENTITY :HYPHENATED-NUMBER))
  "Cat#22-230-900" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:LOWER #<edge157 79 only 80> #<edge158 80 limit 81>) (:LOWER :HYPHEN :LOWER)) "cryo-sectioned"
  :NO-EDGE)
 (((#<edge105 9 suggest 11> :SHARP-SIGN) (:CAPITALIZED :SHARP-SIGN)) "Cat#"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge102 1 study-bio-method 3> #<edge103 5 bio-process 9> #<edge104 4 bio-process 9>)
   (:LOWER :HYPHEN :LOWER))
  "penicillin-streptomycin" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge88 46 number 47> :SHARP-SIGN) (:CAPITALIZED :SHARP-SIGN)) "Cat#"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge73 30 the 31> :SHARP-SIGN) (:CAPITALIZED :SHARP-SIGN)) "Cat#"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge66 26 "the" 27> #<edge67 26 the 27> #<edge68 27 start 28> #<edge69 28 bio-entity 29>
    #<edge71 29 of 30>)
   (:FULL :FORWARD-SLASH :SINGLE-CAP :HYPHEN :DIGITS))
  "DMEM/F-12" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge43 13 "of" 14> :SHARP-SIGN) (:CAPITALIZED :SHARP-SIGN)) "Cat#"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge377 157 be 160> :SHARP-SIGN #<edge378 153 suggest 155>) (:FULL :SHARP-SIGN :COLON))
  "IACUC#:" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge325 167 bio-entity 168> #<edge326 168 "per" 169> #<edge327 168 per 169>
    #<edge328 169 bio-entity 170> #<edge329 170 "that" 171>)
   (:PROTEIN :HYPHEN :LOWER :HYPHEN :LOWER))
  "tri-bromo-ethanol" MAKE-HYPHENATED-TRIPLE)
 (((#<edge314 160 "the" 161> #<edge315 160 the 161> #<edge316 161 distance 162>)
   (:LOWER :FORWARD-SLASH :SINGLE-LOWER))
  "ml/g" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge263 149 figure 150> #<edge264 149 article-figure 150> #<edge265 150 digit-sequence 151>
    #<edge266 150 number 151> #<edge267 85 subordinate-conjunction 87>)
   (:PROTEIN :HYPHEN :LOWER :HYPHEN :LOWER))
  "tri-bromo-ethanol" MAKE-HYPHENATED-TRIPLE)
 (((#<edge252 141 digit-sequence 142> #<edge253 141 number 142> #<edge254 142 bio-entity 143>)
   (:LOWER :FORWARD-SLASH :SINGLE-LOWER))
  "ml/g" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge146 70 that 71> #<edge149 73 "it" 74>) (:SINGLE-CAP :DIGITS)) "E0.5"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge66 26 "the" 27> #<edge67 26 the 27> #<edge68 27 start 28> #<edge69 28 bio-entity 29>
    #<edge70 29 "of" 30>)
   (:PROTEIN :HYPHEN :LOWER :HYPHEN :LOWER))
  "tri-bromo-ethanol" MAKE-HYPHENATED-TRIPLE)
 (((#<edge55 19 stop-endurant 20> #<edge56 20 bio-entity 21> #<edge57 21 "of" 22>)
   (:CAPITALIZED :HYPHEN :LOWER))
  "Time-pregnant" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge5 174 but-rather 176> #<edge7 184 by-virtue-of 187>) (:PROTEIN :-/-)) "Slc26a4−/−"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge1 118 protein 120> #<edge3 139 up-to 141>) (:PROTEIN :+/-)) "Slc26a4+/−"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:MIXED #<edge300 88 show 90>) (:MIXED :SINGLE-DIGIT)) "rNS1" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge151 74 modal 75> :MIXED) (:DIGITS :MIXED)) "129SvEvTac" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge21 376 wild-type 379> #<edge23 393 due-to 395>) (:PROTEIN :-/-)) "Slc26a4−/−"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge17 314 wild-type 317> #<edge19 319 even-if 321>) (:PROTEIN :+/-)) "Slc26a4+/−"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge13 285 close-to 287> #<edge15 300 wild-type 303>) (:PROTEIN :-/-)) "Slc26a4−/−"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge9 214 wild-type 217> #<edge11 274 such-as 276>) (:PROTEIN :+/-)) "Slc26a4+/−"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge5 174 but-rather 176> #<edge7 184 by-virtue-of 187>) (:PROTEIN :+/-)) "Slc26a4+/−"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge1 118 protein 120> #<edge3 139 up-to 141>) (:PROTEIN :-/-)) "Slc26a4−/−"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge7 184 by-virtue-of 187> #<edge9 214 wild-type 217>) (:PROTEIN :-/-)) "Slc26a4−/−"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge1 118 protein 120> #<edge3 139 up-to 141>) (:PROTEIN :-/-)) "Slc26a4−/−"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge256 143 downstream 144> #<edge257 144 "of" 145>) (:LOWER :COLON)) "issues:" :NO-EDGE)
 (((#<edge203 103 "to" 104> #<edge204 103 to 104> #<edge206 105 efficiency 106>)
   (:SINGLE-DIGIT :COLON :SINGLE-DIGIT))
  "1∶1" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge13 285 close-to 287> #<edge15 300 wild-type 303>) (:PROTEIN :+/-)) "Slc26a4+/−"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge9 214 wild-type 217> #<edge11 274 such-as 276>) (:PROTEIN :-/-)) "Slc26a4−/−"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:TILDA #<edge165 62 mobility 65> #<edge188 91 "the" 92>) (:TILDA :DIGITS :FOLD-ENDURANT))
  "∼100-fold" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge126 3 on 9> #<edge127 57 "this" 58> #<edge128 57 this 58>) (:MIXED :HYPHEN :LOWER))
  "pH-units" MAKE-HYPHENATED-STRUCTURE)
 (((:TILDA #<edge125 9 suggest 13>) (:TILDA :DIGITS)) "∼0.3" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge198 98 the 99> #<edge199 99 bio-entity 100> #<edge201 101 comparative 102>
    #<edge202 102 critical 103> #<edge203 103 "to" 104>)
   (:LOWER :HYPHEN :LOWER :HYPHEN :LOWER))
  "cell-to-cell" MAKE-HYPHENATED-TRIPLE)
 (((:LOWER #<edge78 34 digit-sequence 35> #<edge79 34 number 35>) (:LOWER :HYPHEN :LOWER))
  "endolymph-filled" :NO-EDGE)
 (((:TILDA #<edge38 9 have 10> #<edge54 19 stop 20>) (:TILDA :DIGITS :FOLD-ENDURANT)) "∼10-fold"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:CAPITALIZED #<edge17 314 wild-type 317>) (:CAPITALIZED :-/-)) "Pds−/−"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge13 285 close-to 287> #<edge230 124 "of" 125> #<edge232 125 "the" 126>
    #<edge15 300 wild-type 303>)
   (:PROTEIN :SINGLE-LOWER :SINGLE-DIGIT :-/-))
  "Slc26a4−/−" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:LOWER #<edge128 57 this 58> #<edge129 58 be 59>) (:LOWER :HYPHEN :LOWER)) "un-infected"
  :NO-EDGE)
 (((#<edge591 339 bio-entity 340> #<edge592 340 modal 341> #<edge593 341 cause 342>)
   (:LOWER :HYPHEN :LOWER))
  "half-life" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge566 318 COMMA 319> #<edge567 321 "the" 322> #<edge570 323 artificially 324>)
   (:LOWER :HYPHEN :LOWER))
  "fold-change" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge517 274 such-as 281> #<edge518 273 parentheses 285> #<edge521 257 bio-entity 259>)
   (:LOWER :HYPHEN :LOWER))
  "fold-change" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge220 116 "of" 117> #<edge221 116 of 117> #<edge222 117 "the" 118>)
   (:LOWER :HYPHEN :PROTEIN))
  "non-glial" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge74 31 downstream-segment 32> #<edge75 31 downstream 32> #<edge76 32 protein 33>)
   (:PROTEIN :FORWARD-SLASH :LOWER))
  "receptors/ligands" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge565 317 bio-entity 318> #<edge567 321 "the" 322> #<edge568 321 the 322>)
   (:HYPHEN :SINGLE-DIGIT :SINGLE-LOWER))
  "-1β" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge586 336 suggest 337> #<edge587 337 "that" 338> #<edge589 338 "the" 339>)
   (:FULL :HYPHEN :SINGLE-DIGIT))
  "MOI-1" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge398 217 site 218> #<edge399 219 figure 220> #<edge400 219 article-figure 220>)
   (:LOWER :HYPHEN :LOWER))
  "mock-infected" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge312 158 not 159> #<edge313 159 solely 160> #<edge315 160 the 161>)
   (:FULL :HYPHEN :SINGLE-DIGIT))
  "MOI-1" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge215 112 when 113> #<edge216 113 "the" 114> #<edge217 113 the 114>)
   (:LOWER :HYPHEN :LOWER))
  "mock-infected" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge89 48 COMMA 49> #<edge90 50 digit-sequence 51> #<edge91 50 number 51>)
   (:LOWER :HYPHEN :LOWER))
  "mock-infected" MAKE-HYPHENATED-STRUCTURE)
 (((:OPEN-ANGLE-BRACKET #<edge111 23 open-reading-frame 25>) (:OPEN-ANGLE-BRACKET :DIGITS)) "<0.05"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge86 44 COMMA 45> #<edge88 46 number 47> #<edge89 48 COMMA 49>)
   (:HYPHEN :SINGLE-DIGIT :HYPHEN))
  "-8-" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge81 38 digit-sequence 39> #<edge83 40 COMMA 41> #<edge84 42 digit-sequence 43>)
   (:HYPHEN :SINGLE-DIGIT :HYPHEN))
  "-6-" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge68 27 start 28> #<edge69 28 bio-entity 29> #<edge71 29 of 30>)
   (:FULL :HYPHEN :SINGLE-DIGIT))
  "MOI-1" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge46 14 the 15> #<edge47 15 close-bio-process 16> #<edge49 16 proximity 17>)
   (:FULL :HYPHEN :SINGLE-DIGIT))
  "MOI-1" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge638 343 fragment 347> #<edge639 343 lambda-expression 344> #<edge641 349 direction 351>
    #<edge642 354 site 356> #<edge643 353 site 356>)
   (:FULL :HYPHEN :SINGLE-DIGIT :HYPHEN :LOWER))
  "MOI-1-infected" MAKE-HYPHENATED-TRIPLE)
 (((#<edge598 344 digit-sequence 345> #<edge599 344 number 345> #<edge601 345 amino-acid 346>)
   (:FULL :HYPHEN :SINGLE-DIGIT))
  "MOI-5" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge535 246 under 250> #<edge536 292 however 293> #<edge538 294 if 295>)
   (:FULL :HYPHEN :SINGLE-DIGIT))
  "MOI-5" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge31 3 on 4> #<edge466 253 bio-entity 254>) (:BIO-ENTITY :LOWER)) "-5-infected"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge460 247 the 248> #<edge461 248 sequencer 249> #<edge463 250 COMMA 251>
    #<edge464 251 bio-complex 252>)
   (:FULL :HYPHEN :SINGLE-DIGIT :HYPHEN))
  "MOI-1-" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge400 219 article-figure 220> #<edge401 220 digit-sequence 221>
    #<edge403 221 amino-acid 222>)
   (:FULL :HYPHEN :SINGLE-DIGIT))
  "MOI-1" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge390 207 at 208> #<edge391 208 COMMA 209> #<edge393 210 very 211>)
   (:FULL :HYPHEN :SINGLE-DIGIT))
  "MOI-5" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge295 103 to 110> #<edge296 101 critical 103> #<edge298 98 critical 103>)
   (:FULL :HYPHEN :SINGLE-DIGIT))
  "MOI-1" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge196 97 and 98> #<edge197 98 "the" 99> #<edge199 99 bio-entity 100>)
   (:FULL :HYPHEN :SINGLE-DIGIT))
  "MOI-1" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge73 30 the 31> #<edge74 31 downstream-segment 32> #<edge75 31 downstream 32>)
   (:LOWER :HYPHEN :LOWER))
  "mock-infected" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge198 98 the 99> #<edge199 99 bio-entity 100> #<edge202 102 critical 103>)
   (:FULL :HYPHEN :DIGITS))
  "MOI-0.1" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge391 208 COMMA 209> #<edge392 209 or 210> #<edge394 211 near 212>)
   (:PROTEIN :HYPHEN :SINGLE-DIGIT))
  "LAN-2" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge318 163 "the" 164> #<edge319 163 the 164> #<edge11 274 such-as 276>)
   (:DIGITS :HYPHEN :BIO-ENTITY))
  "two-log10" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge297 100 critical 103> #<edge298 98 critical 103> #<edge300 88 show 90>)
   (:FULL :HYPHEN :SINGLE-DIGIT))
  "MOI-1" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge257 144 "of" 145> #<edge258 144 of 145> #<edge260 146 modifier 147>)
   (:FULL :HYPHEN :SINGLE-DIGIT))
  "MOI-5" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge252 141 digit-sequence 142> #<edge253 141 number 142> #<edge7 184 by-virtue-of 187>)
   (:DIGITS :HYPHEN :BIO-ENTITY))
  "nine-log10" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge208 107 article-figure 108> #<edge209 108 digit-sequence 109> #<edge211 110 and 111>)
   (:FULL :HYPHEN :SINGLE-DIGIT))
  "MOI-1" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge187 90 that 91> #<edge188 91 "the" 92> #<edge3 139 up-to 141>)
   (:DIGITS :HYPHEN :BIO-ENTITY))
  "seven-log10" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge146 70 that 71> #<edge147 71 be 72> #<edge149 73 "it" 74>) (:FULL :HYPHEN :SINGLE-DIGIT))
  "MOI-1" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge130 59 believe 60> #<edge131 60 "to" 61> #<edge132 60 to 61>)
   (:SINGLE-DIGIT :COLON :DIGITS))
  "1:2000" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge100 49 square-brackets 52> #<edge101 53 square-brackets 56> #<edge103 5 bio-process 9>)
   (:SINGLE-DIGIT :COLON :DIGITS))
  "1:1000" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge9 214 wild-type 217> #<edge115 30 open-reading-frame 36> #<edge11 274 such-as 276>)
   (:MOLECULE :FORWARD-SLASH :MOLECULE))
  "Triton X-100/sodium citrate" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge129 58 be 59> #<edge130 59 believe 60> #<edge132 60 to 61>)
   (:FULL :HYPHEN :SINGLE-DIGIT))
  "MOI-1" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge66 26 "the" 27> #<edge67 26 the 27> #<edge69 28 bio-entity 29>)
   (:FULL :HYPHEN :SINGLE-DIGIT))
  "MOI-1" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge148 72 COMMA 73> #<edge149 73 "it" 74> #<edge154 77 "to" 78>)
   (:LOWER :FORWARD-SLASH :LOWER))
  "cells/well" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge133 61 reflect 62> #<edge135 62 a 63> #<edge136 63 restrict 64>)
   (:HYPHEN :SINGLE-DIGIT :SINGLE-LOWER))
  "-1β" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge198 98 the 99> #<edge199 99 bio-entity 100> #<edge7 184 by-virtue-of 187>)
   (:LOWER :HYPHEN :CELL-TYPE))
  "non-neuronal cells" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge3 139 up-to 141> #<edge106 11 importance 13> #<edge108 14 proximity 17>)
   (:PROTEIN :FORWARD-SLASH :SINGLE-DIGIT))
  "caspase3/9" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge128 57 this 58> #<edge129 58 be 59>) (:FULL :COLON)) "ODE:" :NO-EDGE)
 (((#<edge110 18 bio-entity 21> #<edge111 23 open-reading-frame 25>) (:PROTEIN :COLON)) "LD:"
  :NO-EDGE)
 (((#<edge89 48 COMMA 49> #<edge90 50 digit-sequence 51>) (:FULL :COLON)) "MRCA:" :NO-EDGE)
 (((#<edge75 31 downstream 32> #<edge76 32 protein 33>) (:FULL :COLON)) "UPGMA:" :NO-EDGE)
 (((#<edge33 4 the 5> #<edge34 5 terminate 6> #<edge35 6 HYPHEN 7> #<edge36 7 reinitiation 8>
    #<edge38 9 have 10>)
   (:LOWER :HYPHEN :LOWER :HYPHEN :LOWER))
  "foot-and-mouth" MAKE-HYPHENATED-TRIPLE)
 (((#<edge227 122 place 123> #<edge228 123 downstream-segment 124> #<edge229 123 downstream 124>)
   (:LOWER :HYPHEN :LOWER))
  "competitor-colonizer" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge160 82 following-adj 83> #<edge161 82 following 83> #<edge162 83 terminate 84>)
   (:LOWER :HYPHEN :LOWER))
  "trade-off" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge156 78 undergo 79> #<edge157 79 only 80> #<edge158 80 limit 81>) (:LOWER :HYPHEN :LOWER))
  "competition-colonization" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge171 79 limit 81> #<edge173 82 following 84>) (:SINGLE-CAP :SINGLE-DIGIT)) "R0"
  REIFY-TWO-PART-LABEL)
 (((#<edge179 57 believe 60> #<edge180 85 however 86> #<edge182 87 "we" 88>
    #<edge183 87 pronoun/first/plural 88> #<edge184 88 show 89>)
   (:LOWER :HYPHEN :LOWER :HYPHEN :LOWER))
  "plaque-to-plaque" MAKE-HYPHENATED-TRIPLE)
 (((#<edge64 24 open-reading-frame 25> #<edge65 25 and 26> #<edge66 26 "the" 27>)
   (:LOWER :HYPHEN :LOWER))
  "whole-organism" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge3 139 up-to 141> #<edge5 174 but-rather 176>) (:SINGLE-CAP :SINGLE-DIGIT)) "R0"
  REIFY-TWO-PART-LABEL)
 (((#<edge13 285 close-to 287> #<edge14 300 "wild-type" 303> #<edge15 300 wild-type 303>)
   (:LOWER :HYPHEN :LOWER))
  "inter-host" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge357 195 the 196> #<edge358 196 bio-entity 197> #<edge359 191 bio-complex 193>)
   (:LOWER :HYPHEN :LOWER))
  "inter-host" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge159 81 movement 82> #<edge161 82 following 83>) (:SINGLE-CAP :SINGLE-DIGIT)) "R0"
  REIFY-TWO-PART-LABEL)
 (((#<edge48 15 close 16> #<edge50 17 "of" 18>) (:SINGLE-CAP :SINGLE-DIGIT)) "R0"
  REIFY-TWO-PART-LABEL)
 (((#<edge244 133 when 134> :ASTERISK) (:SINGLE-LOWER :ASTERISK)) "v*" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge49 16 proximity 17> #<edge51 17 of 18>) (:SINGLE-CAP :SINGLE-DIGIT)) "R0"
  REIFY-TWO-PART-LABEL)
 (((#<edge10 274 "such as" 276> #<edge12 285 "close to" 287>) (:SINGLE-CAP :SINGLE-DIGIT)) "R0"
  REIFY-TWO-PART-LABEL)
 (((:LOWER #<edge304 153 "this" 154> #<edge305 153 this 154>)
   (:LOWER :FORWARD-SLASH :SINGLE-LOWER))
  "cp/b" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge218 114 start 115> #<edge220 116 "of" 117>) (:SINGLE-CAP :SINGLE-DIGIT)) "R0"
  REIFY-TWO-PART-LABEL)
 (((#<edge211 110 and 111> #<edge213 111 that 112>) (:SINGLE-CAP :SINGLE-DIGIT)) "R0"
  REIFY-TWO-PART-LABEL)
 (((#<edge269 106 parentheses 110> #<edge270 148 parentheses 152>
    #<edge272 95 lambda-expression 96>)
   (:PROTEIN :HYPHEN :LOWER))
  "antibody-escape" PACKAGE-QUALIFYING-PAIR)
 (((#<edge265 150 digit-sequence 151> #<edge266 150 number 151>
    #<edge267 85 subordinate-conjunction 87>)
   (:LOWER :HYPHEN :LOWER))
  "rule-based" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge255 143 downstream-segment 144> #<edge256 143 downstream 144> #<edge258 144 of 145>
    #<edge259 145 pronoun/inanimate 146> #<edge261 147 position-bio-process 148>)
   (:LOWER :HYPHEN :LOWER :HYPHEN :LOWER))
  "standard-of-care" MAKE-HYPHENATED-TRIPLE)
 (((#<edge157 79 only 80> #<edge158 80 limit 81> #<edge159 81 movement 82>)
   (:DIGITS :HYPHEN :LOWER))
  "three-dimensional" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge240 131 detect 132> #<edge241 132 even 133> #<edge242 132 even 133>)
   (:CAPITALIZED :HYPHEN :LOWER))
  "Intra-host" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge55 19 stop-endurant 20> #<edge56 20 bio-entity 21> #<edge57 21 "of" 22>)
   (:LOWER :HYPHEN :PROTEIN))
  "pseudo-protein" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge326 168 "per" 169> #<edge327 168 per 169> #<edge329 170 "that" 171>
    #<edge330 170 that 171> #<edge332 172 reinitiation 173> #<edge333 173 efficiency 174>
    #<edge335 177 well-bio-process 178> #<edge336 177 well-endurant 178>
    #<edge338 177 modifier 178>)
   (:LOWER :HYPHEN :LOWER :HYPHEN :LOWER :HYPHEN :LOWER :HYPHEN :LOWER))
  "adding-fuel-to-the-fire" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:LOWER #<edge85 42 number 43>) (:LOWER :DIGITS)) "rgp120" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge174 74 ability 77> #<edge175 73 ability 77> #<edge176 70 be 72> #<edge177 65 of 69>
    #<edge179 57 believe 60>)
   (:LOWER :HYPHEN :LOWER :HYPHEN :LOWER))
  "drift-and-shift" MAKE-HYPHENATED-TRIPLE)
 (((#<edge281 137 move-something-somewhere 139> #<edge282 146 position 148>
    #<edge283 145 position 148>)
   (:LOWER :HYPHEN :LOWER))
  "distance-based" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge12 285 "close to" 287> #<edge13 285 close-to 287> #<edge14 300 "wild-type" 303>)
   (:LOWER :HYPHEN :LOWER))
  "character-based" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge7 184 by-virtue-of 187> #<edge8 214 "wild-type" 217> #<edge9 214 wild-type 217>)
   (:LOWER :HYPHEN :LOWER))
  "distance-based" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge208 107 article-figure 108> #<edge209 108 digit-sequence 109> #<edge210 108 number 109>)
   (:CAPITALIZED :HYPHEN :LOWER))
  "Distance-based" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge105 9 suggest 11> #<edge106 11 importance 13> #<edge107 15 proximity 17>)
   (:CAPITALIZED :HYPHEN :LOWER))
  "Distance-based" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge65 25 and 26> #<edge66 26 "the" 27> #<edge67 26 the 27>) (:LOWER :HYPHEN :LOWER))
  "distance-based" MAKE-HYPHENATED-STRUCTURE)
 (((:MIXED #<edge388 206 bio-entity 207> :CAPITALIZED) (:MIXED :HYPHEN :CAPITALIZED))
  "McDonald–Kreitman" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge346 187 "the" 188> #<edge347 187 the 188> #<edge348 188 distance 189>)
   (:LOWER :HYPHEN :PROTEIN))
  "infinite-alleles" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:CAPITALIZED #<edge323 166 stop-endurant 167> :CAPITALIZED)
   (:CAPITALIZED :HYPHEN :CAPITALIZED))
  "Ewens–Watterson" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge342 179 bio-complex 180> #<edge344 181 be 182>) (:SINGLE-CAP :SINGLE-DIGIT)) "H3"
  REIFY-TWO-PART-LABEL)
 (((#<edge174 74 ability 77> #<edge175 73 ability 77> #<edge176 70 be 72>) (:LOWER :HYPHEN :LOWER))
  "post-vaccination" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge153 76 ability 77> #<edge154 77 "to" 78> #<edge155 77 to 78>) (:DIGITS :HYPHEN :DIGITS))
  "1968–1969" LOOK-FOR-YEAR-EXPRESSION)
 (((#<edge13 285 close-to 287> #<edge14 300 "wild-type" 303> #<edge15 300 wild-type 303>)
   (:LOWER :HYPHEN :LOWER))
  "negative-stranded" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge8 214 "wild-type" 217> #<edge9 214 wild-type 217> #<edge10 274 "such as" 276>)
   (:LOWER :HYPHEN :LOWER))
  "peptide-based" MAKE-HYPHENATED-STRUCTURE)
 (((:CAPITALIZED #<edge138 65 "of" 66>) (:CAPITALIZED :COLON)) "Candivf:" :NO-EDGE)
 (((#<edge106 11 importance 13> #<edge107 15 proximity 17>) (:PROTEIN :COLON)) "TLR:" :NO-EDGE)
 (((#<edge72 30 "the" 31> #<edge73 30 the 31> #<edge74 31 downstream-segment 32>)
   (:CAPITALIZED :HYPHEN :CAPITALIZED))
  "Pathogen-Associated" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge30 3 "on" 4> #<edge31 3 on 4>) (:FULL :COLON)) "BLAST:" :NO-EDGE)
 (((#<edge237 128 COMMA 129> #<edge238 129 reinitiation 130> #<edge241 132 even 133>)
   (:LOWER :HYPHEN :LOWER))
  "pathogen-side" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge77 32 open-reading-frame 33> #<edge78 34 digit-sequence 35> #<edge79 34 number 35>)
   (:LOWER :HYPHEN :LOWER))
  "so-called" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge64 24 open-reading-frame 25> #<edge65 25 and 26> #<edge66 26 "the" 27>)
   (:LOWER :HYPHEN :LOWER))
  "long-standing" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge106 11 importance 13> #<edge124 13 of 25>) (:LOWER :TIME-UNIT)) "present-day"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge320 164 start 165> #<edge321 165 and 166> #<edge322 166 stop 167>)
   (:LOWER :HYPHEN :LOWER))
  "pathogen-derived" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge195 96 bio-complex 97> #<edge196 97 and 98> #<edge197 98 "the" 99>)
   (:LOWER :HYPHEN :LOWER))
  "statistically-grounded" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge191 93 between 94> #<edge192 94 "the" 95> #<edge193 94 the 95>) (:LOWER :HYPHEN :LOWER))
  "empirically-based" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge249 137 be 138> #<edge250 138 move-something-somewhere 139> #<edge251 138 move-to 139>
    #<edge252 141 digit-sequence 142> #<edge253 141 number 142>)
   (:LOWER :HYPHEN :LOWER :HYPHEN :LOWER))
  "steps-within-steps" MAKE-HYPHENATED-TRIPLE)
 (((#<edge221 116 of 117> #<edge222 117 "the" 118> #<edge225 120 open-reading-frame 121>)
   (:PROTEIN :HYPHEN :LOWER))
  "Protein-side" PACKAGE-QUALIFYING-PAIR)
 (((#<edge192 94 "the" 95> #<edge193 94 the 95> #<edge195 96 bio-complex 97>)
   (:LOWER :HYPHEN :LOWER))
  "time-course" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge142 67 tethere 68> #<edge143 68 bio-complex 69> #<edge146 70 that 71>)
   (:CAPITALIZED :HYPHEN :LOWER))
  "Pathogen-side" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge83 40 COMMA 41> #<edge84 42 digit-sequence 43> #<edge85 42 number 43>)
   (:CAPITALIZED :HYPHEN :LOWER))
  "Pathogen-associated" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge23 393 due-to 395> #<edge24 415 "eif3" 417> #<edge25 415 protein 417>)
   (:CAPITALIZED :HYPHEN :LOWER))
  "So-called" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge135 62 a 63> #<edge136 63 restrict 64> #<edge139 65 of 66>) (:PROTEIN :HYPHEN :LOWER))
  "protein-side" PACKAGE-QUALIFYING-PAIR)
 (((#<edge128 57 this 58> #<edge129 58 be 59> #<edge132 60 to 61>) (:LOWER :HYPHEN :LOWER))
  "pathogen-side" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge152 75 be 76> #<edge153 76 ability 77> #<edge154 77 "to" 78>) (:LOWER :HYPHEN :LOWER))
  "property-activity" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge148 72 COMMA 73> #<edge149 73 "it" 74> #<edge150 73 pronoun/inanimate 74>)
   (:LOWER :HYPHEN :LOWER))
  "structure-activity" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge41 11 the 12> #<edge42 12 importance 13> #<edge43 13 "of" 14>)
   (:LOWER :FORWARD-SLASH :PROTEIN))
  "info/VaxiJen" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge58 21 of 22> #<edge59 22 "the" 23> #<edge60 22 the 23>) (:LOWER :HYPHEN :LOWER))
  "alignment-independent" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge273 94 bio-complex 97> #<edge274 98 bio-entity 100> #<edge275 104 efficiency 106>)
   (:LOWER :HYPHEN :LOWER))
  "structure-activity" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge204 103 to 104> #<edge205 104 reinitiation 105> #<edge206 105 efficiency 106>)
   (:LOWER :HYPHEN :LOWER))
  "equal-length" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge176 70 be 72> #<edge177 65 of 69> #<edge178 62 mobility 69>) (:LOWER :HYPHEN :LOWER))
  "alignment-independent" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge129 58 be 59> #<edge130 59 believe 60> #<edge131 60 "to" 61>) (:LOWER :HYPHEN :PROTEIN))
  "whole-protein" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge163 58 believe 60> #<edge164 60 reflect 62> #<edge165 62 mobility 65>)
   (:LOWER :HYPHEN :LOWER))
  "alignment-based" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge66 26 "the" 27> #<edge67 26 the 27> #<edge68 27 start 28>) (:LOWER :HYPHEN :LOWER))
  "micro-organisms" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge48 15 close 16> #<edge49 16 proximity 17> #<edge50 17 "of" 18>) (:LOWER :HYPHEN :LOWER))
  "so-called" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge118 21 of 25> #<edge119 17 of 21> #<edge120 14 proximity 21>) (:LOWER :HYPHEN :LOWER))
  "cut-off" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge157 79 only 80> #<edge158 80 limit 81>) (:LOWER :COLON)) "sources:" :NO-EDGE)
 (((#<edge55 19 stop-endurant 20> #<edge56 20 bio-entity 21> #<edge57 21 "of" 22>)
   (:LOWER :HYPHEN :LOWER))
  "bench-mark" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge174 74 ability 77> #<edge175 73 ability 77> #<edge176 70 be 72>) (:LOWER :HYPHEN :LOWER))
  "structural-basis" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge134 62 "a" 63> #<edge135 62 a 63> #<edge136 63 restrict 64>) (:LOWER :HYPHEN :LOWER))
  "so-called" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge139 65 of 66> #<edge140 66 "the" 67> #<edge141 66 the 67>) (:LOWER :HYPHEN :LOWER))
  "cross-reactivity" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge124 13 of 25> #<edge125 9 suggest 13> #<edge126 3 on 9>) (:LOWER :HYPHEN :LOWER))
  "high-affinity" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge116 29 of 36> #<edge117 27 start 29> #<edge118 21 of 25>) (:LOWER :HYPHEN :LOWER))
  "cross-reactivity" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge120 14 proximity 21> #<edge121 15 close 16> #<edge122 14 proximity 25>)
   (:LOWER :HYPHEN :LOWER))
  "inexactly-specified" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge32 4 "the" 5> #<edge33 4 the 5> #<edge34 5 terminate 6>) (:LOWER :HYPHEN :PROTEIN))
  "self-proteins" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge35 6 HYPHEN 7> #<edge36 7 reinitiation 8>) (:LOWER :COLON)) "comment:" :NO-EDGE)
 (((#<edge306 154 suggest 155> #<edge307 155 "that" 156> :LOWER) (:LOWER :HYPHEN :LOWER))
  "cut-offs" :NO-EDGE)
 (((#<edge302 85 show 90> #<edge303 90 that 91> #<edge304 153 "this" 154>)
   (:CAPITALIZED :HYPHEN :LOWER))
  "Empirically-selected" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge297 100 critical 103> #<edge298 98 critical 103> #<edge299 93 between 97>)
   (:PROTEIN :HYPHEN :LOWER))
  "PHI-base" PACKAGE-QUALIFYING-PAIR)
 (((#<edge161 82 following 83> #<edge162 83 terminate 84> :LOWER #<edge163 58 believe 60>
    #<edge165 62 mobility 65>)
   (:LOWER :FORWARD-SLASH :LOWER :FORWARD-SLASH :LOWER))
  "eu/vhsv/index" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge107 15 proximity 17> #<edge108 14 proximity 17>) (:PROTEIN :FORWARD-SLASH)) "gov/"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge40 11 "the" 12> #<edge41 11 the 12> #<edge42 12 importance 13> #<edge43 13 "of" 14>)
   (:LOWER :FORWARD-SLASH :PROTEIN :FORWARD-SLASH))
  "cn/VFs/" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:FULL #<edge38 9 have 10>) (:FULL :COLON)) "URL:" :NO-EDGE)
 (((#<edge24 415 "eif3" 417> #<edge25 415 protein 417> #<edge26 415 bio-complex 417>)
   (:LOWER :FORWARD-SLASH :LOWER))
  "adherence/colonization" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge22 393 "due to" 395> #<edge23 393 due-to 395>) (:LOWER :COLON)) "groups:" :NO-EDGE)
 (((#<edge83 40 COMMA 41> #<edge84 42 digit-sequence 43> #<edge86 44 COMMA 45>)
   (:LOWER :HYPHEN :LOWER))
  "front-line" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge27 1 sequencer 2> #<edge28 2 study-bio-method 3> #<edge29 2 study-data 3>)
   (:LOWER :HYPHEN :LOWER))
  "so-called" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge141 66 the 67> #<edge142 67 tethere 68> #<edge143 68 bio-complex 69>)
   (:LOWER :HYPHEN :PROTEIN))
  "peptide-MHC" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge22 393 "due to" 395> #<edge23 393 due-to 395> #<edge25 415 protein 417>)
   (:LOWER :HYPHEN :LOWER))
  "factory-scale" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge200 100 be 101> #<edge201 101 comparative 102> #<edge202 102 critical 103>)
   (:LOWER :HYPHEN :LOWER))
  "high-scoring" MAKE-HYPHENATED-STRUCTURE)
 (((:FULL #<edge142 67 tethere 68> #<edge143 68 bio-complex 69>) (:FULL :HYPHEN :PROTEIN))
  "SWISS-PROT" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge70 29 "of" 30> #<edge71 29 of 30> #<edge72 30 "the" 31>) (:LOWER :HYPHEN :LOWER))
  "well-studied" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge244 133 when 134> #<edge245 134 "the" 135> #<edge246 134 the 135>)
   (:LOWER :HYPHEN :LOWER))
  "soluble-rooted" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge112 22 open-reading-frame 25> #<edge113 31 open-reading-frame 33>
    #<edge114 30 open-reading-frame 33>)
   (:LOWER :HYPHEN :LOWER))
  "level-based" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge322 166 stop 167> #<edge323 166 stop-endurant 167> #<edge324 167 bio-entity 168>)
   (:LOWER :FORWARD-SLASH :LOWER))
  "client/server" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge233 125 the 126> #<edge234 126 stop 127> #<edge235 126 stop-endurant 127>)
   (:LOWER :HYPHEN :LOWER))
  "if–then" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge153 76 ability 77> #<edge154 77 "to" 78> #<edge155 77 to 78>)
   (:PROTEIN :HYPHEN :SINGLE-CAP))
  "PSORT-B" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge64 24 open-reading-frame 25> #<edge65 25 and 26> #<edge66 26 "the" 27>)
   (:LOWER :HYPHEN :LOWER))
  "knowledge-based" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge56 20 bio-entity 21> #<edge57 21 "of" 22> #<edge58 21 of 22>) (:LOWER :HYPHEN :LOWER))
  "well-used" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge37 8 bio-process 9> #<edge38 9 have 10> #<edge42 12 importance 13> #<edge43 13 "of" 14>
    #<edge44 13 of 14>)
   (:PROTEIN :HYPHEN :SINGLE-CAP :HYPHEN :LOWER))
  "Peptidase-I-and" MAKE-HYPHENATED-TRIPLE)
 (((#<edge457 204 require 207> #<edge458 246 under 247> #<edge459 247 "the" 248>)
   (:LOWER :HYPHEN :PROTEIN))
  "multi-protein" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge408 224 amino-acid 225> #<edge409 226 COMMA 227> #<edge411 228 reinitiation 229>)
   (:LOWER :HYPHEN :LOWER))
  "under-estimate" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge135 62 a 63> #<edge136 63 restrict 64> #<edge137 64 mobility 65>)
   (:LOWER :HYPHEN :LOWER))
  "sequence-derived" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge10 274 "such as" 276> #<edge11 274 such-as 276> #<edge12 285 "close to" 287>)
   (:LOWER :HYPHEN :LOWER))
  "well-studied" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge48 15 close 16> #<edge49 16 proximity 17>) (:LOWER :COLON)) "approaches:" :NO-EDGE)
 (((#<edge99 45 square-brackets 48> #<edge100 49 square-brackets 52>
    #<edge101 53 square-brackets 56>)
   (:LOWER :HYPHEN :LOWER))
  "pre-existing" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge336 177 well-endurant 178> #<edge337 177 well-adverbial 178>) (:DIGITS :PLUS-SIGN))
  "3000+" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge169 74 be 76> #<edge170 77 undergo 79> #<edge171 79 limit 81>) (:LOWER :HYPHEN :LOWER))
  "self-reinforcement" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge158 80 limit 81> #<edge159 81 movement 82> #<edge160 82 following-adj 83>)
   (:LOWER :HYPHEN :LOWER))
  "pre-selection" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge113 31 open-reading-frame 33> #<edge114 30 open-reading-frame 33>
    #<edge115 30 open-reading-frame 36>)
   (:PROTEIN :HYPHEN :LOWER))
  "MHC-peptide" PACKAGE-QUALIFYING-PAIR)
 (((#<edge151 74 modal 75> #<edge152 75 be 76> #<edge153 76 ability 77>) (:LOWER :HYPHEN :LOWER))
  "high-quality" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge130 59 believe 60> #<edge131 60 "to" 61> #<edge132 60 to 61>) (:LOWER :HYPHEN :LOWER))
  "structure-driven" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge160 82 following-adj 83> #<edge161 82 following 83>) (:LOWER :COLON)) "changing:"
  :NO-EDGE)
 (((#<edge99 45 square-brackets 48> #<edge100 49 square-brackets 52>
    #<edge101 53 square-brackets 56>)
   (:LOWER :HYPHEN :LOWER))
  "informatic-based" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge122 14 proximity 25> #<edge123 15 close 16> #<edge124 13 of 25>) (:LOWER :HYPHEN :LOWER))
  "micro-organism" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge97 37 square-brackets 40> #<edge98 41 square-brackets 44>
    #<edge99 45 square-brackets 48>)
   (:LOWER :HYPHEN :LOWER))
  "laboratory-based" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge178 62 mobility 69> #<edge179 57 believe 60>) (:LOWER :COLON)) "hand:" :NO-EDGE)
 (((:HORIZONTAL_ELLIPSIS #<edge88 46 number 47>) (:HORIZONTAL_ELLIPSIS :LOWER)) "…foreign"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge356 195 "the" 196> #<edge357 195 the 196> #<edge358 196 bio-entity 197>)
   (:LOWER :HYPHEN :LOWER))
  "epitope-based" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge183 87 pronoun/first/plural 88> #<edge184 88 show 89> #<edge185 89 deictic-location 90>)
   (:LOWER :HYPHEN :LOWER))
  "third-world" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge24 415 "eif3" 417> #<edge25 415 protein 417> #<edge26 415 bio-complex 417>)
   (:LOWER :HYPHEN :LOWER))
  "mutation-based" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge6 184 "by virtue of" 187> #<edge7 184 by-virtue-of 187> #<edge8 214 "wild-type" 217>)
   (:LOWER :HYPHEN :LOWER))
  "mutation-based" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge22 393 "due to" 395> #<edge23 393 due-to 395> #<edge24 415 "eif3" 417>)
   (:LOWER :HYPHEN :LOWER))
  "microorganism-based" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge13 285 close-to 287> #<edge14 300 "wild-type" 303> #<edge15 300 wild-type 303>)
   (:LOWER :HYPHEN :LOWER))
  "mutation-based" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge71 29 of 30> #<edge72 30 "the" 31> #<edge73 30 the 31>) (:LOWER :HYPHEN :LOWER))
  "mutation-based" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge25 415 protein 417> #<edge26 415 bio-complex 417> #<edge27 1 sequencer 2>)
   (:LOWER :HYPHEN :LOWER))
  "well-defined" MAKE-HYPHENATED-STRUCTURE)
 (((:SHARP-SIGN #<edge21 376 wild-type 379>) (:SHARP-SIGN :SINGLE-DIGIT)) "#1"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge5 174 but-rather 176> #<edge6 184 "by virtue of" 187>) (:LOWER :COLON)) "comments:"
  :NO-EDGE)
 (((:EQUAL-SIGN #<edge29 2 study-data 3> #<edge30 3 "on" 4>)
   (:EQUAL-SIGN :SINGLE-DIGIT :SINGLE-LOWER))
  "=6n" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge353 192 bio-complex 193> #<edge354 193 terminate 194> :BACKWARD-SLASH
    #<edge9 214 wild-type 217>)
   (:SINGLE-DIGIT :COLON :BACKWARD-SLASH :IN-FACT))
  "5:\\In fact" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge186 90 "that" 91> :BACKWARD-SLASH) (:COLON :BACKWARD-SLASH)) ":\\"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:EQUAL-SIGN #<edge1 118 protein 120>) (:EQUAL-SIGN :BIO-ENTITY)) "=Σn"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge108 14 proximity 17> #<edge109 19 bio-entity 21> #<edge110 18 bio-entity 21>)
   (:LOWER :FORWARD-SLASH :PROTEIN))
  "gene/protein" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge1 118 protein 120> #<edge10 274 "such as" 276>) (:|HTTP://| :SINGLE-LOWER)) "http://t"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge3 139 up-to 141> #<edge14 300 "wild-type" 303> #<edge15 300 wild-type 303> :LOWER)
   (:BIO-ENTITY :LOWER :FORWARD-SLASH :LOWER))
  "edu/tgi/tgipage" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge1 118 protein 120> :LOWER) (:|HTTP://| :LOWER)) "http://compbio"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:LOWER :EQUAL-SIGN #<edge23 393 due-to 395>) (:LOWER :EQUAL-SIGN :MIXED)) "db=UniGene"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge18 319 "even if" 321> #<edge19 319 even-if 321> #<edge20 376 "wild-type" 379>
    #<edge21 376 wild-type 379> #<edge22 393 "due to" 395>)
   (:PROTEIN :FORWARD-SLASH :LOWER :FORWARD-SLASH :LOWER))
  "gov/sites/entrez" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge5 174 but-rather 176> #<edge44 13 of 14>) (:WITH :SINGLE-DIGIT)) "w/3"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge1 118 protein 120> #<edge25 415 protein 417>) (:UNIT-OF-MEASURE :SINGLE-DIGIT)) "μm3"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge3 139 up-to 141> #<edge44 13 of 14> #<edge45 14 "the" 15>
    #<edge47 15 close-bio-process 16> #<edge48 15 close 16> #<edge50 17 "of" 18>)
   (:BIO-ENTITY :CAPITALIZED :HYPHEN :LOWER :HYPHEN :CAPITALIZED))
  "org/Sizes-of-Bacteria" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge23 393 due-to 395> #<edge40 11 "the" 12>) (:DIGITS :RESIDUE-ON-PROTEIN)) "6.02e23"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge12 285 "close to" 287> #<edge15 300 wild-type 303> #<edge22 393 "due to" 395> :EQUAL-SIGN
    #<edge21 376 wild-type 379> #<edge1 118 protein 120>)
   (:FORWARD-SLASH :DIGITS :RESIDUE-ON-PROTEIN :EQUAL-SIGN :DIGITS :CELL-LINE))
  "/6.02e23=5.628e−20" NIL)
 (((#<edge2 139 "up to" 141> :EQUAL-SIGN #<edge3 139 up-to 141> :DOT_OPERATOR
    #<edge5 174 but-rather 176> #<edge6 184 "by virtue of" 187> :LOWER :EQUAL-SIGN
    #<edge8 214 "wild-type" 217> :DOT_OPERATOR)
   (:SINGLE-LOWER :EQUAL-SIGN :SINGLE-LOWER :DOT_OPERATOR :DIGITS :FORWARD-SLASH :LOWER :EQUAL-SIGN
    :DIGITS :DOT_OPERATOR))
  "y=v⋅16/qq=308⋅" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge3 139 up-to 141> :EQUAL-SIGN #<edge214 112 when 113>) (:PROTEIN :EQUAL-SIGN :LOWER))
  "I1=length" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge212 111 "that" 112> #<edge213 111 that 112>) (:LOWER :COLON)) "as:" :NO-EDGE)
 (((:LOWER :EQUAL-SIGN #<edge53 18 the 19> :AND-SIGN :LOWER :EQUAL-SIGN #<edge54 19 stop 20>)
   (:LOWER :EQUAL-SIGN :CAPITALIZED :AND-SIGN :LOWER :EQUAL-SIGN :LOWER))
  "db=Genome&itool=toolbar" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge48 15 close 16> #<edge49 16 proximity 17> #<edge50 17 "of" 18> #<edge51 17 of 18>
    #<edge52 18 "the" 19>)
   (:PROTEIN :FORWARD-SLASH :LOWER :FORWARD-SLASH :LOWER))
  "gov/sites/entrez" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge261 147 position-bio-process 148> #<edge270 148 parentheses 152>)
   (:DIGITS :RESIDUE-ON-PROTEIN))
  "1.09e8" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge250 138 move-something-somewhere 139> #<edge269 106 parentheses 110>)
   (:DIGITS :RESIDUE-ON-PROTEIN))
  "1.32e8" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge240 131 detect 132> :TILDA #<edge268 141 bio-entity 143>) (:DIGITS :TILDA :MEASUREMENT))
  "55.5~66.2Mb" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge177 65 of 69> #<edge192 94 "the" 95>) (:DIGITS :RESIDUE-ON-PROTEIN)) "6.0e8"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge127 57 "this" 58> #<edge147 71 be 72> :TILDA #<edge133 61 reflect 62>
    #<edge148 72 COMMA 73>)
   (:DIGITS :RESIDUE-ON-PROTEIN :TILDA :DIGITS :RESIDUE-ON-PROTEIN))
  "5.09e8~6.34e8" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge117 27 start 29> #<edge146 70 that 71>) (:DIGITS :RESIDUE-ON-PROTEIN)) "5.2e8"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge287 139 up-to 143> #<edge288 135 start 137> #<edge290 130 detect 133>)
   (:LOWER :HYPHEN :LOWER))
  "higher-order" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge179 57 believe 60> #<edge189 91 the 92>) (:DIGITS :RESIDUE-ON-PROTEIN)) "8.38e8"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge168 66 bio-complex 69> #<edge188 91 "the" 92>) (:DIGITS :RESIDUE-ON-PROTEIN)) "4.68e7"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge130 59 believe 60> :TILDA #<edge132 60 to 61>) (:DIGITS :TILDA :DIGITS)) "107~108"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge119 17 of 21> :TILDA #<edge121 15 close 16>) (:DIGITS :TILDA :DIGITS)) "106~107"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge106 11 importance 13> :TILDA #<edge108 14 proximity 17>) (:DIGITS :TILDA :DIGITS))
  "103~105" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge64 24 open-reading-frame 25> #<edge66 26 "the" 27>) (:SINGLE-CAP :SINGLE-DIGIT)) "I3"
  REIFY-TWO-PART-LABEL)
 (((#<edge14 300 "wild-type" 303> #<edge16 314 "wild-type" 317>) (:SINGLE-CAP :SINGLE-DIGIT)) "I3"
  REIFY-TWO-PART-LABEL)
 (((#<edge19 319 even-if 321> #<edge20 376 "wild-type" 379>) (:LOWER :COLON)) "paper:" :NO-EDGE)
 (((#<edge120 14 proximity 21> #<edge121 15 close 16>) (:PROTEIN :PLUS-SIGN)) "PTC+"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge4 174 "but rather" 176> #<edge5 174 but-rather 176> #<edge7 184 by-virtue-of 187>)
   (:SINGLE-LOWER :HYPHEN :DIGITS))
  "x−11000" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge0 118 "BM2" 120> :EQUAL-SIGN #<edge3 139 up-to 141>) (:LOWER :EQUAL-SIGN :DIGITS))
  "cn=0.00273" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge286 144 of 152> #<edge287 139 up-to 143>) (:LOWER :COLON)) "as:" :NO-EDGE)
 (((#<edge41 11 the 12> #<edge42 12 importance 13>) (:LOWER :COLON)) "reasons:" :NO-EDGE)
 (((#<edge252 141 digit-sequence 142> :TILDA #<edge255 143 downstream-segment 144>)
   (:SINGLE-DIGIT :TILDA :DIGITS))
  "2~2.5" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge70 29 "of" 30> :TILDA #<edge73 30 the 31>) (:DIGITS :TILDA :DIGITS)) "10,000~15,000"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge49 16 proximity 17> :TILDA #<edge74 31 downstream-segment 32>) (:DIGITS :TILDA :PERCENT))
  "35~60%" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge64 24 open-reading-frame 25> #<edge65 25 and 26> #<edge66 26 "the" 27>)
   (:LOWER :HYPHEN :LOWER))
  "alternative-splicing" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge17 314 wild-type 317> #<edge20 376 "wild-type" 379> :MULTIPLICATION-SIGN
    #<edge22 393 "due to" 395> :DOT_OPERATOR #<edge23 393 due-to 395> #<edge25 415 protein 417>
    #<edge26 415 bio-complex 417> #<edge29 2 study-data 3> :MULTIPLICATION-SIGN #<edge31 3 on 4>
    :DOT_OPERATOR #<edge32 4 "the" 5> #<edge33 4 the 5> #<edge34 5 terminate 6>)
   (:PLUS-SIGN :DIGITS :MULTIPLICATION-SIGN :DIGITS :DOT_OPERATOR :LOWER :SINGLE-DIGIT :PLUS-SIGN
    :DIGITS :MULTIPLICATION-SIGN :DIGITS :DOT_OPERATOR :LOWER :FORWARD-SLASH :SINGLE-LOWER))
  "+2.5×104⋅cn1+2.5×104⋅cn/z" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge7 184 by-virtue-of 187> :EQUAL-SIGN #<edge39 10 suggest 11> #<edge11 274 such-as 276>
    #<edge13 285 close-to 287> #<edge14 300 "wild-type" 303> #<edge1 118 protein 120>)
   (:SINGLE-CAP :EQUAL-SIGN :MEASUREMENT :PLUS-SIGN :DIGITS :SINGLE-LOWER :BIO-ENTITY))
  "I=6ng+110x⋅log" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge1 118 protein 120> #<edge5 174 but-rather 176> #<edge6 184 "by virtue of" 187>
    #<edge17 314 wild-type 317> :DOT_OPERATOR #<edge10 274 "such as" 276> #<edge11 274 such-as 276>
    #<edge12 285 "close to" 287>)
   (:BIO-ENTITY :SINGLE-DIGIT :PLUS-SIGN :RESIDUE-ON-PROTEIN :DOT_OPERATOR :LOWER :FORWARD-SLASH
    :SINGLE-LOWER))
  "I3=k3⋅cn1+k3⋅cn/z" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge55 19 stop-endurant 20> #<edge56 20 bio-entity 21>) (:LOWER :COLON)) "as:" :NO-EDGE)
 (((#<edge250 138 move-something-somewhere 139> #<edge255 143 downstream-segment 144>)
   (:DIGITS :RESIDUE-ON-PROTEIN))
  "2.5e4" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge131 60 "to" 61> #<edge133 61 reflect 62>) (:SINGLE-CAP :SINGLE-DIGIT)) "I3"
  REIFY-TWO-PART-LABEL)
 (((#<edge62 23 upstream 24> #<edge63 24 protein 25>) (:DIGITS :SINGLE-LOWER)) "0.012g"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge50 17 "of" 18> #<edge66 26 "the" 27>) (:DIGITS :RESIDUE-ON-PROTEIN)) "4.2e7"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge28 2 study-bio-method 3> #<edge65 25 and 26>) (:DIGITS :RESIDUE-ON-PROTEIN)) "2.5e4"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge208 107 article-figure 108> #<edge210 108 number 109>) (:SINGLE-CAP :SINGLE-DIGIT)) "I3"
  REIFY-TWO-PART-LABEL)
 (((#<edge5 174 but-rather 176> #<edge7 184 by-virtue-of 187> :EQUAL-SIGN
    #<edge16 314 "wild-type" 317> :DOT_OPERATOR #<edge11 274 such-as 276>)
   (:SINGLE-CAP :SINGLE-DIGIT :EQUAL-SIGN :RESIDUE-ON-PROTEIN :DOT_OPERATOR :LOWER))
  "I3=k3⋅cn" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:EQUAL-SIGN #<edge20 376 "wild-type" 379> :DOT_OPERATOR) (:EQUAL-SIGN :LOWER :DOT_OPERATOR))
  "=cn⋅" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge13 285 close-to 287> #<edge14 300 "wild-type" 303> #<edge15 300 wild-type 303>)
   (:SINGLE-LOWER :FORWARD-SLASH :LOWER))
  "z/cn" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge9 214 wild-type 217> #<edge11 274 such-as 276> #<edge1 118 protein 120>
    #<edge12 285 "close to" 287>)
   (:SINGLE-CAP :SINGLE-DIGIT :BIO-ENTITY :FORWARD-SLASH))
  "I3=z/" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:EQUAL-SIGN #<edge13 285 close-to 287>) (:EQUAL-SIGN :SINGLE-LOWER)) "=z"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge10 274 "such as" 276> #<edge11 274 such-as 276>) (:PLUS-SIGN :PROTEIN)) "+zlog"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge5 174 but-rather 176> #<edge7 184 by-virtue-of 187> :EQUAL-SIGN
    #<edge8 214 "wild-type" 217>)
   (:SINGLE-CAP :SINGLE-DIGIT :EQUAL-SIGN :PROTEIN))
  "I3=zlog" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge19 319 even-if 321> :EXCLAMATION-POINT) (:SINGLE-LOWER :EXCLAMATION-POINT)) "z!"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge16 314 "wild-type" 317> #<edge18 319 "even if" 321>) (:PLUS-SIGN :LOWER)) "+log"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:EQUAL-SIGN :TILDA #<edge14 300 "wild-type" 303> #<edge3 139 up-to 141>)
   (:EQUAL-SIGN :TILDA :SINGLE-LOWER :BIO-ENTITY))
  "=~z⋅log" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:LOWER :DOT_OPERATOR) (:LOWER :DOT_OPERATOR)) "cnz⋅" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge7 184 by-virtue-of 187> #<edge9 214 wild-type 217> #<edge1 118 protein 120>)
   (:SINGLE-CAP :SINGLE-DIGIT :BIO-ENTITY))
  "I3=log" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge2 139 "up to" 141> :EQUAL-SIGN :LOWER :DOT_OPERATOR)
   (:SINGLE-CAP :EQUAL-SIGN :LOWER :DOT_OPERATOR))
  "N=cnz⋅" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:EQUAL-SIGN #<edge12 285 "close to" 287> #<edge5 174 but-rather 176>)
   (:EQUAL-SIGN :DIGITS :BIO-ENTITY))
  "=110⋅log" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge1 118 protein 120> :EQUAL-SIGN #<edge7 184 by-virtue-of 187> :DOT_OPERATOR
    #<edge8 214 "wild-type" 217> #<edge3 139 up-to 141>)
   (:MOLECULE :EQUAL-SIGN :DIGITS :DOT_OPERATOR :SINGLE-LOWER :BIO-ENTITY))
  "I2=110⋅x⋅log" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge190 92 distance 93> :EQUAL-SIGN #<edge192 94 "the" 95>)
   (:SINGLE-LOWER :EQUAL-SIGN :DIGITS))
  "t=6500" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge1 118 protein 120> :EQUAL-SIGN #<edge9 214 wild-type 217> :DOT_OPERATOR
    #<edge7 184 by-virtue-of 187> #<edge3 139 up-to 141>)
   (:MOLECULE :EQUAL-SIGN :RESIDUE-ON-PROTEIN :DOT_OPERATOR :SINGLE-LOWER :BIO-ENTITY))
  "I2=k1⋅x⋅log" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge153 76 ability 77> #<edge155 77 to 78>) (:SINGLE-CAP :LOWER)) "Σlog"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge47 15 close-bio-process 16> #<edge48 15 close 16> #<edge49 16 proximity 17>
    #<edge50 17 "of" 18> #<edge52 18 "the" 19> #<edge54 19 stop 20>)
   (:SINGLE-LOWER :HYPHEN :SINGLE-LOWER :HYPHEN :SINGLE-LOWER :SINGLE-DIGIT))
  "x-t-a1" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge89 48 COMMA 49> #<edge99 45 square-brackets 48> :DOT_OPERATOR
    #<edge93 54 digit-sequence 55> #<edge9 214 wild-type 217>)
   (:PLUS-SIGN :RESIDUE-ON-PROTEIN :DOT_OPERATOR :SINGLE-LOWER :BIO-ENTITY))
  "+k2⋅x⋅log" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:EQUAL-SIGN :N-ARY_SUMMATION #<edge87 46 digit-sequence 47>)
   (:EQUAL-SIGN :N-ARY_SUMMATION :LOWER))
  "=∑log" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge71 29 of 30> #<edge72 30 "the" 31> #<edge74 31 downstream-segment 32>
    #<edge76 32 protein 33> #<edge77 32 open-reading-frame 33> #<edge79 34 number 35>
    #<edge81 38 digit-sequence 39> #<edge82 38 number 39> :DOT_OPERATOR :DOT_OPERATOR :DOT_OPERATOR
    #<edge83 40 COMMA 41> #<edge84 42 digit-sequence 43>)
   (:SINGLE-LOWER :PLUS-SIGN :SINGLE-LOWER :SINGLE-DIGIT :PLUS-SIGN :SINGLE-LOWER :SINGLE-DIGIT
    :PLUS-SIGN :DOT_OPERATOR :DOT_OPERATOR :DOT_OPERATOR :PLUS-SIGN :PROTEIN))
  "t+a1+a2+⋅⋅⋅+acn" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge67 26 the 27> #<edge98 41 square-brackets 44> :DOT_OPERATOR)
   (:PLUS-SIGN :RESIDUE-ON-PROTEIN :DOT_OPERATOR))
  "+k2⋅" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge95 5 hyphenated-pair 8> :DOT_OPERATOR #<edge25 415 protein 417>
    #<edge26 415 bio-complex 417> #<edge27 1 sequencer 2> #<edge28 2 study-bio-method 3>
    #<edge30 3 "on" 4> #<edge32 4 "the" 5> #<edge34 5 terminate 6> #<edge36 7 reinitiation 8>
    :DOT_OPERATOR #<edge37 8 bio-process 9> #<edge39 10 suggest 11> #<edge96 33 square-brackets 36>
    :DOT_OPERATOR #<edge43 13 "of" 14> #<edge44 13 of 14> #<edge45 14 "the" 15> #<edge46 14 the 15>
    #<edge48 15 close 16> #<edge50 17 "of" 18> #<edge51 17 of 18> #<edge53 18 the 19>
    #<edge55 19 stop-endurant 20> #<edge5 174 but-rather 176> :DOT_OPERATOR
    #<edge56 20 bio-entity 21> #<edge58 21 of 22> #<edge97 37 square-brackets 40> :DOT_OPERATOR
    :DOT_OPERATOR :DOT_OPERATOR :CAPITALIZED :DOT_OPERATOR :LOWER #<edge63 24 protein 25>
    :EQUAL-SIGN :N-ARY_SUMMATION #<edge65 25 and 26>)
   (:RESIDUE-ON-PROTEIN :DOT_OPERATOR :PROTEIN :HYPHEN :SINGLE-LOWER :HYPHEN :SINGLE-LOWER
    :SINGLE-DIGIT :SINGLE-LOWER :SINGLE-DIGIT :DOT_OPERATOR :PROTEIN :SINGLE-DIGIT
    :RESIDUE-ON-PROTEIN :DOT_OPERATOR :PROTEIN :HYPHEN :SINGLE-LOWER :HYPHEN :SINGLE-LOWER
    :SINGLE-DIGIT :HYPHEN :SINGLE-LOWER :SINGLE-DIGIT :PROTEIN :DOT_OPERATOR :PROTEIN :SINGLE-DIGIT
    :RESIDUE-ON-PROTEIN :DOT_OPERATOR :DOT_OPERATOR :DOT_OPERATOR :CAPITALIZED :DOT_OPERATOR :LOWER
    :SINGLE-DIGIT :EQUAL-SIGN :N-ARY_SUMMATION :LOWER))
  "k2⋅Cx−t−a1a2⋅ta2k2⋅Cx−t−a1−a2a3⋅ta3k2⋅⋅⋅Cacnacn⋅tacnk2=∑log" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge16 314 "wild-type" 317> #<edge17 314 wild-type 317> #<edge19 319 even-if 321>
    #<edge21 376 wild-type 379>)
   (:SINGLE-LOWER :PLUS-SIGN :SINGLE-LOWER :SINGLE-DIGIT))
  "t+a1" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:CAPITALIZED #<edge10 274 "such as" 276> #<edge12 285 "close to" 287>
    #<edge14 300 "wild-type" 303> :DOT_OPERATOR #<edge15 300 wild-type 303>)
   (:CAPITALIZED :PLUS-SIGN :SINGLE-LOWER :SINGLE-DIGIT :DOT_OPERATOR :SINGLE-LOWER))
  "Cxt+a1⋅t" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge1 118 protein 120> #<edge3 139 up-to 141>) (:MOLECULE :BIO-ENTITY)) "I2=log"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge141 66 the 67> #<edge142 67 tethere 68> :EQUAL-SIGN #<edge143 68 bio-complex 69>)
   (:PLUS-SIGN :PROTEIN :EQUAL-SIGN :SINGLE-LOWER))
  "+acn=x" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge128 57 this 58> #<edge129 58 be 59> #<edge131 60 "to" 61> #<edge133 61 reflect 62>
    #<edge134 62 "a" 63> #<edge136 63 restrict 64> #<edge138 65 "of" 66> #<edge139 65 of 66>
    #<edge5 174 but-rather 176> #<edge140 66 "the" 67>)
   (:SINGLE-LOWER :PLUS-SIGN :SINGLE-LOWER :SINGLE-DIGIT :PLUS-SIGN :SINGLE-LOWER :SINGLE-DIGIT
    :PLUS-SIGN :PROTEIN :PLUS-SIGN))
  "t+a1+a2+a3+" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:LOWER #<edge12 285 "close to" 287>) (:LOWER :SINGLE-DIGIT)) "xxk2"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge1 118 protein 120> :EQUAL-SIGN #<edge13 285 close-to 287> :DOT_OPERATOR
    #<edge9 214 wild-type 217> #<edge3 139 up-to 141>)
   (:MOLECULE :EQUAL-SIGN :RESIDUE-ON-PROTEIN :DOT_OPERATOR :SINGLE-LOWER :BIO-ENTITY))
  "I2=k2⋅x⋅log" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge1 118 protein 120> :EQUAL-SIGN #<edge3 139 up-to 141> #<edge4 174 "but rather" 176>
    :DOT_OPERATOR #<edge5 174 but-rather 176>)
   (:PROTEIN :EQUAL-SIGN :SINGLE-DIGIT :SINGLE-LOWER :DOT_OPERATOR :SINGLE-LOWER))
  "I1=6n⋅g" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge153 76 ability 77> #<edge155 77 to 78>) (:SINGLE-CAP :SINGLE-DIGIT)) "I3"
  REIFY-TWO-PART-LABEL)
 (((#<edge346 187 "the" 188> :BULLET) (:SINGLE-CAP :BULLET)) "C•" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge290 130 detect 133> #<edge15 300 wild-type 303>) (:DIGITS :PROTEIN)) "3.77e6"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge192 94 "the" 95> #<edge13 285 close-to 287>) (:DIGITS :PROTEIN)) "3.39e6"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge124 13 of 25> #<edge9 214 wild-type 217>) (:DIGITS :PROTEIN)) "4.26e6"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge113 31 open-reading-frame 33> #<edge5 174 but-rather 176>) (:DIGITS :PROTEIN)) "3.26e6"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge76 32 protein 33> :TILDA #<edge85 42 number 43>) (:SINGLE-DIGIT :TILDA :PERCENT)) "2~3%"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge7 184 by-virtue-of 187> :EQUAL-SIGN #<edge1 118 protein 120> #<edge8 214 "wild-type" 217>
    #<edge3 139 up-to 141> :EQUAL-SIGN #<edge10 274 "such as" 276> #<edge11 274 such-as 276>
    #<edge12 285 "close to" 287> #<edge14 300 "wild-type" 303> #<edge15 300 wild-type 303>
    #<edge17 314 wild-type 317> #<edge18 319 "even if" 321> #<edge20 376 "wild-type" 379>
    #<edge21 376 wild-type 379> #<edge22 393 "due to" 395> :LOWER)
   (:SINGLE-CAP :EQUAL-SIGN :PROTEIN :PLUS-SIGN :MOLECULE :EQUAL-SIGN :SINGLE-DIGIT :LOWER
    :PLUS-SIGN :SINGLE-DIGIT :SINGLE-LOWER :SINGLE-DIGIT :PLUS-SIGN :SINGLE-DIGIT :SINGLE-LOWER
    :FORWARD-SLASH :LOWER))
  "I=I1+I2=6nx+5x1+5x/ylog" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge1 118 protein 120> :EQUAL-SIGN :LOWER #<edge3 139 up-to 141>
    #<edge4 174 "but rather" 176> #<edge5 174 but-rather 176> :DOT_OPERATOR
    #<edge6 184 "by virtue of" 187> #<edge7 184 by-virtue-of 187> :LOWER)
   (:MOLECULE :EQUAL-SIGN :LOWER :SINGLE-DIGIT :PLUS-SIGN :SINGLE-LOWER :DOT_OPERATOR :SINGLE-LOWER
    :FORWARD-SLASH :LOWER))
  "I2=kx1+k⋅x/ylog" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge214 112 when 113> #<edge215 112 when 113>) (:LOWER :COLON)) "as:" :NO-EDGE)
 (((:EQUAL-SIGN :LOWER) (:EQUAL-SIGN :LOWER)) "=kxlog" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:EQUAL-SIGN #<edge10 274 "such as" 276> :DOT_OPERATOR #<edge11 274 such-as 276> :DOT_OPERATOR
    #<edge13 285 close-to 287>)
   (:EQUAL-SIGN :SINGLE-LOWER :DOT_OPERATOR :SINGLE-LOWER :DOT_OPERATOR :LOWER))
  "=k⋅x⋅log" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:DOT_OPERATOR #<edge8 214 "wild-type" 217>) (:DOT_OPERATOR :LOWER)) "⋅log"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge1 118 protein 120> :EQUAL-SIGN #<edge4 174 "but rather" 176> :DOT_OPERATOR
    #<edge5 174 but-rather 176> #<edge6 184 "by virtue of" 187>)
   (:MOLECULE :EQUAL-SIGN :SINGLE-LOWER :DOT_OPERATOR :SINGLE-LOWER :FORWARD-SLASH))
  "I2=k⋅y/" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge37 8 bio-process 9> #<edge38 9 have 10> #<edge39 10 suggest 11>)
   (:SINGLE-LOWER :FORWARD-SLASH :SINGLE-LOWER))
  "y/x" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge1 118 protein 120> :EQUAL-SIGN #<edge2 139 "up to" 141> #<edge3 139 up-to 141>
    #<edge5 174 but-rather 176> :DOT_OPERATOR #<edge7 184 by-virtue-of 187>)
   (:MOLECULE :EQUAL-SIGN :SINGLE-LOWER :FORWARD-SLASH :DIGITS :DOT_OPERATOR :LOWER))
  "I2=y/100⋅log" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge1 118 protein 120> :EQUAL-SIGN #<edge3 139 up-to 141> :DOT_OPERATOR
    #<edge5 174 but-rather 176> :EQUAL-SIGN #<edge7 184 by-virtue-of 187>
    #<edge8 214 "wild-type" 217>)
   (:PROTEIN :EQUAL-SIGN :BIO-ENTITY :DOT_OPERATOR :SINGLE-DIGIT :EQUAL-SIGN :SINGLE-DIGIT :LOWER))
  "I1=Σn⋅6=6nx" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge87 46 digit-sequence 47> #<edge88 46 number 47>) (:LOWER :COLON)) "as:" :NO-EDGE)
 (((:EQUAL-SIGN #<edge5 174 but-rather 176> #<edge17 314 wild-type 317>
    #<edge7 184 by-virtue-of 187>)
   (:EQUAL-SIGN :MOLECULE :PLUS-SIGN :PROTEIN))
  "=I2+I1" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:EQUAL-SIGN #<edge11 274 such-as 276> :DOT_OPERATOR #<edge13 285 close-to 287>)
   (:EQUAL-SIGN :SINGLE-LOWER :DOT_OPERATOR :LOWER))
  "=y⋅log" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge2 139 "up to" 141> :EQUAL-SIGN :LOWER :DOT_OPERATOR #<edge4 174 "but rather" 176>
    #<edge16 314 "wild-type" 317> :DOT_OPERATOR #<edge9 214 wild-type 217>
    #<edge17 314 wild-type 317> :DOT_OPERATOR :DOT_OPERATOR :DOT_OPERATOR
    #<edge14 300 "wild-type" 303> #<edge15 300 wild-type 303>)
   (:SINGLE-CAP :EQUAL-SIGN :LOWER :DOT_OPERATOR :DIGITS :RESIDUE-ON-PROTEIN :DOT_OPERATOR :DIGITS
    :RESIDUE-ON-PROTEIN :DOT_OPERATOR :DOT_OPERATOR :DOT_OPERATOR :DIGITS :LOWER))
  "N=xy⋅20n1⋅20n2⋅⋅⋅20nx" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge2 139 "up to" 141> #<edge4 174 "but rather" 176> :EQUAL-SIGN #<edge5 174 but-rather 176>
    :DOT_OPERATOR #<edge7 184 by-virtue-of 187> #<edge11 274 such-as 276>)
   (:SINGLE-CAP :SINGLE-DIGIT :EQUAL-SIGN :SINGLE-LOWER :DOT_OPERATOR :DIGITS :RESIDUE-ON-PROTEIN))
  "N1=x⋅20n1" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge438 219 figure 225> #<edge439 218 parentheses 226>) (:SINGLE-CAP :SINGLE-LOWER)) "Σn"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge51 17 of 18> :EQUAL-SIGN #<edge52 18 "the" 19>) (:SINGLE-CAP :EQUAL-SIGN :LOWER))
  "C=length" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge28 2 study-bio-method 3> :EQUAL-SIGN #<edge31 3 on 4>) (:SINGLE-CAP :EQUAL-SIGN :DIGITS))
  "I=76,512" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge43 13 "of" 14> #<edge44 13 of 14> #<edge45 14 "the" 15>)
   (:LOWER :SINGLE-CAP :SINGLE-LOWER))
  "forΣn" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge21 376 wild-type 379> #<edge22 393 "due to" 395> #<edge23 393 due-to 395> :DOT_OPERATOR
    #<edge25 415 protein 417> :EQUAL-SIGN #<edge11 274 such-as 276> #<edge26 415 bio-complex 417>
    #<edge13 285 close-to 287>)
   (:PLUS-SIGN :SINGLE-CAP :SINGLE-LOWER :DOT_OPERATOR :SINGLE-DIGIT :EQUAL-SIGN :MOLECULE
    :PLUS-SIGN :PROTEIN))
  "+Σn⋅6=I2+I1" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge14 300 "wild-type" 303> #<edge15 300 wild-type 303> #<edge16 314 "wild-type" 317>
    :DOT_OPERATOR #<edge18 319 "even if" 321> :DOT_OPERATOR #<edge5 174 but-rather 176>)
   (:PLUS-SIGN :SINGLE-CAP :SINGLE-LOWER :DOT_OPERATOR :SINGLE-DIGIT :DOT_OPERATOR :PROTEIN))
  "+Σn⋅3⋅log2" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge18 319 "even if" 321> #<edge19 319 even-if 321> #<edge20 376 "wild-type" 379>
    :DOT_OPERATOR #<edge23 393 due-to 395>)
   (:PLUS-SIGN :SINGLE-CAP :SINGLE-LOWER :DOT_OPERATOR :DIGITS))
  "+Σn⋅4.32" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge17 314 wild-type 317> :EXCLAMATION-POINT) (:SINGLE-LOWER :EXCLAMATION-POINT)) "x!"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge10 274 "such as" 276> #<edge11 274 such-as 276> #<edge12 285 "close to" 287>
    :DOT_OPERATOR #<edge14 300 "wild-type" 303>)
   (:PLUS-SIGN :SINGLE-CAP :SINGLE-LOWER :DOT_OPERATOR :LOWER))
  "+Σn⋅log" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge9 214 wild-type 217> :EXCLAMATION-POINT) (:SINGLE-LOWER :EXCLAMATION-POINT)) "x!"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge2 139 "up to" 141> :EQUAL-SIGN #<edge3 139 up-to 141> :EXCLAMATION-POINT :DOT_OPERATOR
    #<edge5 174 but-rather 176> #<edge16 314 "wild-type" 317> :DOT_OPERATOR
    #<edge10 274 "such as" 276> #<edge17 314 wild-type 317> :DOT_OPERATOR :DOT_OPERATOR
    :DOT_OPERATOR #<edge15 300 wild-type 303> :LOWER)
   (:SINGLE-CAP :EQUAL-SIGN :SINGLE-LOWER :EXCLAMATION-POINT :DOT_OPERATOR :DIGITS
    :RESIDUE-ON-PROTEIN :DOT_OPERATOR :DIGITS :RESIDUE-ON-PROTEIN :DOT_OPERATOR :DOT_OPERATOR
    :DOT_OPERATOR :DIGITS :LOWER))
  "N=x!⋅20n1⋅20n2⋅⋅⋅20nx" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge298 98 critical 103> :EQUAL-SIGN #<edge302 85 show 90> #<edge303 90 that 91>
    #<edge13 285 close-to 287>)
   (:SINGLE-CAP :EQUAL-SIGN :SINGLE-CAP :HYPHEN :INITIAL))
  "R=I-C." REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge152 75 be 76> :EQUAL-SIGN :CAPITALIZED #<edge153 76 ability 77> #<edge154 77 "to" 78>
    :EQUAL-SIGN #<edge157 79 only 80>)
   (:SINGLE-CAP :EQUAL-SIGN :CAPITALIZED :HYPHEN :PROTEIN :EQUAL-SIGN :HYPHENATED-NUMBER))
  "C=Hmax-Hknown=6-2" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:EQUAL-SIGN #<edge59 22 "the" 23>) (:EQUAL-SIGN :SINGLE-DIGIT)) "=3"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge104 4 bio-process 9> #<edge105 9 suggest 11> #<edge106 11 importance 13>)
   (:CAPITALIZED :HYPHEN :PROTEIN))
  "Hunknown-Hknown" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge15 300 wild-type 303> :EQUAL-SIGN #<edge17 314 wild-type 317> #<edge18 319 "even if" 321>
    #<edge20 376 "wild-type" 379> #<edge21 376 wild-type 379> #<edge24 415 "eif3" 417> :EQUAL-SIGN
    #<edge27 1 sequencer 2>)
   (:SINGLE-CAP :EQUAL-SIGN :SINGLE-DIGIT :PLUS-SIGN :SINGLE-DIGIT :PLUS-SIGN :DIGITS :EQUAL-SIGN
    :DIGITS))
  "C=2+0+0.5=2.5" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge2 139 "up to" 141> :EQUAL-SIGN #<edge4 174 "but rather" 176> #<edge5 174 but-rather 176>
    #<edge7 184 by-virtue-of 187> #<edge1 118 protein 120> #<edge8 214 "wild-type" 217>
    #<edge10 274 "such as" 276> :EQUAL-SIGN #<edge13 285 close-to 287>)
   (:SINGLE-CAP :EQUAL-SIGN :SINGLE-DIGIT :PLUS-SIGN :SINGLE-DIGIT :BIO-ENTITY :FORWARD-SLASH
    :SINGLE-DIGIT :EQUAL-SIGN :DIGITS))
  "C=1+0+1/4=1.25" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:EQUAL-SIGN #<edge73 30 the 31>) (:EQUAL-SIGN :MEASUREMENT)) "=0.5bit"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:EQUAL-SIGN #<edge66 26 "the" 27>) (:EQUAL-SIGN :HYPHENATED-NUMBER)) "=2−1"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge59 22 "the" 23> #<edge61 23 upstream-segment 24> :DOT_OPERATOR
    #<edge9 214 wild-type 217>)
   (:PLUS-SIGN :DIGITS :DOT_OPERATOR :PROTEIN))
  "+14⋅log2" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge54 19 stop 20> #<edge56 20 bio-entity 21> :DOT_OPERATOR #<edge7 184 by-virtue-of 187>)
   (:PLUS-SIGN :DIGITS :DOT_OPERATOR :PROTEIN))
  "+14⋅log2" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge51 17 of 18> :DOT_OPERATOR #<edge5 174 but-rather 176>) (:DIGITS :DOT_OPERATOR :PROTEIN))
  "12⋅log2" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:EQUAL-SIGN #<edge44 13 of 14> :EQUAL-SIGN #<edge46 14 the 15> #<edge1 118 protein 120>
    #<edge3 139 up-to 141>)
   (:EQUAL-SIGN :HYPHENATED-NUMBER :EQUAL-SIGN :DIGITS :PROTEIN :BIO-ENTITY))
  "=1−34=14orC3=log2" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge33 4 the 5> #<edge35 6 HYPHEN 7> :DOT_OPERATOR #<edge37 8 bio-process 9>
    #<edge39 10 suggest 11>)
   (:PLUS-SIGN :DIGITS :DOT_OPERATOR :LOWER :SINGLE-DIGIT))
  "+14⋅log4" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge24 415 "eif3" 417> #<edge26 415 bio-complex 417> :DOT_OPERATOR
    #<edge28 2 study-bio-method 3> #<edge30 3 "on" 4>)
   (:PLUS-SIGN :DIGITS :DOT_OPERATOR :LOWER :SINGLE-DIGIT))
  "+14⋅log4" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge17 314 wild-type 317> :DOT_OPERATOR #<edge19 319 even-if 321>
    #<edge21 376 wild-type 379>)
   (:DIGITS :DOT_OPERATOR :LOWER :SINGLE-DIGIT))
  "12⋅log4" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge54 19 stop 20> #<edge55 19 stop-endurant 20>) (:LOWER :COLON)) "as:" :NO-EDGE)
 (((#<edge24 415 "eif3" 417> #<edge25 415 protein 417> #<edge27 1 sequencer 2>)
   (:SINGLE-DIGIT :FORWARD-SLASH :SINGLE-DIGIT))
  "1/4" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge14 300 "wild-type" 303> #<edge15 300 wild-type 303> #<edge17 314 wild-type 317>)
   (:SINGLE-DIGIT :FORWARD-SLASH :SINGLE-DIGIT))
  "1/2" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge28 2 study-bio-method 3> #<edge30 3 "on" 4> #<edge31 3 on 4> #<edge33 4 the 5>
    :MIDDLE-DOT #<edge7 184 by-virtue-of 187>)
   (:HYPHEN :SINGLE-DIGIT :FORWARD-SLASH :SINGLE-DIGIT :MIDDLE-DOT :PROTEIN))
  "-1/4·log2" PACKAGE-SLASHED-SEQUENCE)
 (((:MIDDLE-DOT #<edge19 319 even-if 321>) (:MIDDLE-DOT :SINGLE-DIGIT)) "·4"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge10 274 "such as" 276> #<edge11 274 such-as 276> #<edge13 285 close-to 287> :MIDDLE-DOT
    #<edge15 300 wild-type 303>)
   (:HYPHENATED-NUMBER :FORWARD-SLASH :SINGLE-DIGIT :MIDDLE-DOT :LOWER))
  "1-1/4·log" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:EQUAL-SIGN #<edge30 3 "on" 4> :EQUAL-SIGN #<edge32 4 "the" 5>)
   (:EQUAL-SIGN :HYPHENATED-NUMBER :EQUAL-SIGN :SINGLE-DIGIT))
  "=2−0=2" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge3 139 up-to 141> #<edge5 174 but-rather 176>) (:PROTEIN :BIO-ENTITY)) "C1=log2"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:EQUAL-SIGN #<edge19 319 even-if 321> :EQUAL-SIGN #<edge21 376 wild-type 379>)
   (:EQUAL-SIGN :HYPHENATED-NUMBER :EQUAL-SIGN :SINGLE-DIGIT))
  "=1−0=1" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge1 118 protein 120> :EQUAL-SIGN #<edge9 214 wild-type 217> #<edge10 274 "such as" 276>
    #<edge12 285 "close to" 287> #<edge14 300 "wild-type" 303>)
   (:PROTEIN :EQUAL-SIGN :SINGLE-DIGIT :HYPHEN :LOWER :SINGLE-DIGIT))
  "C1=1−log4" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge0 118 "BM2" 120> :EQUAL-SIGN :CAPITALIZED #<edge1 118 protein 120>
    #<edge2 139 "up to" 141> :EQUAL-SIGN #<edge3 139 up-to 141> #<edge4 174 "but rather" 176>
    #<edge6 184 "by virtue of" 187>)
   (:SINGLE-CAP :EQUAL-SIGN :CAPITALIZED :HYPHEN :PROTEIN :EQUAL-SIGN :SINGLE-CAP :HYPHEN
    :SINGLE-CAP))
  "C=Hmax−Hknown=L−H" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge72 30 "the" 31> #<edge73 30 the 31> #<edge75 31 downstream 32>)
   (:DIGITS :FORWARD-SLASH :SINGLE-DIGIT))
  "21.8/2" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:EQUAL-SIGN #<edge11 274 such-as 276>) (:EQUAL-SIGN :DIGITS)) "=21.8"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge8 214 "wild-type" 217> :EXCLAMATION-POINT) (:DIGITS :EXCLAMATION-POINT)) "10!"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:EQUAL-SIGN #<edge6 184 "by virtue of" 187>) (:EQUAL-SIGN :LOWER)) "=log"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge2 139 "up to" 141> :EQUAL-SIGN #<edge4 174 "but rather" 176> :DOT_OPERATOR
    #<edge6 184 "by virtue of" 187> :DOT_OPERATOR #<edge8 214 "wild-type" 217> :DOT_OPERATOR
    :DOT_OPERATOR :DOT_OPERATOR #<edge10 274 "such as" 276> :DOT_OPERATOR
    #<edge12 285 "close to" 287> :EQUAL-SIGN #<edge14 300 "wild-type" 303> :EXCLAMATION-POINT
    :EQUAL-SIGN #<edge18 319 "even if" 321>)
   (:SINGLE-CAP :EQUAL-SIGN :DIGITS :DOT_OPERATOR :SINGLE-DIGIT :DOT_OPERATOR :SINGLE-DIGIT
    :DOT_OPERATOR :DOT_OPERATOR :DOT_OPERATOR :SINGLE-DIGIT :DOT_OPERATOR :SINGLE-DIGIT :EQUAL-SIGN
    :DIGITS :EXCLAMATION-POINT :EQUAL-SIGN :DIGITS))
  "N=10⋅9⋅8⋅⋅⋅2⋅1=10!=3,628,800" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:LOWER :UNDER-BAR) (:LOWER :UNDER-BAR)) "yo_" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:EQUAL-SIGN #<edge5 174 but-rather 176>) (:EQUAL-SIGN :DIGITS)) "=47"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge47 15 close-bio-process 16> :EQUAL-SIGN #<edge49 16 proximity 17>)
   (:SINGLE-CAP :EQUAL-SIGN :DIGITS))
  "H=10" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:EQUAL-SIGN #<edge5 174 but-rather 176>) (:EQUAL-SIGN :DIGITS)) "=20"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge38 9 have 10> :EQUAL-SIGN #<edge40 11 "the" 12>) (:SINGLE-CAP :EQUAL-SIGN :SINGLE-DIGIT))
  "I=0" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:EQUAL-SIGN #<edge12 285 "close to" 287>) (:EQUAL-SIGN :DIGITS)) "=43.2"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge3 139 up-to 141> :EQUAL-SIGN #<edge5 174 but-rather 176> :DOT_OPERATOR
    #<edge7 184 by-virtue-of 187>)
   (:SINGLE-CAP :EQUAL-SIGN :DIGITS :DOT_OPERATOR :LOWER))
  "I=10⋅log" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge274 98 bio-entity 100> :EQUAL-SIGN #<edge276 118 open-reading-frame 121>)
   (:SINGLE-CAP :EQUAL-SIGN :LOWER))
  "I=log" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:EQUAL-SIGN #<edge10 274 "such as" 276>) (:EQUAL-SIGN :DIGITS)) "=26.57"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge5 174 but-rather 176> #<edge1 118 protein 120>) (:SINGLE-CAP :BIO-ENTITY)) "I=log2"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge127 57 "this" 58> #<edge128 57 this 58> #<edge129 58 be 59>)
   (:SINGLE-DIGIT :HYPHEN :LOWER))
  "8-digits" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge5 174 but-rather 176> :EQUAL-SIGN #<edge6 184 "by virtue of" 187>
    #<edge7 184 by-virtue-of 187> #<edge8 214 "wild-type" 217> :EQUAL-SIGN
    #<edge10 274 "such as" 276> #<edge11 274 such-as 276> #<edge13 285 close-to 287> :EQUAL-SIGN
    #<edge15 300 wild-type 303> #<edge1 118 protein 120>)
   (:SINGLE-CAP :EQUAL-SIGN :CAPITALIZED :HYPHEN :PROTEIN :EQUAL-SIGN :SINGLE-CAP :HYPHEN
    :SINGLE-DIGIT :EQUAL-SIGN :SINGLE-CAP :BIO-ENTITY))
  "I=Hunknown−Hknown=H−0=H=log2" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:EQUAL-SIGN #<edge3 139 up-to 141>) (:EQUAL-SIGN :PROTEIN)) "=log2"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge5 174 but-rather 176> :EQUAL-SIGN #<edge6 184 "by virtue of" 187> :N-ARY_SUMMATION
    #<edge20 376 "wild-type" 379> :DOT_OPERATOR #<edge1 118 protein 120>)
   (:SINGLE-CAP :EQUAL-SIGN :HYPHEN :N-ARY_SUMMATION :POINT-MUTATION :DOT_OPERATOR :PROTEIN))
  "H=−∑1N⋅log2" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge3 139 up-to 141> :EQUAL-SIGN #<edge4 174 "but rather" 176> #<edge5 174 but-rather 176>
    #<edge7 184 by-virtue-of 187> :DOT_OPERATOR #<edge1 118 protein 120>)
   (:SINGLE-CAP :EQUAL-SIGN :HYPHEN :SINGLE-CAP :LITTLE-P :DOT_OPERATOR :PROTEIN))
  "H=−Σp⋅log2" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge542 296 a 297> #<edge543 297 choice-endurant 298> #<edge544 297 modifier 298>)
   (:SINGLE-CAP :HYPHEN :LOWER))
  "G-value" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge468 254 at 255> :TILDA #<edge471 256 downstream-segment 257>) (:DIGITS :TILDA :DIGITS))
  "46,000~55,000" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge283 145 position 148> #<edge284 145 position 152> #<edge285 104 efficiency 110>)
   (:SINGLE-CAP :HYPHEN :LOWER))
  "C-value" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge219 115 bio-entity 116> #<edge226 121 be 122>) (:DIGITS :FOLD-ENDURANT)) "3,300-fold"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge179 57 believe 60> #<edge180 85 however 86>) (:DIGITS :LOWER)) "3.5pg"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge169 74 be 76> #<edge170 77 undergo 79> #<edge171 79 limit 81>)
   (:SINGLE-CAP :HYPHEN :LOWER))
  "C-value" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge163 58 believe 60> #<edge164 60 reflect 62>) (:DIGITS :LOWER)) "120pg"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge109 19 bio-entity 21> #<edge110 18 bio-entity 21> #<edge111 23 open-reading-frame 25>)
   (:SINGLE-CAP :HYPHEN :LOWER))
  "C-value" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge71 29 of 30> #<edge72 30 "the" 31> #<edge73 30 the 31>) (:SINGLE-CAP :HYPHEN :LOWER))
  "C-value" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge225 120 open-reading-frame 121> #<edge226 121 be 122> #<edge227 122 place 123>
    #<edge229 123 downstream 124>)
   (:CAPITALIZED :HYPHEN :SINGLE-CAP :DIGITS))
  "Triton-X100" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge187 90 that 91> #<edge188 91 "the" 92> #<edge189 91 the 92>) (:PROTEIN :HYPHEN :MIXED))
  "Tris-HCl" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge174 74 ability 77> #<edge175 73 ability 77> #<edge176 70 be 72>)
   (:CAPITALIZED :HYPHEN :CAPITALIZED))
  "Perkin-Elmer" MAKE-HYPHENATED-STRUCTURE)
 (((:CAPITALIZED #<edge171 79 limit 81>) (:CAPITALIZED :FORWARD-SLASH)) "Ci/µ"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge457 204 require 207> :FULL #<edge458 246 under 247> #<edge460 247 the 248>)
   (:HYPHEN :FULL :HYPHEN :SINGLE-DIGIT))
  "-CACATTTTGGATAAGCCCAACCCATAAGGA-3" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge450 234 bio-entity 238> :FULL #<edge451 243 efficiency 245> #<edge453 242 at 245>)
   (:HYPHEN :FULL :HYPHEN :SINGLE-DIGIT))
  "-CCTTATGGGTTGGGCTTATCCAAAATGTG-3" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge436 220 point-mutation 222> #<edge438 219 figure 225> #<edge439 218 parentheses 226>
    #<edge440 202 reinitiation 204> #<edge441 205 bio-entity 207> #<edge35 6 HYPHEN 7>
    #<edge442 214 site 218> #<edge443 213 site 218> #<edge445 227 site 230>)
   (:PROTEIN :SINGLE-DIGIT :HYPHEN :PROTEIN :HYPHEN :PROTEIN :HYPHEN :MIXED :SINGLE-DIGIT))
  "pASK3-Ub-nsp12-CHis6" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge429 243 comparative-modifier 244> :FULL #<edge430 243 lower-adj 244>
    #<edge432 243 lower-note 244>)
   (:HYPHEN :FULL :HYPHEN :SINGLE-DIGIT))
  "-ATCACAACTCTCCAGGGCTGTTTCAAGGCAGTA-3" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge422 237 bio-entity 238> :FULL #<edge423 238 be 239> #<edge425 240 COMMA 241>)
   (:HYPHEN :FULL :HYPHEN :SINGLE-DIGIT))
  "-TACTGCCTTGAAACAGCCCTGGAGAGTTGTGAT-3" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:MIXED #<edge412 229 site 230> #<edge413 230 modal 231> #<edge33 4 the 5> #<edge414 231 be 232>
    #<edge415 232 bio-use 233>)
   (:MIXED :DIGITS :HYPHEN :PROTEIN :HYPHEN :PROTEIN))
  "pDEST14-nsp9-CH" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge121 15 close 16> :ASTERISK #<edge16 314 "wild-type" 317>) (:DIGITS :ASTERISK :INITIAL))
  "20°C." REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:FULL #<edge95 5 hyphenated-pair 8> #<edge97 37 square-brackets 40>) (:FULL :HYPHEN :DIGITS))
  "ZYM-5052" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:MIXED #<edge81 38 digit-sequence 39> #<edge82 38 number 39> #<edge14 300 "wild-type" 303>
    #<edge83 40 COMMA 41> #<edge84 42 digit-sequence 43>)
   (:MIXED :DIGITS :HYPHEN :PROTEIN :HYPHEN :PROTEIN))
  "pDEST14-nsp9-CH" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge156 78 undergo 79> :ASTERISK #<edge157 79 only 80>) (:DIGITS :ASTERISK :SINGLE-CAP))
  "90°C" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge131 60 "to" 61> #<edge132 60 to 61> #<edge133 61 reflect 62>) (:PROTEIN :HYPHEN :MIXED))
  "Tris-HCl" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge56 20 bio-entity 21> #<edge57 21 "of" 22> #<edge59 22 "the" 23>)
   (:PROTEIN :HYPHEN :DIGITS))
  "NAP-10" MAKE-HYPHENATED-PAIR)
 (((#<edge45 14 "the" 15> #<edge46 14 the 15> #<edge67 26 the 27>)
   (:CAPITALIZED :FORWARD-SLASH :PERCENT))
  "Urea/15%" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge30 3 "on" 4> :FULL #<edge31 3 on 4> #<edge33 4 the 5>)
   (:HYPHEN :FULL :HYPHEN :SINGLE-DIGIT))
  "-UUUUUUUUUUUUUUUUUU-3" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge1 118 protein 120> #<edge27 1 sequencer 2>) (:MOLECULE :DIGITS)) "poly(U)18"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge21 376 wild-type 379> :FULL #<edge22 393 "due to" 395> #<edge24 415 "eif3" 417>)
   (:HYPHEN :FULL :HYPHEN :SINGLE-DIGIT))
  "-UUUUUUUUUUAUAACUUAAUCUCACAUAGC-3" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge10 274 "such as" 276> :FULL #<edge11 274 such-as 276> #<edge13 285 close-to 287>)
   (:HYPHEN :FULL :HYPHEN :SINGLE-DIGIT))
  "-GCUAUGUGAGAUUAAGUUAU-3" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge354 193 terminate 194> #<edge356 195 "the" 196>) (:PROTEIN :DIGITS)) "EC50"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge249 137 be 138> #<edge251 138 move-to 139>) (:PROTEIN :DIGITS)) "LB940"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge112 22 open-reading-frame 25> :UNDER-BAR #<edge114 30 open-reading-frame 33>)
   (:FULL :UNDER-BAR :DIGITS))
  "NC_002532" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge34 5 terminate 6> #<edge36 7 reinitiation 8>) (:FULL :DIGITS)) "AY291315"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:CAPITALIZED #<edge20 376 "wild-type" 379> #<edge22 393 "due to" 395>)
   (:CAPITALIZED :HYPHEN :SINGLE-DIGIT))
  "Frankfurt-1" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge97 37 square-brackets 40> #<edge98 41 square-brackets 44>
    #<edge99 45 square-brackets 48>)
   (:LOWER :HYPHEN :LOWER))
  "zinc-ionophore" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge68 27 start 28> #<edge69 28 bio-entity 29> #<edge70 29 "of" 30>) (:LOWER :HYPHEN :LOWER))
  "zinc-ionophores" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge24 415 "eif3" 417> #<edge25 415 protein 417> #<edge26 415 bio-complex 417>)
   (:LOWER :HYPHEN :LOWER))
  "zinc-ionophore" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge513 279 bio-entity 281> #<edge514 277 bio-entity 281> #<edge515 276 bio-entity 281>)
   (:LOWER :HYPHEN :LOWER))
  "in-depth" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge464 251 bio-complex 252> #<edge466 253 bio-entity 254>) (:SINGLE-CAP :SINGLE-DIGIT)) "S3"
  REIFY-TWO-PART-LABEL)
 (((#<edge358 196 bio-entity 197> #<edge359 191 bio-complex 193> #<edge361 191 bio-complex 197>)
   (:DIGITS :HYPHEN :LOWER))
  "two-thirds" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge319 163 the 164> #<edge300 88 show 90> #<edge320 164 start 165> #<edge305 153 this 154>
    #<edge321 165 and 166> #<edge309 156 "it" 157> #<edge322 166 stop 167>)
   (:RESIDUE-ON-PROTEIN :HYPHEN :RESIDUE-ON-PROTEIN :HYPHEN :RESIDUE-ON-PROTEIN :HYPHEN
    :RESIDUE-ON-PROTEIN))
  "C799-H810-C813-H816" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge314 160 "the" 161> #<edge279 126 bio-entity 128> #<edge315 160 the 161>
    #<edge283 145 position 148> #<edge316 161 distance 162> #<edge287 139 up-to 143>
    #<edge317 162 between 163> #<edge292 123 downstream 128> #<edge318 163 "the" 164>)
   (:RESIDUE-ON-PROTEIN :HYPHEN :RESIDUE-ON-PROTEIN :HYPHEN :RESIDUE-ON-PROTEIN :HYPHEN
    :RESIDUE-ON-PROTEIN :HYPHEN :RESIDUE-ON-PROTEIN))
  "H295-C301-C306-H309-C310" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:TILDA #<edge119 17 of 21>) (:TILDA :HYPHENATED-NUMBER)) "∼10–30" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge69 28 bio-entity 29> #<edge70 29 "of" 30> #<edge71 29 of 30> #<edge72 30 "the" 31>
    #<edge73 30 the 31>)
   (:PROTEIN :HYPHEN :FULL :FORWARD-SLASH :FULL))
  "protein-RNA/DNA" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge333 173 efficiency 174> #<edge334 176 how 177> #<edge335 177 well-bio-process 178>)
   (:LOWER :FORWARD-SLASH :LOWER))
  "on/off" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge186 90 "that" 91> #<edge187 90 that 91> #<edge188 91 "the" 92> #<edge189 91 the 92>
    #<edge191 93 between 94>)
   (:LOWER :HYPHEN :LOWER :HYPHEN :LOWER))
  "foot-and-mouth" MAKE-HYPHENATED-TRIPLE)
 (((#<edge17 314 wild-type 317> #<edge18 319 "even if" 321> #<edge19 319 even-if 321>)
   (:LOWER :HYPHEN :LOWER))
  "zinc-ionophores" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge69 28 bio-entity 29> #<edge70 29 "of" 30> #<edge71 29 of 30>)
   (:CAPITALIZED :HYPHEN :LOWER))
  "Talon-beads" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge63 24 protein 25> #<edge64 24 open-reading-frame 25> #<edge66 26 "the" 27>)
   (:LOWER :HYPHEN :LOWER))
  "pull-down" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge198 98 the 99> #<edge199 99 bio-entity 100> #<edge200 100 be 101>)
   (:LOWER :HYPHEN :LOWER))
  "pre-incubation" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge743 403 the 404> #<edge744 404 bio-entity 405> #<edge745 405 whilst 406>)
   (:LOWER :HYPHEN :LOWER))
  "smaller-sized" MAKE-HYPHENATED-STRUCTURE)
 (((:CLOSE-ANGLE-BRACKET #<edge676 366 acknowledgement 367>) (:CLOSE-ANGLE-BRACKET :MEASUREMENT))
  ">200 fold" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge29 2 study-data 3> #<edge563 313 "the" 314>) (:CELL-LINE :SINGLE-CAP)) "S2B"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge471 256 downstream-segment 257> #<edge472 256 downstream 257>
    #<edge473 257 bio-entity 258>)
   (:DIGITS :HYPHEN :LOWER))
  "18-nt" MAKE-HYPHENATED-STRUCTURE)
 (((:TILDA #<edge129 58 be 59>) (:TILDA :DIGITS)) "∼0.17 µ" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge534 254 at 264> #<edge536 292 however 293>) (:FULL :SINGLE-DIGIT)) "RNA7"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge529 287 site 291> #<edge531 255 bio-entity 264>) (:FULL :SINGLE-DIGIT)) "RNA2"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge79 34 number 35> #<edge80 36 COMMA 37> #<edge81 38 digit-sequence 39>)
   (:DIGITS :HYPHEN :LOWER))
  "18-nt" MAKE-HYPHENATED-STRUCTURE)
 (((:CLOSE-ANGLE-BRACKET #<edge278 121 place 123>) (:CLOSE-ANGLE-BRACKET :PERCENT)) ">95%"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge184 88 show 89> #<edge186 90 "that" 91>) (:SINGLE-CAP :SINGLE-DIGIT)) "S1"
  REIFY-TWO-PART-LABEL)
 (((#<edge147 71 be 72> #<edge149 73 "it" 74> #<edge150 73 pronoun/inanimate 74>)
   (:CAPITALIZED :SINGLE-DIGIT :PLUS-SIGN))
  "Co2+" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge174 74 ability 77> #<edge175 73 ability 77> #<edge176 70 be 72>)
   (:DIGITS :HYPHEN :PROTEIN))
  "18-mer" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge407 223 number 224> :AND-SIGN #<edge365 172 efficiency 174>)
   (:POINT-MUTATION :AND-SIGN :SINGLE-CAP))
  "3B&C" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge380 199 however 200> #<edge381 200 COMMA 201> #<edge382 201 whilst 202>)
   (:LOWER :HYPHEN :LOWER))
  "dose-response" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge252 141 digit-sequence 142> #<edge253 141 number 142> #<edge254 142 bio-entity 143>)
   (:LOWER :HYPHEN :LOWER))
  "zinc-ionophores" MAKE-HYPHENATED-STRUCTURE)
 (((:TILDA #<edge175 73 ability 77>) (:TILDA :DIGITS)) "∼70 µ" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge166 67 bio-complex 69> #<edge168 66 bio-complex 69>) (:FULL :DIGITS)) "CC50"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:MIXED #<edge310 156 pronoun/inanimate 157>) (:MIXED :SINGLE-DIGIT)) "ZnOAc2"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge217 113 the 114> #<edge9 214 wild-type 217>) (:DIGITS :MOLECULE)) "35S-methionine"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge146 70 that 71> #<edge156 78 undergo 79> #<edge151 74 modal 75> #<edge152 75 be 76>)
   (:HYPHEN :POINT-MUTATION :HYPHEN :LOWER))
  "-2H-tetrazolium" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge144 69 semicolon 70> #<edge145 70 "that" 71> :LOWER) (:SINGLE-DIGIT :HYPHEN :LOWER))
  "4-sulfophenyl" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge139 65 of 66> #<edge141 66 the 67> #<edge142 67 tethere 68>)
   (:HYPHEN :SINGLE-DIGIT :HYPHEN))
  "-2-" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge137 64 mobility 65> #<edge138 65 "of" 66> :LOWER) (:SINGLE-DIGIT :HYPHEN :LOWER))
  "3-carboxymethoxyphenyl" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge131 60 "to" 61> :LOWER #<edge132 60 to 61> #<edge134 62 "a" 63> #<edge135 62 a 63>
    :LOWER)
   (:NUMBER-SEQUENCE :LOWER :HYPHEN :SINGLE-DIGIT :HYPHEN :LOWER))
  "4,5-dimethylthiazol-2-yl" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge104 4 bio-process 9> #<edge105 9 suggest 11> #<edge106 11 importance 13>)
   (:LOWER :HYPHEN :LOWER))
  "mock-infected" MAKE-HYPHENATED-STRUCTURE)
 (((:MIXED #<edge93 54 digit-sequence 55>) (:MIXED :SINGLE-DIGIT)) "ZnOAc2"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:OPEN-ANGLE-BRACKET #<edge90 50 digit-sequence 51>) (:OPEN-ANGLE-BRACKET :SINGLE-DIGIT)) "<4 µ"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:MIXED #<edge57 21 "of" 22>) (:MIXED :SINGLE-DIGIT)) "ZnOAc2" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge386 205 "an" 206> #<edge387 205 an 206>) (:SINGLE-DIGIT :SINGLE-LOWER)) "7b"
  REIFY-TWO-PART-LABEL)
 (((#<edge381 200 COMMA 201> #<edge383 202 modifier 203>) (:SINGLE-DIGIT :SINGLE-LOWER)) "7a"
  REIFY-TWO-PART-LABEL)
 (((#<edge113 31 open-reading-frame 33> #<edge114 30 open-reading-frame 33>
    #<edge115 30 open-reading-frame 36> #<edge116 29 of 36> #<edge118 21 of 25>)
   (:LOWER :HYPHEN :LOWER :HYPHEN :LOWER))
  "foot-and-mouth" MAKE-HYPHENATED-TRIPLE)
 (((#<edge211 110 and 111> #<edge212 111 "that" 112> #<edge213 111 that 112>)
   (:LOWER :HYPHEN :LOWER))
  "zinc-ionophores" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge111 23 open-reading-frame 25> #<edge112 22 open-reading-frame 25>
    #<edge113 31 open-reading-frame 33>)
   (:LOWER :HYPHEN :LOWER))
  "zinc-ionophore" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge47 15 close-bio-process 16> #<edge48 15 close 16> #<edge49 16 proximity 17>)
   (:LOWER :HYPHEN :LOWER))
  "positive-strand" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge187 90 that 91> #<edge188 91 "the" 92> #<edge189 91 the 92>) (:LOWER :HYPHEN :LOWER))
  "negative-strand" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge561 311 always 312> #<edge562 312 select 313> #<edge563 313 "the" 314>)
   (:LOWER :FORWARD-SLASH :LOWER))
  "isopropanol/ammonium" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge552 305 ones-number 306> #<edge553 305 number 306> #<edge554 306 locate 307>)
   (:LOWER :FORWARD-SLASH :LOWER))
  "phenol/chloroform" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge469 255 "a" 256> :MULTIPLICATION-SIGN) (:DIGITS :MULTIPLICATION-SIGN)) "35,000×"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge25 415 protein 417> #<edge27 1 sequencer 2>) (:INITIAL :INITIAL)) "P.D."
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge105 9 suggest 11> #<edge106 11 importance 13> #<edge108 14 proximity 17>)
   (:PROTEIN :HYPHEN :DIGITS))
  "DI-72" MAKE-HYPHENATED-PAIR)
 (((#<edge278 121 place 123> #<edge279 126 bio-entity 128> #<edge13 285 close-to 287>)
   (:DIGITS :HYPHEN :PROTEIN))
  "86-nt 3" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge248 136 bio-entity 137> #<edge249 137 be 138> #<edge251 138 move-to 139>)
   (:FULL :FORWARD-SLASH :SINGLE-DIGIT))
  "PAGE/8" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge134 62 "a" 63> #<edge135 62 a 63> #<edge5 174 but-rather 176>)
   (:PROTEIN :HYPHEN :BIO-ENTITY))
  "MBP-p88C" MAKE-HYPHENATED-PAIR)
 (((#<edge78 34 digit-sequence 35> #<edge79 34 number 35> #<edge80 36 COMMA 37>)
   (:PROTEIN :HYPHEN :MIXED))
  "Tris-HCl" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge505 288 native 289> #<edge506 289 reinitiation 290> #<edge507 290 site 291>)
   (:FULL :HYPHEN :MIXED))
  "SA-PMPs" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge490 272 bio-entity 273> #<edge491 276 "the" 277> #<edge492 276 the 277>)
   (:FULL :HYPHEN :MIXED))
  "SA-PMPs" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge482 266 "at" 267> #<edge483 266 at 267> #<edge485 267 a 268>) (:PROTEIN :HYPHEN :DIGITS))
  "DI-72" MAKE-HYPHENATED-PAIR)
 (((#<edge298 98 critical 103> #<edge299 93 between 97> #<edge300 88 show 90>)
   (:FULL :HYPHEN :MIXED))
  "SA-PMPs" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge256 143 downstream 144> #<edge257 144 "of" 145> #<edge258 144 of 145>)
   (:FULL :HYPHEN :MIXED))
  "SA-PMPs" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge235 126 stop-endurant 127> #<edge236 127 bio-entity 128> #<edge238 129 reinitiation 130>)
   (:PROTEIN :HYPHEN :DIGITS))
  "DI-72" MAKE-HYPHENATED-PAIR)
 (((#<edge185 89 deictic-location 90> #<edge186 90 "that" 91> #<edge187 90 that 91>)
   (:FULL :HYPHEN :MIXED))
  "SA-PMPs" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge158 80 limit 81> #<edge159 81 movement 82> #<edge160 82 following-adj 83>)
   (:FULL :HYPHEN :MIXED))
  "SA-PMPs" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge115 30 open-reading-frame 36> #<edge116 29 of 36> #<edge117 27 start 29>)
   (:LOWER :HYPHEN :NUCLEOTIDE))
  "biotin-UTP" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge70 29 "of" 30> #<edge71 29 of 30> #<edge73 30 the 31> #<edge74 31 downstream-segment 32>
    #<edge75 31 downstream 32>)
   (:CAPITALIZED :HYPHEN :DIGITS :HYPHEN :NUCLEOTIDE))
  "Biotin-16-UTP" MAKE-HYPHENATED-TRIPLE)
 (((#<edge40 11 "the" 12> #<edge41 11 the 12> #<edge43 13 "of" 14>) (:PROTEIN :HYPHEN :DIGITS))
  "DI-72" MAKE-HYPHENATED-PAIR)
 (((#<edge3 139 up-to 141> #<edge34 5 terminate 6> #<edge35 6 HYPHEN 7>) (:PROTEIN :HYPHEN :MIXED))
  "eEF1A-repRNA" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge68 27 start 28> #<edge69 28 bio-entity 29> #<edge71 29 of 30>)
   (:PROTEIN :HYPHEN :DIGITS))
  "DI-72" MAKE-HYPHENATED-PAIR)
 (((:LOWER #<edge52 18 "the" 19> :LOWER) (:LOWER :FORWARD-SLASH :LOWER)) "vol/vol"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge16 314 "wild-type" 317> #<edge17 314 wild-type 317> #<edge18 319 "even if" 321>)
   (:SINGLE-LOWER :HYPHEN :LOWER))
  "l-reaction" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge705 373 location-of 383> #<edge706 372 in 383> #<edge708 366 require 372>)
   (:PROTEIN :HYPHEN :DIGITS))
  "DI-72" MAKE-HYPHENATED-PAIR)
 (((#<edge594 341 cause 342> #<edge595 342 "the" 343> #<edge596 342 the 343>)
   (:PROTEIN :HYPHEN :MIXED))
  "Tris–HCl" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge575 326 of 327> #<edge576 327 "the" 328> #<edge577 327 the 328>) (:LOWER :HYPHEN :LOWER))
  "resin-bound" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge31 3 on 4> #<edge445 227 site 230> #<edge446 231 bio-use 233>)
   (:MOLECULE :HYPHEN :LOWER))
  "M2-agarose" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge386 205 "an" 206> #<edge389 207 "at" 208>) (:FULL :HYPHENATED-NUMBER)) "SB3–10"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge300 88 show 90> :MULTIPLICATION-SIGN) (:DIGITS :MULTIPLICATION-SIGN)) "500×"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge191 93 between 94> #<edge192 94 "the" 95> #<edge193 94 the 95>)
   (:PROTEIN :HYPHEN :MIXED))
  "Tris–HCl" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge141 66 the 67> #<edge142 67 tethere 68> #<edge143 68 bio-complex 69>)
   (:CAPITALIZED :HYPHEN :LOWER))
  "Co-purification" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge89 48 COMMA 49> #<edge90 50 digit-sequence 51> #<edge92 52 COMMA 53>)
   (:PROTEIN :HYPHEN :DIGITS))
  "DI-72" MAKE-HYPHENATED-PAIR)
 (((#<edge77 32 open-reading-frame 33> :MIXED #<edge78 34 digit-sequence 35>)
   (:SINGLE-DIGIT :MIXED :HYPHEN))
  "6XHis-" MAKE-HYPHENATED-STRUCTURE)
 (((:MIXED #<edge67 26 the 27> #<edge68 27 start 28> #<edge69 28 bio-entity 29>
    #<edge70 29 "of" 30> #<edge71 29 of 30> #<edge73 30 the 31> #<edge74 31 downstream-segment 32>
    #<edge1 118 protein 120>)
   (:MIXED :SINGLE-DIGIT :HYPHEN :PROTEIN :HYPHEN :PROTEIN :DIGITS :FORWARD-SLASH :BIO-ENTITY))
  "pESCHIS4-ADH-HF33/CUP1-DI-72" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge494 278 digit-sequence 279> #<edge495 278 number 279> #<edge496 279 bio-entity 280>)
   (:PROTEIN :HYPHEN :CAPITALIZED))
  "Tris-Cl" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge480 264 COMMA 265> #<edge481 265 or 266> #<edge482 266 "at" 267>) (:FULL :HYPHEN :FULL))
  "HEPES-KOH" MAKE-HYPHENATED-PAIR)
 (((#<edge392 209 or 210> #<edge393 210 very 211> #<edge394 211 near 212>)
   (:SINGLE-CAP :FORWARD-SLASH :SINGLE-CAP))
  "V/V" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge383 202 modifier 203> #<edge384 203 reinitiation 204> #<edge386 205 "an" 206>)
   (:SINGLE-CAP :FORWARD-SLASH :SINGLE-CAP))
  "V/W" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge240 131 detect 132> #<edge241 132 even 133> #<edge242 132 even 133>)
   (:PROTEIN :HYPHEN :CAPITALIZED))
  "Tris-Cl" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge207 107 figure 108> #<edge187 90 that 91>) (:RESIDUE-ON-PROTEIN :SINGLE-CAP)) "p88C"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge135 62 a 63> :ASTERISK #<edge136 63 restrict 64>) (:DIGITS :ASTERISK :SINGLE-CAP)) "16°C"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge121 15 close 16> #<edge122 14 proximity 25> #<edge123 15 close 16> #<edge124 13 of 25>
    :LOWER)
   (:SINGLE-LOWER :HYPHEN :SINGLE-CAP :HYPHEN :LOWER))
  "β-D-thiogalactopyranoside" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge63 24 protein 25> #<edge44 13 of 14>) (:RESIDUE-ON-PROTEIN :SINGLE-CAP)) "p88C"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge99 45 square-brackets 48> #<edge100 49 square-brackets 52>
    #<edge101 53 square-brackets 56>)
   (:FULL :HYPHEN :FULL))
  "HEPES-KOH" MAKE-HYPHENATED-PAIR)
 (((#<edge40 11 "the" 12> :MULTIPLICATION-SIGN) (:DIGITS :MULTIPLICATION-SIGN)) "21,000×"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge697 369 protein 372> #<edge699 364 there-exists 366>) (:SINGLE-CAP :SINGLE-DIGIT)) "S1"
  REIFY-TWO-PART-LABEL)
 (((:MIXED #<edge691 379 or 380>) (:MIXED :SINGLE-DIGIT)) "ZnSO4" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge635 338 bio-entity 340> #<edge637 344 fragment 347>) (:SINGLE-CAP :SINGLE-DIGIT)) "S1"
  REIFY-TWO-PART-LABEL)
 (((#<edge567 321 "the" 322> :ASTERISK #<edge568 321 the 322>) (:DIGITS :ASTERISK :SINGLE-CAP))
  "85°C" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:LOWER #<edge524 271 bio-entity 273>) (:LOWER :COLON)) "aliquotes:" :NO-EDGE)
 (((#<edge458 246 under 247> #<edge459 247 "the" 248> #<edge460 247 the 248>
    #<edge461 248 sequencer 249> #<edge462 249 circumstance 250>)
   (:PROTEIN :HYPHEN :LOWER :HYPHEN :FULL))
  "Tris-borate-EDTA" MAKE-HYPHENATED-TRIPLE)
 (((#<edge456 233 modifier 240> :MULTIPLICATION-SIGN) (:DIGITS :MULTIPLICATION-SIGN)) "0.5×"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge381 200 COMMA 201> #<edge382 201 whilst 202> #<edge383 202 modifier 203>)
   (:LOWER :HYPHEN :LOWER))
  "isopropanol-ammonium" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge376 157 be 159> #<edge377 157 be 160> #<edge378 153 suggest 155>)
   (:LOWER :HYPHEN :LOWER))
  "phenol-chloroform" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge134 62 "a" 63> #<edge135 62 a 63> #<edge136 63 restrict 64>) (:FULL :HYPHEN :FULL))
  "HEPES-KOH" MAKE-HYPHENATED-PAIR)
 (((#<edge121 15 close 16> #<edge122 14 proximity 25> #<edge9 214 wild-type 217>)
   (:PROTEIN :HYPHEN :BIO-ENTITY))
  "MBP-p92pol" MAKE-HYPHENATED-PAIR)
 (((#<edge102 1 study-bio-method 3> #<edge103 5 bio-process 9> #<edge105 9 suggest 11>)
   (:PROTEIN :HYPHEN :DIGITS))
  "DI-72" MAKE-HYPHENATED-PAIR)
 (((:MIXED #<edge588 337 that 338>) (:MIXED :SINGLE-DIGIT)) "CuSO4" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge533 266 at 285> #<edge534 254 at 264> #<edge535 246 under 250>) (:LOWER :HYPHEN :LOWER))
  "uracil-minus" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge33 4 the 5> #<edge460 247 the 248> #<edge461 248 sequencer 249>)
   (:PROTEIN :HYPHEN :LOWER))
  "URA3-based" PACKAGE-QUALIFYING-PAIR)
 (((#<edge451 243 efficiency 245> #<edge452 213 site 226> :FULL) (:SINGLE-DIGIT :HYPHEN :FULL))
  "5-FOA" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge435 223 point-mutation 225> #<edge436 220 point-mutation 222> :FULL
    #<edge437 220 point-mutation 225>)
   (:FULL :HYPHEN :FULL :HYPHEN))
  "SC-TLHK−" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge136 63 restrict 64> :ASTERISK #<edge137 64 mobility 65>) (:DIGITS :ASTERISK :SINGLE-CAP))
  "29°C" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge127 57 "this" 58> #<edge128 57 this 58> :FULL #<edge129 58 be 59>)
   (:FULL :HYPHEN :FULL :HYPHEN))
  "SC-ULHK−" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge9 214 wild-type 217> #<edge71 29 of 30> #<edge72 30 "the" 31>)
   (:MOLECULE :HYPHEN :PROTEIN))
  "Lithium acetate-PEG" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge1 118 protein 120> #<edge61 23 upstream-segment 24> #<edge3 139 up-to 141>)
   (:BIO-ENTITY :FORWARD-SLASH :BIO-ENTITY))
  "pESCHIS4-ADH-His33/CUP1-DI-72" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge49 16 proximity 17> #<edge51 17 of 18>) (:PROTEIN :DIGITS)) "TKY102"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:FULL #<edge259 145 pronoun/inanimate 146> :SHARP-SIGN #<edge261 147 position-bio-process 148>)
   (:FULL :FORWARD-SLASH :SHARP-SIGN :DIGITS))
  "CGGTGTCATCAAGCCAGGT/#2771" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:SHARP-SIGN #<edge258 144 of 145>) (:SHARP-SIGN :DIGITS)) "#2789" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge253 141 number 142> :SHARP-SIGN #<edge255 143 downstream-segment 144>)
   (:FORWARD-SLASH :SHARP-SIGN :DIGITS))
  "/#2790" NIL)
 (((:SHARP-SIGN #<edge252 141 digit-sequence 142>) (:SHARP-SIGN :DIGITS)) "#2787"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge247 135 start 136> :SHARP-SIGN #<edge249 137 be 138>)
   (:FORWARD-SLASH :SHARP-SIGN :DIGITS))
  "/#2788" NIL)
 (((:SHARP-SIGN #<edge246 134 the 135>) (:SHARP-SIGN :DIGITS)) "#2767" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge243 133 when 134> #<edge244 133 when 134>) (:LOWER :COLON)) "pairs:" :NO-EDGE)
 (((:TILDA #<edge217 113 the 114>) (:TILDA :HYPHENATED-NUMBER)) "∼300–500"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge579 329 window 330> #<edge581 331 article-figure 332>) (:PROTEIN :DIGITS)) "pRS314"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:FULL #<edge525 268 bio-entity 273> :SHARP-SIGN #<edge527 289 site 291>)
   (:FULL :FORWARD-SLASH :SHARP-SIGN :DIGITS))
  "CCGCCTCGAGGAGGGCCGCATCATGTAA/#2770" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:SHARP-SIGN #<edge524 271 bio-entity 273>) (:SHARP-SIGN :DIGITS)) "#2769"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge518 273 parentheses 285> :SHARP-SIGN #<edge520 247 circumstance 250>)
   (:FORWARD-SLASH :SHARP-SIGN :DIGITS))
  "/#1877" NIL)
 (((:SHARP-SIGN #<edge517 274 such-as 281>) (:SHARP-SIGN :DIGITS)) "#2768"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge512 259 parentheses 264> :SHARP-SIGN #<edge514 277 bio-entity 281>)
   (:FORWARD-SLASH :SHARP-SIGN :DIGITS))
  "/#2765" NIL)
 (((:SHARP-SIGN #<edge511 260 figure 263>) (:SHARP-SIGN :DIGITS)) "#2764"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge431 243 lower 244> #<edge433 244 efficiency 245>
    #<edge434 199 subordinate-conjunction 201> #<edge435 223 point-mutation 225>
    #<edge437 220 point-mutation 225> #<edge438 219 figure 225> #<edge31 3 on 4>)
   (:PROTEIN :DIGITS :HYPHEN :PROTEIN :SINGLE-DIGIT :HYPHEN :PROTEIN))
  "pRS314-pTEF1-TEF1" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge29 2 study-data 3> #<edge428 242 at 243> #<edge429 243 comparative-modifier 244>)
   (:PROTEIN :HYPHEN :LOWER))
  "TRP1-based" PACKAGE-QUALIFYING-PAIR)
 (((#<edge355 194 and 195> #<edge357 195 the 196>) (:PROTEIN :DIGITS)) "pRS317"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge311 157 be 158> #<edge313 159 solely 160> #<edge314 160 "the" 161>
    #<edge366 176 well 178> #<edge318 163 "the" 164> #<edge319 163 the 164>)
   (:PROTEIN :DIGITS :HYPHEN :RESIDUE-ON-PROTEIN :FORWARD-SLASH :PROTEIN))
  "pCM189-His92/Tet" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge269 106 parentheses 110> #<edge271 95 bio-complex 97> #<edge272 95 lambda-expression 96>
    #<edge273 94 bio-complex 97> #<edge274 98 bio-entity 100> #<edge365 172 efficiency 174>)
   (:PROTEIN :DIGITS :HYPHEN :PROTEIN :HYPHEN :RESIDUE-ON-PROTEIN))
  "pRS317-Tet-His92" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge364 166 bio-entity 168> #<edge266 150 number 151>
    #<edge267 85 subordinate-conjunction 87>)
   (:RESIDUE-ON-PROTEIN :HYPHEN :LOWER))
  "LYS2-based" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge226 121 be 122> #<edge227 122 place 123> #<edge229 123 downstream 124>)
   (:PROTEIN :HYPHEN :DIGITS))
  "DI-72" MAKE-HYPHENATED-PAIR)
 (((:MIXED #<edge197 98 "the" 99> #<edge198 98 the 99> #<edge199 99 bio-entity 100>
    #<edge200 100 be 101> #<edge238 129 reinitiation 130> #<edge204 103 to 104> :FULL
    #<edge206 105 efficiency 106> #<edge207 107 figure 108> #<edge208 107 article-figure 108>
    #<edge209 108 digit-sequence 109> #<edge211 110 and 111>)
   (:MIXED :SINGLE-DIGIT :HYPHEN :PROTEIN :HYPHEN :RESIDUE-ON-PROTEIN :FORWARD-SLASH :FULL
    :SINGLE-DIGIT :HYPHEN :PROTEIN :HYPHEN :DIGITS))
  "pESCHIS4-ADH-His33/CUP1-DI-72" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge161 82 following 83> :GREEK_CAPITAL_LETTER_DELTA) (:PROTEIN :GREEK_CAPITAL_LETTER_DELTA))
  "tef2Δ" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge13 285 close-to 287> #<edge119 17 of 21> :GREEK_CAPITAL_LETTER_DELTA
    #<edge121 15 close 16>)
   (:PROTEIN :HYPHEN :GREEK_CAPITAL_LETTER_DELTA :SINGLE-DIGIT))
  "trp1-Δ1" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge9 214 wild-type 217> #<edge110 18 bio-entity 21> #<edge112 22 open-reading-frame 25>)
   (:PROTEIN :HYPHEN :DIGITS))
  "ura3-52" MAKE-HYPHENATED-PAIR)
 (((#<edge108 14 proximity 17> #<edge109 19 bio-entity 21>) (:PROTEIN :SINGLE-LOWER)) "MATα"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge7 184 by-virtue-of 187> #<edge103 5 bio-process 9> #<edge105 9 suggest 11>)
   (:PROTEIN :FORWARD-SLASH :SINGLE-DIGIT))
  "TEF1/2" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge101 53 square-brackets 56> #<edge102 1 study-bio-method 3> :LOWER)
   (:CAPITALIZED :HYPHEN :LOWER))
  "Plasmid-borne" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge5 174 but-rather 176> :GREEK_CAPITAL_LETTER_DELTA #<edge62 23 upstream 24>)
   (:PROTEIN :GREEK_CAPITAL_LETTER_DELTA :SINGLE-DIGIT))
  "ura3Δ0" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge79 34 number 35> :GREEK_CAPITAL_LETTER_DELTA #<edge60 22 the 23>)
   (:RESIDUE-ON-PROTEIN :GREEK_CAPITAL_LETTER_DELTA :SINGLE-DIGIT))
  "met15Δ0" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge3 139 up-to 141> :GREEK_CAPITAL_LETTER_DELTA #<edge54 19 stop 20>)
   (:PROTEIN :GREEK_CAPITAL_LETTER_DELTA :SINGLE-DIGIT))
  "leu2Δ0" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge78 34 digit-sequence 35> :GREEK_CAPITAL_LETTER_DELTA #<edge52 18 "the" 19>)
   (:RESIDUE-ON-PROTEIN :GREEK_CAPITAL_LETTER_DELTA :SINGLE-DIGIT))
  "his3Δ1" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge41 11 the 12> #<edge43 13 "of" 14>) (:FULL :DIGITS)) "BY4741"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge74 31 downstream-segment 32> #<edge75 31 downstream 32> #<edge76 32 protein 33>)
   (:LOWER :HYPHEN :LOWER))
  "minus-strand" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge25 415 protein 417> #<edge520 247 circumstance 250> #<edge523 255 bio-entity 259>
    #<edge524 271 bio-entity 273> #<edge525 268 bio-entity 273>)
   (:PROTEIN :HYPHEN :PROTEIN :HYPHEN :MIXED))
  "eEF1A-RdRp-repRNA" MAKE-HYPHENATED-TRIPLE)
 (((#<edge492 276 the 277> #<edge490 272 bio-entity 273> #<edge491 276 "the" 277>)
   (:POINT-MUTATION :HYPHEN :SINGLE-CAP))
  "4B–C" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge410 227 modifier 228> #<edge411 228 reinitiation 229> #<edge413 230 modal 231>)
   (:LOWER :HYPHEN :LOWER))
  "time-course" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge11 274 such-as 276> #<edge318 163 "the" 164> #<edge13 285 close-to 287>)
   (:PROTEIN :FORWARD-SLASH :BIO-ENTITY))
  "p33/p92pol" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge154 77 "to" 78> #<edge155 77 to 78> #<edge156 78 undergo 79>)
   (:FULL :FORWARD-SLASH :PROTEIN))
  "RNA/protein" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge469 255 "a" 256> #<edge470 255 a 256> #<edge471 256 downstream-segment 257>)
   (:LOWER :HYPHEN :LOWER))
  "so-called" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge312 158 not 159> #<edge313 159 solely 160> #<edge314 160 "the" 161>)
   (:LOWER :HYPHEN :LOWER))
  "minus-strand" MAKE-HYPHENATED-STRUCTURE)
 (((:TILDA #<edge231 124 of 125> #<edge244 133 when 134>) (:TILDA :SINGLE-DIGIT :FOLD-ENDURANT))
  "∼2-fold" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge211 110 and 111> #<edge212 111 "that" 112> #<edge213 111 that 112>)
   (:LOWER :HYPHEN :LOWER))
  "pre-incubation" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge140 66 "the" 67> #<edge141 66 the 67> #<edge142 67 tethere 68>) (:LOWER :HYPHEN :LOWER))
  "pre-incubation" MAKE-HYPHENATED-STRUCTURE)
 (((:TILDA #<edge122 14 proximity 25> #<edge147 71 be 72>) (:TILDA :DIGITS :FOLD-ENDURANT))
  "∼10-fold" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge106 11 importance 13> #<edge107 15 proximity 17> #<edge108 14 proximity 17>)
   (:LOWER :HYPHEN :LOWER))
  "plus-strand" MAKE-HYPHENATED-STRUCTURE)
 (((:TILDA #<edge93 54 digit-sequence 55> #<edge144 69 semicolon 70>)
   (:TILDA :SINGLE-DIGIT :FOLD-ENDURANT))
  "∼3-fold" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge83 40 COMMA 41> #<edge84 42 digit-sequence 43> #<edge85 42 number 43>)
   (:LOWER :HYPHEN :LOWER))
  "minus-strand" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge659 292 give 298> #<edge663 309 event-relation 325>) (:SINGLE-CAP :POINT-MUTATION)) "S4B"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge415 232 bio-use 233> #<edge416 233 when 234> #<edge417 233 when 234>)
   (:LOWER :HYPHEN :LOWER))
  "affinity-purification" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge91 50 number 51> #<edge92 52 COMMA 53> #<edge93 54 digit-sequence 55>)
   (:PROTEIN :FORWARD-SLASH :LOWER))
  "proteins/host" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge585 335 COMMA 336> #<edge587 337 "that" 338> #<edge589 338 "the" 339>)
   (:SINGLE-CAP :SINGLE-DIGIT :SINGLE-CAP))
  "S4A" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge58 21 of 22> #<edge59 22 "the" 23> #<edge60 22 the 23>) (:LOWER :FORWARD-SLASH :LOWER))
  "assembly/replication" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge55 19 stop-endurant 20> #<edge56 20 bio-entity 21> #<edge57 21 "of" 22>)
   (:DIGITS :HYPHEN :LOWER))
  "two-step" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge534 254 at 264> #<edge536 292 however 293>) (:SINGLE-CAP :SINGLE-DIGIT)) "S3"
  REIFY-TWO-PART-LABEL)
 (((#<edge269 106 parentheses 110> #<edge270 148 parentheses 152>
    #<edge272 95 lambda-expression 96>)
   (:CAPITALIZED :HYPHEN :LOWER))
  "Time-course" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge11 274 such-as 276> :CAPITALIZED) (:PROTEIN :CAPITALIZED)) "eEF1Balpha"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge125 9 suggest 13> #<edge162 83 terminate 84>) (:DIGITS :FOLD-ENDURANT)) "3.5-fold"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge413 230 modal 231> #<edge414 231 be 232> #<edge417 233 when 234>)
   (:FULL :HYPHEN :PROTEIN))
  "RNA-RdRp" MAKE-HYPHENATED-PAIR)
 (((:TILDA #<edge377 157 be 160> #<edge421 236 reinitiation 237>)
   (:TILDA :SINGLE-DIGIT :FOLD-ENDURANT))
  "∼2-fold" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge343 180 modal 181> #<edge344 181 be 182> #<edge345 182 tethere 183>)
   (:LOWER :HYPHEN :LOWER))
  "pre-incubation" MAKE-HYPHENATED-STRUCTURE)
 (((:TILDA #<edge264 149 article-figure 150> #<edge285 104 efficiency 110>)
   (:TILDA :SINGLE-DIGIT :FOLD-ENDURANT))
  "∼2-fold" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge234 126 stop 127> #<edge235 126 stop-endurant 127> #<edge236 127 bio-entity 128>)
   (:LOWER :HYPHEN :LOWER))
  "pre-incubation" MAKE-HYPHENATED-STRUCTURE)
 (((:TILDA #<edge215 112 when 113> #<edge282 146 position 148>)
   (:TILDA :SINGLE-DIGIT :FOLD-ENDURANT))
  "∼5-fold" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge186 90 "that" 91> #<edge187 90 that 91> #<edge188 91 "the" 92>)
   (:CAPITALIZED :HYPHEN :LOWER))
  "Pre-incubation" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge9 214 wild-type 217> #<edge88 46 number 47>) (:CELL-LINE :SINGLE-CAP)) "S2A"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:TILDA #<edge389 207 "at" 208> #<edge432 243 lower-note 244>)
   (:TILDA :SINGLE-DIGIT :FOLD-ENDURANT))
  "∼6-fold" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge79 34 number 35> #<edge80 36 COMMA 37> #<edge81 38 digit-sequence 39>)
   (:LOWER :HYPHEN :LOWER))
  "coli-expressed" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge59 22 "the" 23> #<edge61 23 upstream-segment 24> #<edge62 23 upstream 24>)
   (:LITTLE-P :DIGITS :LOWER))
  "p88pol" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge54 19 stop 20> #<edge55 19 stop-endurant 20> #<edge56 20 bio-entity 21>)
   (:LOWER :HYPHEN :LOWER))
  "coli-expressed" MAKE-HYPHENATED-STRUCTURE)
 (((:TILDA #<edge64 24 open-reading-frame 25> #<edge116 29 of 36>)
   (:TILDA :SINGLE-DIGIT :FOLD-ENDURANT))
  "∼3-fold" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge10 274 "such as" 276> #<edge11 274 such-as 276> #<edge12 285 "close to" 287>)
   (:CAPITALIZED :HYPHEN :LOWER))
  "Cell-fractionation" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge201 101 comparative 102> #<edge203 103 "to" 104>) (:SINGLE-CAP :SINGLE-DIGIT)) "S1"
  REIFY-TWO-PART-LABEL)
 (((:TILDA #<edge113 31 open-reading-frame 33> #<edge147 71 be 72>)
   (:TILDA :SINGLE-DIGIT :FOLD-ENDURANT))
  "∼3-fold" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:TILDA #<edge50 17 "of" 18> #<edge94 54 number 55>) (:TILDA :SINGLE-DIGIT :FOLD-ENDURANT))
  "∼3-fold" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge1 118 protein 120> #<edge45 14 "the" 15>) (:PROTEIN :CAPITALIZED)) "eEF1As"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge60 22 the 23> #<edge61 23 upstream-segment 24> #<edge62 23 upstream 24>)
   (:LOWER :FORWARD-SLASH :LOWER))
  "assembly/activity" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge250 138 move-something-somewhere 139> #<edge206 105 efficiency 106>)
   (:RESIDUE-ON-PROTEIN :SINGLE-CAP))
  "A76V" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge11 274 such-as 276> #<edge126 3 on 9>) (:PROTEIN :SINGLE-LOWER)) "eEF1Bα"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge130 59 believe 60> #<edge46 14 the 15> #<edge132 60 to 61>)
   (:POINT-MUTATION :FORWARD-SLASH :POINT-MUTATION))
  "L374V/N377K" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge27 1 sequencer 2> #<edge28 2 study-bio-method 3> #<edge30 3 "on" 4> #<edge31 3 on 4>
    #<edge33 4 the 5>)
   (:LOWER :HYPHEN :LOWER :HYPHEN :LOWER))
  "gain-of-function" MAKE-HYPHENATED-TRIPLE)
 (((#<edge79 34 number 35> #<edge727 392 likely 393> #<edge728 392 likely 393>
    #<edge729 395 "the" 396>)
   (:CELL-LINE :SINGLE-CAP :HYPHEN :SINGLE-CAP))
  "S2B–C" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge65 25 and 26> #<edge67 26 the 27>) (:PROTEIN :AS-TO)) "eEF1As to"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:TILDA #<edge510 277 number 279> #<edge544 297 modifier 298>)
   (:TILDA :SINGLE-DIGIT :FOLD-ENDURANT))
  "∼2-fold" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge404 221 a 222> #<edge411 228 reinitiation 229> #<edge408 224 amino-acid 225>
    #<edge410 227 modifier 228>)
   (:SINGLE-CAP :POINT-MUTATION :HYPHEN :SINGLE-CAP))
  "S1D–E" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge31 3 on 4> #<edge321 165 and 166> #<edge322 166 stop 167>)
   (:PROTEIN :HYPHEN :SINGLE-CAP))
  "S1B–G" MAKE-HYPHENATED-STRUCTURE)
 (((:TILDA #<edge100 49 square-brackets 52>) (:TILDA :DIGITS)) "∼6,000"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge148 72 COMMA 73> #<edge149 73 "it" 74> #<edge150 73 pronoun/inanimate 74>)
   (:LOWER :HYPHEN :LOWER))
  "minus-strand" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge82 38 number 39> #<edge84 42 digit-sequence 43> #<edge86 44 COMMA 45>)
   (:PROTEIN :SINGLE-DIGIT :LITTLE-P))
  "Tdh2p" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge145 70 "that" 71> #<edge146 70 that 71> #<edge147 71 be 72>) (:LOWER :HYPHEN :LOWER))
  "minus-strand" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge93 54 digit-sequence 55> #<edge94 54 number 55> #<edge95 5 hyphenated-pair 8>)
   (:LOWER :HYPHEN :LOWER))
  "minus-strand" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge289 130 detect 132> #<edge290 130 detect 133> #<edge291 124 of 128>)
   (:LOWER :HYPHEN :LOWER))
  "negative-stranded" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge24 415 "eif3" 417> #<edge171 79 limit 81>) (:PROTEIN :LITTLE-P)) "Cdc34p"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge22 393 "due to" 395> #<edge168 66 bio-complex 69>) (:PROTEIN :LITTLE-P)) "Pdc1p"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge13 285 close-to 287> #<edge146 70 that 71> #<edge148 72 COMMA 73>
    #<edge150 73 pronoun/inanimate 74>)
   (:PROTEIN :FORWARD-SLASH :SINGLE-DIGIT :LITTLE-P))
  "Ssa1/2p" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:TILDA #<edge157 79 only 80>) (:TILDA :DIGITS)) "∼30" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge11 274 such-as 276> #<edge115 30 open-reading-frame 36>) (:PROTEIN :LOWER)) "p92pol"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge54 19 stop 20> #<edge55 19 stop-endurant 20> #<edge57 21 "of" 22> #<edge58 21 of 22>
    #<edge5 174 but-rather 176>)
   (:LOWER :HYPHEN :LOWER :HYPHEN :MOTILITY))
  "cell-to-cell movement" MAKE-HYPHENATED-TRIPLE)
 (((#<edge3 139 up-to 141> #<edge45 14 "the" 15>) (:PROTEIN :LOWER)) "p92pol"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge94 54 number 55> #<edge95 5 hyphenated-pair 8> #<edge96 33 square-brackets 36>)
   (:LOWER :HYPHEN :LOWER))
  "plus-stranded" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge64 24 open-reading-frame 25> #<edge65 25 and 26> #<edge66 26 "the" 27>)
   (:LOWER :HYPHEN :LOWER))
  "product-moment" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge29 2 study-data 3> #<edge216 113 "the" 114>) (:PROTEIN :SINGLE-DIGIT)) "HLA-C2"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge185 89 deictic-location 90> #<edge25 415 protein 417> #<edge186 90 "that" 91> :ASTERISK
    #<edge192 94 "the" 95> #<edge190 92 distance 93>)
   (:SINGLE-DIGIT :CELL-LINE :FULL :ASTERISK :RESIDUE-ON-PROTEIN :FULL))
  "2DL3PF*B46PF" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge174 74 ability 77> #<edge175 73 ability 77> #<edge177 65 of 69> #<edge178 62 mobility 69>
    :ASTERISK #<edge191 93 between 94> #<edge182 87 "we" 88>)
   (:SINGLE-DIGIT :PROTEIN :SINGLE-DIGIT :FULL :ASTERISK :RESIDUE-ON-PROTEIN :FULL))
  "2DL2PF*B46PF" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge23 393 due-to 395> #<edge169 74 be 76> #<edge171 79 limit 81> #<edge172 79 movement 82>)
   (:PROTEIN :HYPHEN :SINGLE-DIGIT :COLON))
  "KIR2DL2-3:" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge103 5 bio-process 9> #<edge17 314 wild-type 317> :FULL :ASTERISK
    #<edge19 319 even-if 321> :FULL)
   (:SINGLE-DIGIT :CELL-LINE :FULL :ASTERISK :PROTEIN :FULL))
  "2DL3PF*C1PF" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge97 37 square-brackets 40> #<edge105 9 suggest 11> :FULL :ASTERISK
    #<edge15 300 wild-type 303> :FULL)
   (:SINGLE-DIGIT :PROTEIN :FULL :ASTERISK :PROTEIN :FULL))
  "2DL2PF*C1PF" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge91 50 number 51> #<edge104 4 bio-process 9> :FULL :ASTERISK #<edge13 285 close-to 287>
    :FULL)
   (:SINGLE-DIGIT :PROTEIN :FULL :ASTERISK :PROTEIN :FULL))
  "2DL2PF*C2PF" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge9 214 wild-type 217> :FULL :ASTERISK #<edge11 274 such-as 276> :FULL)
   (:BIO-ENTITY :FULL :ASTERISK :PROTEIN :FULL))
  "2DL1PF*C2PF" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge79 34 number 35> #<edge80 36 COMMA 37> #<edge81 38 digit-sequence 39>)
   (:PROTEIN :HYPHEN :LOWER))
  "receptor-ligand" PACKAGE-QUALIFYING-PAIR)
 (((#<edge7 184 by-virtue-of 187> #<edge69 28 bio-entity 29> #<edge71 29 of 30>)
   (:PROTEIN :HYPHEN :SINGLE-DIGIT))
  "KIR2DL1-3" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge3 139 up-to 141> #<edge66 26 "the" 27> #<edge67 26 the 27> #<edge5 174 but-rather 176>)
   (:PROTEIN :SINGLE-DIGIT :FORWARD-SLASH :PROTEIN))
  "HLA-C1/C2" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge181 86 COMMA 87> #<edge182 87 "we" 88> #<edge183 87 pronoun/first/plural 88>)
   (:DIGITS :HYPHEN :LOWER))
  "two-tailed" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge111 23 open-reading-frame 25> #<edge112 22 open-reading-frame 25>) (:DIGITS :COLON))
  "zero:" :NUMBER-WORD-FSA)
 (((#<edge41 11 the 12> #<edge43 13 "of" 14>) (:FULL :SINGLE-DIGIT)) "DIVERGE2"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge104 4 bio-process 9> #<edge105 9 suggest 11> #<edge107 15 proximity 17>
    #<edge108 14 proximity 17> #<edge110 18 bio-entity 21> #<edge111 23 open-reading-frame 25>)
   (:PROTEIN :FORWARD-SLASH :CAPITALIZED :FORWARD-SLASH :LOWER :FORWARD-SLASH))
  "gov/Traces/home/" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge74 31 downstream-segment 32> #<edge75 31 downstream 32> #<edge76 32 protein 33>)
   (:PROTEIN :HYPHEN :SINGLE-CAP))
  "MHC-B" MAKE-HYPHENATED-STRUCTURE)
 (((:FULL #<edge38 9 have 10> #<edge39 10 suggest 11>) (:FULL :HYPHEN :PROTEIN)) "IPD-MHC"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:FULL #<edge35 6 HYPHEN 7> #<edge36 7 reinitiation 8>) (:FULL :HYPHEN :PROTEIN)) "IMGT-HLA"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge16 314 "wild-type" 317> #<edge17 314 wild-type 317> #<edge18 319 "even if" 321>)
   (:PROTEIN :HYPHEN :SINGLE-CAP))
  "MHC-B" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge96 33 square-brackets 36> #<edge98 41 square-brackets 44>) (:SINGLE-CAP :SINGLE-DIGIT))
  "S1" REIFY-TWO-PART-LABEL)
 (((#<edge42 12 importance 13> #<edge44 13 of 14>) (:SINGLE-CAP :SINGLE-DIGIT)) "S1"
  REIFY-TWO-PART-LABEL)
 (((#<edge9 214 wild-type 217> #<edge10 274 "such as" 276> #<edge11 274 such-as 276>)
   (:PROTEIN :HYPHEN :SINGLE-CAP))
  "MHC-B" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge150 73 pronoun/inanimate 74> #<edge152 75 be 76>) (:SINGLE-CAP :SINGLE-DIGIT)) "S1"
  REIFY-TWO-PART-LABEL)
 (((#<edge134 62 "a" 63> :CLOSE-ANGLE-BRACKET #<edge136 63 restrict 64>)
   (:SINGLE-LOWER :CLOSE-ANGLE-BRACKET :SINGLE-DIGIT))
  "ω>1" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge93 54 digit-sequence 55> :GREEK_CAPITAL_LETTER_DELTA #<edge94 54 number 55>)
   (:SINGLE-DIGIT :GREEK_CAPITAL_LETTER_DELTA :SINGLE-CAP))
  "2ΔL" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge51 17 of 18> :CLOSE-ANGLE-BRACKET #<edge53 18 the 19>)
   (:SINGLE-LOWER :CLOSE-ANGLE-BRACKET :SINGLE-DIGIT))
  "ω>1" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge14 300 "wild-type" 303> #<edge16 314 "wild-type" 317>) (:PROTEIN :SINGLE-DIGIT)) "PAML4"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge10 274 "such as" 276> #<edge11 274 such-as 276> #<edge12 285 "close to" 287>)
   (:LOWER :HYPHEN :LOWER))
  "maximum-likelihood" MAKE-HYPHENATED-STRUCTURE)
 (((:MIXED #<edge2 139 "up to" 141> :MIXED) (:MIXED :FORWARD-SLASH :MIXED)) "dN/dS"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge23 393 due-to 395> #<edge251 138 move-to 139> #<edge253 141 number 142>)
   (:BIO-ENTITY :FORWARD-SLASH :SINGLE-DIGIT))
  "2DS3/5" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge19 319 even-if 321> #<edge228 123 downstream-segment 124> #<edge230 124 "of" 125>)
   (:PROTEIN :FORWARD-SLASH :SINGLE-DIGIT))
  "KIR2DS3/5" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge15 300 wild-type 303> #<edge205 104 reinitiation 105>) (:BIO-ENTITY :PLUS-SIGN)) "2DL5+"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge11 274 such-as 276> #<edge154 77 "to" 78>) (:BIO-ENTITY :SINGLE-CAP)) "2DL5A"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge3 139 up-to 141> #<edge5 174 but-rather 176>) (:BIO-ENTITY :+/-)) "2DL5+/−"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge65 25 and 26> #<edge66 26 "the" 27> #<edge67 26 the 27>) (:SINGLE-DIGIT :HYPHEN :LOWER))
  "2-tailed" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge208 107 article-figure 108> #<edge209 108 digit-sequence 109> #<edge210 108 number 109>)
   (:LOWER :HYPHEN :NUCLEOTIDE))
  "single-nucleotide" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge182 87 "we" 88> #<edge183 87 pronoun/first/plural 88> #<edge184 88 show 89>)
   (:CAPITALIZED :FORWARD-SLASH :LOWER))
  "Presence/absence" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge161 82 following 83> #<edge163 58 believe 60>) (:FULL :SINGLE-DIGIT)) "MEGA4"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge147 71 be 72> #<edge149 73 "it" 74>) (:SINGLE-CAP :SINGLE-DIGIT)) "S1"
  REIFY-TWO-PART-LABEL)
 (((:FULL #<edge105 9 suggest 11> :FULL) (:FULL :HYPHEN :FULL)) "HAPLO-IHP"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge25 415 protein 417> #<edge3 139 up-to 141> #<edge26 415 bio-complex 417>
    #<edge28 2 study-bio-method 3> #<edge30 3 "on" 4>)
   (:SINGLE-DIGIT :CELL-LINE :FORWARD-SLASH :SINGLE-DIGIT :SINGLE-LOWER))
  "3DL1/2a" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge18 319 "even if" 321> #<edge66 26 "the" 27>) (:SINGLE-DIGIT :PROTEIN)) "2DL4"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge106 11 importance 13> #<edge108 14 proximity 17>) (:SINGLE-CAP :SINGLE-DIGIT)) "S1"
  REIFY-TWO-PART-LABEL)
 (((#<edge45 14 "the" 15> #<edge46 14 the 15> #<edge47 15 close-bio-process 16>)
   (:LOWER :HYPHEN :LOWER))
  "maximum-likelihood" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge175 73 ability 77> #<edge177 65 of 69>) (:SINGLE-CAP :SINGLE-DIGIT)) "S1"
  REIFY-TWO-PART-LABEL)
 (((#<edge151 74 modal 75> #<edge153 76 ability 77> #<edge154 77 "to" 78> #<edge155 77 to 78>
    #<edge157 79 only 80>)
   (:SINGLE-CAP :SINGLE-DIGIT :HYPHEN :SINGLE-CAP :SINGLE-DIGIT))
  "D1-D2" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge143 68 bio-complex 69> #<edge145 70 "that" 71> #<edge146 70 that 71> #<edge147 71 be 72>
    #<edge149 73 "it" 74>)
   (:SINGLE-CAP :SINGLE-DIGIT :HYPHEN :SINGLE-CAP :SINGLE-DIGIT))
  "D0-D2" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge11 274 such-as 276> #<edge135 62 a 63> #<edge137 64 mobility 65>)
   (:BIO-ENTITY :HYPHEN :SINGLE-DIGIT))
  "2DS1-5" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge9 214 wild-type 217> #<edge131 60 "to" 61> #<edge133 61 reflect 62>)
   (:BIO-ENTITY :HYPHEN :SINGLE-DIGIT))
  "2DL1-3" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge124 13 of 25> #<edge161 82 following 83>) (:SINGLE-DIGIT :PROTEIN)) "2DL4-5"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge101 53 square-brackets 56> #<edge3 139 up-to 141> #<edge102 1 study-bio-method 3>
    #<edge104 4 bio-process 9>)
   (:SINGLE-DIGIT :CELL-LINE :HYPHEN :SINGLE-DIGIT))
  "3DL1-2" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge46 14 the 15> #<edge48 15 close 16>) (:SINGLE-CAP :SINGLE-DIGIT)) "D2"
  REIFY-TWO-PART-LABEL)
 (((#<edge41 11 the 12> #<edge43 13 "of" 14>) (:SINGLE-CAP :SINGLE-DIGIT)) "D1"
  REIFY-TWO-PART-LABEL)
 (((#<edge28 2 study-bio-method 3> #<edge30 3 "on" 4>) (:SINGLE-CAP :SINGLE-DIGIT)) "D0"
  REIFY-TWO-PART-LABEL)
 (((#<edge26 415 bio-complex 417> #<edge27 1 sequencer 2>) (:LOWER :COLON)) "groups:" :NO-EDGE)
 (((#<edge58 21 of 22> #<edge3 139 up-to 141>) (:PROTEIN :-LIKE)) "Ig-like"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge44 13 of 14> #<edge1 118 protein 120>) (:PROTEIN :-LIKE)) "Ig-like"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:LOWER #<edge37 8 bio-process 9> :LOWER #<edge38 9 have 10> #<edge39 10 suggest 11>
    #<edge40 11 "the" 12>)
   (:LOWER :FORWARD-SLASH :LOWER :FORWARD-SLASH :PROTEIN :FORWARD-SLASH))
  "uk/ipd/kir/" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge191 93 between 94> #<edge193 94 the 95>) (:SINGLE-CAP :SINGLE-DIGIT)) "H2"
  REIFY-TWO-PART-LABEL)
 (((#<edge101 53 square-brackets 56> #<edge103 5 bio-process 9>) (:SINGLE-CAP :SINGLE-DIGIT)) "S1"
  REIFY-TWO-PART-LABEL)
 (((#<edge1 118 protein 120> #<edge88 46 number 47> #<edge90 50 digit-sequence 51>
    #<edge3 139 up-to 141>)
   (:PROTEIN :HYPHEN :DIGITS :PROTEIN))
  "RP43-84K19" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge46 14 the 15> #<edge47 15 close-bio-process 16>) (:LOWER :COLON)) "individual:" :NO-EDGE)
 (((:FULL #<edge39 10 suggest 11> #<edge41 11 the 12>) (:FULL :HYPHEN :DIGITS)) "CHORI-251"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge27 1 sequencer 2> #<edge28 2 study-bio-method 3>) (:LOWER :COLON)) "individual:"
  :NO-EDGE)
 (((:FULL #<edge20 376 "wild-type" 379> #<edge22 393 "due to" 395>) (:FULL :HYPHEN :DIGITS))
  "RPCI-43" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge12 285 "close to" 287> #<edge14 300 "wild-type" 303>) (:SINGLE-CAP :SINGLE-DIGIT)) "H2"
  REIFY-TWO-PART-LABEL)
 (((#<edge169 74 be 76> :ASTERISK #<edge171 79 limit 81>) (:SINGLE-CAP :ASTERISK :DIGITS)) "B*73"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge157 79 only 80> #<edge158 80 limit 81> #<edge159 81 movement 82>)
   (:PROTEIN :HYPHEN :SINGLE-CAP))
  "MHC-B" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge125 9 suggest 13> #<edge126 3 on 9> #<edge127 57 "this" 58>)
   (:PROTEIN :HYPHEN :SINGLE-CAP))
  "MHC-B" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge109 19 bio-entity 21> #<edge110 18 bio-entity 21> #<edge111 23 open-reading-frame 25>)
   (:PROTEIN :HYPHEN :SINGLE-CAP))
  "MHC-B" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge71 29 of 30> #<edge72 30 "the" 31> #<edge73 30 the 31>) (:PROTEIN :HYPHEN :SINGLE-CAP))
  "MHC-B" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge393 210 very 211> #<edge394 211 near 212> #<edge395 212 COMMA 213>)
   (:LOWER :HYPHEN :LOWER))
  "pre-eclampsia" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge164 60 reflect 62> #<edge165 62 mobility 65> #<edge166 67 bio-complex 69>)
   (:LOWER :HYPHEN :LOWER))
  "high-avidity" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge158 80 limit 81> #<edge159 81 movement 82>) (:LOWER :COLON)) "haplotypes:" :NO-EDGE)
 (((#<edge113 31 open-reading-frame 33> #<edge114 30 open-reading-frame 33>
    #<edge115 30 open-reading-frame 36>)
   (:LOWER :HYPHEN :LOWER))
  "high-avidity" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge229 123 downstream 124> #<edge230 124 "of" 125> #<edge231 124 of 125>)
   (:LOWER :HYPHEN :LOWER))
  "high-avidity" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge181 86 COMMA 87> #<edge182 87 "we" 88> #<edge183 87 pronoun/first/plural 88>)
   (:LOWER :HYPHEN :LOWER))
  "high-avidity" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge94 54 number 55> #<edge95 5 hyphenated-pair 8> #<edge96 33 square-brackets 36>)
   (:PROTEIN :HYPHEN :SINGLE-CAP))
  "MHC-C" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge51 17 of 18> #<edge52 18 "the" 19> #<edge53 18 the 19>) (:LOWER :HYPHEN :LOWER))
  "high-avidity" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge174 74 ability 77> #<edge7 184 by-virtue-of 187>) (:SINGLE-CAP :-LIKE)) "C-like"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge117 27 start 29> #<edge118 21 of 25> #<edge119 17 of 21>) (:PROTEIN :HYPHEN :SINGLE-CAP))
  "MHC-B" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge74 31 downstream-segment 32> #<edge75 31 downstream 32> #<edge76 32 protein 33>)
   (:PROTEIN :HYPHEN :SINGLE-CAP))
  "MHC-B" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge23 393 due-to 395> #<edge24 415 "eif3" 417> #<edge25 415 protein 417>)
   (:PROTEIN :HYPHEN :SINGLE-CAP))
  "MHC-B" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge405 222 and 223> #<edge407 223 number 224>) (:SINGLE-LOWER :SINGLE-DIGIT)) "α2"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge401 220 digit-sequence 221> #<edge403 221 amino-acid 222>) (:SINGLE-LOWER :SINGLE-DIGIT))
  "α1" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge335 177 well-bio-process 178> #<edge337 177 well-adverbial 178>)
   (:SINGLE-LOWER :SINGLE-DIGIT))
  "α1" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge308 155 that 156> #<edge309 156 "it" 157> #<edge310 156 pronoun/inanimate 157>)
   (:PROTEIN :HYPHEN :SINGLE-CAP))
  "MHC-C" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge299 93 between 97> #<edge300 88 show 90> #<edge301 87 show 90> #<edge302 85 show 90>
    #<edge7 184 by-virtue-of 187>)
   (:PROTEIN :HYPHEN :SINGLE-CAP :FORWARD-SLASH :INITIAL))
  "MHC-B/C." PACKAGE-SLASHED-SEQUENCE)
 (((#<edge291 124 of 128> #<edge292 123 downstream 128> #<edge293 116 of 121>)
   (:PROTEIN :HYPHEN :SINGLE-CAP))
  "MHC-B" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge284 145 position 152> #<edge285 104 efficiency 110> #<edge286 144 of 152>)
   (:PROTEIN :HYPHEN :SINGLE-CAP))
  "MHC-C" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge247 135 start 136> #<edge248 136 bio-entity 137> #<edge249 137 be 138>)
   (:PROTEIN :HYPHEN :SINGLE-CAP))
  "MHC-B" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge229 123 downstream 124> #<edge230 124 "of" 125> #<edge231 124 of 125>)
   (:PROTEIN :HYPHEN :SINGLE-CAP))
  "MHC-C" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge157 79 only 80> #<edge159 81 movement 82>) (:SINGLE-LOWER :SINGLE-DIGIT)) "α1"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge125 9 suggest 13> #<edge127 57 "this" 58>) (:SINGLE-LOWER :SINGLE-DIGIT)) "α1"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge112 22 open-reading-frame 25> #<edge113 31 open-reading-frame 33>
    #<edge114 30 open-reading-frame 33>)
   (:LOWER :HYPHEN :LOWER))
  "locus-specific" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge79 34 number 35> #<edge47 15 close-bio-process 16> #<edge49 16 proximity 17>)
   (:POINT-MUTATION :HYPHEN :DIGITS))
  "9.9E-22" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge13 285 close-to 287> #<edge14 300 "wild-type" 303> #<edge15 300 wild-type 303>)
   (:PROTEIN :HYPHEN :SINGLE-CAP))
  "MHC-B" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge363 183 parentheses 198> #<edge365 172 efficiency 174>) (:SINGLE-CAP :SINGLE-DIGIT)) "S5"
  REIFY-TWO-PART-LABEL)
 (((#<edge269 106 parentheses 110> #<edge271 95 bio-complex 97>) (:SINGLE-CAP :SINGLE-DIGIT)) "S5"
  REIFY-TWO-PART-LABEL)
 (((#<edge211 110 and 111> #<edge213 111 that 112>) (:SINGLE-CAP :SINGLE-DIGIT)) "S5"
  REIFY-TWO-PART-LABEL)
 (((#<edge150 73 pronoun/inanimate 74> #<edge152 75 be 76> #<edge153 76 ability 77>)
   (:PROTEIN :SINGLE-DIGIT :PROTEIN))
  "KIR2DL" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge3 139 up-to 141> #<edge41 11 the 12> #<edge43 13 "of" 14>)
   (:PROTEIN :FORWARD-SLASH :SINGLE-DIGIT))
  "KIR2DL2/3" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge229 123 downstream 124> #<edge231 124 of 125>) (:SINGLE-CAP :SINGLE-DIGIT)) "S4"
  REIFY-TWO-PART-LABEL)
 (((#<edge141 66 the 67> #<edge142 67 tethere 68> #<edge143 68 bio-complex 69>)
   (:LOWER :HYPHEN :LOWER))
  "low-frequency" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge128 57 this 58> :ASTERISK #<edge130 59 believe 60>) (:SINGLE-CAP :ASTERISK :DIGITS))
  "B*46" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:TILDA #<edge90 50 digit-sequence 51>) (:TILDA :HYPHENATED-NUMBER)) "∼55–65"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge7 184 by-virtue-of 187> :ASTERISK #<edge54 19 stop 20>) (:PROTEIN :ASTERISK :DIGITS))
  "HLA-B*46" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge36 7 reinitiation 8> #<edge31 3 on 4>) (:POINT-MUTATION :DIGITS)) "three N80"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge322 166 stop 167> #<edge313 159 solely 160> #<edge323 166 stop-endurant 167>)
   (:RESIDUE-ON-PROTEIN :HYPHEN :RESIDUE-ON-PROTEIN))
  "V76-T80" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge320 164 start 165> #<edge302 85 show 90> #<edge321 165 and 166>)
   (:RESIDUE-ON-PROTEIN :HYPHEN :RESIDUE-ON-PROTEIN))
  "V76-I80" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge318 163 "the" 164> #<edge289 130 detect 132> #<edge319 163 the 164>)
   (:RESIDUE-ON-PROTEIN :HYPHEN :RESIDUE-ON-PROTEIN))
  "V76-N80" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge281 137 move-something-somewhere 139> #<edge282 146 position 148>
    #<edge283 145 position 148>)
   (:PROTEIN :HYPHEN :SINGLE-CAP))
  "MHC-B" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge243 133 when 134> #<edge244 133 when 134> #<edge245 134 "the" 135>)
   (:PROTEIN :HYPHEN :SINGLE-CAP))
  "MHC-B" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge110 18 bio-entity 21> #<edge111 23 open-reading-frame 25>
    #<edge112 22 open-reading-frame 25>)
   (:PROTEIN :HYPHEN :SINGLE-CAP))
  "MHC-B" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge103 5 bio-process 9> #<edge104 4 bio-process 9> #<edge105 9 suggest 11>)
   (:PROTEIN :HYPHEN :SINGLE-CAP))
  "MHC-C" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge298 98 critical 103> #<edge300 88 show 90>) (:SINGLE-CAP :SINGLE-DIGIT)) "S3"
  REIFY-TWO-PART-LABEL)
 (((#<edge269 106 parentheses 110> #<edge270 148 parentheses 152> #<edge271 95 bio-complex 97>)
   (:PROTEIN :HYPHEN :SINGLE-CAP))
  "MHC-B" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge220 116 "of" 117> #<edge221 116 of 117> #<edge222 117 "the" 118>)
   (:PROTEIN :HYPHEN :SINGLE-CAP))
  "MHC-B" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge204 103 to 104> #<edge205 104 reinitiation 105> #<edge206 105 efficiency 106>)
   (:PROTEIN :HYPHEN :SINGLE-CAP))
  "MHC-C" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge189 91 the 92> #<edge190 92 distance 93> #<edge191 93 between 94>)
   (:PROTEIN :HYPHEN :SINGLE-CAP))
  "MHC-B" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge122 14 proximity 25> #<edge123 15 close 16> #<edge124 13 of 25>)
   (:PROTEIN :HYPHEN :SINGLE-CAP))
  "MHC-B" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge108 14 proximity 17> #<edge109 19 bio-entity 21> #<edge110 18 bio-entity 21>)
   (:PROTEIN :HYPHEN :SINGLE-CAP))
  "MHC-C" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge59 22 "the" 23> #<edge60 22 the 23> #<edge61 23 upstream-segment 24>)
   (:PROTEIN :HYPHEN :SINGLE-CAP))
  "MHC-C" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge257 144 "of" 145> :CLOSE-ANGLE-BRACKET #<edge260 146 modifier 147>)
   (:LITTLE-P :CLOSE-ANGLE-BRACKET :DIGITS))
  "p>0.9" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge1 118 protein 120> #<edge42 12 importance 13> #<edge43 13 "of" 14> #<edge44 13 of 14>
    :CAPITALIZED #<edge46 14 the 15>)
   (:PROTEIN :HYPHEN :PROTEIN :HYPHEN :CAPITALIZED :SINGLE-DIGIT))
  "KIR2DL2-HLA-Cw3" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge23 393 due-to 395> #<edge25 415 protein 417>) (:SINGLE-CAP :SINGLE-DIGIT)) "D2"
  REIFY-TWO-PART-LABEL)
 (((#<edge19 319 even-if 321> #<edge21 376 wild-type 379>) (:SINGLE-CAP :SINGLE-DIGIT)) "D1"
  REIFY-TWO-PART-LABEL)
 (((#<edge163 58 believe 60> #<edge164 60 reflect 62> #<edge165 62 mobility 65>)
   (:LOWER :HYPHEN :LOWER))
  "low-avidity" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge38 9 have 10> #<edge39 10 suggest 11> #<edge40 11 "the" 12>)
   (:PROTEIN :HYPHEN :SINGLE-CAP))
  "MHC-C" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge9 214 wild-type 217> #<edge10 274 "such as" 276> #<edge11 274 such-as 276>)
   (:PROTEIN :HYPHEN :SINGLE-CAP))
  "MHC-C" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge150 73 pronoun/inanimate 74> #<edge152 75 be 76>) (:SINGLE-CAP :SINGLE-DIGIT)) "D2"
  REIFY-TWO-PART-LABEL)
 (((#<edge147 71 be 72> #<edge149 73 "it" 74>) (:SINGLE-CAP :SINGLE-DIGIT)) "D2"
  REIFY-TWO-PART-LABEL)
 (((#<edge132 60 to 61> #<edge134 62 "a" 63>) (:SINGLE-CAP :SINGLE-DIGIT)) "D1"
  REIFY-TWO-PART-LABEL)
 (((#<edge129 58 be 59> #<edge130 59 believe 60> #<edge131 60 "to" 61>)
   (:PROTEIN :HYPHEN :SINGLE-CAP))
  "MHC-C" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge125 9 suggest 13> #<edge127 57 "this" 58>) (:SINGLE-CAP :SINGLE-DIGIT)) "D2"
  REIFY-TWO-PART-LABEL)
 (((#<edge118 21 of 25> #<edge120 14 proximity 21>) (:SINGLE-CAP :SINGLE-DIGIT)) "D1"
  REIFY-TWO-PART-LABEL)
 (((#<edge104 4 bio-process 9> #<edge106 11 importance 13> #<edge107 15 proximity 17>
    #<edge108 14 proximity 17> #<edge110 18 bio-entity 21>)
   (:SINGLE-CAP :SINGLE-DIGIT :HYPHEN :SINGLE-CAP :SINGLE-DIGIT))
  "D1–D2" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge100 49 square-brackets 52> #<edge102 1 study-bio-method 3>) (:SINGLE-CAP :SINGLE-DIGIT))
  "D2" REIFY-TWO-PART-LABEL)
 (((#<edge96 33 square-brackets 36> #<edge98 41 square-brackets 44>) (:SINGLE-CAP :SINGLE-DIGIT))
  "D1" REIFY-TWO-PART-LABEL)
 (((#<edge81 38 digit-sequence 39> #<edge82 38 number 39> #<edge83 40 COMMA 41>)
   (:PROTEIN :HYPHEN :SINGLE-CAP))
  "MHC-C" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge293 116 of 121> #<edge294 114 start 116> #<edge295 103 to 110>)
   (:PROTEIN :HYPHEN :SINGLE-CAP))
  "MHC-C" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge215 112 when 113> #<edge217 113 the 114> #<edge9 214 wild-type 217>)
   (:PROTEIN :SINGLE-DIGIT :PROTEIN))
  "KIR3DP1" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge61 23 upstream-segment 24> #<edge63 24 protein 25>) (:SINGLE-CAP :SINGLE-DIGIT)) "S1"
  REIFY-TWO-PART-LABEL)
 (((#<edge504 287 the 288> #<edge505 288 native 289> #<edge506 289 reinitiation 290>)
   (:LOWER :HYPHEN :LOWER))
  "tail-swapping" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge344 181 be 182> #<edge346 187 "the" 188>) (:SINGLE-CAP :SINGLE-DIGIT)) "T2"
  REIFY-TWO-PART-LABEL)
 (((#<edge337 177 well-adverbial 178> #<edge338 177 modifier 178> #<edge339 177 well 178>)
   (:LOWER :HYPHEN :LOWER))
  "tyrosine-based" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge172 79 movement 82> #<edge173 82 following 84> #<edge175 73 ability 77>)
   (:SINGLE-DIGIT :PROTEIN :SINGLE-DIGIT))
  "2DL7" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge166 67 bio-complex 69> #<edge167 67 lambda-expression 68> #<edge169 74 be 76>)
   (:SINGLE-DIGIT :PROTEIN :SINGLE-DIGIT))
  "3DL5" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge141 66 the 67> #<edge186 90 "that" 91>) (:SINGLE-DIGIT :PROTEIN)) "2DL6"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge135 62 a 63> #<edge136 63 restrict 64> #<edge138 65 "of" 66>)
   (:SINGLE-DIGIT :PROTEIN :SINGLE-DIGIT))
  "2DL9" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge28 2 study-bio-method 3> #<edge29 2 study-data 3> #<edge31 3 on 4>)
   (:SINGLE-DIGIT :PROTEIN :SINGLE-DIGIT))
  "2DL8" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge25 415 protein 417> #<edge1 118 protein 120>) (:SINGLE-DIGIT :CELL-LINE)) "3DL3"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge347 187 the 188> #<edge348 188 distance 189> #<edge349 189 between 190>)
   (:PROTEIN :HYPHEN :SINGLE-CAP))
  "MHC-C" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge232 125 "the" 126> #<edge240 131 detect 132>) (:SINGLE-DIGIT :PROTEIN)) "2DS5"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge225 120 open-reading-frame 121> #<edge239 130 be 131>) (:SINGLE-DIGIT :PROTEIN)) "2DS3"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge219 115 bio-entity 116> #<edge238 129 reinitiation 130>) (:SINGLE-DIGIT :PROTEIN)) "2DS2"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge204 103 to 104> #<edge19 319 even-if 321>) (:SINGLE-DIGIT :PROTEIN)) "2DS1"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge192 94 "the" 95> #<edge15 300 wild-type 303>) (:SINGLE-DIGIT :CELL-LINE)) "2DL1"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge183 87 pronoun/first/plural 88> #<edge184 88 show 89> #<edge186 90 "that" 91>
    #<edge187 90 that 91> #<edge189 91 the 92>)
   (:SINGLE-DIGIT :PROTEIN :SINGLE-DIGIT :FORWARD-SLASH :SINGLE-DIGIT))
  "2DL2/3" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge175 73 ability 77> #<edge176 70 be 72> #<edge177 65 of 69>) (:LOWER :HYPHEN :LOWER))
  "high-avidity" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge134 62 "a" 63> #<edge135 62 a 63> #<edge136 63 restrict 64>)
   (:PROTEIN :HYPHEN :SINGLE-CAP))
  "MHC-C" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge52 18 "the" 19> #<edge53 18 the 19> #<edge5 174 but-rather 176>)
   (:PROTEIN :HYPHEN :INITIAL))
  "MHC-C." MAKE-HYPHENATED-STRUCTURE)
 (((#<edge40 11 "the" 12> #<edge41 11 the 12> #<edge42 12 importance 13>) (:LOWER :HYPHEN :LOWER))
  "high-avidity" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge307 155 "that" 156> #<edge308 155 that 156> #<edge309 156 "it" 157>)
   (:LOWER :HYPHEN :LOWER))
  "gene-content" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge163 58 believe 60> #<edge164 60 reflect 62> #<edge165 62 mobility 65>)
   (:LOWER :HYPHEN :LOWER))
  "gene-content" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge443 213 site 218> #<edge444 228 site 230> #<edge445 227 site 230>)
   (:LOWER :HYPHEN :LOWER))
  "gene-content" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge7 184 by-virtue-of 187> #<edge331 171 affect 172> #<edge333 173 efficiency 174>
    #<edge335 177 well-bio-process 178>)
   (:PROTEIN :FORWARD-SLASH :SINGLE-CAP :SINGLE-DIGIT))
  "KIR2DS3/S5" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge311 157 be 158> #<edge313 159 solely 160> #<edge368 181 tethere 183>)
   (:PROTEIN :SINGLE-DIGIT :PROTEIN))
  "KIR2DL8" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:TILDA #<edge226 121 be 122>) (:TILDA :PERCENT)) "∼50%" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge30 3 "on" 4> #<edge31 3 on 4> #<edge33 4 the 5>) (:SINGLE-DIGIT :PROTEIN :SINGLE-DIGIT))
  "2DS4" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge24 415 "eif3" 417> #<edge25 415 protein 417> #<edge27 1 sequencer 2>)
   (:SINGLE-DIGIT :PROTEIN :SINGLE-DIGIT))
  "2DL5" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge169 74 be 76> #<edge170 77 undergo 79> #<edge171 79 limit 81>) (:LOWER :HYPHEN :LOWER))
  "well-defined" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge248 136 bio-entity 137> #<edge250 138 move-something-somewhere 139>
    #<edge251 138 move-to 139>)
   (:PROTEIN :SINGLE-DIGIT :PROTEIN))
  "KIR3DX" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:TILDA #<edge92 52 COMMA 53>) (:TILDA :HYPHENATED-NUMBER)) "∼40–58"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge80 36 COMMA 37> #<edge82 38 number 39> #<edge83 40 COMMA 41>)
   (:PROTEIN :SINGLE-DIGIT :PROTEIN))
  "KIR3DL" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge129 58 be 59> #<edge130 59 believe 60> #<edge131 60 "to" 61>) (:LOWER :HYPHEN :LOWER))
  "trophoblast-mediated" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge93 54 digit-sequence 55> #<edge94 54 number 55> #<edge96 33 square-brackets 36>)
   (:LOWER :HYPHEN :LOWER))
  "second-line" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge64 24 open-reading-frame 25> #<edge65 25 and 26> #<edge67 26 the 27>)
   (:LOWER :HYPHEN :LOWER))
  "first-line" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge40 11 "the" 12> #<edge41 11 the 12> #<edge42 12 importance 13>) (:LOWER :HYPHEN :LOWER))
  "oseltamivir-zanamivir" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge725 390 bio-entity 391> #<edge733 397 direction 398>) (:LOWER :TIME-UNIT)) "post–day"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge79 34 number 35> #<edge80 36 COMMA 37> #<edge81 38 digit-sequence 39>)
   (:DIGITS :HYPHEN :DIGITS))
  "2008–2009" LOOK-FOR-YEAR-EXPRESSION)
 (((#<edge20 376 "wild-type" 379> #<edge21 376 wild-type 379> #<edge22 393 "due to" 395>)
   (:LOWER :HYPHEN :LOWER))
  "oseltamivir-zanamivir" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge75 31 downstream 32> #<edge76 32 protein 33> #<edge77 32 open-reading-frame 33>)
   (:LOWER :HYPHEN :LOWER))
  "double-blind" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge26 415 bio-complex 417> #<edge27 1 sequencer 2> #<edge28 2 study-bio-method 3>)
   (:LOWER :HYPHEN :LOWER))
  "oseltamivir-zanamivir" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge645 356 of 358> #<edge646 352 to 356> #<edge647 340 cause 347>) (:DIGITS :HYPHEN :LOWER))
  "two-sided" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge601 345 amino-acid 346> #<edge602 346 fragment 347> #<edge603 347 "to" 348>)
   (:LOWER :HYPHEN :LOWER))
  "cut-off" MAKE-HYPHENATED-STRUCTURE)
 (((:LOWER #<edge598 344 digit-sequence 345>) (:LOWER :FORWARD-SLASH)) "cgeq/µ"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge84 42 digit-sequence 43> #<edge85 42 number 43> #<edge86 44 COMMA 45>)
   (:LOWER :HYPHEN :LOWER))
  "oseltamivir-zanamivir" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge85 42 number 43> #<edge86 44 COMMA 45> #<edge87 46 digit-sequence 47>)
   (:LOWER :HYPHEN :LOWER))
  "oseltamivir-zanamivir" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge41 11 the 12> #<edge42 12 importance 13> #<edge43 13 "of" 14>) (:LOWER :HYPHEN :LOWER))
  "oseltamivir-zanamivir" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge681 369 protein 370> #<edge683 370 number 371>) (:SINGLE-CAP :SINGLE-DIGIT)) "S3"
  REIFY-TWO-PART-LABEL)
 (((#<edge553 305 number 306> #<edge555 307 downstream-segment 308>) (:PLUS-SIGN :SINGLE-DIGIT))
  "+1" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge518 273 parentheses 285> #<edge519 248 circumstance 250> #<edge520 247 circumstance 250>)
   (:LOWER :HYPHEN :LOWER))
  "oseltamivir-zanamivir" MAKE-HYPHENATED-STRUCTURE)
 (((:LOWER #<edge460 247 the 248> #<edge461 248 sequencer 249>)
   (:LOWER :FORWARD-SLASH :SINGLE-LOWER))
  "cgeq/l" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:LOWER #<edge442 214 site 218> #<edge443 213 site 218>) (:LOWER :FORWARD-SLASH :SINGLE-LOWER))
  "cgeq/l" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge291 124 of 128> #<edge294 114 start 116>) (:PLUS-SIGN :DIGITS)) "+0.0"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge243 133 when 134> #<edge246 134 the 135>) (:PLUS-SIGN :DIGITS)) "+1.0"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge206 105 efficiency 106> #<edge207 107 figure 108> #<edge208 107 article-figure 108>)
   (:LOWER :HYPHEN :LOWER))
  "oseltamivir-zanamivir" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge69 28 bio-entity 29> #<edge139 65 of 66>) (:PLUS-SIGN :PERCENT)) "+0.5%"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge32 4 "the" 5> #<edge33 4 the 5> #<edge34 5 terminate 6>) (:LOWER :HYPHEN :LOWER))
  "oseltamivir-zanamivir" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge142 67 tethere 68> #<edge145 70 "that" 71>) (:PLUS-SIGN :DIGITS)) "+0.46"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:LOWER #<edge113 31 open-reading-frame 33>) (:LOWER :FORWARD-SLASH)) "cgeq/µ"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:LOWER #<edge61 23 upstream-segment 24>) (:LOWER :FORWARD-SLASH)) "cgeq/µ"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge52 18 "the" 19> #<edge53 18 the 19> #<edge54 19 stop 20>) (:LOWER :HYPHEN :LOWER))
  "oseltamivir-zanamivir" MAKE-HYPHENATED-STRUCTURE)
 (((:LOWER #<edge46 14 the 15>) (:LOWER :FORWARD-SLASH)) "cgeq/µ" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge243 133 when 134> #<edge244 133 when 134> #<edge245 134 "the" 135>)
   (:LOWER :HYPHEN :LOWER))
  "oseltamivir-zanamivir" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge217 113 the 114> #<edge219 115 bio-entity 116>) (:SINGLE-CAP :SINGLE-DIGIT)) "S3"
  REIFY-TWO-PART-LABEL)
 (((#<edge125 9 suggest 13> #<edge149 73 "it" 74>) (:PLUS-SIGN :PERCENT)) "+12.3%"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge35 6 HYPHEN 7> #<edge36 7 reinitiation 8> #<edge37 8 bio-process 9>)
   (:LOWER :HYPHEN :LOWER))
  "oseltamivir-zanamivir" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge144 69 semicolon 70> #<edge168 66 bio-complex 69>) (:PLUS-SIGN :PERCENT)) "+12.1%"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge53 18 the 19> #<edge54 19 stop 20> #<edge55 19 stop-endurant 20>)
   (:LOWER :HYPHEN :LOWER))
  "oseltamivir-zanamivir" MAKE-HYPHENATED-STRUCTURE)
 (((:LOWER #<edge33 4 the 5>) (:LOWER :FORWARD-SLASH)) "cgeq/µ" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge115 30 open-reading-frame 36> #<edge116 29 of 36>) (:LOWER :FORWARD-SLASH)) "copies/µ"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:LOWER #<edge54 19 stop 20>) (:LOWER :FORWARD-SLASH)) "cgeq/µ" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge133 61 reflect 62> :ASTERISK #<edge134 62 "a" 63>) (:DIGITS :ASTERISK :SINGLE-CAP))
  "38.2°C" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge306 154 suggest 155> #<edge307 155 "that" 156> #<edge308 155 that 156>)
   (:DIGITS :HYPHEN :DIGITS))
  "2009–2010" LOOK-FOR-YEAR-EXPRESSION)
 (((#<edge281 137 move-something-somewhere 139> #<edge282 146 position 148>
    #<edge283 145 position 148>)
   (:DIGITS :HYPHEN :DIGITS))
  "2008–2009" LOOK-FOR-YEAR-EXPRESSION)
 (((#<edge244 133 when 134> #<edge245 134 "the" 135> #<edge246 134 the 135>)
   (:LOWER :HYPHEN :LOWER))
  "oseltamivir-zanamivir" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge156 78 undergo 79> #<edge157 79 only 80> #<edge159 81 movement 82>)
   (:LOWER :HYPHEN :LOWER))
  "data-monitoring" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge110 18 bio-entity 21> #<edge111 23 open-reading-frame 25>
    #<edge112 22 open-reading-frame 25>)
   (:DIGITS :HYPHEN :DIGITS))
  "2009–2010" LOOK-FOR-YEAR-EXPRESSION)
 (((:LOWER #<edge334 176 how 177>) (:LOWER :FORWARD-SLASH)) "cgeq/µ" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge170 77 undergo 79> #<edge171 79 limit 81> #<edge173 82 following 84>)
   (:LOWER :HYPHEN :LOWER))
  "follow-up" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge135 62 a 63> #<edge136 63 restrict 64> #<edge137 64 mobility 65>)
   (:DIGITS :HYPHEN :LOWER))
  "two-sided" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge33 4 the 5> #<edge34 5 terminate 6> #<edge35 6 HYPHEN 7>) (:LOWER :HYPHEN :LOWER))
  "oseltamivir-zanamivir" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge56 20 bio-entity 21> #<edge57 21 "of" 22> #<edge58 21 of 22>)
   (:SINGLE-CAP :HYPHEN :LOWER))
  "A-infected" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge12 285 "close to" 287> #<edge13 285 close-to 287> #<edge15 300 wild-type 303>
    #<edge16 314 "wild-type" 317> #<edge17 314 wild-type 317>)
   (:LOWER :HYPHEN :LOWER :HYPHEN :LOWER))
  "intention-to-treat" MAKE-HYPHENATED-TRIPLE)
 (((:LOWER #<edge24 415 "eif3" 417>) (:LOWER :FORWARD-SLASH)) "cgeq/µ" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge1 118 protein 120> :OPEN-ANGLE-BRACKET #<edge23 393 due-to 395>)
   (:RT-PCR :OPEN-ANGLE-BRACKET :DIGITS))
  "RT-PCR<200" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge67 26 the 27> #<edge68 27 start 28> #<edge70 29 "of" 30>) (:DIGITS :HYPHEN :LOWER))
  "four-point" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge365 172 efficiency 174> #<edge367 178 bio-complex 180>) (:SINGLE-CAP :SINGLE-DIGIT)) "S3"
  REIFY-TWO-PART-LABEL)
 (((#<edge325 167 bio-entity 168> #<edge326 168 "per" 169> #<edge328 169 bio-entity 170>)
   (:LOWER :HYPHEN :LOWER))
  "data-monitoring" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge275 104 efficiency 106> #<edge277 117 open-reading-frame 121>)
   (:SINGLE-CAP :SINGLE-DIGIT))
  "S1" REIFY-TWO-PART-LABEL)
 (((#<edge247 135 start 136> #<edge248 136 bio-entity 137>) (:SINGLE-DIGIT :MIXED)) "2NICs"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge227 122 place 123> #<edge228 123 downstream-segment 124> #<edge229 123 downstream 124>)
   (:DIGITS :HYPHEN :DIGITS))
  "2008–2009" LOOK-FOR-YEAR-EXPRESSION)
 (((:LOWER #<edge181 86 COMMA 87>) (:LOWER :FORWARD-SLASH)) "cgeq/µ" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:LOWER #<edge111 23 open-reading-frame 25>) (:LOWER :FORWARD-SLASH)) "cgeq/µ"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge108 14 proximity 17> #<edge109 19 bio-entity 21>) (:LOWER :FORWARD-SLASH)) "equivalent/µ"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:FULL #<edge366 176 well 178> #<edge368 181 tethere 183>) (:FULL :HYPHEN :SINGLE-DIGIT))
  "BHQ-1" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge353 192 bio-complex 193> #<edge354 193 terminate 194> #<edge356 195 "the" 196>
    #<edge357 195 the 196> #<edge358 196 bio-entity 197>)
   (:LOWER :FORWARD-SLASH :DIGITS :FORWARD-SLASH :PLUS-SIGN))
  "probe/52/+" PACKAGE-SLASHED-SEQUENCE)
 (((:FULL #<edge347 187 the 188> #<edge349 189 between 190>) (:FULL :HYPHEN :SINGLE-DIGIT))
  "GTCTTGTCTTTA-3" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge339 177 well 178> #<edge340 178 "the" 179> #<edge342 179 bio-complex 180>
    #<edge343 180 modal 181>)
   (:FULL :FORWARD-SLASH :DIGITS :CAPITALIZED))
  "GRAM/161Rv" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge334 176 how 177> :FULL #<edge335 177 well-bio-process 178>
    #<edge337 177 well-adverbial 178>)
   (:HYPHEN :FULL :HYPHEN :SINGLE-DIGIT))
  "-CTTCTAACCGAGGTCGAAACGTA-3" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge328 169 bio-entity 170> #<edge329 170 "that" 171> #<edge331 171 affect 172> :CAPITALIZED)
   (:FULL :FORWARD-SLASH :SINGLE-DIGIT :CAPITALIZED))
  "GRAM/7Fw" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge290 130 detect 133> #<edge291 124 of 128> #<edge292 123 downstream 128>)
   (:DIGITS :HYPHEN :LOWER))
  "one-step" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge450 234 bio-entity 238> #<edge451 243 efficiency 245> #<edge453 242 at 245>)
   (:LOWER :HYPHEN :LOWER))
  "follow-up" MAKE-HYPHENATED-STRUCTURE)
 (((:CAPITALIZED #<edge392 209 or 210> :MIXED) (:CAPITALIZED :HYPHEN :MIXED)) "Glaxo-SmithKline"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge73 30 the 31> #<edge74 31 downstream-segment 32> #<edge76 32 protein 33>
    #<edge77 32 open-reading-frame 33> #<edge79 34 number 35>)
   (:SINGLE-DIGIT :COLON :SINGLE-DIGIT :COLON :SINGLE-DIGIT))
  "1∶1∶1" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge335 177 well-bio-process 178> #<edge337 177 well-adverbial 178>)
   (:SINGLE-CAP :SINGLE-DIGIT))
  "S1" REIFY-TWO-PART-LABEL)
 (((#<edge250 138 move-something-somewhere 139> #<edge251 138 move-to 139>
    #<edge252 141 digit-sequence 142>)
   (:DIGITS :HYPHEN :DIGITS))
  "2008–2009" LOOK-FOR-YEAR-EXPRESSION)
 (((#<edge94 54 number 55> :ASTERISK #<edge95 5 hyphenated-pair 8>)
   (:DIGITS :ASTERISK :SINGLE-CAP))
  "38°C" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge29 2 study-data 3> #<edge30 3 "on" 4> #<edge31 3 on 4>) (:DIGITS :HYPHEN :DIGITS))
  "2008–2009" LOOK-FOR-YEAR-EXPRESSION)
 (((#<edge143 68 bio-complex 69> #<edge144 69 semicolon 70> #<edge146 70 that 71>)
   (:LOWER :HYPHEN :LOWER))
  "data-monitoring" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge99 45 square-brackets 48> #<edge100 49 square-brackets 52>
    #<edge101 53 square-brackets 56>)
   (:DIGITS :HYPHEN :DIGITS))
  "2008–2009" LOOK-FOR-YEAR-EXPRESSION)
 (((#<edge45 14 "the" 15> #<edge46 14 the 15> #<edge47 15 close-bio-process 16>)
   (:LOWER :HYPHEN :LOWER))
  "oseltamivir-zanamivir" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge27 1 sequencer 2> #<edge28 2 study-bio-method 3> #<edge29 2 study-data 3>)
   (:LOWER :HYPHEN :LOWER))
  "double-placebo" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge295 103 to 110> #<edge296 101 critical 103> #<edge298 98 critical 103>
    #<edge299 93 between 97> #<edge301 87 show 90>)
   (:LOWER :HYPHEN :LOWER :HYPHEN :LOWER))
  "point-of-care" MAKE-HYPHENATED-TRIPLE)
 (((#<edge13 285 close-to 287> #<edge14 300 "wild-type" 303> #<edge16 314 "wild-type" 317>
    #<edge17 314 wild-type 317> #<edge19 319 even-if 321>)
   (:LOWER :HYPHEN :LOWER :HYPHEN :LOWER))
  "point-of-care" MAKE-HYPHENATED-TRIPLE)
 (((#<edge336 177 well-endurant 178> #<edge337 177 well-adverbial 178> #<edge339 177 well 178>)
   (:LOWER :HYPHEN :LOWER))
  "post-run" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge91 50 number 51> #<edge92 52 COMMA 53> #<edge94 54 number 55>) (:LOWER :HYPHEN :LOWER))
  "in-house" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge46 14 the 15> #<edge47 15 close-bio-process 16> #<edge49 16 proximity 17>)
   (:LOWER :HYPHEN :LOWER))
  "in-house" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge406 223 digit-sequence 224> #<edge407 223 number 224> #<edge408 224 amino-acid 225>)
   (:LOWER :HYPHEN :LOWER))
  "heat-treatment" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge336 177 well-endurant 178> #<edge337 177 well-adverbial 178>) (:LITTLE-P :FORWARD-SLASH))
  "p/µ" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge269 106 parentheses 110> #<edge270 148 parentheses 152>) (:LITTLE-P :FORWARD-SLASH))
  "p/µ" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge234 126 stop 127> #<edge235 126 stop-endurant 127>) (:LITTLE-P :FORWARD-SLASH)) "p/µ"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge209 108 digit-sequence 109> #<edge210 108 number 109> #<edge211 110 and 111>)
   (:LOWER :HYPHEN :LOWER))
  "heat-treatment" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge163 58 believe 60> #<edge164 60 reflect 62> #<edge165 62 mobility 65>)
   (:LOWER :HYPHEN :LOWER))
  "heat-treated" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge92 52 COMMA 53> #<edge93 54 digit-sequence 55> #<edge94 54 number 55>)
   (:LOWER :HYPHEN :LOWER))
  "heat-treated" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge15 300 wild-type 303> #<edge16 314 "wild-type" 317> #<edge17 314 wild-type 317>)
   (:LOWER :HYPHEN :LOWER))
  "heat-treatment" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge162 83 terminate 84> #<edge163 58 believe 60> #<edge164 60 reflect 62>)
   (:LOWER :HYPHEN :LOWER))
  "genus-specific" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge194 95 terminate 96> #<edge195 96 bio-complex 97> #<edge196 97 and 98>)
   (:LOWER :HYPHEN :LOWER))
  "genus-specific" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge540 295 give 296> #<edge541 296 "a" 297>) (:LITTLE-P :FORWARD-SLASH)) "p/µ"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge531 255 bio-entity 264> #<edge532 285 close-to 291>) (:LITTLE-P :FORWARD-SLASH)) "p/µ"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge59 22 "the" 23> #<edge60 22 the 23> #<edge62 23 upstream 24>) (:LOWER :HYPHEN :LOWER))
  "in-house" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge211 110 and 111> #<edge212 111 "that" 112> #<edge213 111 that 112>)
   (:LOWER :HYPHEN :LOWER))
  "heat-treated" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge183 87 pronoun/first/plural 88> #<edge184 88 show 89>) (:LITTLE-P :FORWARD-SLASH)) "p/µ"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge111 23 open-reading-frame 25> #<edge112 22 open-reading-frame 25>)
   (:LITTLE-P :FORWARD-SLASH))
  "p/µ" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge102 1 study-bio-method 3> #<edge103 5 bio-process 9>) (:LITTLE-P :FORWARD-SLASH)) "p/µ"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge92 52 COMMA 53> #<edge93 54 digit-sequence 55> #<edge94 54 number 55>)
   (:LOWER :HYPHEN :LOWER))
  "heat-treated" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge81 38 digit-sequence 39> #<edge83 40 COMMA 41> #<edge84 42 digit-sequence 43>)
   (:DIGITS :LITTLE-P :FORWARD-SLASH))
  "40p/µ" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge28 2 study-bio-method 3> #<edge29 2 study-data 3>) (:LITTLE-P :FORWARD-SLASH)) "p/µ"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge16 314 "wild-type" 317> #<edge17 314 wild-type 317>) (:LITTLE-P :FORWARD-SLASH)) "p/µ"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge260 146 modifier 147> #<edge261 147 position-bio-process 148>)
   (:LITTLE-P :FORWARD-SLASH))
  "p/µ" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge221 116 of 117> #<edge222 117 "the" 118>) (:LITTLE-P :FORWARD-SLASH)) "p/µ"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge201 101 comparative 102> #<edge202 102 critical 103>) (:LITTLE-P :FORWARD-SLASH)) "p/µ"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge197 98 "the" 99> #<edge199 99 bio-entity 100>) (:LOWER :DIGITS)) "at10"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge163 58 believe 60> #<edge164 60 reflect 62>) (:LITTLE-P :FORWARD-SLASH)) "p/µ"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge110 18 bio-entity 21> #<edge111 23 open-reading-frame 25>) (:LITTLE-P :FORWARD-SLASH))
  "p/µ" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge93 54 digit-sequence 55> #<edge94 54 number 55>) (:LITTLE-P :FORWARD-SLASH)) "p/µ"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge85 42 number 43> #<edge86 44 COMMA 45>) (:LITTLE-P :FORWARD-SLASH)) "p/µ"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge76 32 protein 33> #<edge77 32 open-reading-frame 33>) (:LITTLE-P :FORWARD-SLASH)) "p/µ"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge21 376 wild-type 379> #<edge11 274 such-as 276>) (:PERCENT :PROTEIN)) "95%CI"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge4 174 "but rather" 176> #<edge5 174 but-rather 176>) (:LOWER :FORWARD-SLASH))
  "negatives/" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:MULTIPLICATION-SIGN #<edge9 214 wild-type 217>) (:MULTIPLICATION-SIGN :DIGITS)) "×100"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge2 139 "up to" 141> #<edge3 139 up-to 141>) (:LOWER :FORWARD-SLASH)) "positives/"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge463 250 COMMA 251> #<edge464 251 bio-complex 252> #<edge465 252 modal 253>)
   (:LOWER :HYPHEN :LOWER))
  "milli-volts" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge479 262 amino-acid 263> :PERIOD) (:POINT-MUTATION :PERIOD)) "1B."
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge377 157 be 160> :ASTERISK #<edge378 153 suggest 155>) (:DIGITS :ASTERISK :SINGLE-CAP))
  "63°C" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge243 133 when 134> #<edge244 133 when 134> #<edge246 134 the 135>)
   (:SINGLE-DIGIT :COLON :DIGITS))
  "1∶100" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge189 91 the 92> #<edge190 92 distance 93> #<edge191 93 between 94>)
   (:PROTEIN :HYPHEN :MIXED))
  "Tris-HCl" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge180 85 however 86> #<edge181 86 COMMA 87> #<edge183 87 pronoun/first/plural 88>)
   (:LOWER :HYPHEN :LOWER))
  "in-house" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge177 65 of 69> #<edge178 62 mobility 69>) (:SINGLE-DIGIT :SINGLE-CAP)) "2X"
  REIFY-TWO-PART-LABEL)
 (((#<edge150 73 pronoun/inanimate 74> #<edge151 74 modal 75> #<edge153 76 ability 77>)
   (:LOWER :HYPHEN :LOWER))
  "in-house" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge102 1 study-bio-method 3> #<edge103 5 bio-process 9> #<edge105 9 suggest 11>)
   (:LOWER :HYPHEN :LOWER))
  "in-house" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge81 38 digit-sequence 39> #<edge82 38 number 39> #<edge84 42 digit-sequence 43>)
   (:SINGLE-DIGIT :COLON :DIGITS))
  "1∶100" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge55 19 stop-endurant 20> #<edge56 20 bio-entity 21>) (:SINGLE-DIGIT :SINGLE-CAP)) "1X"
  REIFY-TWO-PART-LABEL)
 (((#<edge296 101 critical 103> #<edge297 100 critical 103>) (:DIGITS :LOWER)) "13,000rpm"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge233 125 the 126> #<edge234 126 stop 127> #<edge235 126 stop-endurant 127>)
   (:LOWER :HYPHEN :LOWER))
  "heat-block" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge217 113 the 114> #<edge218 114 start 115>) (:LITTLE-P :FORWARD-SLASH)) "p/µ"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge182 87 "we" 88> #<edge183 87 pronoun/first/plural 88>) (:LITTLE-P :FORWARD-SLASH)) "p/µ"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge566 318 COMMA 319> #<edge567 321 "the" 322> #<edge568 321 the 322>)
   (:CAPITALIZED :HYPHEN :LOWER))
  "Non-malaria" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge372 170 affect 172> #<edge373 169 bio-entity 172>) (:LITTLE-P :FORWARD-SLASH)) "p/µ"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge364 166 bio-entity 168> #<edge365 172 efficiency 174>) (:LITTLE-P :FORWARD-SLASH)) "p/µ"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge356 195 "the" 196> #<edge357 195 the 196>) (:LITTLE-P :FORWARD-SLASH)) "p/µ"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge303 90 that 91> #<edge304 153 "this" 154>) (:LOWER :FORWARD-SLASH)) "parasites/µ"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge242 132 even 133> #<edge244 133 when 134>) (:FULL :SINGLE-DIGIT)) "SV4"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge191 93 between 94> #<edge192 94 "the" 95>) (:PROTEIN :FORWARD-SLASH)) "RBCs/µ"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge188 91 "the" 92> #<edge189 91 the 92>) (:LITTLE-P :FORWARD-SLASH)) "p/µ"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge171 79 limit 81> #<edge172 79 movement 82>) (:PROTEIN :FORWARD-SLASH)) "RBCs/µ"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge154 77 "to" 78> #<edge155 77 to 78>) (:LITTLE-P :FORWARD-SLASH)) "p/µ"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge150 73 pronoun/inanimate 74> #<edge151 74 modal 75>) (:LOWER :FORWARD-SLASH))
  "parasites/µ" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge51 17 of 18> #<edge43 13 "of" 14>) (:POINT-MUTATION :SINGLE-DIGIT)) "3D7"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge161 82 following 83> #<edge162 83 terminate 84> #<edge163 58 believe 60>)
   (:CAPITALIZED :HYPHEN :CAPITALIZED))
  "Li-Ion" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge124 13 of 25> :MULTIPLICATION-SIGN #<edge126 3 on 9>)
   (:LOWER :MULTIPLICATION-SIGN :DIGITS))
  "mm×188" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge120 14 proximity 21> :MULTIPLICATION-SIGN #<edge122 14 proximity 25>)
   (:LOWER :MULTIPLICATION-SIGN :DIGITS))
  "mm×178" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:FULL #<edge9 214 wild-type 217> #<edge10 274 "such as" 276>) (:FULL :HYPHEN :CAPITALIZED))
  "ESE-Quant" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge3 139 up-to 141> #<edge32 4 "the" 5>) (:PROTEIN :LOWER)) "anti-malarial"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:FULL #<edge215 112 when 113>) (:FULL :DIGITS)) "GP1000" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge170 77 undergo 79> #<edge171 79 limit 81> #<edge172 79 movement 82>)
   (:LOWER :HYPHEN :LOWER))
  "read-out" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge709 361 show 363> #<edge710 359 importantly 361>) (:LITTLE-P :FORWARD-SLASH)) "p/µ"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge252 141 digit-sequence 142> #<edge253 141 number 142>
    #<edge255 143 downstream-segment 144>)
   (:LOWER :HYPHEN :LOWER))
  "in-house" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge161 82 following 83> :ASTERISK #<edge162 83 terminate 84>)
   (:DIGITS :ASTERISK :SINGLE-CAP))
  "99°C" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge146 70 that 71> #<edge147 71 be 72> #<edge148 72 COMMA 73>) (:LOWER :HYPHEN :LOWER))
  "heat-treated" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge401 220 digit-sequence 221> #<edge402 220 number 221> #<edge404 221 a 222>
    #<edge405 222 and 223> #<edge407 223 number 224>)
   (:LOWER :HYPHEN :LOWER :HYPHEN :LOWER))
  "point-of-care" MAKE-HYPHENATED-TRIPLE)
 (((#<edge304 153 "this" 154> #<edge305 153 this 154> #<edge306 154 suggest 155>)
   (:LOWER :HYPHEN :LOWER))
  "loop-primers" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge589 338 "the" 339> #<edge590 338 the 339> #<edge591 339 bio-entity 340>)
   (:LOWER :HYPHEN :LOWER))
  "acid-based" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge538 294 if 295> #<edge539 295 modifier 296> #<edge540 295 give 296>)
   (:PROTEIN :HYPHEN :LOWER))
  "pan-species" PACKAGE-QUALIFYING-PAIR)
 (((#<edge527 289 site 291> #<edge528 288 site 291> #<edge21 376 wild-type 379>)
   (:LOWER :HYPHEN :PROTEIN))
  "non-HRP-2" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge120 14 proximity 21> #<edge121 15 close 16> #<edge122 14 proximity 25>)
   (:LOWER :FORWARD-SLASH :PROTEIN))
  "antigen/enzyme" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:FULL #<edge283 145 position 148> #<edge284 145 position 152> :FULL #<edge286 144 of 152>)
   (:FULL :DIGITS :HYPHEN :FULL :DIGITS))
  "GU396668-GU396690" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge167 67 lambda-expression 68> #<edge168 66 bio-complex 69> #<edge170 77 undergo 79>
    #<edge171 79 limit 81> #<edge172 79 movement 82>)
   (:LOWER :HYPHEN :LOWER :HYPHEN :LOWER))
  "transition-to-translation" MAKE-HYPHENATED-TRIPLE)
 (((:CAPITALIZED #<edge156 78 undergo 79> #<edge158 80 limit 81>)
   (:CAPITALIZED :HYPHEN :SINGLE-DIGIT))
  "Kimura-2" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge17 314 wild-type 317> #<edge18 319 "even if" 321> #<edge19 319 even-if 321>)
   (:LOWER :HYPHEN :LOWER))
  "between-site" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge417 233 when 234> :TRADE_MARK_SIGN) (:CAPITALIZED :TRADE_MARK_SIGN)) "Dye™"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge415 232 bio-use 233> :REGISTERED_SIGN) (:PROTEIN :REGISTERED_SIGN)) "PRISM®"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge278 121 place 123> :FULL #<edge279 126 bio-entity 128>
    #<edge281 137 move-something-somewhere 139>)
   (:HYPHEN :FULL :HYPHEN :SINGLE-DIGIT))
  "-GCATWGTRTGYTGNGARCARAATTC-3" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge269 106 parentheses 110> :FULL #<edge270 148 parentheses 152>
    #<edge272 95 lambda-expression 96>)
   (:HYPHEN :FULL :HYPHEN :SINGLE-DIGIT))
  "-TGGGWTGGGAYTAYCCWAARTGYGA-3" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge249 137 be 138> #<edge250 138 move-something-somewhere 139> #<edge251 138 move-to 139>)
   (:HYPHENATED-NUMBER :HYPHEN :PROTEIN))
  "608-610-bp" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge78 34 digit-sequence 35> :TRADE_MARK_SIGN) (:PROTEIN :TRADE_MARK_SIGN)) "IQ™"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge32 4 "the" 5> #<edge33 4 the 5> #<edge34 5 terminate 6>) (:PROTEIN :HYPHEN :MIXED))
  "pan-CoV" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge181 86 COMMA 87> #<edge182 87 "we" 88> #<edge183 87 pronoun/first/plural 88>)
   (:PROTEIN :HYPHEN :MIXED))
  "pan-CoV" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge176 70 be 72> #<edge177 65 of 69> #<edge178 62 mobility 69>) (:DIGITS :HYPHEN :LOWER))
  "one-step" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge156 78 undergo 79> #<edge157 79 only 80> #<edge158 80 limit 81>)
   (:DIGITS :HYPHEN :LOWER))
  "179-nt" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge165 62 mobility 65> #<edge166 67 bio-complex 69> #<edge168 66 bio-complex 69>)
   (:LOWER :HYPHEN :LOWER))
  "walk-in" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge26 415 bio-complex 417> #<edge27 1 sequencer 2>) (:CAPITALIZED :COLON)) "Strait:"
  :NO-EDGE)
 (((#<edge149 73 "it" 74> #<edge150 73 pronoun/inanimate 74> #<edge151 74 modal 75>)
   (:LOWER :HYPHEN :LOWER))
  "gamma-coronavirusa" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge54 19 stop 20> #<edge55 19 stop-endurant 20> #<edge56 20 bio-entity 21>)
   (:LOWER :HYPHEN :LOWER))
  "gamma-coronavirusa" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge221 116 of 117> #<edge222 117 "the" 118> #<edge225 120 open-reading-frame 121>)
   (:LOWER :HYPHEN :LOWER))
  "within-group" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge183 87 pronoun/first/plural 88> #<edge184 88 show 89> #<edge187 90 that 91>)
   (:LOWER :HYPHEN :LOWER))
  "within-group" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge481 265 or 266> #<edge482 266 "at" 267> #<edge484 267 "a" 268>) (:LOWER :HYPHEN :LOWER))
  "mid-point" MAKE-HYPHENATED-STRUCTURE)
 (((:CAPITALIZED #<edge474 258 bio-entity 259> :CAPITALIZED) (:CAPITALIZED :HYPHEN :CAPITALIZED))
  "Petropavlovsk-Kamchatskiy" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:CAPITALIZED #<edge429 243 comparative-modifier 244> :CAPITALIZED)
   (:CAPITALIZED :HYPHEN :CAPITALIZED))
  "Petropavlovsk-Kamchatskiy" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge42 12 importance 13> #<edge43 13 "of" 14>) (:LOWER :COLON)) "reasons:" :NO-EDGE)
 (((#<edge279 126 bio-entity 128> #<edge11 274 such-as 276>) (:FULL :-LIKE)) "IBV-like"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge163 58 believe 60> #<edge9 214 wild-type 217>) (:LOWER :-LIKE)) "avian-like"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge160 82 following-adj 83> #<edge7 184 by-virtue-of 187>) (:LOWER :-LIKE)) "mammalian-like"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge31 3 on 4> #<edge32 4 "the" 5> #<edge34 5 terminate 6>) (:LOWER :HYPHEN :LOWER))
  "positive-sense" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge73 30 the 31> #<edge74 31 downstream-segment 32>) (:SINGLE-DIGIT :SINGLE-CAP)) "1X"
  REIFY-TWO-PART-LABEL)
 (((#<edge35 6 HYPHEN 7> #<edge36 7 reinitiation 8>) (:SINGLE-DIGIT :SINGLE-CAP)) "1X"
  REIFY-TWO-PART-LABEL)
 (((#<edge10 274 "such as" 276> :ASTERISK #<edge11 274 such-as 276>)
   (:DIGITS :ASTERISK :SINGLE-CAP))
  "70°C" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge674 365 be 366> #<edge666 361 "we" 362>) (:RESIDUE-ON-PROTEIN :PROTEIN)) "E370LP"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge654 311 select 318> #<edge655 309 select 318> #<edge657 295 give 298>)
   (:LOWER :HYPHEN :LOWER))
  "cut-on" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge585 335 COMMA 336> #<edge586 336 suggest 337> #<edge587 337 "that" 338>)
   (:SINGLE-DIGIT :HYPHEN :LOWER))
  "2-mercaptoethanol" MAKE-HYPHENATED-STRUCTURE)
 (((:MIXED #<edge579 329 window 330>) (:MIXED :SINGLE-DIGIT)) "ZnCl2" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge505 288 native 289> #<edge506 289 reinitiation 290> #<edge507 290 site 291>)
   (:SINGLE-DIGIT :HYPHEN :LOWER))
  "2-mercaptoethanol" MAKE-HYPHENATED-STRUCTURE)
 (((:MIXED #<edge499 282 figure 283>) (:MIXED :SINGLE-DIGIT)) "ZnCl2" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge460 247 the 248> #<edge461 248 sequencer 249> :LOWER) (:SINGLE-DIGIT :HYPHEN :LOWER))
  "2-aminopurine" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge453 242 at 245> #<edge454 238 modifier 240> #<edge456 233 modifier 240>)
   (:LOWER :HYPHEN :LOWER))
  "primer-template" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge444 228 site 230> :CAPITALIZED) (:SINGLE-DIGIT :CAPITALIZED)) "3Dpol"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge392 209 or 210> #<edge393 210 very 211> #<edge395 212 COMMA 213>)
   (:LOWER :HYPHEN :LOWER))
  "stopped-flow" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge379 155 that 156> #<edge380 199 however 200> #<edge382 201 whilst 202>)
   (:LOWER :HYPHEN :LOWER))
  "stopped-flow" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge364 166 bio-entity 168> #<edge365 172 efficiency 174> #<edge367 178 bio-complex 180>)
   (:CAPITALIZED :HYPHEN :LOWER))
  "Stopped-flow" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge332 172 reinitiation 173> #<edge333 173 efficiency 174> #<edge334 176 how 177>)
   (:DIGITS :HYPHEN :LOWER))
  "one-tenth" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge288 135 start 137> #<edge289 130 detect 132> #<edge290 130 detect 133>)
   (:SINGLE-DIGIT :HYPHEN :LOWER))
  "2-mercaptoethanol" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge166 67 bio-complex 69> #<edge167 67 lambda-expression 68> #<edge168 66 bio-complex 69>)
   (:SINGLE-DIGIT :HYPHEN :LOWER))
  "2-mercaptoethanol" MAKE-HYPHENATED-STRUCTURE)
 (((:MIXED #<edge160 82 following-adj 83>) (:MIXED :SINGLE-DIGIT)) "ZnCl2"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge87 46 digit-sequence 47> #<edge88 46 number 47> #<edge89 48 COMMA 49>)
   (:SINGLE-DIGIT :HYPHEN :LOWER))
  "2-mercaptoethanol" MAKE-HYPHENATED-STRUCTURE)
 (((:MIXED #<edge81 38 digit-sequence 39>) (:MIXED :SINGLE-DIGIT)) "ZnCl2"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge56 20 bio-entity 21> #<edge57 21 "of" 22> #<edge58 21 of 22> #<edge60 22 the 23>)
   (:HYPHEN :LOWER :HYPHEN :LOWER))
  "-primer-template" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge142 67 tethere 68> #<edge143 68 bio-complex 69> #<edge145 70 "that" 71>)
   (:LOWER :HYPHEN :LOWER))
  "large-scale" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge114 30 open-reading-frame 33> #<edge115 30 open-reading-frame 36> #<edge116 29 of 36>)
   (:LOWER :HYPHEN :LOWER))
  "end-labeled" MAKE-HYPHENATED-STRUCTURE)
 (((:CAPITALIZED #<edge29 2 study-data 3> #<edge30 3 "on" 4>) (:CAPITALIZED :FORWARD-SLASH :LOWER))
  "Ci/mmol" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge73 30 the 31> #<edge74 31 downstream-segment 32> #<edge75 31 downstream 32>)
   (:DIGITS :HYPHEN :LOWER))
  "two-tailed" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge28 2 study-bio-method 3> #<edge29 2 study-data 3> #<edge30 3 "on" 4>)
   (:DIGITS :HYPHEN :LOWER))
  "two-tailed" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge1 118 protein 120> #<edge22 393 "due to" 395>) (:MOLECULE :LOWER)) "Mg2+concentration"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge310 156 pronoun/inanimate 157> #<edge311 157 be 158> #<edge313 159 solely 160>)
   (:DIGITS :FORWARD-SLASH :DIGITS))
  "330/370" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge192 94 "the" 95> :ASTERISK #<edge7 184 by-virtue-of 187>) (:DIGITS :ASTERISK :INITIAL))
  "25°C." REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge232 125 "the" 126> :FULL) (:PROTEIN :FULL)) "QM4CW" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge170 77 undergo 79> #<edge171 79 limit 81> #<edge173 82 following 84>)
   (:CAPITALIZED :HYPHEN :CAPITALIZED))
  "Quanta-Master" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge165 62 mobility 65> :ASTERISK #<edge166 67 bio-complex 69>)
   (:DIGITS :ASTERISK :SINGLE-CAP))
  "25°C" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge126 3 on 9> #<edge127 57 "this" 58> :LOWER #<edge128 57 this 58>
    #<edge130 59 believe 60>)
   (:PROTEIN :HYPHEN :LOWER :HYPHEN :SINGLE-DIGIT))
  "mag-fura-2" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge5 174 but-rather 176> #<edge78 34 digit-sequence 35> :CAPITALIZED)
   (:BIO-ENTITY :HYPHEN :CAPITALIZED))
  "H2O-Tween" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge40 11 "the" 12> #<edge41 11 the 12> :LOWER) (:SINGLE-LOWER :HYPHEN :LOWER))
  "β-aminoethyl" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge37 8 bio-process 9> #<edge38 9 have 10> #<edge39 10 suggest 11>)
   (:LOWER :HYPHEN :PROTEIN))
  "glycol-bis" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge314 160 "the" 161> #<edge316 161 distance 162>) (:SINGLE-CAP :SINGLE-DIGIT)) "S1"
  REIFY-TWO-PART-LABEL)
 (((#<edge101 53 square-brackets 56> #<edge102 1 study-bio-method 3> #<edge103 5 bio-process 9>)
   (:CAPITALIZED :FORWARD-SLASH :LOWER))
  "Blue/white" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge83 40 COMMA 41> #<edge84 42 digit-sequence 43> :CAPITALIZED)
   (:CAPITALIZED :HYPHEN :CAPITALIZED))
  "Macherey-Nagel" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge48 15 close 16> #<edge49 16 proximity 17>) (:DIGITS :PROTEIN)) "2651Rev"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge43 13 "of" 14> #<edge45 14 "the" 15>) (:DIGITS :CAPITALIZED)) "1337For"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge36 7 reinitiation 8> #<edge37 8 bio-process 9>) (:DIGITS :PROTEIN)) "2141Rev"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge31 3 on 4> #<edge33 4 the 5>) (:DIGITS :CAPITALIZED)) "878Forward"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge179 57 believe 60> #<edge180 85 however 86> #<edge181 86 COMMA 87>
    #<edge5 174 but-rather 176>)
   (:PROTEIN :HYPHEN :SINGLE-LOWER :|32P|))
  "dCTP-α32P" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge51 17 of 18> #<edge52 18 "the" 19> #<edge53 18 the 19>) (:DIGITS :HYPHEN :LOWER))
  "one-step" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge220 116 "of" 117> #<edge221 116 of 117> #<edge223 117 the 118>) (:LOWER :HYPHEN :LOWER))
  "freeze-thaw" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge206 105 efficiency 106> #<edge207 107 figure 108> #<edge208 107 article-figure 108>)
   (:LOWER :HYPHEN :LOWER))
  "post-infection" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge137 64 mobility 65> #<edge138 65 "of" 66> #<edge139 65 of 66>)
   (:CAPITALIZED :HYPHEN :CAPITALIZED))
  "One-Step" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge35 6 HYPHEN 7> #<edge36 7 reinitiation 8> #<edge38 9 have 10>) (:LOWER :HYPHEN :LOWER))
  "round-bottom" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge660 305 number 306> #<edge661 305 locate 307> #<edge663 309 event-relation 325>)
   (:LOWER :HYPHEN :LOWER))
  "freeze-thaw" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge599 344 number 345> #<edge600 345 direction 346> #<edge617 356 of 357>)
   (:FULL :HYPHEN :PERCENT))
  "DMEM-10%" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge551 305 indefinite-pronoun 306> :MULTIPLICATION-SIGN #<edge553 305 number 306>)
   (:SINGLE-DIGIT :MULTIPLICATION-SIGN :DIGITS))
  "3×106" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge424 239 modifier 240> :MULTIPLICATION-SIGN #<edge426 241 albeit 242>)
   (:SINGLE-DIGIT :MULTIPLICATION-SIGN :DIGITS))
  "4×106" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge7 184 by-virtue-of 187> #<edge101 53 square-brackets 56> #<edge102 1 study-bio-method 3>)
   (:BIO-ENTITY :HYPHEN :CAPITALIZED))
  "CVB3-Nancy" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge14 300 "wild-type" 303> #<edge16 314 "wild-type" 317> #<edge17 314 wild-type 317> :LOWER
    #<edge18 319 "even if" 321> #<edge20 376 "wild-type" 379> #<edge21 376 wild-type 379>
    #<edge22 393 "due to" 395>)
   (:HYPHEN :SINGLE-DIGIT :HYPHEN :LOWER :HYPHEN :SINGLE-DIGIT :HYPHEN :LOWER))
  "-6-chloropyrazine-2-carboxamide" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge3 139 up-to 141> :LOWER #<edge4 174 "but rather" 176> #<edge7 184 by-virtue-of 187>
    #<edge8 214 "wild-type" 217>)
   (:NUMBER-SEQUENCE :LOWER :HYPHEN :SINGLE-CAP :HYPHEN))
  "3,5-diamino-N-" MAKE-HYPHENATED-TRIPLE)
 (((#<edge23 393 due-to 395> #<edge24 415 "eif3" 417> #<edge26 415 bio-complex 417>
    #<edge27 1 sequencer 2> #<edge28 2 study-bio-method 3>)
   (:LOWER :HYPHEN :SINGLE-DIGIT :HYPHEN :LOWER))
  "pyrazine-2-carboxamide" MAKE-HYPHENATED-TRIPLE)
 (((#<edge12 285 "close to" 287> #<edge14 300 "wild-type" 303> #<edge15 300 wild-type 303>
    #<edge16 314 "wild-type" 317> #<edge17 314 wild-type 317> #<edge20 376 "wild-type" 379>
    #<edge21 376 wild-type 379>)
   (:HYPHEN :SINGLE-DIGIT :HYPHEN :LOWER :HYPHEN :SINGLE-CAP :HYPHEN))
  "-6-chloro-N-" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge7 184 by-virtue-of 187> #<edge8 214 "wild-type" 217> #<edge9 214 wild-type 217>
    #<edge1 118 protein 120>)
   (:SINGLE-DIGIT :HYPHEN :LOWER :BIO-ENTITY))
  "3-amino-5-" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge27 1 sequencer 2> #<edge28 2 study-bio-method 3> #<edge30 3 "on" 4> #<edge31 3 on 4>
    #<edge32 4 "the" 5>)
   (:LOWER :HYPHEN :SINGLE-DIGIT :HYPHEN :LOWER))
  "pyrazine-2-carboxamide" MAKE-HYPHENATED-TRIPLE)
 (((#<edge21 376 wild-type 379> #<edge22 393 "due to" 395> #<edge24 415 "eif3" 417>
    #<edge25 415 protein 417> :LOWER)
   (:LOWER :HYPHEN :SINGLE-DIGIT :HYPHEN :LOWER))
  "propan-2-yl" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge16 314 "wild-type" 317> #<edge18 319 "even if" 321> #<edge19 319 even-if 321>)
   (:HYPHEN :SINGLE-DIGIT :HYPHEN))
  "-5-" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge3 139 up-to 141> #<edge4 174 "but rather" 176> #<edge5 174 but-rather 176>
    #<edge6 184 "by virtue of" 187> #<edge8 214 "wild-type" 217> #<edge9 214 wild-type 217>
    #<edge10 274 "such as" 276> #<edge11 274 such-as 276> #<edge14 300 "wild-type" 303>
    #<edge15 300 wild-type 303>)
   (:SINGLE-DIGIT :HYPHEN :LOWER :HYPHEN :SINGLE-DIGIT :HYPHEN :LOWER :HYPHEN :SINGLE-CAP :HYPHEN))
  "3-amino-6-chloro-N-" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge14 300 "wild-type" 303> #<edge15 300 wild-type 303> #<edge17 314 wild-type 317>
    #<edge18 319 "even if" 321> #<edge19 319 even-if 321>)
   (:LOWER :HYPHEN :SINGLE-DIGIT :HYPHEN :LOWER))
  "pyrazine-2-carboxamide" MAKE-HYPHENATED-TRIPLE)
 (((#<edge3 139 up-to 141> :LOWER #<edge4 174 "but rather" 176> #<edge6 184 "by virtue of" 187>
    #<edge7 184 by-virtue-of 187> #<edge8 214 "wild-type" 217> #<edge9 214 wild-type 217>
    #<edge12 285 "close to" 287> #<edge13 285 close-to 287>)
   (:NUMBER-SEQUENCE :LOWER :HYPHEN :SINGLE-DIGIT :HYPHEN :LOWER :HYPHEN :SINGLE-CAP :HYPHEN))
  "3,5-diamino-6-chloro-N-" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge6 184 "by virtue of" 187> #<edge7 184 by-virtue-of 187> #<edge8 214 "wild-type" 217>
    #<edge9 214 wild-type 217> #<edge11 274 such-as 276> #<edge12 285 "close to" 287>
    #<edge13 285 close-to 287> #<edge14 300 "wild-type" 303> #<edge15 300 wild-type 303>
    #<edge16 314 "wild-type" 317> :LOWER #<edge17 314 wild-type 317> #<edge19 319 even-if 321>
    :LOWER #<edge20 376 "wild-type" 379> #<edge22 393 "due to" 395>)
   (:SINGLE-DIGIT :HYPHEN :LOWER :HYPHEN :SINGLE-DIGIT :HYPHEN :SINGLE-LOWER :HYPHEN :SINGLE-CAP
    :HYPHEN :LOWER :HYPHEN :NUMBER-SEQUENCE :LOWER :HYPHEN :SINGLE-DIGIT))
  "4-amino-1-β-D-ribofuranosyl-1,3,5-triazin-2" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge1 118 protein 120> #<edge2 139 "up to" 141> #<edge3 139 up-to 141>)
   (:SINGLE-DIGIT :HYPHEN :CAPITALIZED))
  "5-Azacitidine" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge6 184 "by virtue of" 187> #<edge7 184 by-virtue-of 187> #<edge8 214 "wild-type" 217>
    #<edge9 214 wild-type 217> #<edge20 376 "wild-type" 379> #<edge14 300 "wild-type" 303>
    #<edge15 300 wild-type 303> #<edge16 314 "wild-type" 317> #<edge18 319 "even if" 321> :LOWER)
   (:SINGLE-DIGIT :HYPHEN :LOWER :HYPHEN :POINT-MUTATION :HYPHEN :LOWER :HYPHEN :NUMBER-SEQUENCE
    :LOWER))
  "5-fluoro-1H-pyrimidine-2,4-dione" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge1 118 protein 120> #<edge2 139 "up to" 141> #<edge3 139 up-to 141>)
   (:SINGLE-DIGIT :HYPHEN :LOWER))
  "5-fluorouracil" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge33 4 the 5> #<edge52 18 "the" 19> #<edge38 9 have 10> #<edge40 11 "the" 12>
    #<edge41 11 the 12> #<edge42 12 importance 13> #<edge44 13 of 14> #<edge45 14 "the" 15>
    #<edge46 14 the 15>)
   (:HYPHEN :POINT-MUTATION :HYPHEN :NUMBER-SEQUENCE :LOWER :HYPHEN :SINGLE-DIGIT :HYPHEN :LOWER))
  "-1H-1,2,4-triazole-3-carboxamide" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:LOWER #<edge29 2 study-data 3> #<edge31 3 on 4> #<edge32 4 "the" 5> :LOWER)
   (:LOWER :HYPHEN :SINGLE-DIGIT :HYPHEN :LOWER))
  "oxolan-2-yl" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge21 376 wild-type 379> #<edge23 393 due-to 395> :LOWER #<edge24 415 "eif3" 417>
    #<edge26 415 bio-complex 417> #<edge27 1 sequencer 2>)
   (:HYPHEN :NUMBER-SEQUENCE :LOWER :HYPHEN :SINGLE-DIGIT :HYPHEN))
  "-3,4-dihydroxy-5-" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:CAPITALIZED #<edge118 21 of 25>) (:CAPITALIZED :COLON)) "Aldrich:" :NO-EDGE)
 (((#<edge308 155 that 156> #<edge309 156 "it" 157>) (:LOWER :COLON)) "question:" :NO-EDGE)
 (((#<edge304 153 "this" 154> #<edge305 153 this 154> #<edge306 154 suggest 155>)
   (:DIGITS :HYPHEN :LOWER))
  "two-sided" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge301 87 show 90> #<edge303 90 that 91> #<edge304 153 "this" 154> #<edge305 153 this 154>
    #<edge307 155 "that" 156>)
   (:SINGLE-LOWER :SINGLE-DIGIT :HYPHEN :SINGLE-LOWER :DIGITS))
  "β9–α11" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge42 12 importance 13> #<edge43 13 "of" 14>) (:LOWER :COLON)) "fronts:" :NO-EDGE)
 (((#<edge370 180 tethere 198> #<edge367 178 bio-complex 180> #<edge369 180 tethere 183>)
   (:POINT-MUTATION :HYPHEN :SINGLE-CAP))
  "6D–E" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge260 146 modifier 147> #<edge262 147 position 148>) (:SINGLE-CAP :SINGLE-DIGIT)) "S1"
  REIFY-TWO-PART-LABEL)
 (((#<edge47 15 close-bio-process 16> #<edge552 305 ones-number 306> #<edge49 16 proximity 17>)
   (:MOLECULE :FORWARD-SLASH :MOLECULE))
  "Mg2+/Mn2+" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge417 233 when 234> #<edge419 234 the 235>) (:SINGLE-CAP :SINGLE-DIGIT)) "S3"
  REIFY-TWO-PART-LABEL)
 (((#<edge381 200 COMMA 201> #<edge382 201 whilst 202> #<edge383 202 modifier 203>)
   (:DIGITS :HYPHEN :LOWER))
  "one-step" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge180 85 however 86> #<edge13 285 close-to 287>) (:SINGLE-DIGIT :PROTEIN)) "6D–F"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge329 170 "that" 171> #<edge331 171 affect 172>) (:SINGLE-CAP :SINGLE-DIGIT)) "S1"
  REIFY-TWO-PART-LABEL)
 (((#<edge513 279 bio-entity 281> #<edge514 277 bio-entity 281> #<edge515 276 bio-entity 281>)
   (:LOWER :HYPHEN :LOWER))
  "dose-independent" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge263 149 figure 150> #<edge264 149 article-figure 150> #<edge265 150 digit-sequence 151>)
   (:SINGLE-LOWER :HYPHEN :LOWER))
  "y-axis" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge242 132 even 133> #<edge243 133 when 134> #<edge244 133 when 134>)
   (:SINGLE-LOWER :HYPHEN :LOWER))
  "y-axis" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge72 30 "the" 31> #<edge73 30 the 31> #<edge74 31 downstream-segment 32>)
   (:LOWER :HYPHEN :LOWER))
  "mock-treatment" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge277 117 open-reading-frame 121> #<edge278 121 place 123> #<edge280 125 bio-entity 128>)
   (:LOWER :HYPHEN :LOWER))
  "step-growth" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge114 30 open-reading-frame 33> #<edge115 30 open-reading-frame 36> #<edge116 29 of 36>)
   (:DIGITS :HYPHEN :LOWER))
  "one-step" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge458 246 under 247> #<edge459 247 "the" 248> #<edge460 247 the 248>)
   (:DIGITS :HYPHEN :LOWER))
  "one-step" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge242 132 even 133> #<edge243 133 when 134> #<edge244 133 when 134>)
   (:DIGITS :HYPHEN :LOWER))
  "one-step" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge1372 inactive, resource 1372> #<edge1348 inactive, resource 1348>
    #<edge1349 inactive, resource 1349>)
   (:POINT-MUTATION :HYPHEN :SINGLE-CAP))
  "2B–C" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge1315 inactive, resource 1315> #<edge1316 inactive, resource 1316>
    #<edge1318 inactive, resource 1318>)
   (:SINGLE-LOWER :PLUS-SIGN :SINGLE-DIGIT))
  "n+1" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge1229 inactive, resource 1229> #<edge1230 inactive, resource 1230>
    #<edge1231 inactive, resource 1231>)
   (:LOWER :HYPHEN :LOWER))
  "end-labeled" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge1206 inactive, resource 1206> #<edge1207 inactive, resource 1207>
    #<edge1209 inactive, resource 1209>)
   (:LOWER :HYPHEN :LOWER))
  "primer-template" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge1041 inactive, resource 1041> #<edge1043 inactive, resource 1043>)
   (:SINGLE-CAP :SINGLE-DIGIT))
  "S1" REIFY-TWO-PART-LABEL)
 (((#<edge835 inactive, resource 835> #<edge837 inactive, resource 837>)
   (:SINGLE-CAP :SINGLE-DIGIT))
  "S1" REIFY-TWO-PART-LABEL)
 (((#<edge477 261 digit-sequence 262> #<edge478 261 number 262> #<edge479 262 amino-acid 263>)
   (:SINGLE-DIGIT :HYPHEN :LOWER))
  "5-fluorouracil" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge464 251 bio-complex 252> #<edge465 252 modal 253>) (:LOWER :COLON)) "structures:"
  :NO-EDGE)
 (((#<edge298 98 critical 103> #<edge262 147 position 148>) (:RESIDUE-ON-PROTEIN :SINGLE-CAP))
  "A372V" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge81 38 digit-sequence 39> #<edge82 38 number 39> #<edge83 40 COMMA 41>)
   (:SINGLE-DIGIT :HYPHEN :LOWER))
  "5-fluorouracil" MAKE-HYPHENATED-STRUCTURE)
 (((:FULL #<edge181 86 COMMA 87>) (:FULL :SINGLE-DIGIT)) "CVB3" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge11 274 such-as 276> #<edge74 31 downstream-segment 32> #<edge13 285 close-to 287>)
   (:MOLECULE :FORWARD-SLASH :MOLECULE))
  "Na+/Mg2+" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge7 184 by-virtue-of 187> #<edge72 30 "the" 31> #<edge9 214 wild-type 217>)
   (:MOLECULE :FORWARD-SLASH :CALCIUM-ION))
  "Na+/Ca2+" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge21 376 wild-type 379> #<edge22 393 "due to" 395> #<edge23 393 due-to 395>)
   (:DIGITS :HYPHEN :LOWER))
  "two-tailed" MAKE-HYPHENATED-STRUCTURE)
 (((:GREEK_CAPITAL_LETTER_DELTA #<edge203 103 "to" 104>) (:GREEK_CAPITAL_LETTER_DELTA :FULL)) "ΔCT"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge127 57 "this" 58> :ASTERISK #<edge128 57 this 58>) (:DIGITS :ASTERISK :SINGLE-CAP))
  "60°C" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge102 1 study-bio-method 3> #<edge104 4 bio-process 9>) (:FULL :DIGITS)) "OD490"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge17 314 wild-type 317> #<edge18 319 "even if" 321> #<edge20 376 "wild-type" 379>)
   (:PROTEIN :HYPHEN :SINGLE-DIGIT))
  "DEN-1" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge215 112 when 113> :ASTERISK #<edge216 113 "the" 114>) (:DIGITS :ASTERISK :SINGLE-CAP))
  "33°C" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge206 105 efficiency 106> #<edge207 107 figure 108> #<edge209 108 digit-sequence 109>)
   (:PROTEIN :HYPHEN :SINGLE-DIGIT))
  "DEN-1" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge45 14 "the" 15> #<edge50 17 "of" 18>) (:FORWARD-SLASH :LOWER)) "/well" NIL)
 (((#<edge109 19 bio-entity 21> #<edge110 18 bio-entity 21> #<edge112 22 open-reading-frame 25>)
   (:PROTEIN :HYPHEN :SINGLE-DIGIT))
  "DEN-1" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge74 31 downstream-segment 32> #<edge75 31 downstream 32>
    #<edge77 32 open-reading-frame 33>)
   (:PROTEIN :HYPHEN :SINGLE-DIGIT))
  "DEN-1" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge5 174 but-rather 176> :TILDA #<edge122 14 proximity 25>)
   (:BIO-ENTITY :TILDA :SINGLE-DIGIT))
  "DenSi-1~4" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge60 22 the 23> #<edge61 23 upstream-segment 24> #<edge63 24 protein 25>)
   (:PROTEIN :HYPHEN :SINGLE-DIGIT))
  "DEN-1" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge15 300 wild-type 303> #<edge16 314 "wild-type" 317> #<edge18 319 "even if" 321>)
   (:PROTEIN :HYPHEN :SINGLE-DIGIT))
  "DEN-1" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge166 67 bio-complex 69> #<edge167 67 lambda-expression 68> #<edge169 74 be 76>)
   (:PROTEIN :HYPHEN :SINGLE-DIGIT))
  "DEN-1" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge37 8 bio-process 9> :AND-SIGN #<edge38 9 have 10>) (:CAPITALIZED :AND-SIGN :CAPITALIZED))
  "Virology&Immunology" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge235 126 stop-endurant 127> #<edge236 127 bio-entity 128> #<edge238 129 reinitiation 130>)
   (:PROTEIN :HYPHEN :SINGLE-DIGIT))
  "DEN-1" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge137 64 mobility 65> #<edge138 65 "of" 66> #<edge142 67 tethere 68>)
   (:PROTEIN :HYPHEN :SINGLE-CAP))
  "DEN-I" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge82 38 number 39> #<edge83 40 COMMA 41> #<edge85 42 number 43> #<edge86 44 COMMA 45>
    #<edge87 46 digit-sequence 47>)
   (:LOWER :HYPHEN :LOWER :HYPHEN :LOWER))
  "non-sequence-specific" MAKE-HYPHENATED-TRIPLE)
 (((#<edge292 123 downstream 128> #<edge293 116 of 121> #<edge295 103 to 110>)
   (:PROTEIN :HYPHEN :SINGLE-DIGIT))
  "DEN-1" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge32 4 "the" 5> #<edge33 4 the 5> #<edge34 5 terminate 6>) (:LOWER :HYPHEN :LOWER))
  "gene-based" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge81 38 digit-sequence 39> #<edge82 38 number 39> #<edge83 40 COMMA 41>)
   (:LOWER :HYPHEN :MIXED))
  "control-siRNA" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge59 22 "the" 23> #<edge60 22 the 23> #<edge62 23 upstream 24>)
   (:PROTEIN :HYPHEN :SINGLE-DIGIT))
  "DEN-1" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge16 314 "wild-type" 317> #<edge17 314 wild-type 317> #<edge19 319 even-if 321>)
   (:PROTEIN :HYPHEN :SINGLE-DIGIT))
  "DEN-1" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge252 141 digit-sequence 142> #<edge293 116 of 121>) (:DIGITS :FOLD-ENDURANT)) "2.26-fold"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge163 58 believe 60> #<edge164 60 reflect 62> #<edge165 62 mobility 65>)
   (:LOWER :HYPHEN :MIXED))
  "control-siRNA" MAKE-HYPHENATED-STRUCTURE)
 (((:MIXED #<edge184 88 show 89> #<edge186 90 "that" 91>) (:MIXED :HYPHEN :SINGLE-DIGIT)) "DenSi-1"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge135 62 a 63> #<edge136 63 restrict 64> #<edge137 64 mobility 65> #<edge138 65 "of" 66>)
   (:PLUS-SIGN :PLUS-SIGN :PLUS-SIGN :PLUS-SIGN))
  "++++" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge128 57 this 58> #<edge129 58 be 59> #<edge130 59 believe 60>) (:LOWER :HYPHEN :LOWER))
  "post-infection" MAKE-HYPHENATED-STRUCTURE)
 (((:MIXED #<edge113 31 open-reading-frame 33> #<edge115 30 open-reading-frame 36>)
   (:MIXED :HYPHEN :SINGLE-DIGIT))
  "DenSi-1" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge104 4 bio-process 9> #<edge106 11 importance 13>) (:FULL :DIGITS)) "EU848545"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge86 44 COMMA 45> #<edge87 46 digit-sequence 47> #<edge89 48 COMMA 49>)
   (:PROTEIN :HYPHEN :SINGLE-DIGIT))
  "DEN-1" MAKE-HYPHENATED-STRUCTURE)
 (((:FULL #<edge39 10 suggest 11>) (:FULL :HYPHENATED-NUMBER)) "GZ02-218"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge30 3 "on" 4> #<edge31 3 on 4> #<edge33 4 the 5>) (:PROTEIN :HYPHEN :SINGLE-DIGIT))
  "DEN-1" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge16 314 "wild-type" 317> #<edge17 314 wild-type 317> #<edge19 319 even-if 321>)
   (:PROTEIN :HYPHEN :SINGLE-DIGIT))
  "DEN-1" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge352 191 the 192> #<edge353 192 bio-complex 193> #<edge355 194 and 195>)
   (:PROTEIN :HYPHEN :SINGLE-DIGIT))
  "DEN-1" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge106 11 importance 13> #<edge7 184 by-virtue-of 187>) (:FULL :-LIKE)) "III-like"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge3 139 up-to 141> #<edge4 174 "but rather" 176> #<edge7 184 by-virtue-of 187>
    #<edge8 214 "wild-type" 217> #<edge10 274 "such as" 276> #<edge11 274 such-as 276>
    #<edge13 285 close-to 287> #<edge14 300 "wild-type" 303> #<edge15 300 wild-type 303>)
   (:LOWER :FORWARD-SLASH :HYPHENATED-NUMBER :FORWARD-SLASH :DIGITS :FORWARD-SLASH :DIGITS
    :FORWARD-SLASH :LOWER))
  "com/1471-2334/10/296/prepub" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge2 139 "up to" 141> #<edge3 139 up-to 141> #<edge4 174 "but rather" 176>)
   (:LOWER :HYPHEN :LOWER))
  "pre-publication" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge594 341 cause 342> #<edge595 342 "the" 343> #<edge597 343 tethere 344>)
   (:LOWER :HYPHEN :LOWER))
  "time-series" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge361 191 bio-complex 197> #<edge362 189 between 191> #<edge363 183 parentheses 198>)
   (:LOWER :HYPHEN :LOWER))
  "web-based" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge320 164 start 165> #<edge321 165 and 166> #<edge322 166 stop 167>)
   (:LOWER :HYPHEN :LOWER))
  "web-based" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge229 123 downstream 124> #<edge230 124 "of" 125> #<edge231 124 of 125>)
   (:LOWER :HYPHEN :LOWER))
  "self-selection" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge296 101 critical 103> :REGISTERED_SIGN) (:CAPITALIZED :REGISTERED_SIGN)) "Insight®"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge143 68 bio-complex 69> #<edge144 69 semicolon 70> #<edge145 70 "that" 71>)
   (:LOWER :HYPHEN :LOWER))
  "geography-driven" MAKE-HYPHENATED-STRUCTURE)
 (((:AND-SIGN #<edge21 376 wild-type 379>) (:AND-SIGN :SINGLE-DIGIT)) "&3"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge24 415 "eif3" 417> :EQUAL-SIGN) (:BIO-ENTITY :EQUAL-SIGN)) "χ2="
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge20 376 "wild-type" 379> :EQUAL-SIGN) (:BIO-ENTITY :EQUAL-SIGN)) "χ2="
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge16 314 "wild-type" 317> :EQUAL-SIGN) (:BIO-ENTITY :EQUAL-SIGN)) "χ2="
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge10 274 "such as" 276> #<edge122 14 proximity 25>) (:VERSUS :PERCENT)) "vs.21.7%"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge39 10 suggest 11> #<edge40 11 "the" 12> #<edge42 12 importance 13>)
   (:LOWER :HYPHEN :LOWER))
  "rank-order" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge221 116 of 117> #<edge222 117 "the" 118> #<edge223 117 the 118>) (:LOWER :HYPHEN :LOWER))
  "double-counting" MAKE-HYPHENATED-STRUCTURE)
 (((:MIXED :REGISTERED_SIGN) (:MIXED :REGISTERED_SIGN)) "LexisNexis®" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge29 2 study-data 3> #<edge30 3 "on" 4>) (:LOWER :COLON)) "scales:" :NO-EDGE)
 (((#<edge109 19 bio-entity 21> #<edge110 18 bio-entity 21> #<edge112 22 open-reading-frame 25>)
   (:LOWER :FORWARD-SLASH :LOWER))
  "yes/no" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge409 226 COMMA 227> #<edge410 227 modifier 228>) (:LOWER :COLON)) "age:" :NO-EDGE)
 (((#<edge334 176 how 177> #<edge335 177 well-bio-process 178> #<edge336 177 well-endurant 178>)
   (:CAPITALIZED :HYPHEN :LOWER))
  "Non-responders" MAKE-HYPHENATED-STRUCTURE)
 (((:AND-SIGN #<edge256 143 downstream 144>) (:AND-SIGN :SINGLE-DIGIT)) "&2"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge4 174 "but rather" 176> #<edge103 5 bio-process 9> #<edge105 9 suggest 11>)
   (:AVIAN-FLU :HYPHEN :LOWER))
  "H1N1-related" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge4 174 "but rather" 176> #<edge17 314 wild-type 317>) (:AVIAN-FLU :LOWER)) "H1N1influenza"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge8 214 "wild-type" 217> #<edge385 204 require 205>) (:INITIAL :SINGLE-CAP)) "U.S"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge3 139 up-to 141> #<edge4 174 "but rather" 176> #<edge7 184 by-virtue-of 187>
    #<edge8 214 "wild-type" 217> #<edge10 274 "such as" 276> #<edge11 274 such-as 276>
    #<edge13 285 close-to 287> #<edge14 300 "wild-type" 303> :LOWER)
   (:LOWER :FORWARD-SLASH :HYPHENATED-NUMBER :FORWARD-SLASH :DIGITS :FORWARD-SLASH :DIGITS
    :FORWARD-SLASH :LOWER))
  "com/1471-2334/10/288/prepub" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge2 139 "up to" 141> #<edge3 139 up-to 141> #<edge4 174 "but rather" 176>)
   (:LOWER :HYPHEN :LOWER))
  "pre-publication" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge132 60 to 61> #<edge133 61 reflect 62> :LOWER) (:CAPITALIZED :HYPHEN :LOWER))
  "Gamma-glutamyl" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:FULL #<edge121 15 close 16>) (:FULL :COLON)) "LYM:" :NO-EDGE)
 (((:FULL #<edge113 31 open-reading-frame 33>) (:FULL :COLON)) "WBC:" :NO-EDGE)
 (((#<edge63 24 protein 25> #<edge64 24 open-reading-frame 25>) (:FULL :COLON)) "IQR:" :NO-EDGE)
 (((#<edge25 415 protein 417> #<edge26 415 bio-complex 417> #<edge27 1 sequencer 2>)
   (:FULL :COLON :CAPITALIZED))
  "ICU:Intensive" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge171 79 limit 81> #<edge172 79 movement 82> #<edge174 74 ability 77>)
   (:LOWER :HYPHEN :LOWER))
  "clear-cut" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge243 133 when 134> #<edge244 133 when 134> #<edge7 184 by-virtue-of 187>)
   (:LOWER :HYPHEN :OFF-OF))
  "cut-off of" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge172 79 movement 82> #<edge173 82 following 84> #<edge174 74 ability 77>)
   (:LOWER :HYPHEN :LOWER))
  "cut-off" MAKE-HYPHENATED-STRUCTURE)
 (((:GREATER-THAN_OR_EQUAL_TO #<edge64 24 open-reading-frame 25>)
   (:GREATER-THAN_OR_EQUAL_TO :DIGITS))
  "≥70" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:OPEN-ANGLE-BRACKET #<edge56 20 bio-entity 21>) (:OPEN-ANGLE-BRACKET :DIGITS)) "<28"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:LESS-THAN_OR_EQUAL_TO #<edge76 32 protein 33>) (:LESS-THAN_OR_EQUAL_TO :PERCENT)) "≤90%"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge235 126 stop-endurant 127> #<edge236 127 bio-entity 128> #<edge237 128 COMMA 129>)
   (:LOWER :HYPHEN :LOWER))
  "cut-off" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge87 46 digit-sequence 47> #<edge88 46 number 47> #<edge90 50 digit-sequence 51>)
   (:LOWER :HYPHEN :LOWER))
  "box-plots" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge309 156 "it" 157> #<edge310 156 pronoun/inanimate 157> #<edge312 158 not 159>)
   (:DIGITS :FORWARD-SLASH :DIGITS))
  "68/170" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge301 87 show 90> #<edge302 85 show 90> #<edge304 153 "this" 154>)
   (:SINGLE-DIGIT :FORWARD-SLASH :SINGLE-DIGIT))
  "6/8" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge175 73 ability 77> #<edge176 70 be 72> #<edge178 62 mobility 69>)
   (:CAPITALIZED :HYPHEN :DIGITS))
  "Seventy-four" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge70 29 "of" 30> #<edge71 29 of 30> #<edge73 30 the 31>) (:LOWER :HYPHEN :LOWER))
  "follow-up" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge454 238 modifier 240> #<edge455 234 modifier 240> #<edge456 233 modifier 240>)
   (:DIGITS :HYPHEN :LOWER))
  "two-tailed" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge349 189 between 190> #<edge350 190 where 191> #<edge352 191 the 192>)
   (:LOWER :HYPHEN :LOWER))
  "proportional-hazard" MAKE-HYPHENATED-STRUCTURE)
 (((:CAPITALIZED #<edge274 98 bio-entity 100> :CAPITALIZED) (:CAPITALIZED :HYPHEN :CAPITALIZED))
  "Kaplan-Meier" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge264 149 article-figure 150> #<edge265 150 digit-sequence 151>
    #<edge267 85 subordinate-conjunction 87> #<edge268 141 bio-entity 143>
    #<edge270 148 parentheses 152>)
   (:LOWER :HYPHEN :LOWER :HYPHEN :LOWER))
  "time-to-event" MAKE-HYPHENATED-TRIPLE)
 (((#<edge289 130 detect 132> #<edge290 130 detect 133> #<edge292 123 downstream 128>)
   (:CAPITALIZED :HYPHEN :LOWER))
  "Follow-up" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge280 125 bio-entity 128> :ASTERISK #<edge281 137 move-something-somewhere 139>)
   (:DIGITS :ASTERISK :SINGLE-CAP))
  "100°F" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge30 3 "on" 4> #<edge31 3 on 4> #<edge32 4 "the" 5>) (:LOWER :HYPHEN :LOWER))
  "self-limiting" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge305 153 this 154> #<edge306 154 suggest 155> :LOWER #<edge307 155 "that" 156>
    #<edge309 156 "it" 157> #<edge310 156 pronoun/inanimate 157> #<edge311 157 be 158>)
   (:SINGLE-DIGIT :HYPHEN :LOWER :HYPHEN :SINGLE-DIGIT :HYPHEN :LOWER))
  "6-diamidino-2-phenylindole" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge272 95 lambda-expression 96> #<edge273 94 bio-complex 97> #<edge274 98 bio-entity 100>)
   (:DIGITS :HYPHEN :LOWER))
  "488-conjugated" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge128 57 this 58> #<edge121 15 close 16>) (:PERCENT :PROTEIN)) "1%BSA"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge24 415 "eif3" 417> #<edge26 415 bio-complex 417>) (:SINGLE-CAP :SINGLE-DIGIT)) "X5"
  REIFY-TWO-PART-LABEL)
 (((#<edge17 314 wild-type 317> #<edge18 319 "even if" 321> #<edge20 376 "wild-type" 379>
    #<edge21 376 wild-type 379> #<edge22 393 "due to" 395>)
   (:LOWER :HYPHEN :PROTEIN :HYPHEN :PROTEIN))
  "bl-GPI-scFvs" MAKE-HYPHENATED-TRIPLE)
 (((#<edge176 70 be 72> #<edge178 62 mobility 69>) (:SINGLE-CAP :SINGLE-DIGIT)) "X5"
  REIFY-TWO-PART-LABEL)
 (((#<edge169 74 be 76> #<edge170 77 undergo 79> #<edge172 79 movement 82>
    #<edge173 82 following 84> #<edge174 74 ability 77>)
   (:MIXED :HYPHEN :PROTEIN :HYPHEN :PROTEIN))
  "CEMss-GPI-scFvs" MAKE-HYPHENATED-TRIPLE)
 (((#<edge3 139 up-to 141> #<edge55 19 stop-endurant 20> #<edge57 21 "of" 22>)
   (:PROTEIN :HYPHEN :SINGLE-DIGIT))
  "NL4-3" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge41 11 the 12> #<edge42 12 importance 13> #<edge44 13 of 14>)
   (:SINGLE-CAP :HYPHEN :LOWER))
  "U-bottom" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge263 149 figure 150> #<edge264 149 article-figure 150> #<edge265 150 digit-sequence 151>
    #<edge266 150 number 151> #<edge267 85 subordinate-conjunction 87>)
   (:FULL :PLUS-SIGN :FORWARD-SLASH :PROTEIN :PLUS-SIGN))
  "MS+/RS+" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge214 112 when 113> #<edge215 112 when 113> #<edge216 113 "the" 114>)
   (:LOWER :HYPHEN :LOWER))
  "cell-bead" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge5 174 but-rather 176> #<edge98 41 square-brackets 44>) (:PROTEIN :PLUS-SIGN)) "CD14+"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge79 34 number 35> :MULTIPLICATION-SIGN #<edge81 38 digit-sequence 39>)
   (:SINGLE-DIGIT :MULTIPLICATION-SIGN :DIGITS))
  "2×105" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge75 31 downstream 32> #<edge77 32 open-reading-frame 33>) (:SINGLE-CAP :SINGLE-DIGIT))
  "X5" REIFY-TWO-PART-LABEL)
 (((#<edge68 27 start 28> #<edge69 28 bio-entity 29> #<edge71 29 of 30> #<edge72 30 "the" 31>
    #<edge73 30 the 31>)
   (:MIXED :HYPHEN :PROTEIN :HYPHEN :PROTEIN))
  "CEMss-GPI-scFvs" MAKE-HYPHENATED-TRIPLE)
 (((#<edge3 139 up-to 141> #<edge14 300 "wild-type" 303>) (:BIO-ENTITY :DIGITS)) "1×105"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge44 13 of 14> #<edge45 14 "the" 15> #<edge47 15 close-bio-process 16>)
   (:PROTEIN :HYPHEN :SINGLE-DIGIT))
  "Bru-3" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge36 7 reinitiation 8> #<edge38 9 have 10>) (:SINGLE-CAP :SINGLE-DIGIT)) "X5"
  REIFY-TWO-PART-LABEL)
 (((#<edge29 2 study-data 3> #<edge31 3 on 4>) (:SINGLE-CAP :SINGLE-DIGIT)) "X5"
  REIFY-TWO-PART-LABEL)
 (((#<edge218 114 start 115> #<edge220 116 "of" 117>) (:SINGLE-CAP :SINGLE-DIGIT)) "X5"
  REIFY-TWO-PART-LABEL)
 (((#<edge212 111 "that" 112> #<edge213 111 that 112> #<edge215 112 when 113>
    #<edge216 113 "the" 114> #<edge217 113 the 114>)
   (:LOWER :HYPHEN :PROTEIN :HYPHEN :PROTEIN))
  "bl-GPI-scFv" MAKE-HYPHENATED-TRIPLE)
 (((#<edge207 107 figure 108> #<edge209 108 digit-sequence 109>) (:SINGLE-CAP :SINGLE-DIGIT)) "X5"
  REIFY-TWO-PART-LABEL)
 (((#<edge204 103 to 104> #<edge205 104 reinitiation 105> #<edge206 105 efficiency 106>)
   (:LOWER :HYPHEN :PROTEIN))
  "bl-scFv" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge135 62 a 63> #<edge136 63 restrict 64> #<edge138 65 "of" 66>)
   (:PROTEIN :HYPHEN :SINGLE-DIGIT))
  "Bru-3" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge66 26 "the" 27> #<edge68 27 start 28>) (:SINGLE-CAP :SINGLE-DIGIT)) "X5"
  REIFY-TWO-PART-LABEL)
 (((#<edge60 22 the 23> #<edge61 23 upstream-segment 24> #<edge63 24 protein 25>
    #<edge64 24 open-reading-frame 25> #<edge65 25 and 26>)
   (:LOWER :HYPHEN :PROTEIN :HYPHEN :PROTEIN))
  "bl-GPI-scFv" MAKE-HYPHENATED-TRIPLE)
 (((#<edge55 19 stop-endurant 20> #<edge57 21 "of" 22>) (:SINGLE-CAP :SINGLE-DIGIT)) "X5"
  REIFY-TWO-PART-LABEL)
 (((#<edge52 18 "the" 19> #<edge53 18 the 19> #<edge54 19 stop 20>) (:LOWER :HYPHEN :PROTEIN))
  "bl-scFv" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge42 12 importance 13> #<edge44 13 of 14>) (:SINGLE-CAP :SINGLE-DIGIT)) "X5"
  REIFY-TWO-PART-LABEL)
 (((#<edge5 174 but-rather 176> #<edge31 3 on 4> #<edge33 4 the 5> #<edge34 5 terminate 6>
    #<edge7 184 by-virtue-of 187> #<edge35 6 HYPHEN 7> #<edge36 7 reinitiation 8>)
   (:PROTEIN :FORWARD-SLASH :LOWER :HYPHEN :BIO-ENTITY :HYPHEN :LOWER))
  "scFv/hinge/his-tag/DAF-transduced" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge1 118 protein 120> #<edge29 2 study-data 3> #<edge3 139 up-to 141>)
   (:PROTEIN :FORWARD-SLASH :BIO-ENTITY))
  "scFv/hinge/his-tag-" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge3 139 up-to 141> #<edge47 15 close-bio-process 16> #<edge49 16 proximity 17>
    #<edge50 17 "of" 18> #<edge5 174 but-rather 176> #<edge51 17 of 18> #<edge52 18 "the" 19>)
   (:PROTEIN :FORWARD-SLASH :LOWER :HYPHEN :BIO-ENTITY :HYPHEN :LOWER))
  "scFv/hinge/his-tag/DAF-transduced" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge1 118 protein 120> #<edge40 11 "the" 12> #<edge42 12 importance 13> #<edge43 13 "of" 14>
    #<edge44 13 of 14> #<edge45 14 "the" 15>)
   (:PROTEIN :FORWARD-SLASH :LOWER :HYPHEN :LOWER :HYPHEN))
  "scFv/hinge/his-tag-" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge18 319 "even if" 321> #<edge19 319 even-if 321> #<edge20 376 "wild-type" 379>)
   (:LOWER :HYPHEN :LOWER))
  "single-cycle" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge538 294 if 295> :UNDER-BAR #<edge531 255 bio-entity 264>)
   (:PROTEIN :UNDER-BAR :SINGLE-CAP))
  "CRF07_B" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge522 256 bio-entity 259> #<edge524 271 bio-entity 273>) (:SINGLE-CAP :SINGLE-DIGIT)) "R5"
  REIFY-TWO-PART-LABEL)
 (((#<edge496 279 bio-entity 280> #<edge498 281 COMMA 282>) (:SINGLE-CAP :SINGLE-DIGIT)) "R5"
  REIFY-TWO-PART-LABEL)
 (((#<edge476 260 article-figure 261> :UNDER-BAR #<edge474 258 bio-entity 259>)
   (:PROTEIN :UNDER-BAR :PROTEIN))
  "CRF01_AE" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge465 252 modal 253> #<edge467 254 "at" 255>) (:SINGLE-CAP :SINGLE-DIGIT)) "R5"
  REIFY-TWO-PART-LABEL)
 (((#<edge438 219 figure 225> #<edge440 202 reinitiation 204>) (:SINGLE-CAP :SINGLE-DIGIT)) "R5"
  REIFY-TWO-PART-LABEL)
 (((#<edge381 200 COMMA 201> #<edge383 202 modifier 203>) (:SINGLE-CAP :SINGLE-DIGIT)) "X4"
  REIFY-TWO-PART-LABEL)
 (((#<edge352 191 the 192> #<edge354 193 terminate 194>) (:SINGLE-CAP :SINGLE-DIGIT)) "R5"
  REIFY-TWO-PART-LABEL)
 (((#<edge320 164 start 165> #<edge322 166 stop 167>) (:SINGLE-CAP :SINGLE-DIGIT)) "R5"
  REIFY-TWO-PART-LABEL)
 (((#<edge43 13 "of" 14> #<edge46 14 the 15>) (:INITIAL :INITIAL)) "B.H."
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge25 415 protein 417> #<edge266 150 number 151>) (:PROTEIN :CAPITALIZED)) "anti-His"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge175 73 ability 77> #<edge178 62 mobility 69>) (:MIXED :DIGITS)) "pH8.0"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge171 79 limit 81> #<edge172 79 movement 82> #<edge173 82 following 84>)
   (:PROTEIN :HYPHEN :MIXED))
  "Tris-HCl" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge87 46 digit-sequence 47> #<edge89 48 COMMA 49>) (:SINGLE-CAP :SINGLE-DIGIT)) "X5"
  REIFY-TWO-PART-LABEL)
 (((#<edge79 34 number 35> #<edge80 36 COMMA 37> #<edge81 38 digit-sequence 39>
    #<edge83 40 COMMA 41> #<edge84 42 digit-sequence 43> #<edge85 42 number 43>)
   (:MIXED :HYPHEN :SINGLE-CAP :SINGLE-DIGIT :HYPHEN :PROTEIN))
  "CEMss-R5-scFvs" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge75 31 downstream 32> #<edge77 32 open-reading-frame 33>) (:SINGLE-CAP :SINGLE-DIGIT))
  "X5" REIFY-TWO-PART-LABEL)
 (((#<edge64 24 open-reading-frame 25> #<edge65 25 and 26> #<edge66 26 "the" 27>
    #<edge68 27 start 28> #<edge69 28 bio-entity 29> #<edge71 29 of 30> #<edge72 30 "the" 31>
    #<edge73 30 the 31>)
   (:MIXED :HYPHEN :SINGLE-CAP :SINGLE-DIGIT :HYPHEN :PROTEIN :HYPHEN :PROTEIN))
  "CEMss-R5-GPI-scFvs" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge59 22 "the" 23> #<edge61 23 upstream-segment 24>) (:SINGLE-CAP :SINGLE-DIGIT)) "X5"
  REIFY-TWO-PART-LABEL)
 (((#<edge49 16 proximity 17> #<edge50 17 "of" 18> #<edge51 17 of 18>) (:LOWER :HYPHEN :PROTEIN))
  "bl-scFvs" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge43 13 "of" 14> #<edge45 14 "the" 15>) (:SINGLE-CAP :SINGLE-DIGIT)) "X5"
  REIFY-TWO-PART-LABEL)
 (((#<edge30 3 "on" 4> #<edge31 3 on 4> #<edge33 4 the 5> #<edge34 5 terminate 6>
    #<edge35 6 HYPHEN 7>)
   (:LOWER :HYPHEN :PROTEIN :HYPHEN :PROTEIN))
  "bl-GPI-scFvs" MAKE-HYPHENATED-TRIPLE)
 (((#<edge11 274 such-as 276> #<edge71 29 of 30> #<edge73 30 the 31>
    #<edge74 31 downstream-segment 32> #<edge13 285 close-to 287> #<edge75 31 downstream 32>
    #<edge76 32 protein 33>)
   (:PROTEIN :FORWARD-SLASH :LOWER :HYPHEN :BIO-ENTITY :HYPHEN :LOWER))
  "scFv/hinge/his-tag/DAF-transduced" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge46 14 the 15> #<edge47 15 close-bio-process 16> #<edge48 15 close 16>
    #<edge50 17 "of" 18> #<edge51 17 of 18> #<edge9 214 wild-type 217>)
   (:FORWARD-SLASH :LOWER :FORWARD-SLASH :LOWER :HYPHEN :BIO-ENTITY))
  "/hinge/his-tag/DAF" NIL)
 (((#<edge41 11 the 12> #<edge43 13 "of" 14>) (:SINGLE-CAP :SINGLE-DIGIT)) "X5"
  REIFY-TWO-PART-LABEL)
 (((#<edge84 42 digit-sequence 43> #<edge85 42 number 43> #<edge86 44 COMMA 45>
    #<edge88 46 number 47> #<edge89 48 COMMA 49> #<edge21 376 wild-type 379>
    #<edge90 50 digit-sequence 51> #<edge91 50 number 51>)
   (:FORWARD-SLASH :LOWER :FORWARD-SLASH :LOWER :HYPHEN :BIO-ENTITY :HYPHEN :LOWER))
  "/hinge/his-tag/DAF-transduced" NIL)
 (((#<edge80 36 COMMA 37> #<edge82 38 number 39>) (:SINGLE-CAP :SINGLE-DIGIT)) "X5"
  REIFY-TWO-PART-LABEL)
 (((#<edge62 23 upstream 24> #<edge63 24 protein 25> #<edge64 24 open-reading-frame 25>
    #<edge66 26 "the" 27> #<edge67 26 the 27> #<edge17 314 wild-type 317> #<edge68 27 start 28>
    #<edge69 28 bio-entity 29>)
   (:FORWARD-SLASH :LOWER :FORWARD-SLASH :LOWER :HYPHEN :BIO-ENTITY :HYPHEN :LOWER))
  "/hinge/his-tag/DAF-transduced" NIL)
 (((#<edge57 21 "of" 22> #<edge59 22 "the" 23>) (:SINGLE-CAP :SINGLE-DIGIT)) "X5"
  REIFY-TWO-PART-LABEL)
 (((#<edge3 139 up-to 141> #<edge35 6 HYPHEN 7> #<edge37 8 bio-process 9> #<edge38 9 have 10>
    #<edge5 174 but-rather 176>)
   (:PROTEIN :FORWARD-SLASH :LOWER :HYPHEN :BIO-ENTITY))
  "scFv/hinge/his-tag/DAF" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge41 11 the 12> #<edge440 202 reinitiation 204> #<edge442 214 site 218>
    #<edge443 213 site 218> #<edge444 228 site 230>)
   (:PROTEIN :FORWARD-SLASH :LOWER :HYPHEN :LOWER))
  "scFv/hinge/his-tag" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge37 8 bio-process 9> #<edge419 234 the 235> #<edge421 236 reinitiation 237>
    #<edge422 237 bio-entity 238> #<edge39 10 suggest 11>)
   (:PROTEIN :FORWARD-SLASH :LOWER :HYPHEN :BIO-ENTITY))
  "scFv/hinge/his-tag/DAF" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge316 161 distance 162> #<edge317 162 between 163> #<edge318 163 "the" 164>
    #<edge320 164 start 165> #<edge321 165 and 166> #<edge322 166 stop 167>)
   (:FORWARD-SLASH :LOWER :FORWARD-SLASH :LOWER :HYPHEN :LOWER))
  "/hinge/his-tag" NIL)
 (((#<edge311 157 be 158> #<edge313 159 solely 160>) (:SINGLE-CAP :SINGLE-DIGIT)) "X5"
  REIFY-TWO-PART-LABEL)
 (((#<edge294 114 start 116> #<edge295 103 to 110> #<edge296 101 critical 103>
    #<edge298 98 critical 103> #<edge299 93 between 97> #<edge23 393 due-to 395>)
   (:FORWARD-SLASH :LOWER :FORWARD-SLASH :LOWER :HYPHEN :BIO-ENTITY))
  "/hinge/his-tag/DAF" NIL)
 (((#<edge289 130 detect 132> #<edge291 124 of 128>) (:SINGLE-CAP :SINGLE-DIGIT)) "X5"
  REIFY-TWO-PART-LABEL)
 (((#<edge101 53 square-brackets 56> #<edge102 1 study-bio-method 3> #<edge103 5 bio-process 9>
    #<edge105 9 suggest 11> #<edge106 11 importance 13> #<edge107 15 proximity 17>)
   (:FORWARD-SLASH :LOWER :FORWARD-SLASH :LOWER :HYPHEN :LOWER))
  "/hinge/his-tag" NIL)
 (((#<edge97 37 square-brackets 40> #<edge99 45 square-brackets 48>) (:SINGLE-CAP :SINGLE-DIGIT))
  "X5" REIFY-TWO-PART-LABEL)
 (((#<edge87 46 digit-sequence 47> #<edge88 46 number 47> #<edge89 48 COMMA 49>
    #<edge91 50 number 51> #<edge92 52 COMMA 53> #<edge7 184 by-virtue-of 187>)
   (:FORWARD-SLASH :LOWER :FORWARD-SLASH :LOWER :HYPHEN :BIO-ENTITY))
  "/hinge/his-tag/DAF" NIL)
 (((#<edge83 40 COMMA 41> #<edge85 42 number 43>) (:SINGLE-CAP :SINGLE-DIGIT)) "X5"
  REIFY-TWO-PART-LABEL)
 (((#<edge103 5 bio-process 9> #<edge104 4 bio-process 9> #<edge105 9 suggest 11>)
   (:PROTEIN :FORWARD-SLASH :FULL))
  "SDS/PAGE" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge53 18 the 19> #<edge54 19 stop 20> #<edge55 19 stop-endurant 20>)
   (:CAPITALIZED :HYPHEN :FULL))
  "Ni-NTA" MAKE-HYPHENATED-PAIR)
 (((#<edge301 87 show 90> #<edge302 85 show 90> #<edge303 90 that 91>) (:LOWER :HYPHEN :LOWER))
  "ultra-centrifugation" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge147 71 be 72> #<edge148 72 COMMA 73> :FULL) (:PROTEIN :FORWARD-SLASH :FULL)) "pLP/VSVG"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge143 68 bio-complex 69> #<edge144 69 semicolon 70> #<edge145 70 "that" 71>)
   (:PROTEIN :HYPHEN :SINGLE-CAP))
  "VSV-G" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge118 21 of 25> #<edge119 17 of 21> #<edge11 274 such-as 276> #<edge120 14 proximity 21>
    #<edge122 14 proximity 25> #<edge123 15 close 16> #<edge124 13 of 25>)
   (:PROTEIN :HYPHEN :BIO-ENTITY :FORWARD-SLASH :LOWER :HYPHEN :LOWER))
  "pRRL-scFv/hinge/his-tags" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge111 23 open-reading-frame 25> #<edge112 22 open-reading-frame 25>
    #<edge7 184 by-virtue-of 187> #<edge113 31 open-reading-frame 33>
    #<edge115 30 open-reading-frame 36> #<edge116 29 of 36> #<edge9 214 wild-type 217>)
   (:PROTEIN :HYPHEN :BIO-ENTITY :FORWARD-SLASH :LOWER :HYPHEN :BIO-ENTITY))
  "pRRL-scFv/hinge/his-tag/DAFs" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge3 139 up-to 141> #<edge66 26 "the" 27>) (:PHOSPHORYLATE :DIGITS)) "P-100"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge171 79 limit 81> #<edge172 79 movement 82> #<edge173 82 following 84>
    #<edge174 74 ability 77> #<edge175 73 ability 77>)
   (:FULL :FORWARD-SLASH :SINGLE-CAP :HYPHEN :PROTEIN))
  "CMV/R-env" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge165 62 mobility 65> #<edge166 67 bio-complex 69> #<edge167 67 lambda-expression 68>
    #<edge168 66 bio-complex 69> #<edge169 74 be 76>)
   (:FULL :FORWARD-SLASH :SINGLE-CAP :HYPHEN :PROTEIN))
  "CMV/R-env" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge132 60 to 61> #<edge133 61 reflect 62> #<edge134 62 "a" 63>)
   (:FULL :FORWARD-SLASH :SINGLE-CAP))
  "CMV/R" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:MIXED #<edge189 91 the 92> #<edge190 92 distance 93> #<edge191 93 between 94>
    #<edge11 274 such-as 276>)
   (:MIXED :HYPHEN :PROTEIN :HYPHEN :PROTEIN))
  "pMT-bip-sCD4" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:MIXED #<edge153 76 ability 77> #<edge154 77 "to" 78> #<edge155 77 to 78>
    #<edge156 78 undergo 79> #<edge158 80 limit 81> #<edge159 81 movement 82>
    #<edge160 82 following-adj 83>)
   (:MIXED :HYPHEN :PROTEIN :FORWARD-SLASH :SINGLE-CAP :SINGLE-DIGIT :HYPHEN :CAPITALIZED))
  "pMT-bip/V5-His" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge314 160 "the" 161> #<edge315 160 the 161> #<edge316 161 distance 162>
    #<edge318 163 "the" 164> #<edge319 163 the 164> #<edge320 164 start 165>)
   (:FORWARD-SLASH :LOWER :FORWARD-SLASH :LOWER :HYPHEN :LOWER))
  "/hinge/his-tag" NIL)
 (((#<edge308 155 that 156> #<edge310 156 pronoun/inanimate 157>) (:SINGLE-CAP :SINGLE-DIGIT)) "X5"
  REIFY-TWO-PART-LABEL)
 (((#<edge263 149 figure 150> #<edge264 149 article-figure 150> #<edge265 150 digit-sequence 151>
    #<edge267 85 subordinate-conjunction 87> #<edge268 141 bio-entity 143>
    #<edge269 106 parentheses 110>)
   (:FORWARD-SLASH :LOWER :FORWARD-SLASH :LOWER :HYPHEN :LOWER))
  "/hinge/his-tag" NIL)
 (((#<edge229 123 downstream 124> #<edge231 124 of 125>) (:SINGLE-CAP :SINGLE-DIGIT)) "X5"
  REIFY-TWO-PART-LABEL)
 (((#<edge188 91 "the" 92> #<edge189 91 the 92> #<edge190 92 distance 93> #<edge192 94 "the" 95>
    #<edge193 94 the 95> #<edge194 95 terminate 96>)
   (:FORWARD-SLASH :LOWER :FORWARD-SLASH :LOWER :HYPHEN :LOWER))
  "/hinge/his-tag" NIL)
 (((#<edge167 67 lambda-expression 68> #<edge168 66 bio-complex 69> #<edge169 74 be 76>
    #<edge171 79 limit 81> #<edge172 79 movement 82> #<edge7 184 by-virtue-of 187>)
   (:FORWARD-SLASH :LOWER :FORWARD-SLASH :LOWER :HYPHEN :BIO-ENTITY))
  "/hinge/his-tag/DAF" NIL)
 (((#<edge87 46 digit-sequence 47> #<edge88 46 number 47> #<edge89 48 COMMA 49>
    #<edge91 50 number 51> #<edge92 52 COMMA 53> #<edge5 174 but-rather 176>)
   (:FORWARD-SLASH :LOWER :FORWARD-SLASH :LOWER :HYPHEN :BIO-ENTITY))
  "/hinge/his-tag/DAF" NIL)
 (((#<edge333 173 efficiency 174> #<edge334 176 how 177> #<edge335 177 well-bio-process 178>
    #<edge337 177 well-adverbial 178> #<edge338 177 modifier 178> #<edge33 4 the 5>)
   (:FORWARD-SLASH :LOWER :FORWARD-SLASH :LOWER :HYPHEN :BIO-ENTITY))
  "/hinge/his-tag/DAF" NIL)
 (((#<edge328 169 bio-entity 170> #<edge330 170 that 171>) (:SINGLE-CAP :SINGLE-DIGIT)) "X5"
  REIFY-TWO-PART-LABEL)
 (((#<edge287 139 up-to 143> #<edge288 135 start 137> #<edge289 130 detect 132>
    #<edge291 124 of 128> #<edge292 123 downstream 128> #<edge21 376 wild-type 379>)
   (:FORWARD-SLASH :LOWER :FORWARD-SLASH :LOWER :HYPHEN :BIO-ENTITY))
  "/hinge/his-tag/DAF" NIL)
 (((#<edge44 13 of 14> #<edge46 14 the 15>) (:SINGLE-CAP :SINGLE-DIGIT)) "X5" REIFY-TWO-PART-LABEL)
 (((#<edge669 363 "that" 364> #<edge670 363 that 364> #<edge671 364 "there" 365>
    #<edge673 364 deictic-location 365> #<edge674 365 be 366> #<edge675 366 no 367>
    #<edge676 366 acknowledgement 367> #<edge677 367 require 368>)
   (:FORWARD-SLASH :LOWER :FORWARD-SLASH :LOWER :HYPHEN :LOWER :FORWARD-SLASH :PROTEIN))
  "/hinge/his-tag/DAF" NIL)
 (((:MIXED #<edge624 296 choice-endurant 298> #<edge626 299 bio-entity 304>)
   (:MIXED :HYPHEN :DIGITS))
  "pRRLsin-18" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge595 342 "the" 343> #<edge596 342 the 343> #<edge597 343 tethere 344>
    #<edge599 344 number 345> #<edge600 345 direction 346> #<edge601 345 amino-acid 346>
    #<edge602 346 fragment 347> #<edge603 347 "to" 348>)
   (:FORWARD-SLASH :LOWER :FORWARD-SLASH :LOWER :HYPHEN :LOWER :FORWARD-SLASH :PROTEIN))
  "/hinge/his-tag/DAF" NIL)
 (((#<edge512 259 parentheses 264> #<edge513 279 bio-entity 281> #<edge514 277 bio-entity 281>
    #<edge516 282 article-figure 284> #<edge517 274 such-as 281> #<edge518 273 parentheses 285>
    #<edge519 248 circumstance 250> #<edge520 247 circumstance 250>)
   (:FORWARD-SLASH :LOWER :FORWARD-SLASH :LOWER :HYPHEN :LOWER :FORWARD-SLASH :PROTEIN))
  "/hinge/his-tag/DAF" NIL)
 (((#<edge383 202 modifier 203> #<edge384 203 reinitiation 204> #<edge385 204 require 205>)
   (:LOWER :FORWARD-SLASH :PROTEIN))
  "tag/DAF" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge370 180 tethere 198> #<edge371 178 tethere 198> #<edge372 170 affect 172>)
   (:PROTEIN :FORWARD-SLASH :LOWER))
  "scFv/hinge" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:MIXED #<edge278 121 place 123> #<edge279 126 bio-entity 128> #<edge294 114 start 116>
    #<edge283 145 position 148> #<edge284 145 position 152>)
   (:MIXED :HYPHEN :FULL :UNIT-OF-MEASURE :HYPHEN :PROTEIN))
  "pLNCX-TCR-m-scFv" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge248 136 bio-entity 137> #<edge249 137 be 138>
    #<edge250 138 move-something-somewhere 139>)
   (:SINGLE-DIGIT :HYPHEN :PROTEIN))
  "8-bp" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge206 105 efficiency 106> #<edge207 107 figure 108> #<edge208 107 article-figure 108>)
   (:DIGITS :HYPHEN :PROTEIN))
  "12-bp" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge113 31 open-reading-frame 33> #<edge114 30 open-reading-frame 33>
    #<edge115 30 open-reading-frame 36>)
   (:DIGITS :HYPHEN :PROTEIN))
  "12-bp" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge78 34 digit-sequence 35> #<edge79 34 number 35> #<edge80 36 COMMA 37>)
   (:DIGITS :HYPHEN :PROTEIN))
  "123-bp" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge59 22 "the" 23> #<edge60 22 the 23> #<edge61 23 upstream-segment 24>)
   (:SINGLE-DIGIT :HYPHEN :PROTEIN))
  "8-bp" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge50 17 "of" 18> #<edge51 17 of 18> #<edge52 18 "the" 19>) (:DIGITS :HYPHEN :PROTEIN))
  "143-bp" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge38 9 have 10> #<edge39 10 suggest 11> #<edge41 11 the 12> #<edge42 12 importance 13>
    #<edge43 13 "of" 14> #<edge44 13 of 14> #<edge45 14 "the" 15>)
   (:LOWER :FORWARD-SLASH :LOWER :HYPHEN :LOWER :FORWARD-SLASH :PROTEIN))
  "hinge/his-tag/DAF" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge79 34 number 35> #<edge80 36 COMMA 37> #<edge81 38 digit-sequence 39>)
   (:LOWER :FORWARD-SLASH :SINGLE-CAP))
  "mg/L" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge57 21 "of" 22> :REGISTERED_SIGN) (:DIGITS :REGISTERED_SIGN)) "FIVE®"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge248 136 bio-entity 137> :MIXED #<edge249 137 be 138>
    #<edge250 138 move-something-somewhere 139>)
   (:DIGITS :MIXED :FORWARD-SLASH :PROTEIN))
  "69TiRev/Env" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge188 91 "the" 92> :CAPITALIZED #<edge189 91 the 92> #<edge190 92 distance 93>)
   (:DIGITS :CAPITALIZED :FORWARD-SLASH :PROTEIN))
  "69Tirev/env" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge73 30 the 31> #<edge74 31 downstream-segment 32> #<edge75 31 downstream 32>)
   (:SINGLE-CAP :FORWARD-SLASH :LOWER))
  "U/ml" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:FULL #<edge245 134 "the" 135>) (:FULL :DIGITS)) "RJ407" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge132 60 to 61> #<edge134 62 "a" 63>) (:SINGLE-CAP :SINGLE-DIGIT)) "R5"
  REIFY-TWO-PART-LABEL)
 (((#<edge124 13 of 25> #<edge126 3 on 9>) (:SINGLE-CAP :SINGLE-DIGIT)) "R5" REIFY-TWO-PART-LABEL)
 (((#<edge112 22 open-reading-frame 25> #<edge114 30 open-reading-frame 33>)
   (:SINGLE-CAP :SINGLE-DIGIT))
  "X4" REIFY-TWO-PART-LABEL)
 (((#<edge5 174 but-rather 176> #<edge109 19 bio-entity 21> #<edge111 23 open-reading-frame 25>)
   (:PROTEIN :HYPHEN :SINGLE-DIGIT))
  "NL4-3" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge104 4 bio-process 9> #<edge105 9 suggest 11> #<edge107 15 proximity 17>)
   (:PROTEIN :HYPHEN :SINGLE-DIGIT))
  "Bru-3" MAKE-HYPHENATED-STRUCTURE)
 (((:MIXED #<edge57 21 "of" 22>) (:MIXED :SINGLE-DIGIT)) "pMj4" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge81 38 digit-sequence 39> :HYPHEN #<edge53 18 the 19>) (:PROTEIN :HYPHEN :SINGLE-DIGIT))
  "pNL4-3" MAKE-HYPHENATED-STRUCTURE)
 (((:MIXED #<edge49 16 proximity 17>) (:MIXED :SINGLE-DIGIT)) "pAD8" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:MIXED #<edge46 14 the 15> #<edge1 118 protein 120>) (:MIXED :HYPHEN :PROTEIN)) "pBru-Yu2"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:MIXED #<edge42 12 importance 13> #<edge44 13 of 14>) (:MIXED :HYPHEN :SINGLE-DIGIT)) "pBru-3"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge138 65 "of" 66> #<edge139 65 of 66> #<edge140 66 "the" 67>) (:LOWER :HYPHEN :LOWER))
  "transiently-exposed" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge54 19 stop 20> #<edge56 20 bio-entity 21>) (:SINGLE-CAP :SINGLE-DIGIT)) "X5"
  REIFY-TWO-PART-LABEL)
 (((#<edge16 314 "wild-type" 317> #<edge17 314 wild-type 317> #<edge18 319 "even if" 321>)
   (:LOWER :HYPHEN :LOWER))
  "transiently-exposed" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge552 305 ones-number 306> #<edge553 305 number 306> #<edge554 306 locate 307>)
   (:LOWER :HYPHEN :LOWER))
  "transiently-exposed" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge351 191 "the" 192> #<edge352 191 the 192> #<edge353 192 bio-complex 193>)
   (:LOWER :HYPHEN :LOWER))
  "transiently-exposed" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge342 179 bio-complex 180> #<edge343 180 modal 181> #<edge344 181 be 182>)
   (:LOWER :HYPHEN :LOWER))
  "transiently-exposed" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge278 121 place 123> #<edge279 126 bio-entity 128> #<edge280 125 bio-entity 128>)
   (:LOWER :HYPHEN :LOWER))
  "transiently-exposed" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge119 17 of 21> #<edge120 14 proximity 21> #<edge121 15 close 16>) (:LOWER :HYPHEN :LOWER))
  "transiently-exposed" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge938 inactive, resource 938> #<edge940 inactive, resource 940>)
   (:SINGLE-CAP :SINGLE-DIGIT))
  "X5" REIFY-TWO-PART-LABEL)
 (((#<edge890 inactive, resource 890> #<edge891 inactive, resource 891>
    #<edge892 inactive, resource 892>)
   (:LOWER :HYPHEN :LOWER))
  "pre-fusion" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge864 inactive, resource 864> #<edge866 inactive, resource 866>)
   (:SINGLE-CAP :SINGLE-DIGIT))
  "X5" REIFY-TWO-PART-LABEL)
 (((#<edge834 inactive, resource 834> #<edge836 inactive, resource 836>)
   (:SINGLE-CAP :SINGLE-DIGIT))
  "X5" REIFY-TWO-PART-LABEL)
 (((#<edge805 inactive, resource 805> #<edge806 inactive, resource 806>
    #<edge807 inactive, resource 807>)
   (:LOWER :HYPHEN :LOWER))
  "raft-associated" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge758 418 modifier 419> #<edge759 419 factor 420> #<edge760 419 transcription-factor 420>)
   (:LOWER :HYPHEN :LOWER))
  "transiently-exposed" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge731 396 digit-sequence 397> #<edge733 397 direction 398>) (:SINGLE-CAP :SINGLE-DIGIT))
  "X5" REIFY-TWO-PART-LABEL)
 (((#<edge664 359 importantly 360> #<edge666 361 "we" 362>) (:SINGLE-CAP :SINGLE-DIGIT)) "X5"
  REIFY-TWO-PART-LABEL)
 (((#<edge653 319 terminate 325> #<edge655 309 select 318>) (:SINGLE-CAP :SINGLE-DIGIT)) "X5"
  REIFY-TWO-PART-LABEL)
 (((#<edge601 345 amino-acid 346> #<edge603 347 "to" 348>) (:SINGLE-CAP :SINGLE-DIGIT)) "X5"
  REIFY-TWO-PART-LABEL)
 (((#<edge550 304 and 305> #<edge552 305 ones-number 306> #<edge553 305 number 306>
    #<edge554 306 locate 307> #<edge556 307 downstream 308>)
   (:SINGLE-LOWER :DIGITS :FORWARD-SLASH :SINGLE-LOWER :DIGITS))
  "β20/β21" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge544 297 modifier 298> #<edge546 298 of 299>) (:SINGLE-LOWER :DIGITS)) "β19"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge497 280 bio-entity 281> #<edge499 282 figure 283>) (:SINGLE-CAP :SINGLE-DIGIT)) "X5"
  REIFY-TWO-PART-LABEL)
 (((#<edge454 238 modifier 240> #<edge456 233 modifier 240> #<edge457 204 require 207>
    #<edge458 246 under 247> #<edge460 247 the 248>)
   (:SINGLE-CAP :SINGLE-DIGIT :FORWARD-SLASH :SINGLE-CAP :SINGLE-DIGIT))
  "V1/V2" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge442 214 site 218> #<edge444 228 site 230> #<edge445 227 site 230>
    #<edge446 231 bio-use 233> #<edge448 236 bio-entity 238>)
   (:SINGLE-LOWER :DIGITS :FORWARD-SLASH :SINGLE-LOWER :DIGITS))
  "β20/β21" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge435 223 point-mutation 225> #<edge437 220 point-mutation 225>)
   (:SINGLE-CAP :SINGLE-DIGIT))
  "V3" REIFY-TWO-PART-LABEL)
 (((#<edge428 242 at 243> #<edge430 243 lower-adj 244>) (:SINGLE-LOWER :DIGITS)) "β19"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge415 232 bio-use 233> #<edge417 233 when 234> #<edge418 234 "the" 235>
    #<edge419 234 the 235> #<edge421 236 reinitiation 237>)
   (:SINGLE-LOWER :DIGITS :FORWARD-SLASH :SINGLE-LOWER :DIGITS))
  "β20/β21" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge411 228 reinitiation 229> #<edge413 230 modal 231>) (:SINGLE-LOWER :DIGITS)) "β19"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge29 2 study-data 3> #<edge394 211 near 212>) (:PROTEIN :LOWER)) "anti-parallel"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge387 205 an 206> #<edge389 207 "at" 208>) (:SINGLE-LOWER :DIGITS)) "β21"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge381 200 COMMA 201> #<edge383 202 modifier 203>) (:SINGLE-LOWER :DIGITS)) "β20"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge334 176 how 177> #<edge336 177 well-endurant 178>) (:SINGLE-LOWER :DIGITS)) "β21"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge330 170 that 171> #<edge332 172 reinitiation 173>) (:SINGLE-LOWER :DIGITS)) "β20"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge326 168 "per" 169> #<edge328 169 bio-entity 170>) (:SINGLE-LOWER :DIGITS)) "β19"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge308 155 that 156> #<edge310 156 pronoun/inanimate 157>) (:SINGLE-CAP :SINGLE-DIGIT)) "X5"
  REIFY-TWO-PART-LABEL)
 (((#<edge293 116 of 121> #<edge295 103 to 110> #<edge296 101 critical 103>
    #<edge297 100 critical 103>)
   (:SINGLE-CAP :SINGLE-DIGIT :HYPHEN :LOWER))
  "V3-containing" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge170 77 undergo 79> #<edge172 79 movement 82>) (:SINGLE-CAP :SINGLE-DIGIT)) "X5"
  REIFY-TWO-PART-LABEL)
 (((#<edge155 77 to 78> #<edge157 79 only 80>) (:SINGLE-CAP :SINGLE-DIGIT)) "X5"
  REIFY-TWO-PART-LABEL)
 (((#<edge98 41 square-brackets 44> #<edge100 49 square-brackets 52>) (:SINGLE-CAP :SINGLE-DIGIT))
  "X5" REIFY-TWO-PART-LABEL)
 (((#<edge369 180 tethere 183> #<edge370 180 tethere 198> #<edge371 178 tethere 198>)
   (:LOWER :HYPHEN :LOWER))
  "transiently-exposed" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge290 130 detect 133> #<edge292 123 downstream 128>) (:SINGLE-CAP :SINGLE-DIGIT)) "X5"
  REIFY-TWO-PART-LABEL)
 (((#<edge186 90 "that" 91> #<edge188 91 "the" 92>) (:SINGLE-CAP :SINGLE-DIGIT)) "X5"
  REIFY-TWO-PART-LABEL)
 (((#<edge498 281 COMMA 282> #<edge500 282 article-figure 283>) (:SINGLE-CAP :SINGLE-DIGIT)) "X5"
  REIFY-TWO-PART-LABEL)
 (((#<edge439 218 parentheses 226> #<edge441 205 bio-entity 207>) (:SINGLE-CAP :SINGLE-DIGIT)) "X5"
  REIFY-TWO-PART-LABEL)
 (((#<edge293 116 of 121> #<edge295 103 to 110>) (:SINGLE-CAP :SINGLE-DIGIT)) "X5"
  REIFY-TWO-PART-LABEL)
 (((#<edge199 99 bio-entity 100> #<edge201 101 comparative 102>) (:SINGLE-CAP :SINGLE-DIGIT)) "X5"
  REIFY-TWO-PART-LABEL)
 (((#<edge150 73 pronoun/inanimate 74> #<edge151 74 modal 75> #<edge152 75 be 76>)
   (:LOWER :HYPHEN :LOWER))
  "transiently-exposed" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge144 69 semicolon 70> #<edge146 70 that 71>) (:SINGLE-CAP :SINGLE-DIGIT)) "X5"
  REIFY-TWO-PART-LABEL)
 (((#<edge325 167 bio-entity 168> #<edge327 168 per 169>) (:SINGLE-CAP :SINGLE-DIGIT)) "X5"
  REIFY-TWO-PART-LABEL)
 (((#<edge272 95 lambda-expression 96> #<edge274 98 bio-entity 100>) (:SINGLE-CAP :SINGLE-DIGIT))
  "X5" REIFY-TWO-PART-LABEL)
 (((#<edge209 108 digit-sequence 109> #<edge210 108 number 109> #<edge211 110 and 111>)
   (:PROTEIN :HYPHEN :SINGLE-CAP))
  "VSV-G" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge205 104 reinitiation 105> #<edge207 107 figure 108>) (:SINGLE-CAP :SINGLE-DIGIT)) "X5"
  REIFY-TWO-PART-LABEL)
 (((#<edge199 99 bio-entity 100> #<edge201 101 comparative 102>) (:SINGLE-CAP :SINGLE-DIGIT)) "X5"
  REIFY-TWO-PART-LABEL)
 (((#<edge62 23 upstream 24> #<edge63 24 protein 25> #<edge64 24 open-reading-frame 25>)
   (:PROTEIN :HYPHEN :SINGLE-CAP))
  "VSV-G" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge58 21 of 22> #<edge60 22 the 23>) (:SINGLE-CAP :SINGLE-DIGIT)) "X5" REIFY-TWO-PART-LABEL)
 (((#<edge52 18 "the" 19> #<edge54 19 stop 20>) (:SINGLE-CAP :SINGLE-DIGIT)) "X5"
  REIFY-TWO-PART-LABEL)
 (((#<edge457 204 require 207> #<edge459 247 "the" 248>) (:SINGLE-CAP :SINGLE-DIGIT)) "X5"
  REIFY-TWO-PART-LABEL)
 (((#<edge370 180 tethere 198> #<edge372 170 affect 172>) (:SINGLE-CAP :SINGLE-DIGIT)) "X5"
  REIFY-TWO-PART-LABEL)
 (((#<edge269 106 parentheses 110> #<edge271 95 bio-complex 97>) (:SINGLE-CAP :SINGLE-DIGIT)) "X5"
  REIFY-TWO-PART-LABEL)
 (((#<edge138 65 "of" 66> #<edge140 66 "the" 67>) (:SINGLE-CAP :SINGLE-DIGIT)) "X5"
  REIFY-TWO-PART-LABEL)
 (((#<edge51 17 of 18> #<edge53 18 the 19>) (:SINGLE-CAP :SINGLE-DIGIT)) "X5" REIFY-TWO-PART-LABEL)
 (((#<edge520 247 circumstance 250> #<edge522 256 bio-entity 259>) (:SINGLE-CAP :SINGLE-DIGIT))
  "X5" REIFY-TWO-PART-LABEL)
 (((#<edge457 204 require 207> :MIXED) (:DIGITS :MIXED)) "69TiRevEnv" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge444 228 site 230> #<edge446 231 bio-use 233>) (:SINGLE-CAP :SINGLE-DIGIT)) "X5"
  REIFY-TWO-PART-LABEL)
 (((#<edge360 195 bio-entity 197> :MIXED) (:DIGITS :MIXED)) "69TiRevEnv"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge297 100 critical 103> :MIXED) (:DIGITS :MIXED)) "69TiRevEnv" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge284 145 position 152> #<edge286 144 of 152>) (:SINGLE-CAP :SINGLE-DIGIT)) "X5"
  REIFY-TWO-PART-LABEL)
 (((#<edge276 118 open-reading-frame 121> #<edge277 117 open-reading-frame 121>
    #<edge278 121 place 123>)
   (:CAPITALIZED :HYPHEN :LOWER))
  "Co-culturing" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge211 110 and 111> #<edge212 111 "that" 112> #<edge213 111 that 112>)
   (:PROTEIN :HYPHEN :LOWER))
  "Tet-off" PACKAGE-QUALIFYING-PAIR)
 (((#<edge187 90 that 91> #<edge188 91 "the" 92> #<edge189 91 the 92>) (:PROTEIN :HYPHEN :LOWER))
  "Tet-off" PACKAGE-QUALIFYING-PAIR)
 (((#<edge141 66 the 67> #<edge142 67 tethere 68> #<edge143 68 bio-complex 69>)
   (:PROTEIN :HYPHEN :LOWER))
  "Tet-off" PACKAGE-QUALIFYING-PAIR)
 (((:MIXED #<edge137 64 mobility 65>) (:MIXED :SINGLE-DIGIT)) "pLAI3" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge86 44 COMMA 45> :MIXED) (:DIGITS :MIXED)) "69TiRevEnv" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge71 29 of 30> #<edge73 30 the 31>) (:SINGLE-CAP :SINGLE-DIGIT)) "X5" REIFY-TWO-PART-LABEL)
 (((#<edge55 19 stop-endurant 20> #<edge57 21 "of" 22>) (:SINGLE-CAP :SINGLE-DIGIT)) "X5"
  REIFY-TWO-PART-LABEL)
 (((#<edge716 384 as 385> #<edge718 385 such 386>) (:SINGLE-CAP :SINGLE-DIGIT)) "X5"
  REIFY-TWO-PART-LABEL)
 (((#<edge666 361 "we" 362> #<edge667 361 pronoun/first/plural 362> #<edge669 363 "that" 364>)
   (:PROTEIN :HYPHEN :SINGLE-DIGIT))
  "Bru-3" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge656 298 of 304> #<edge658 294 give 298>) (:SINGLE-CAP :SINGLE-DIGIT)) "X5"
  REIFY-TWO-PART-LABEL)
 (((#<edge573 325 downstream 326> #<edge575 326 of 327>) (:SINGLE-CAP :SINGLE-DIGIT)) "X5"
  REIFY-TWO-PART-LABEL)
 (((#<edge515 276 bio-entity 281> #<edge517 274 such-as 281>) (:SINGLE-CAP :SINGLE-DIGIT)) "X5"
  REIFY-TWO-PART-LABEL)
 (((#<edge465 252 modal 253> #<edge466 253 bio-entity 254> #<edge468 254 at 255>)
   (:PROTEIN :HYPHEN :SINGLE-DIGIT))
  "Bru-3" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge432 243 lower-note 244> #<edge434 199 subordinate-conjunction 201>)
   (:SINGLE-CAP :SINGLE-DIGIT))
  "X5" REIFY-TWO-PART-LABEL)
 (((#<edge412 229 site 230> #<edge413 230 modal 231> #<edge415 232 bio-use 233>)
   (:PROTEIN :HYPHEN :SINGLE-DIGIT))
  "Bru-3" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge325 167 bio-entity 168> #<edge326 168 "per" 169> #<edge328 169 bio-entity 170>)
   (:PROTEIN :HYPHEN :SINGLE-DIGIT))
  "Bru-3" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge319 163 the 164> #<edge321 165 and 166>) (:SINGLE-CAP :SINGLE-DIGIT)) "X5"
  REIFY-TWO-PART-LABEL)
 (((#<edge269 106 parentheses 110> #<edge270 148 parentheses 152>
    #<edge272 95 lambda-expression 96>)
   (:PROTEIN :HYPHEN :SINGLE-DIGIT))
  "Bru-3" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge171 79 limit 81> #<edge173 82 following 84>) (:SINGLE-CAP :SINGLE-DIGIT)) "X5"
  REIFY-TWO-PART-LABEL)
 (((#<edge7 184 by-virtue-of 187> #<edge124 13 of 25>) (:PROTEIN :PLUS-SIGN)) "CD4+"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge93 54 digit-sequence 55> #<edge95 5 hyphenated-pair 8>) (:SINGLE-CAP :SINGLE-DIGIT)) "X5"
  REIFY-TWO-PART-LABEL)
 (((#<edge255 143 downstream-segment 144> #<edge257 144 "of" 145>) (:SINGLE-CAP :SINGLE-DIGIT))
  "X5" REIFY-TWO-PART-LABEL)
 (((#<edge247 135 start 136> #<edge249 137 be 138>) (:SINGLE-CAP :SINGLE-DIGIT)) "X5"
  REIFY-TWO-PART-LABEL)
 (((#<edge139 65 of 66> #<edge141 66 the 67>) (:SINGLE-CAP :SINGLE-DIGIT)) "X5"
  REIFY-TWO-PART-LABEL)
 (((#<edge122 14 proximity 25> #<edge124 13 of 25>) (:SINGLE-CAP :SINGLE-DIGIT)) "X5"
  REIFY-TWO-PART-LABEL)
 (((:FULL #<edge104 4 bio-process 9>) (:FULL :DIGITS)) "TCID50" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge92 52 COMMA 53> #<edge93 54 digit-sequence 55> #<edge94 54 number 55>)
   (:CAPITALIZED :HYPHEN :LOWER))
  "Pre-incubation" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge54 19 stop 20> #<edge55 19 stop-endurant 20> #<edge57 21 "of" 22>)
   (:PROTEIN :HYPHEN :SINGLE-DIGIT))
  "Bru-3" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge42 12 importance 13> #<edge43 13 "of" 14> #<edge44 13 of 14> #<edge45 14 "the" 15>
    #<edge46 14 the 15>)
   (:PROTEIN :HYPHEN :PROTEIN :HYPHEN :LOWER))
  "GPI-scFv-transduced" MAKE-HYPHENATED-TRIPLE)
 (((#<edge289 130 detect 132> #<edge290 130 detect 133> #<edge35 6 HYPHEN 7>)
   (:LOWER :HYPHEN :PROTEIN))
  "post-CD4" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge75 31 downstream 32> #<edge77 32 open-reading-frame 33>) (:SINGLE-CAP :SINGLE-DIGIT))
  "X5" REIFY-TWO-PART-LABEL)
 (((#<edge47 15 close-bio-process 16> #<edge49 16 proximity 17>) (:SINGLE-CAP :SINGLE-DIGIT)) "X5"
  REIFY-TWO-PART-LABEL)
 (((#<edge377 157 be 160> #<edge379 155 that 156>) (:SINGLE-CAP :SINGLE-DIGIT)) "X5"
  REIFY-TWO-PART-LABEL)
 (((:FULL #<edge327 168 per 169> :FULL) (:FULL :HYPHEN :FULL)) "JS-JCD"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge323 166 stop-endurant 167> #<edge325 167 bio-entity 168>) (:PROTEIN :SINGLE-DIGIT)) "AD8"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge320 164 start 165> #<edge321 165 and 166> #<edge23 393 due-to 395>)
   (:PROTEIN :HYPHEN :BIO-ENTITY))
  "Bru-Yu2" MAKE-HYPHENATED-PAIR)
 (((#<edge286 144 of 152> #<edge287 139 up-to 143> #<edge19 319 even-if 321>)
   (:PROTEIN :HYPHEN :BIO-ENTITY))
  "Bru-Yu2" MAKE-HYPHENATED-PAIR)
 (((#<edge128 57 this 58> #<edge129 58 be 59> #<edge130 59 believe 60>) (:LOWER :HYPHEN :LOWER))
  "mock-transduced" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge99 45 square-brackets 48> #<edge100 49 square-brackets 52>
    #<edge101 53 square-brackets 56> #<edge102 1 study-bio-method 3> #<edge103 5 bio-process 9>)
   (:PROTEIN :HYPHEN :PROTEIN :HYPHEN :LOWER))
  "GPI-scFv-transduced" MAKE-HYPHENATED-TRIPLE)
 (((#<edge884 inactive, resource 884> #<edge886 inactive, resource 886>)
   (:SINGLE-CAP :SINGLE-DIGIT))
  "X5" REIFY-TWO-PART-LABEL)
 (((:FULL #<edge687 373 location-of 374> #<edge688 374 "of" 375>) (:FULL :HYPHEN :FULL)) "JR-FL"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge580 331 figure 332> #<edge581 331 article-figure 332> #<edge582 332 digit-sequence 333>)
   (:LOWER :HYPHEN :LOWER))
  "mock-transduced" MAKE-HYPHENATED-STRUCTURE)
 (((:CAPITALIZED #<edge507 290 site 291>) (:CAPITALIZED :SINGLE-DIGIT)) "Mj4"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge483 266 at 267> #<edge485 267 a 268>) (:SINGLE-CAP :SINGLE-DIGIT)) "X5"
  REIFY-TWO-PART-LABEL)
 (((#<edge422 237 bio-entity 238> #<edge423 238 be 239> #<edge424 239 modifier 240>)
   (:LOWER :HYPHEN :LOWER))
  "mock-transduced" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge356 195 "the" 196> #<edge357 195 the 196> #<edge358 196 bio-entity 197>)
   (:LOWER :HYPHEN :LOWER))
  "mock-transduced" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge328 169 bio-entity 170> #<edge329 170 "that" 171> #<edge330 170 that 171>
    #<edge331 171 affect 172> #<edge332 172 reinitiation 173>)
   (:PROTEIN :HYPHEN :PROTEIN :HYPHEN :LOWER))
  "GPI-scFv-transduced" MAKE-HYPHENATED-TRIPLE)
 (((:FULL #<edge267 85 subordinate-conjunction 87>) (:FULL :SINGLE-DIGIT)) "CNE8"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:FULL #<edge261 147 position-bio-process 148>) (:FULL :DIGITS)) "CNE17"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:CAPITALIZED #<edge258 144 of 145>) (:CAPITALIZED :SINGLE-DIGIT)) "Mj4"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:FULL #<edge253 141 number 142>) (:FULL :DIGITS)) "CNE11" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:CAPITALIZED #<edge244 133 when 134>) (:CAPITALIZED :SINGLE-DIGIT)) "Yu2"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:MIXED #<edge231 124 of 125>) (:MIXED :SINGLE-DIGIT)) "HxBc2" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:CAPITALIZED #<edge169 74 be 76> #<edge171 79 limit 81>) (:CAPITALIZED :HYPHEN :SINGLE-DIGIT))
  "Glvr-1" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge95 5 hyphenated-pair 8> #<edge97 37 square-brackets 40> #<edge99 45 square-brackets 48>)
   (:DIGITS :SINGLE-CAP :SINGLE-DIGIT))
  "10A1" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge58 21 of 22> #<edge59 22 "the" 23> #<edge60 22 the 23>) (:LOWER :HYPHEN :LOWER))
  "mock-transduced" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge28 2 study-bio-method 3> #<edge29 2 study-data 3> #<edge30 3 "on" 4> #<edge31 3 on 4>
    #<edge32 4 "the" 5>)
   (:PROTEIN :HYPHEN :PROTEIN :HYPHEN :LOWER))
  "GPI-scFv-transduced" MAKE-HYPHENATED-TRIPLE)
 (((#<edge215 112 when 113> #<edge217 113 the 114>) (:SINGLE-CAP :SINGLE-DIGIT)) "X5"
  REIFY-TWO-PART-LABEL)
 (((#<edge141 66 the 67> #<edge142 67 tethere 68> #<edge143 68 bio-complex 69>)
   (:DIGITS :HYPHEN :LOWER))
  "555-conjugated" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge129 58 be 59> #<edge130 59 believe 60> #<edge131 60 "to" 61>) (:DIGITS :HYPHEN :LOWER))
  "488-conjugated" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge53 18 the 19> #<edge55 19 stop-endurant 20>) (:SINGLE-CAP :SINGLE-DIGIT)) "X5"
  REIFY-TWO-PART-LABEL)
 (((#<edge492 276 the 277> #<edge493 277 HYPHEN 278> #<edge494 278 digit-sequence 279>
    #<edge495 278 number 279> #<edge497 280 bio-entity 281> #<edge498 281 COMMA 282>
    #<edge499 282 figure 283>)
   (:PROTEIN :FORWARD-SLASH :LOWER :FORWARD-SLASH :LOWER :HYPHEN :LOWER))
  "scFv/hinge/his-tag" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge475 260 figure 261> #<edge476 260 article-figure 261> #<edge477 261 digit-sequence 262>
    #<edge478 261 number 262> #<edge480 264 COMMA 265> #<edge481 265 or 266>
    #<edge482 266 "at" 267> #<edge483 266 at 267> #<edge484 267 "a" 268>)
   (:PROTEIN :FORWARD-SLASH :LOWER :FORWARD-SLASH :LOWER :HYPHEN :LOWER :FORWARD-SLASH :PROTEIN))
  "scFv/hinge/his-tag/DAF" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge434 199 subordinate-conjunction 201> #<edge436 220 point-mutation 222>)
   (:SINGLE-CAP :SINGLE-DIGIT))
  "X5" REIFY-TWO-PART-LABEL)
 (((#<edge370 180 tethere 198> #<edge372 170 affect 172>) (:SINGLE-CAP :SINGLE-DIGIT)) "X5"
  REIFY-TWO-PART-LABEL)
 (((#<edge306 154 suggest 155> #<edge307 155 "that" 156> #<edge308 155 that 156>
    #<edge309 156 "it" 157> #<edge311 157 be 158> #<edge312 158 not 159> #<edge313 159 solely 160>
    #<edge314 160 "the" 161> #<edge315 160 the 161>)
   (:PROTEIN :FORWARD-SLASH :LOWER :FORWARD-SLASH :LOWER :HYPHEN :LOWER :FORWARD-SLASH :PROTEIN))
  "scFv/hinge/his-tag/DAF" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge291 124 of 128> #<edge292 123 downstream 128> #<edge293 116 of 121>
    #<edge294 114 start 116> #<edge295 103 to 110>)
   (:SINGLE-LOWER :HYPHEN :PROTEIN :HYPHEN :LOWER))
  "m-scFv-transduced" MAKE-HYPHENATED-TRIPLE)
 (((#<edge235 126 stop-endurant 127> #<edge236 127 bio-entity 128> #<edge237 128 COMMA 129>)
   (:SINGLE-LOWER :HYPHEN :PROTEIN))
  "m-scFv" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge208 107 article-figure 108> #<edge209 108 digit-sequence 109> #<edge210 108 number 109>
    #<edge211 110 and 111> #<edge213 111 that 112> #<edge214 112 when 113> #<edge215 112 when 113>
    #<edge216 113 "the" 114> :MIXED)
   (:PROTEIN :FORWARD-SLASH :LOWER :FORWARD-SLASH :LOWER :HYPHEN :LOWER :FORWARD-SLASH :MIXED))
  "scFv/hinge/his-tag/DAFs" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge140 66 "the" 67> #<edge141 66 the 67> #<edge142 67 tethere 68>)
   (:SINGLE-LOWER :HYPHEN :PROTEIN))
  "m-scFv" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge68 27 start 28> #<edge69 28 bio-entity 29> #<edge70 29 "of" 30> #<edge71 29 of 30>
    #<edge73 30 the 31> #<edge74 31 downstream-segment 32> #<edge75 31 downstream 32>
    #<edge76 32 protein 33> #<edge77 32 open-reading-frame 33> #<edge78 34 digit-sequence 35>
    #<edge79 34 number 35>)
   (:PROTEIN :FORWARD-SLASH :LOWER :FORWARD-SLASH :LOWER :HYPHEN :LOWER :FORWARD-SLASH :PROTEIN
    :HYPHEN :LOWER))
  "scFv/hinge/his-tag/DAF-transduced" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge44 13 of 14> #<edge45 14 "the" 15> #<edge46 14 the 15> #<edge47 15 close-bio-process 16>
    #<edge49 16 proximity 17> #<edge50 17 "of" 18> #<edge51 17 of 18> #<edge52 18 "the" 19>
    #<edge53 18 the 19>)
   (:PROTEIN :FORWARD-SLASH :LOWER :FORWARD-SLASH :LOWER :HYPHEN :LOWER :FORWARD-SLASH :PROTEIN))
  "scFvs/hinge/his-tag/DAF" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge1 118 protein 120> #<edge60 22 the 23> #<edge61 23 upstream-segment 24>
    #<edge62 23 upstream 24>)
   (:PROTEIN :LOWER :HYPHEN :LOWER))
  "anti-his-tag" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge32 4 "the" 5> #<edge33 4 the 5> #<edge34 5 terminate 6> #<edge35 6 HYPHEN 7>
    #<edge37 8 bio-process 9> #<edge38 9 have 10> #<edge39 10 suggest 11>)
   (:PROTEIN :FORWARD-SLASH :LOWER :FORWARD-SLASH :LOWER :HYPHEN :LOWER))
  "scFvs/hinge/his-tag" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge21 376 wild-type 379> #<edge22 393 "due to" 395> #<edge23 393 due-to 395>
    #<edge24 415 "eif3" 417> #<edge26 415 bio-complex 417> #<edge27 1 sequencer 2>
    #<edge28 2 study-bio-method 3> #<edge29 2 study-data 3> #<edge30 3 "on" 4>)
   (:PROTEIN :FORWARD-SLASH :LOWER :FORWARD-SLASH :LOWER :HYPHEN :LOWER :FORWARD-SLASH :PROTEIN))
  "scFvs/hinge/his-tag/DAF" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge144 69 semicolon 70> #<edge145 70 "that" 71> #<edge147 71 be 72> #<edge148 72 COMMA 73>
    #<edge149 73 "it" 74>)
   (:LOWER :FORWARD-SLASH :LOWER :HYPHEN :LOWER))
  "hinge/his-tag" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge142 67 tethere 68> #<edge143 68 bio-complex 69> #<edge17 314 wild-type 317>)
   (:PROTEIN :FORWARD-SLASH :BIO-ENTITY))
  "scFv/IgG3" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge133 61 reflect 62> #<edge134 62 "a" 63> #<edge136 63 restrict 64>
    #<edge137 64 mobility 65> #<edge138 65 "of" 66> #<edge139 65 of 66> #<edge140 66 "the" 67>)
   (:LOWER :FORWARD-SLASH :LOWER :HYPHEN :LOWER :FORWARD-SLASH :PROTEIN))
  "hinge/his-tag/DAF" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge131 60 "to" 61> #<edge132 60 to 61> #<edge15 300 wild-type 303>)
   (:PROTEIN :FORWARD-SLASH :BIO-ENTITY))
  "scFv/IgG3" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge55 19 stop-endurant 20> #<edge57 21 "of" 22>) (:SINGLE-CAP :SINGLE-DIGIT)) "X5"
  REIFY-TWO-PART-LABEL)
 (((#<edge724 389 downstream 390> #<edge725 390 bio-entity 391> #<edge726 391 be 392>)
   (:LOWER :HYPHEN :LOWER))
  "transiently-exposed" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge632 323 terminate 325> #<edge634 327 window 330>) (:SINGLE-CAP :SINGLE-DIGIT)) "X5"
  REIFY-TWO-PART-LABEL)
 (((#<edge538 294 if 295> #<edge540 295 give 296>) (:SINGLE-CAP :SINGLE-DIGIT)) "X5"
  REIFY-TWO-PART-LABEL)
 (((#<edge484 267 "a" 268> #<edge485 267 a 268>) (:DIGITS :SINGLE-LOWER)) "48d"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge479 262 amino-acid 263> #<edge481 265 or 266>) (:SINGLE-CAP :SINGLE-DIGIT)) "X5"
  REIFY-TWO-PART-LABEL)
 (((#<edge297 100 critical 103> #<edge299 93 between 97>) (:SINGLE-CAP :SINGLE-DIGIT)) "X5"
  REIFY-TWO-PART-LABEL)
 (((#<edge294 114 start 116> #<edge295 103 to 110>) (:DIGITS :SINGLE-LOWER)) "48d"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge175 73 ability 77> #<edge177 65 of 69>) (:PROTEIN :DIGITS)) "AB32"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge171 79 limit 81> #<edge173 82 following 84>) (:PROTEIN :DIGITS)) "AB31"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge136 63 restrict 64> #<edge138 65 "of" 66>) (:PROTEIN :DIGITS)) "AB65"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge110 18 bio-entity 21> #<edge112 22 open-reading-frame 25>) (:SINGLE-CAP :SINGLE-DIGIT))
  "X5" REIFY-TWO-PART-LABEL)
 (((#<edge107 15 proximity 17> #<edge108 14 proximity 17>) (:DIGITS :SINGLE-LOWER)) "48d"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge104 4 bio-process 9> #<edge3 139 up-to 141>) (:SINGLE-DIGIT :CELL-LINE)) "4E10"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge140 66 "the" 67> #<edge141 66 the 67> #<edge142 67 tethere 68>) (:LOWER :HYPHEN :LOWER))
  "transiently-exposed" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge33 4 the 5> #<edge34 5 terminate 6> #<edge35 6 HYPHEN 7>) (:LOWER :HYPHEN :LOWER))
  "transiently-exposed" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge99 45 square-brackets 48> #<edge100 49 square-brackets 52>
    #<edge101 53 square-brackets 56>)
   (:LOWER :HYPHEN :LOWER))
  "micro-domains" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge460 247 the 248> #<edge461 248 sequencer 249> #<edge462 249 circumstance 250>)
   (:LOWER :HYPHEN :LOWER))
  "transiently-exposed" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge416 233 when 234> #<edge417 233 when 234> #<edge418 234 "the" 235>)
   (:LOWER :HYPHEN :LOWER))
  "transiently-exposed" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge245 134 "the" 135> #<edge246 134 the 135> #<edge247 135 start 136>)
   (:DIGITS :HYPHEN :LOWER))
  "three-hairpin" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge44 13 of 14> #<edge454 238 modifier 240> #<edge46 14 the 15> #<edge455 234 modifier 240>
    #<edge48 15 close 16>)
   (:PROTEIN :HYPHEN :PROTEIN :HYPHEN :PROTEIN))
  "gp120-CD4-CCR5" MAKE-HYPHENATED-TRIPLE)
 (((#<edge436 220 point-mutation 222> #<edge438 219 figure 225>) (:SINGLE-CAP :SINGLE-DIGIT)) "X5"
  REIFY-TWO-PART-LABEL)
 (((#<edge371 178 tethere 198> #<edge372 170 affect 172> #<edge373 169 bio-entity 172>)
   (:LOWER :HYPHEN :LOWER))
  "transiently-exposed" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge299 93 between 97> #<edge300 88 show 90> #<edge301 87 show 90>) (:LOWER :HYPHEN :LOWER))
  "transiently-exposed" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge33 4 the 5> #<edge284 145 position 152> #<edge35 6 HYPHEN 7>
    #<edge285 104 efficiency 110> #<edge37 8 bio-process 9>)
   (:PROTEIN :HYPHEN :PROTEIN :HYPHEN :PROTEIN))
  "gp120-CD4-CCR5" MAKE-HYPHENATED-TRIPLE)
 (((#<edge221 116 of 117> #<edge222 117 "the" 118> #<edge223 117 the 118>) (:LOWER :HYPHEN :LOWER))
  "transiently-exposed" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge195 96 bio-complex 97> #<edge15 300 wild-type 303> #<edge196 97 and 98>
    #<edge219 115 bio-entity 116>)
   (:SINGLE-DIGIT :CELL-LINE :FORWARD-SLASH :RESIDUE-ON-PROTEIN))
  "4E10/Z13" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge192 94 "the" 95> #<edge13 285 close-to 287>) (:SINGLE-DIGIT :PROTEIN)) "2F5"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:FULL #<edge181 86 COMMA 87>) (:FULL :DIGITS)) "VRC003" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:FULL #<edge178 62 mobility 69>) (:FULL :DIGITS)) "VRC002" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:FULL #<edge175 73 ability 77>) (:FULL :DIGITS)) "VRC001" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge171 79 limit 81> #<edge9 214 wild-type 217>) (:SINGLE-DIGIT :PROTEIN)) "2G12"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge25 415 protein 417> :MULTIPLICATION-SIGN #<edge27 1 sequencer 2>)
   (:HYPHENATED-NUMBER :MULTIPLICATION-SIGN :DIGITS))
  "2–3×106" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge21 376 wild-type 379> #<edge310 156 pronoun/inanimate 157> #<edge312 158 not 159>)
   (:PROTEIN :HYPHEN :SINGLE-CAP))
  "l protein-A" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge19 319 even-if 321> #<edge296 101 critical 103> #<edge297 100 critical 103>)
   (:PROTEIN :HYPHEN :SINGLE-CAP))
  "l protein-G" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge241 132 even 133> :MULTIPLICATION-SIGN #<edge242 132 even 133>)
   (:DIGITS :MULTIPLICATION-SIGN :SINGLE-LOWER))
  "10,000×g" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge127 57 "this" 58> #<edge128 57 this 58> #<edge129 58 be 59>)
   (:CAPITALIZED :HYPHEN :LOWER))
  "Na-deoxycholate" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge106 11 importance 13> #<edge107 15 proximity 17> #<edge108 14 proximity 17>)
   (:PROTEIN :HYPHEN :MIXED))
  "Tris-HCl" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge5 174 but-rather 176> #<edge73 30 the 31>) (:BIO-ENTITY :LOWER)) "T-REx™-293cells"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge43 13 "of" 14> #<edge45 14 "the" 15> #<edge46 14 the 15> #<edge48 15 close 16>)
   (:PROTEIN :SINGLE-DIGIT :FORWARD-SLASH :FULL))
  "pcDNA4/TO" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge19 319 even-if 321> #<edge20 376 "wild-type" 379> #<edge22 393 "due to" 395>)
   (:PROTEIN :HYPHEN :SINGLE-CAP))
  "prM-E" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge216 113 "the" 114> #<edge217 113 the 114> #<edge219 115 bio-entity 116>)
   (:PROTEIN :HYPHEN :SINGLE-CAP))
  "prM-E" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge7 184 by-virtue-of 187> #<edge195 96 bio-complex 97> #<edge197 98 "the" 99>)
   (:BIO-ENTITY :HYPHEN :SINGLE-CAP))
  "DENV1-E" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge5 174 but-rather 176> #<edge187 90 that 91> #<edge188 91 "the" 92>)
   (:BIO-ENTITY :HYPHEN :FULL))
  "DENV1-WP" MAKE-HYPHENATED-STRUCTURE)
 (((:MIXED #<edge106 11 importance 13>) (:MIXED :SINGLE-DIGIT)) "pGDENV1"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:MIXED #<edge76 32 protein 33>) (:MIXED :SINGLE-DIGIT)) "pGDENV1" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge1 118 protein 120> #<edge12 285 "close to" 287> #<edge13 285 close-to 287>)
   (:BIO-ENTITY :HYPHEN :FULL))
  "DENV1-WP" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge10 274 "such as" 276> #<edge11 274 such-as 276> #<edge12 285 "close to" 287>)
   (:LOWER :HYPHEN :LOWER))
  "fusion-infection" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge5 174 but-rather 176> #<edge443 213 site 218> #<edge444 228 site 230>)
   (:PROTEIN :HYPHEN :LOWER))
  "3H-cholesterol" PACKAGE-QUALIFYING-PAIR)
 (((#<edge394 211 near 212> #<edge396 213 "the" 214>) (:PROTEIN :DIGITS)) "TLS55"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge311 157 be 158> #<edge312 158 not 159> #<edge313 159 solely 160>)
   (:WILD-TYPE :FORWARD-SLASH :WILD-TYPE))
  "wt/wt" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge90 50 digit-sequence 51> #<edge91 50 number 51> #<edge92 52 COMMA 53>)
   (:LOWER :FORWARD-SLASH :LOWER))
  "peptide/ml" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge12 285 "close to" 287> #<edge13 285 close-to 287> #<edge14 300 "wild-type" 303>)
   (:PROTEIN :HYPHEN :LOWER))
  "Protein-membrane" PACKAGE-QUALIFYING-PAIR)
 (((#<edge3 139 up-to 141> #<edge165 62 mobility 65> #<edge166 67 bio-complex 69>)
   (:PROTEIN :HYPHEN :LOWER))
  "3H-cholesterol" PACKAGE-QUALIFYING-PAIR)
 (((#<edge120 14 proximity 21> #<edge121 15 close 16> #<edge123 15 close 16> #<edge124 13 of 25>
    #<edge126 3 on 9> #<edge127 57 "this" 58> #<edge128 57 this 58> #<edge129 58 be 59> :LOWER
    #<edge130 59 believe 60> :LOWER #<edge131 60 "to" 61> #<edge133 61 reflect 62>
    #<edge134 62 "a" 63> :LOWER)
   (:SINGLE-DIGIT :HYPHEN :PROTEIN :HYPHEN :SINGLE-DIGIT :HYPHEN :LOWER :HYPHEN :LOWER :HYPHEN
    :LOWER :HYPHEN :SINGLE-DIGIT :HYPHEN :LOWER))
  "1-palmitoyl-2-oleoyl-sn-glycero-3-phosphoethanolamine" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge101 53 square-brackets 56> #<edge102 1 study-bio-method 3> #<edge104 4 bio-process 9>
    #<edge105 9 suggest 11> #<edge107 15 proximity 17> #<edge108 14 proximity 17>
    #<edge109 19 bio-entity 21> #<edge110 18 bio-entity 21> :LOWER
    #<edge111 23 open-reading-frame 25> :LOWER #<edge112 22 open-reading-frame 25>
    #<edge114 30 open-reading-frame 33> #<edge115 30 open-reading-frame 36> #<edge116 29 of 36>)
   (:SINGLE-DIGIT :HYPHEN :PROTEIN :HYPHEN :SINGLE-DIGIT :HYPHEN :LOWER :HYPHEN :LOWER :HYPHEN
    :LOWER :HYPHEN :SINGLE-DIGIT :HYPHEN :LOWER))
  "1-palmitoyl-2-oleoyl-sn-glycero-3-phosphocholine" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge86 44 COMMA 45> #<edge87 46 digit-sequence 47> #<edge89 48 COMMA 49>
    #<edge90 50 digit-sequence 51> #<edge92 52 COMMA 53> #<edge93 54 digit-sequence 55>
    #<edge95 5 hyphenated-pair 8>)
   (:SINGLE-DIGIT :COLON :SINGLE-DIGIT :COLON :SINGLE-DIGIT :COLON :SINGLE-DIGIT))
  "1∶1∶1∶3" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge43 13 "of" 14> #<edge45 14 "the" 15>) (:SINGLE-CAP :SINGLE-DIGIT)) "N2"
  REIFY-TWO-PART-LABEL)
 (((#<edge11 274 such-as 276> #<edge12 285 "close to" 287> #<edge14 300 "wild-type" 303>)
   (:LOWER :HYPHEN :LOWER))
  "freeze-thaw" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge328 169 bio-entity 170> #<edge329 170 "that" 171> #<edge330 170 that 171>)
   (:SINGLE-LOWER :FORWARD-SLASH :LOWER))
  "l/min" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge274 98 bio-entity 100> #<edge275 104 efficiency 106>
    #<edge276 118 open-reading-frame 121>)
   (:FULL :FORWARD-SLASH :PROTEIN))
  "MES/TEA" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge237 128 COMMA 129> #<edge238 129 reinitiation 130> #<edge239 130 be 131>)
   (:LOWER :HYPHEN :LOWER))
  "mock-coupled" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge150 73 pronoun/inanimate 74> #<edge151 74 modal 75> :LOWER)
   (:SINGLE-DIGIT :HYPHEN :LOWER))
  "3-dimethylaminopropyl" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge142 67 tethere 68> #<edge143 68 bio-complex 69> #<edge144 69 semicolon 70>
    #<edge145 70 "that" 71> #<edge147 71 be 72> #<edge148 72 COMMA 73>)
   (:SINGLE-DIGIT :HYPHEN :LOWER :HYPHEN :SINGLE-DIGIT :HYPHEN))
  "1-ethyl-3-" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge276 118 open-reading-frame 121> #<edge277 117 open-reading-frame 121>
    #<edge278 121 place 123>)
   (:PROTEIN :HYPHEN :LOWER))
  "BSA-sepharose" PACKAGE-QUALIFYING-PAIR)
 (((#<edge229 123 downstream 124> #<edge230 124 "of" 125> #<edge232 125 "the" 126>)
   (:SINGLE-DIGIT :COLON :SINGLE-DIGIT))
  "1∶2" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge205 104 reinitiation 105> #<edge206 105 efficiency 106>
    #<edge208 107 article-figure 108>)
   (:LOWER :HYPHEN :LOWER))
  "pull-down" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge139 65 of 66> #<edge140 66 "the" 67> #<edge141 66 the 67>) (:PROTEIN :HYPHEN :MIXED))
  "Tris-HCl" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge76 32 protein 33> #<edge77 32 open-reading-frame 33> #<edge78 34 digit-sequence 35>)
   (:PROTEIN :FORWARD-SLASH :LOWER))
  "BSA/ml" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge65 25 and 26> #<edge66 26 "the" 27> #<edge67 26 the 27>) (:FULL :HYPHEN :PROTEIN))
  "LI-COR" MAKE-HYPHENATED-PAIR)
 (((#<edge43 13 "of" 14> #<edge44 13 of 14> #<edge45 14 "the" 15>) (:DIGITS :HYPHEN :LOWER))
  "688-conjugated" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge231 124 of 125> #<edge233 125 the 126>) (:SINGLE-CAP :SINGLE-DIGIT)) "E1"
  REIFY-TWO-PART-LABEL)
 (((#<edge164 60 reflect 62> #<edge166 67 bio-complex 69>) (:SINGLE-CAP :SINGLE-DIGIT)) "H1"
  REIFY-TWO-PART-LABEL)
 (((:FULL #<edge137 64 mobility 65> #<edge138 65 "of" 66>) (:FULL :SINGLE-DIGIT :PROTEIN))
  "LDIIIH1CS" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge403 221 amino-acid 222> #<edge404 221 a 222> #<edge406 223 digit-sequence 224>)
   (:PROTEIN :FORWARD-SLASH :SINGLE-DIGIT))
  "protein/1" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:TILDA #<edge400 219 article-figure 220>) (:TILDA :SINGLE-DIGIT)) "∼2"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge353 192 bio-complex 193> #<edge354 193 terminate 194> :CAPITALIZED)
   (:CAPITALIZED :HYPHEN :CAPITALIZED))
  "Strep-Tactin" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge176 70 be 72> :MULTIPLICATION-SIGN #<edge178 62 mobility 69>)
   (:DIGITS :MULTIPLICATION-SIGN :DIGITS))
  "3.5×106" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge142 67 tethere 68> #<edge143 68 bio-complex 69> #<edge144 69 semicolon 70>
    #<edge145 70 "that" 71> #<edge146 70 that 71> #<edge147 71 be 72> :FULL)
   (:PROTEIN :HYPHEN :FULL :HYPHEN :LOWER :HYPHEN :FULL))
  "pPUR-TPA-pr-STST" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge80 36 COMMA 37> #<edge81 38 digit-sequence 39> #<edge82 38 number 39>)
   (:DIGITS :HYPHEN :LOWER))
  "21-residue" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge39 10 suggest 11> #<edge40 11 "the" 12> #<edge42 12 importance 13>)
   (:PROTEIN :HYPHEN :SINGLE-CAP))
  "prM-E" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge19 319 even-if 321> #<edge305 153 this 154>) (:BIO-ENTITY :SINGLE-DIGIT)) "anti-DENV2"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge9 214 wild-type 217> #<edge191 93 between 94>) (:PROTEIN :FULL)) "anti-DIII"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:CAPITALIZED #<edge177 65 of 69> :CAPITALIZED) (:CAPITALIZED :HYPHEN :CAPITALIZED))
  "Arenzana-Seisdedos" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge65 25 and 26> #<edge66 26 "the" 27> #<edge69 28 bio-entity 29>)
   (:PROTEIN :HYPHEN :DIGITS))
  "prM-6.1" MAKE-HYPHENATED-PAIR)
 (((#<edge43 13 "of" 14> #<edge44 13 of 14> #<edge46 14 the 15> :TRADE_MARK_SIGN
    #<edge47 15 close-bio-process 16> #<edge49 16 proximity 17>)
   (:SINGLE-CAP :HYPHEN :PROTEIN :TRADE_MARK_SIGN :HYPHEN :DIGITS))
  "T-REx™-293" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge72 30 "the" 31> #<edge73 30 the 31> #<edge74 31 downstream-segment 32>)
   (:LOWER :HYPHEN :LOWER))
  "post-fusion" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge27 1 sequencer 2> #<edge28 2 study-bio-method 3> #<edge29 2 study-data 3>)
   (:LOWER :HYPHEN :LOWER))
  "post-fusion" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge22 393 "due to" 395> #<edge23 393 due-to 395> #<edge24 415 "eif3" 417>)
   (:LOWER :HYPHEN :LOWER))
  "pre-fusion" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge267 85 subordinate-conjunction 87> #<edge268 141 bio-entity 143>
    #<edge270 148 parentheses 152>)
   (:LOWER :HYPHEN :SINGLE-CAP))
  "pr-E" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge238 129 reinitiation 130> #<edge239 130 be 131> #<edge241 132 even 133>)
   (:LOWER :HYPHEN :SINGLE-CAP))
  "pr-E" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge17 314 wild-type 317> #<edge18 319 "even if" 321> #<edge20 376 "wild-type" 379>)
   (:LOWER :HYPHEN :SINGLE-CAP))
  "pr-E" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge110 18 bio-entity 21> #<edge111 23 open-reading-frame 25>
    #<edge112 22 open-reading-frame 25>)
   (:LOWER :HYPHEN :LOWER))
  "stem-derived" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge227 122 place 123> #<edge228 123 downstream-segment 124> #<edge230 124 "of" 125>)
   (:LOWER :HYPHEN :SINGLE-CAP))
  "pr-E" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge211 110 and 111> #<edge212 111 "that" 112> #<edge213 111 that 112>)
   (:LOWER :FORWARD-SLASH :PROTEIN))
  "virus/VLP" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge200 100 be 101> #<edge201 101 comparative 102> #<edge202 102 critical 103>)
   (:MIXED :HYPHEN :LOWER))
  "pH-protection" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge559 309 the 310> #<edge560 310 bio-complex 311> #<edge562 312 select 313>)
   (:LOWER :HYPHEN :SINGLE-CAP))
  "pr-E" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge271 95 bio-complex 97> #<edge268 141 bio-entity 143> #<edge270 148 parentheses 152>)
   (:POINT-MUTATION :HYPHEN :SINGLE-CAP))
  "3D–E" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge193 94 the 95> #<edge194 95 terminate 96> #<edge196 97 and 98>)
   (:LOWER :HYPHEN :SINGLE-CAP))
  "pr-E" MAKE-HYPHENATED-STRUCTURE)
 (((:TILDA #<edge90 50 digit-sequence 51>) (:TILDA :DIGITS)) "∼6.2" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:TILDA #<edge74 31 downstream-segment 32>) (:TILDA :SINGLE-DIGIT)) "∼6"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:TILDA #<edge39 10 suggest 11>) (:TILDA :DIGITS)) "∼6.25" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge393 210 very 211> #<edge15 300 wild-type 303>) (:PLUS-SIGN :MOLECULE)) "+NH4Cl"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge354 193 terminate 194> #<edge355 194 and 195> #<edge357 195 the 196>)
   (:PROTEIN :HYPHEN :SINGLE-CAP))
  "prM-E" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge270 148 parentheses 152> #<edge243 133 when 134>) (:POINT-MUTATION :DIGITS)) "4E11"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge55 19 stop-endurant 20> #<edge56 20 bio-entity 21> #<edge58 21 of 22>)
   (:PROTEIN :HYPHEN :SINGLE-CAP))
  "prM-E" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge264 149 article-figure 150> #<edge14 300 "wild-type" 303>)
   (:RESIDUE-ON-PROTEIN :INITIAL))
  "H244A." REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge144 69 semicolon 70> #<edge9 214 wild-type 217>) (:LOWER :-LIKE)) "virus-like"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge278 121 place 123> #<edge279 126 bio-entity 128> #<edge280 125 bio-entity 128>)
   (:PROTEIN :FORWARD-SLASH :LOWER))
  "IC/ml" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:TILDA #<edge275 104 efficiency 106> :MULTIPLICATION-SIGN
    #<edge277 117 open-reading-frame 121>)
   (:TILDA :DIGITS :MULTIPLICATION-SIGN :DIGITS))
  "∼1.5×105" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge259 145 pronoun/inanimate 146> #<edge260 146 modifier 147>
    #<edge261 147 position-bio-process 148>)
   (:WILD-TYPE :HYPHEN :LOWER))
  "WT-infected" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge431 243 lower 244> #<edge432 243 lower-note 244>
    #<edge434 199 subordinate-conjunction 201>)
   (:LOWER :HYPHEN :SINGLE-CAP))
  "pr-E" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge249 137 be 138> #<edge250 138 move-something-somewhere 139>
    #<edge252 141 digit-sequence 142>)
   (:SINGLE-DIGIT :COLON :SINGLE-DIGIT))
  "1∶1" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge179 57 believe 60> #<edge180 85 however 86> #<edge181 86 COMMA 87>)
   (:LOWER :HYPHEN :LOWER))
  "pr-sepharose" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge173 82 following 84> #<edge174 74 ability 77> #<edge176 70 be 72>)
   (:LOWER :HYPHEN :LOWER))
  "pulled-down" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge118 21 of 25> #<edge119 17 of 21> #<edge121 15 close 16>) (:CAPITALIZED :HYPHEN :LOWER))
  "Pull-down" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge97 37 square-brackets 40> #<edge98 41 square-brackets 44>
    #<edge99 45 square-brackets 48>)
   (:LOWER :HYPHEN :LOWER))
  "pr-sepharose" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge91 50 number 51> #<edge92 52 COMMA 53> #<edge94 54 number 55>) (:LOWER :HYPHEN :LOWER))
  "pulled-down" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge56 20 bio-entity 21> #<edge57 21 "of" 22> #<edge59 22 "the" 23>)
   (:LOWER :HYPHEN :SINGLE-CAP))
  "pr-E" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge277 117 open-reading-frame 121> #<edge278 121 place 123> #<edge279 126 bio-entity 128>)
   (:MIXED :HYPHEN :LOWER))
  "pH-dependence" MAKE-HYPHENATED-STRUCTURE)
 (((:TILDA #<edge253 141 number 142>) (:TILDA :MIXED)) "∼pH" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge244 133 when 134> #<edge245 134 "the" 135> #<edge247 135 start 136>)
   (:LOWER :HYPHEN :SINGLE-CAP))
  "pr-E" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge118 21 of 25> #<edge120 14 proximity 21>) (:SINGLE-CAP :SINGLE-DIGIT)) "S1"
  REIFY-TWO-PART-LABEL)
 (((#<edge475 260 figure 261> #<edge477 261 digit-sequence 262>) (:FULL :SINGLE-DIGIT)) "DENV1"
  #:PSR-250802)
 (((#<edge234 126 stop 127> #<edge236 127 bio-entity 128>) (:FULL :SINGLE-DIGIT)) "DENV1"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge123 15 close 16> #<edge124 13 of 25> #<edge125 9 suggest 13>) (:LOWER :HYPHEN :LOWER))
  "fusion-infection" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge97 37 square-brackets 40> #<edge93 54 digit-sequence 55> #<edge95 5 hyphenated-pair 8>)
   (:POINT-MUTATION :HYPHEN :SINGLE-CAP))
  "3D–E" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge37 8 bio-process 9> #<edge34 5 terminate 6> #<edge36 7 reinitiation 8>)
   (:POINT-MUTATION :HYPHEN :SINGLE-CAP))
  "3D–E" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge103 5 bio-process 9> #<edge104 4 bio-process 9> #<edge106 11 importance 13>)
   (:LOWER :HYPHEN :FULL))
  "pr-SFV" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge22 393 "due to" 395> #<edge24 415 "eif3" 417>) (:SINGLE-CAP :SINGLE-DIGIT)) "E1"
  REIFY-TWO-PART-LABEL)
 (((#<edge635 338 bio-entity 340> #<edge636 340 cause 342> #<edge638 343 fragment 347>)
   (:DIGITS :COLON :SINGLE-DIGIT))
  "24∶1" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge622 331 figure 334> #<edge623 330 parentheses 335> #<edge625 300 bio-entity 304>)
   (:SINGLE-DIGIT :COLON :SINGLE-DIGIT))
  "6∶1" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge611 352 to 353> #<edge612 353 "the" 354> #<edge614 354 modifier 355>)
   (:SINGLE-DIGIT :COLON :SINGLE-DIGIT))
  "3∶1" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge602 346 fragment 347> #<edge603 347 "to" 348> #<edge605 348 SINGLE-QUOTE 349>)
   (:LOWER :COLON :SINGLE-CAP))
  "pr∶E" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:TILDA #<edge467 254 "at" 255>) (:TILDA :PERCENT)) "∼2%" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge437 220 point-mutation 225> #<edge438 219 figure 225> #<edge440 202 reinitiation 204>)
   (:DIGITS :COLON :SINGLE-DIGIT))
  "12∶1" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge430 243 lower-adj 244> #<edge431 243 lower 244> #<edge433 244 efficiency 245>)
   (:LOWER :COLON :SINGLE-CAP))
  "pr∶E" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge605 348 SINGLE-QUOTE 349> #<edge606 349 snap 350> #<edge608 350 direction 351>)
   (:SINGLE-DIGIT :COLON :SINGLE-DIGIT))
  "1∶1" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge576 327 "the" 328> #<edge577 327 the 328> #<edge579 329 window 330>)
   (:LOWER :HYPHEN :SINGLE-CAP))
  "pr-E" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge536 292 however 293> #<edge537 293 COMMA 294> #<edge539 295 modifier 296>)
   (:SINGLE-DIGIT :COLON :SINGLE-DIGIT))
  "1∶1" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge473 257 bio-entity 258> #<edge475 260 figure 261>) (:SINGLE-CAP :SINGLE-DIGIT)) "E1"
  REIFY-TWO-PART-LABEL)
 (((#<edge436 220 point-mutation 222> #<edge437 220 point-mutation 225> #<edge438 219 figure 225>)
   (:MIXED :HYPHEN :LOWER))
  "pH-dependence" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge326 168 "per" 169> #<edge327 168 per 169> #<edge329 170 "that" 171>)
   (:LOWER :HYPHEN :SINGLE-CAP))
  "pr-E" MAKE-HYPHENATED-STRUCTURE)
 (((:TILDA #<edge256 143 downstream 144>) (:TILDA :MIXED)) "∼pH" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge92 52 COMMA 53> #<edge93 54 digit-sequence 55> #<edge95 5 hyphenated-pair 8>)
   (:LOWER :HYPHEN :LOWER))
  "pull-down" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge37 8 bio-process 9> #<edge38 9 have 10> #<edge40 11 "the" 12>)
   (:LOWER :HYPHEN :SINGLE-CAP))
  "pr-E" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge295 103 to 110> #<edge296 101 critical 103> #<edge297 100 critical 103>)
   (:PROTEIN :HYPHEN :LOWER))
  "BSA-sepharose" PACKAGE-QUALIFYING-PAIR)
 (((#<edge274 98 bio-entity 100> #<edge19 319 even-if 321>) (:SINGLE-DIGIT :PROTEIN)) "4G2"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge246 134 the 135> #<edge247 135 start 136> #<edge249 137 be 138>) (:LOWER :HYPHEN :LOWER))
  "pull-down" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge210 108 number 109> #<edge211 110 and 111> #<edge213 111 that 112>)
   (:LOWER :HYPHEN :LOWER))
  "pull-down" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge183 87 pronoun/first/plural 88> #<edge184 88 show 89> #<edge185 89 deictic-location 90>)
   (:LOWER :HYPHEN :LOWER))
  "pr-sepharose" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge174 74 ability 77> #<edge175 73 ability 77> #<edge177 65 of 69>) (:LOWER :HYPHEN :LOWER))
  "pull-down" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge52 18 "the" 19> #<edge53 18 the 19> #<edge55 19 stop-endurant 20>)
   (:LOWER :HYPHEN :LOWER))
  "pull-down" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge31 3 on 4> #<edge32 4 "the" 5> #<edge34 5 terminate 6>) (:LOWER :HYPHEN :SINGLE-CAP))
  "pr-E" MAKE-HYPHENATED-STRUCTURE)
 (((:TILDA #<edge385 204 require 205>) (:TILDA :DIGITS)) "∼17" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge333 173 efficiency 174> #<edge334 176 how 177> #<edge337 177 well-adverbial 178>)
   (:PROTEIN :HYPHEN :DIGITS))
  "prM-6.1" MAKE-HYPHENATED-PAIR)
 (((#<edge51 17 of 18> #<edge52 18 "the" 19> #<edge54 19 stop 20>) (:LOWER :HYPHEN :SINGLE-CAP))
  "pr-E" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge113 31 open-reading-frame 33> #<edge114 30 open-reading-frame 33> #<edge116 29 of 36>)
   (:LOWER :HYPHEN :SINGLE-CAP))
  "pr-E" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge21 376 wild-type 379> #<edge22 393 "due to" 395> #<edge24 415 "eif3" 417>)
   (:LOWER :HYPHEN :SINGLE-CAP))
  "pr-E" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge238 129 reinitiation 130> #<edge239 130 be 131> #<edge241 132 even 133>)
   (:LOWER :HYPHEN :SINGLE-CAP))
  "pr-E" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge227 122 place 123> #<edge228 123 downstream-segment 124> #<edge229 123 downstream 124>)
   (:MIXED :HYPHEN :LOWER))
  "pH-protection" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge216 113 "the" 114> #<edge217 113 the 114> #<edge218 114 start 115>)
   (:PROTEIN :FORWARD-SLASH :LOWER))
  "prM/pr" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge5 174 but-rather 176> #<edge6 184 "by virtue of" 187> #<edge7 184 by-virtue-of 187>)
   (:PROTEIN :FORWARD-SLASH :LOWER))
  "prM/pr" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge311 157 be 158> #<edge312 158 not 159> #<edge313 159 solely 160>)
   (:PROTEIN :FORWARD-SLASH :FULL))
  "DI/II" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge203 103 "to" 104> #<edge205 104 reinitiation 105>) (:SINGLE-CAP :SINGLE-DIGIT)) "E1"
  REIFY-TWO-PART-LABEL)
 (((#<edge26 415 bio-complex 417> #<edge5 174 but-rather 176>) (:LOWER :-LIKE)) "hairpin-like"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge379 155 that 156> #<edge381 200 COMMA 201>) (:SINGLE-CAP :SINGLE-DIGIT)) "S1"
  REIFY-TWO-PART-LABEL)
 (((#<edge301 87 show 90> #<edge18 319 "even if" 321>) (:PROTEIN :-LIKE)) "immunoglobulin-like"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge242 132 even 133> #<edge243 133 when 134> #<edge244 133 when 134>
    #<edge245 134 "the" 135>)
   (:SINGLE-LOWER :HYPHEN :LOWER :COLON))
  "β-sheets:" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge215 112 when 113> #<edge216 113 "the" 114> #<edge217 113 the 114>)
   (:LOWER :HYPHEN :LOWER))
  "pre-fusion" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge62 23 upstream 24> #<edge63 24 protein 25> #<edge65 25 and 26>) (:LOWER :HYPHEN :LOWER))
  "positive-sense" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge14 300 "wild-type" 303> #<edge15 300 wild-type 303> #<edge16 314 "wild-type" 317>)
   (:LOWER :HYPHEN :LOWER))
  "culture-based" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge134 62 "a" 63> #<edge135 62 a 63> #<edge137 64 mobility 65>)
   (:LOWER :FORWARD-SLASH :LOWER))
  "cost/benefit" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge83 40 COMMA 41> #<edge84 42 digit-sequence 43> #<edge85 42 number 43>)
   (:LOWER :HYPHEN :LOWER))
  "laboratory-developed" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge15 300 wild-type 303> #<edge16 314 "wild-type" 317> #<edge17 314 wild-type 317>)
   (:LOWER :HYPHEN :LOWER))
  "turn-around" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge159 81 movement 82> #<edge160 82 following-adj 83> #<edge161 82 following 83>)
   (:LOWER :HYPHEN :LOWER))
  "turn-around" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge70 29 "of" 30> #<edge71 29 of 30> #<edge72 30 "the" 31>) (:LOWER :HYPHEN :LOWER))
  "molecular-based" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge5 174 but-rather 176> #<edge127 57 "this" 58>) (:SUPERLATIVE :TIME)) "Most real-time"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge206 105 efficiency 106> #<edge207 107 figure 108> #<edge209 108 digit-sequence 109>)
   (:LOWER :HYPHEN :SINGLE-LOWER))
  "viruses—a" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge139 65 of 66> #<edge140 66 "the" 67> #<edge141 66 the 67>) (:LOWER :HYPHEN :LOWER))
  "turn-around" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge24 415 "eif3" 417> #<edge25 415 protein 417> #<edge26 415 bio-complex 417>)
   (:LOWER :HYPHEN :LOWER))
  "turn-around" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge76 32 protein 33> #<edge77 32 open-reading-frame 33> #<edge78 34 digit-sequence 35>)
   (:LOWER :HYPHEN :LOWER))
  "membrane-based" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge162 83 terminate 84> #<edge163 58 believe 60> #<edge164 60 reflect 62>)
   (:LOWER :HYPHEN :LOWER))
  "sequence-based" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge250 138 move-something-somewhere 139> #<edge251 138 move-to 139>
    #<edge252 141 digit-sequence 142>)
   (:LOWER :HYPHEN :LOWER))
  "nose-throat" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge6 184 "by virtue of" 187> #<edge7 184 by-virtue-of 187> #<edge9 214 wild-type 217>
    #<edge10 274 "such as" 276> #<edge11 274 such-as 276>)
   (:LOWER :HYPHEN :LOWER :HYPHEN :LOWER))
  "up-to-date" MAKE-HYPHENATED-TRIPLE)
 (((#<edge307 155 "that" 156> #<edge280 125 bio-entity 128> #<edge308 155 that 156>)
   (:PERCENT :HYPHEN :PERCENT))
  "5%–10%" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge45 14 "the" 15> #<edge46 14 the 15> #<edge48 15 close 16>) (:PROTEIN :HYPHEN :LOWER))
  "OCT-pool" PACKAGE-QUALIFYING-PAIR)
 (((#<edge71 29 of 30> #<edge72 30 "the" 31> #<edge74 31 downstream-segment 32>)
   (:PROTEIN :HYPHEN :LOWER))
  "OCT-pool" PACKAGE-QUALIFYING-PAIR)
 (((#<edge47 15 close-bio-process 16> #<edge48 15 close 16> #<edge49 16 proximity 17>)
   (:SINGLE-DIGIT :HYPHEN :LOWER))
  "4-base" MAKE-HYPHENATED-STRUCTURE)
 (((:LOWER #<edge40 11 "the" 12> #<edge41 11 the 12> #<edge42 12 importance 13>
    #<edge43 13 "of" 14>)
   (:LOWER :HYPHEN :LOWER :HYPHEN :LOWER))
  "roche-applied-science" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge15 300 wild-type 303> #<edge16 314 "wild-type" 317> #<edge17 314 wild-type 317>)
   (:DIGITS :HYPHEN :CAPITALIZED))
  "454-Amplicon" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge0 118 "BM2" 120> #<edge1 118 protein 120> #<edge2 139 "up to" 141>)
   (:CAPITALIZED :HYPHEN :LOWER))
  "Fusion-primers" MAKE-HYPHENATED-STRUCTURE)
 (((:LOWER #<edge258 144 of 145> #<edge259 145 pronoun/inanimate 146> #<edge260 146 modifier 147>
    :LOWER #<edge261 147 position-bio-process 148>)
   (:LOWER :FORWARD-SLASH :LOWER :FORWARD-SLASH :LOWER :FORWARD-SLASH))
  "uk/software/figtree/" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge7 184 by-virtue-of 187> #<edge255 143 downstream-segment 144>) (:|HTTP://| :LOWER))
  "http://tree" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge40 11 "the" 12> #<edge41 11 the 12> :LOWER) (:SINGLE-DIGIT :HYPHEN :LOWER))
  "3-hydroxymyristoyl" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge5 174 but-rather 176> #<edge35 6 HYPHEN 7> #<edge36 7 reinitiation 8>
    #<edge37 8 bio-process 9> #<edge38 9 have 10>)
   (:PROTEIN :SINGLE-DIGIT :HYPHEN :SINGLE-CAP :HYPHEN))
  "UDP-3-O-" MAKE-HYPHENATED-TRIPLE)
 (((#<edge30 3 "on" 4> #<edge31 3 on 4> #<edge3 139 up-to 141>) (:NUCLEOTIDE :HYPHEN :MOLECULE))
  "GDP-D-mannose" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge94 54 number 55> :ASTERISK #<edge95 5 hyphenated-pair 8>)
   (:DIGITS :ASTERISK :SINGLE-CAP))
  "56°C" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge49 16 proximity 17> #<edge50 17 "of" 18> :FULL) (:SINGLE-DIGIT :HYPHEN :FULL))
  "5-CTGCGCCTGAGTGGTCTACATA" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge43 13 "of" 14> #<edge44 13 of 14> :FULL) (:SINGLE-DIGIT :HYPHEN :FULL))
  "5-ATGTGGGGGAGTTGATTCTTTTTA" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge180 85 however 86> #<edge181 86 COMMA 87> #<edge183 87 pronoun/first/plural 88>)
   (:PROTEIN :HYPHEN :LOWER))
  "OCT-pool" PACKAGE-QUALIFYING-PAIR)
 (((#<edge51 17 of 18> #<edge52 18 "the" 19> #<edge53 18 the 19> #<edge55 19 stop-endurant 20>)
   (:SINGLE-DIGIT :SINGLE-LOWER :HYPHEN :SINGLE-DIGIT))
  "1e-4" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge45 14 "the" 15> #<edge46 14 the 15> #<edge47 15 close-bio-process 16>)
   (:SINGLE-LOWER :HYPHEN :LOWER))
  "e-value" MAKE-HYPHENATED-STRUCTURE)
 (((:FULL #<edge40 11 "the" 12> #<edge41 11 the 12>) (:FULL :HYPHEN :PROTEIN)) "BLASTX-nr"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge23 393 due-to 395> #<edge24 415 "eif3" 417> #<edge26 415 bio-complex 417>)
   (:PROTEIN :HYPHEN :LOWER))
  "OCT-pool" PACKAGE-QUALIFYING-PAIR)
 (((#<edge232 125 "the" 126> #<edge233 125 the 126> #<edge234 126 stop 127>)
   (:LOWER :HYPHEN :LOWER))
  "transcript-tags" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge202 102 critical 103> #<edge203 103 "to" 104> #<edge205 104 reinitiation 105>)
   (:PROTEIN :HYPHEN :LOWER))
  "OCT-pool" PACKAGE-QUALIFYING-PAIR)
 (((#<edge83 40 COMMA 41> #<edge84 42 digit-sequence 43> #<edge86 44 COMMA 45>)
   (:CAPITALIZED :FORWARD-SLASH :DIGITS))
  "Sciences/454" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge76 32 protein 33> #<edge78 34 digit-sequence 35>) (:PROTEIN :DIGITS)) "GS20"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge24 415 "eif3" 417> #<edge25 415 protein 417> #<edge26 415 bio-complex 417>)
   (:DIGITS :HYPHEN :FULL))
  "454-DNA" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge496 279 bio-entity 280> #<edge497 280 bio-entity 281> #<edge499 282 figure 283>)
   (:PROTEIN :HYPHEN :LOWER))
  "OCT-pool" PACKAGE-QUALIFYING-PAIR)
 (((#<edge410 227 modifier 228> #<edge411 228 reinitiation 229> #<edge413 230 modal 231>)
   (:PROTEIN :HYPHEN :LOWER))
  "OCT-pool" PACKAGE-QUALIFYING-PAIR)
 (((#<edge244 133 when 134> #<edge245 134 "the" 135>) (:PLUS-SIGN :FULL)) "+RNA"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge190 92 distance 93> #<edge191 93 between 94> #<edge193 94 the 95>)
   (:PROTEIN :HYPHEN :LOWER))
  "OCT-pools" PACKAGE-QUALIFYING-PAIR)
 (((#<edge161 82 following 83> #<edge162 83 terminate 84> :CAPITALIZED)
   (:MIXED :HYPHEN :CAPITALIZED))
  "RNAqueous-Midi" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge112 22 open-reading-frame 25> #<edge113 31 open-reading-frame 33>
    #<edge114 30 open-reading-frame 33>)
   (:FULL :FORWARD-SLASH :FULL))
  "DNA/RNA" MAKE-HYPHENATED-PAIR)
 (((#<edge101 53 square-brackets 56> #<edge102 1 study-bio-method 3> #<edge104 4 bio-process 9>)
   (:CAPITALIZED :HYPHEN :LOWER))
  "Genomic-tips" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge98 41 square-brackets 44> #<edge99 45 square-brackets 48>
    #<edge100 49 square-brackets 52>)
   (:DIGITS :FORWARD-SLASH :SINGLE-CAP))
  "20/G" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge220 116 "of" 117> #<edge222 117 "the" 118>) (:SINGLE-CAP :SINGLE-DIGIT)) "S3"
  REIFY-TWO-PART-LABEL)
 (((#<edge102 1 study-bio-method 3> #<edge103 5 bio-process 9> #<edge105 9 suggest 11>)
   (:PROTEIN :HYPHEN :LOWER))
  "OCT-pool" PACKAGE-QUALIFYING-PAIR)
 (((:LOWER #<edge81 38 digit-sequence 39> #<edge82 38 number 39>)
   (:LOWER :FORWARD-SLASH :CAPITALIZED))
  "acinonychis/Helicobacter" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge3 139 up-to 141> #<edge79 34 number 35> #<edge80 36 COMMA 37>)
   (:BACTERIUM :FORWARD-SLASH :CAPITALIZED))
  "Helicobacter pylori/Helicobacter" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge385 204 require 205> #<edge386 205 "an" 206> #<edge387 205 an 206>)
   (:LOWER :HYPHEN :LOWER))
  "transcript-tags" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge358 196 bio-entity 197> #<edge359 191 bio-complex 193> #<edge361 191 bio-complex 197>)
   (:LOWER :HYPHEN :LOWER))
  "no-hits" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge298 98 critical 103> #<edge299 93 between 97> #<edge301 87 show 90>)
   (:PROTEIN :HYPHEN :LOWER))
  "OCT-pool" PACKAGE-QUALIFYING-PAIR)
 (((#<edge150 73 pronoun/inanimate 74> #<edge151 74 modal 75> #<edge152 75 be 76>)
   (:MIXED :HYPHEN :LOWER))
  "rRNA-tags" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge758 418 modifier 419> #<edge759 419 factor 420> #<edge761 421 "by" 422>)
   (:CAPITALIZED :HYPHEN :DIGITS))
  "Roche-454" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge548 299 a 300> #<edge549 303 bio-entity 304> #<edge550 304 and 305>)
   (:MIXED :HYPHEN :LOWER))
  "cDNA-based" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge344 181 be 182> #<edge345 182 tethere 183> #<edge346 187 "the" 188>)
   (:LOWER :HYPHEN :LOWER))
  "transcript-tags" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge62 23 upstream 24> #<edge63 24 protein 25> #<edge64 24 open-reading-frame 25>)
   (:LOWER :HYPHEN :LOWER))
  "transcript-based" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge187 90 that 91> #<edge189 91 the 92>) (:SINGLE-CAP :SINGLE-DIGIT)) "S5"
  REIFY-TWO-PART-LABEL)
 (((#<edge182 87 "we" 88> #<edge184 88 show 89>) (:SINGLE-CAP :SINGLE-DIGIT)) "S3"
  REIFY-TWO-PART-LABEL)
 (((#<edge176 70 be 72> #<edge177 65 of 69> #<edge179 57 believe 60>) (:PROTEIN :HYPHEN :LOWER))
  "OCT-pool" PACKAGE-QUALIFYING-PAIR)
 (((#<edge102 1 study-bio-method 3> #<edge104 4 bio-process 9>) (:SINGLE-CAP :SINGLE-DIGIT)) "S1"
  REIFY-TWO-PART-LABEL)
 (((#<edge93 54 digit-sequence 55> #<edge94 54 number 55> #<edge96 33 square-brackets 36>)
   (:PROTEIN :HYPHEN :LOWER))
  "OCT-pool" PACKAGE-QUALIFYING-PAIR)
 (((#<edge18 319 "even if" 321> #<edge19 319 even-if 321> #<edge20 376 "wild-type" 379>)
   (:CAPITALIZED :HYPHEN :LOWER))
  "Beta-proteobacteria" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge209 108 digit-sequence 109> #<edge211 110 and 111>) (:SINGLE-CAP :SINGLE-DIGIT)) "S5"
  REIFY-TWO-PART-LABEL)
 (((#<edge158 80 limit 81> #<edge160 82 following-adj 83>) (:SINGLE-CAP :SINGLE-DIGIT)) "S1"
  REIFY-TWO-PART-LABEL)
 (((#<edge127 57 "this" 58> #<edge128 57 this 58> #<edge130 59 believe 60>)
   (:PROTEIN :HYPHEN :LOWER))
  "OCT-pool" PACKAGE-QUALIFYING-PAIR)
 (((#<edge448 236 bio-entity 238> #<edge449 235 bio-entity 238> #<edge450 234 bio-entity 238>)
   (:LOWER :HYPHEN :LOWER))
  "transcript-derived" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge284 145 position 152> #<edge285 104 efficiency 110> #<edge286 144 of 152>)
   (:LOWER :HYPHEN :LOWER))
  "well-described" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge140 66 "the" 67> #<edge141 66 the 67> #<edge142 67 tethere 68>) (:LOWER :HYPHEN :LOWER))
  "transcript-tag" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge111 23 open-reading-frame 25> #<edge112 22 open-reading-frame 25>
    #<edge113 31 open-reading-frame 33>)
   (:LOWER :HYPHEN :LOWER))
  "transcript-tags" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge92 52 COMMA 53> #<edge93 54 digit-sequence 55> #<edge94 54 number 55>)
   (:LOWER :HYPHEN :LOWER))
  "transcript-tag" MAKE-HYPHENATED-STRUCTURE)
 (((:LOWER #<edge57 21 "of" 22> #<edge58 21 of 22>) (:LOWER :HYPHEN :SINGLE-LOWER)) "rpo-β"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:LOWER #<edge32 4 "the" 5> #<edge33 4 the 5>) (:LOWER :HYPHEN :SINGLE-LOWER)) "rpo-β"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge55 19 stop-endurant 20> #<edge56 20 bio-entity 21> #<edge57 21 "of" 22>)
   (:MIXED :HYPHEN :LOWER))
  "rRNA-tag" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge48 15 close 16> #<edge49 16 proximity 17> #<edge50 17 "of" 18>) (:LOWER :HYPHEN :LOWER))
  "transcript-tags" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge503 287 "the" 288> #<edge505 288 native 289>) (:SINGLE-CAP :SINGLE-DIGIT)) "S4"
  REIFY-TWO-PART-LABEL)
 (((#<edge498 281 COMMA 282> #<edge500 282 article-figure 283>) (:SINGLE-CAP :SINGLE-DIGIT)) "S3"
  REIFY-TWO-PART-LABEL)
 (((#<edge492 276 the 277> #<edge494 278 digit-sequence 279>) (:SINGLE-CAP :SINGLE-DIGIT)) "S1"
  REIFY-TWO-PART-LABEL)
 (((#<edge430 243 lower-adj 244> #<edge431 243 lower 244> #<edge432 243 lower-note 244>)
   (:MIXED :HYPHEN :LOWER))
  "rRNA-tags" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge263 149 figure 150> #<edge265 150 digit-sequence 151>) (:SINGLE-CAP :SINGLE-DIGIT)) "S4"
  REIFY-TWO-PART-LABEL)
 (((#<edge255 143 downstream-segment 144> #<edge256 143 downstream 144> #<edge258 144 of 145>)
   (:PROTEIN :HYPHEN :LOWER))
  "OCT-pool" PACKAGE-QUALIFYING-PAIR)
 (((#<edge243 133 when 134> #<edge245 134 "the" 135>) (:SINGLE-CAP :SINGLE-DIGIT)) "S1"
  REIFY-TWO-PART-LABEL)
 (((#<edge218 114 start 115> #<edge219 115 bio-entity 116>) (:LOWER :FORWARD-SLASH)) "edu/"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge5 174 but-rather 176> #<edge216 113 "the" 114>) (:|HTTP://| :PROTEIN)) "http://rdp"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge196 97 and 98> #<edge197 98 "the" 99> #<edge198 98 the 99>) (:MIXED :HYPHEN :LOWER))
  "rRNA-tags" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge24 415 "eif3" 417> #<edge25 415 protein 417> #<edge26 415 bio-complex 417>)
   (:LOWER :HYPHEN :LOWER))
  "transcript-tags" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge435 223 point-mutation 225> #<edge436 220 point-mutation 222> #<edge438 219 figure 225>)
   (:PROTEIN :HYPHEN :LOWER))
  "OCT-pool" PACKAGE-QUALIFYING-PAIR)
 (((:CAPITALIZED #<edge407 223 number 224> #<edge409 226 COMMA 227>) (:CAPITALIZED :HYPHEN :LOWER))
  "Bonner-pool" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge303 90 that 91> #<edge304 153 "this" 154> #<edge306 154 suggest 155>)
   (:PROTEIN :HYPHEN :LOWER))
  "OCT-pool" PACKAGE-QUALIFYING-PAIR)
 (((#<edge123 15 close 16> #<edge124 13 of 25> #<edge125 9 suggest 13>) (:LOWER :HYPHEN :LOWER))
  "transcript-tags" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge71 29 of 30> #<edge72 30 "the" 31> #<edge73 30 the 31>) (:LOWER :HYPHEN :LOWER))
  "transcript-tags" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge81 38 digit-sequence 39> #<edge83 40 COMMA 41>) (:SINGLE-CAP :SINGLE-DIGIT)) "S3"
  REIFY-TWO-PART-LABEL)
 (((#<edge358 196 bio-entity 197> #<edge359 191 bio-complex 193> #<edge360 195 bio-entity 197>)
   (:PROTEIN :HYPHEN :LOWER))
  "meta-transcriptomics" PACKAGE-QUALIFYING-PAIR)
 (((#<edge15 300 wild-type 303> #<edge16 314 "wild-type" 317> #<edge17 314 wild-type 317>)
   (:PROTEIN :HYPHEN :LOWER))
  "Meta-genomics" PACKAGE-QUALIFYING-PAIR)
 (((#<edge297 100 critical 103> #<edge298 98 critical 103> #<edge300 88 show 90>)
   (:CAPITALIZED :HYPHEN :DIGITS))
  "Twenty-nine" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge220 116 "of" 117> #<edge222 117 "the" 118>) (:SINGLE-CAP :SINGLE-DIGIT)) "S3"
  REIFY-TWO-PART-LABEL)
 (((#<edge18 319 "even if" 321> #<edge19 319 even-if 321> #<edge20 376 "wild-type" 379>)
   (:LOWER :HYPHEN :LOWER))
  "transcript-tags" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge127 57 "this" 58> #<edge129 58 be 59>) (:SINGLE-CAP :SINGLE-DIGIT)) "S1"
  REIFY-TWO-PART-LABEL)
 (((#<edge81 38 digit-sequence 39> #<edge82 38 number 39> #<edge84 42 digit-sequence 43>)
   (:CAPITALIZED :HYPHEN :DIGITS))
  "Roche-454" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge11 274 such-as 276> #<edge12 285 "close to" 287> #<edge13 285 close-to 287>)
   (:PROTEIN :HYPHEN :LOWER))
  "meta-genomics" PACKAGE-QUALIFYING-PAIR)
 (((#<edge324 167 bio-entity 168> #<edge325 167 bio-entity 168> #<edge326 168 "per" 169>)
   (:LOWER :HYPHEN :LOWER))
  "low-complexity" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge262 147 position 148> #<edge264 149 article-figure 150> #<edge265 150 digit-sequence 151>
    #<edge269 106 parentheses 110>)
   (:PROTEIN :DIGITS :HYPHEN :PROTEIN))
  "FJ971074-FJ971075" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge258 144 of 145> #<edge260 146 modifier 147>) (:PROTEIN :DIGITS)) "FJ966965"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge254 142 bio-entity 143> #<edge256 143 downstream 144>) (:PROTEIN :DIGITS)) "FJ966960"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge243 133 when 134> #<edge244 133 when 134> #<edge245 134 "the" 135> #<edge246 134 the 135>
    #<edge248 136 bio-entity 137> #<edge249 137 be 138>
    #<edge250 138 move-something-somewhere 139>)
   (:SINGLE-CAP :FORWARD-SLASH :CAPITALIZED :FORWARD-SLASH :DIGITS :FORWARD-SLASH :DIGITS))
  "A/California/06/2009" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge236 127 bio-entity 128> #<edge237 128 COMMA 129> #<edge238 129 reinitiation 130>)
   (:LOWER :HYPHEN :LOWER))
  "full-genome" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge195 96 bio-complex 97> #<edge196 97 and 98> #<edge197 98 "the" 99>)
   (:SINGLE-DIGIT :HYPHEN :LOWER))
  "3-nt" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge70 29 "of" 30> #<edge71 29 of 30> #<edge73 30 the 31>) (:LOWER :HYPHEN :LOWER))
  "paired-end" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge59 22 "the" 23> #<edge60 22 the 23> #<edge62 23 upstream 24>) (:LOWER :HYPHEN :LOWER))
  "paired-end" MAKE-HYPHENATED-STRUCTURE)
 (((:LOWER #<edge54 19 stop 20> #<edge55 19 stop-endurant 20>) (:LOWER :FORWARD-SLASH :LOWER))
  "mismatch/gap" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge17 314 wild-type 317> #<edge18 319 "even if" 321> #<edge20 376 "wild-type" 379>)
   (:CAPITALIZED :HYPHEN :LOWER))
  "Paired-end" MAKE-HYPHENATED-STRUCTURE)
 (((:GREATER-THAN_OR_EQUAL_TO #<edge246 134 the 135>) (:GREATER-THAN_OR_EQUAL_TO :PERCENT)) "≥25%"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:OPEN-ANGLE-BRACKET #<edge178 62 mobility 69>) (:OPEN-ANGLE-BRACKET :PERCENT)) "<1%"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:FULL #<edge45 14 "the" 15> #<edge46 14 the 15>) (:FULL :HYPHEN :LOWER)) "FASTQ-formatted"
  :NO-EDGE)
 (((#<edge37 8 bio-process 9> #<edge38 9 have 10> #<edge40 11 "the" 12>) (:LOWER :HYPHEN :LOWER))
  "paired-end" MAKE-HYPHENATED-STRUCTURE)
 (((:FULL #<edge20 376 "wild-type" 379>) (:FULL :SINGLE-DIGIT)) "SSAHA2"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:CAPITALIZED #<edge187 90 that 91> #<edge188 91 "the" 92>) (:CAPITALIZED :HYPHEN :LOWER))
  "Bonferroni-corrected" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge6 184 "by virtue of" 187> #<edge122 14 proximity 25>) (:|HTTP://| :LOWER))
  "http://panther" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:CAPITALIZED #<edge66 26 "the" 27> #<edge67 26 the 27>) (:CAPITALIZED :HYPHEN :LOWER))
  "Bonferroni-corrected" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge615 355 site 356> #<edge616 356 "of" 357> #<edge617 356 of 357>) (:LOWER :HYPHEN :LOWER))
  "high-quality" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge451 243 efficiency 245> #<edge452 213 site 226> #<edge453 242 at 245>)
   (:LOWER :FORWARD-SLASH :LOWER))
  "plasmids/artificial" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge7 184 by-virtue-of 187> #<edge274 98 bio-entity 100>) (:BIO-ENTITY :DIGITS)) "1×1010"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge168 66 bio-complex 69> #<edge169 74 be 76> #<edge171 79 limit 81>)
   (:PROTEIN :HYPHEN :LOWER))
  "CPU-instance" PACKAGE-QUALIFYING-PAIR)
 (((#<edge81 38 digit-sequence 39> #<edge82 38 number 39> #<edge83 40 COMMA 41>)
   (:LOWER :HYPHEN :LOWER))
  "low-complexity" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge64 24 open-reading-frame 25> #<edge65 25 and 26> #<edge67 26 the 27>)
   (:CAPITALIZED :HYPHEN :LOWER))
  "Paired-end" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge48 15 close 16> #<edge49 16 proximity 17> #<edge51 17 of 18>) (:LOWER :HYPHEN :LOWER))
  "paired-end" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge217 113 the 114> #<edge218 114 start 115> #<edge220 116 "of" 117>)
   (:CAPITALIZED :HYPHEN :LOWER))
  "Paired-end" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge173 82 following 84> #<edge174 74 ability 77> #<edge175 73 ability 77>)
   (:LOWER :HYPHEN :LOWER))
  "second-generation" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge124 13 of 25> #<edge125 9 suggest 13> #<edge126 3 on 9>) (:LOWER :HYPHEN :LOWER))
  "size-selected" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge173 82 following 84> #<edge174 74 ability 77> #<edge175 73 ability 77>)
   (:PROTEIN :FORWARD-SLASH :CAPITALIZED))
  "RT/Taq" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge151 74 modal 75> #<edge152 75 be 76>) (:SINGLE-DIGIT :SINGLE-CAP)) "5X"
  REIFY-TWO-PART-LABEL)
 (((#<edge141 66 the 67> #<edge143 68 bio-complex 69> #<edge144 69 semicolon 70>)
   (:SINGLE-CAP :SINGLE-DIGIT :SINGLE-CAP))
  "H2O" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge116 29 of 36> #<edge117 27 start 29> #<edge118 21 of 25>)
   (:CAPITALIZED :HYPHEN :CAPITALIZED))
  "One-Step" MAKE-HYPHENATED-STRUCTURE)
 (((:FULL #<edge78 34 digit-sequence 35>) (:FULL :POINT-MUTATION)) "MX3005P"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:FULL #<edge64 24 open-reading-frame 25> #<edge66 26 "the" 27>) (:FULL :HYPHEN :SINGLE-DIGIT))
  "GCTCTCTTAGCTCCTCATAATCGATG-3" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge7 184 by-virtue-of 187> #<edge58 21 of 22> #<edge59 22 "the" 23> #<edge60 22 the 23>
    #<edge77 32 open-reading-frame 33>)
   (:AVIAN-FLU :HYPHEN :FULL :HYPHEN :POINT-MUTATION))
  "H1N1-HA-375R" MAKE-HYPHENATED-TRIPLE)
 (((:FULL #<edge54 19 stop 20> #<edge56 20 bio-entity 21>) (:FULL :HYPHEN :SINGLE-DIGIT))
  "GGGAAATCCAGAGTGTGAATCACT-3" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge4 174 "but rather" 176> #<edge45 14 "the" 15> #<edge46 14 the 15>
    #<edge47 15 close-bio-process 16> #<edge76 32 protein 33>)
   (:AVIAN-FLU :HYPHEN :FULL :HYPHEN :POINT-MUTATION))
  "H1N1-HA-275F" MAKE-HYPHENATED-TRIPLE)
 (((:FULL #<edge357 195 the 196> #<edge358 196 bio-entity 197> :FULL #<edge360 195 bio-entity 197>)
   (:FULL :DIGITS :HYPHEN :FULL :DIGITS))
  "CY073789-CY073796" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:FULL #<edge349 189 between 190> #<edge350 190 where 191> :FULL #<edge352 191 the 192>)
   (:FULL :DIGITS :HYPHEN :FULL :DIGITS))
  "CY073781-CY073788" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge320 164 start 165> #<edge321 165 and 166> #<edge322 166 stop 167>)
   (:LOWER :HYPHEN :LOWER))
  "whole-genome" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge268 141 bio-entity 143> :PERIOD #<edge231 124 of 125>) (:PROTEIN :PERIOD :SINGLE-DIGIT))
  "pCR2.1" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge94 54 number 55> #<edge96 33 square-brackets 36>) (:SINGLE-CAP :SINGLE-DIGIT)) "S3"
  REIFY-TWO-PART-LABEL)
 (((#<edge58 21 of 22> #<edge59 22 "the" 23> #<edge60 22 the 23>)
   (:CAPITALIZED :HYPHEN :CAPITALIZED))
  "One-Step" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge44 13 of 14> #<edge45 14 "the" 15> #<edge46 14 the 15>)
   (:CAPITALIZED :HYPHEN :CAPITALIZED))
  "One-Step" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge36 7 reinitiation 8> #<edge37 8 bio-process 9> #<edge38 9 have 10>)
   (:DIGITS :HYPHEN :LOWER))
  "one-step" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge502 283 number 284> :MULTIPLICATION-SIGN #<edge504 287 the 288>
    #<edge505 288 native 289>)
   (:SINGLE-DIGIT :MULTIPLICATION-SIGN :DIGITS :SINGLE-LOWER))
  "8×60k" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge494 278 digit-sequence 279> #<edge496 279 bio-entity 280>) (:PROTEIN :DIGITS)) "GPL10896"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge488 270 cognate 271> :MULTIPLICATION-SIGN #<edge490 272 bio-entity 273>
    #<edge491 276 "the" 277>)
   (:SINGLE-DIGIT :MULTIPLICATION-SIGN :DIGITS :SINGLE-LOWER))
  "8×15k" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge480 264 COMMA 265> #<edge482 266 "at" 267>) (:PROTEIN :DIGITS)) "GPL10897"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:FULL #<edge473 257 bio-entity 258>) (:FULL :HYPHENATED-NUMBER)) "GSM591597-591641"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge464 251 bio-complex 252> #<edge466 253 bio-entity 254>) (:PROTEIN :DIGITS)) "GSE24034"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge425 240 COMMA 241> #<edge426 241 albeit 242> #<edge427 242 "at" 243>)
   (:DIGITS :HYPHEN :LOWER))
  "two-tailed" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge419 234 the 235> #<edge420 235 native 236> #<edge422 237 bio-entity 238>)
   (:DIGITS :HYPHEN :LOWER))
  "two-sample" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge11 274 such-as 276> :LOWER) (:|HTTP://| :LOWER)) "http://vddc"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge188 91 "the" 92> #<edge189 91 the 92> #<edge190 92 distance 93>)
   (:DIGITS :HYPHEN :PROTEIN))
  "70-mer" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge170 77 undergo 79> :MULTIPLICATION-SIGN #<edge172 79 movement 82>
    #<edge173 82 following 84>)
   (:SINGLE-DIGIT :MULTIPLICATION-SIGN :DIGITS :SINGLE-LOWER))
  "8×60k" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge164 60 reflect 62> :MULTIPLICATION-SIGN #<edge166 67 bio-complex 69>
    #<edge167 67 lambda-expression 68>)
   (:SINGLE-DIGIT :MULTIPLICATION-SIGN :DIGITS :SINGLE-LOWER))
  "8×15k" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge40 11 "the" 12> #<edge41 11 the 12> #<edge42 12 importance 13>)
   (:SINGLE-CAP :FORWARD-SLASH :SINGLE-CAP))
  "A/B" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge22 393 "due to" 395> #<edge23 393 due-to 395> #<edge24 415 "eif3" 417>)
   (:LOWER :HYPHEN :LOWER))
  "reverse-transcribed" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge326 168 "per" 169> #<edge327 168 per 169> #<edge328 169 bio-entity 170>
    #<edge14 300 "wild-type" 303>)
   (:LOWER :HYPHEN :FORWARD-SLASH :BIO-ENTITY))
  "pre-/post-DNase" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge179 57 believe 60> #<edge180 85 however 86> #<edge181 86 COMMA 87>)
   (:FULL :HYPHEN :FULL))
  "RNA-DNA" MAKE-HYPHENATED-PAIR)
 (((#<edge34 5 terminate 6> #<edge35 6 HYPHEN 7> #<edge36 7 reinitiation 8>)
   (:LOWER :HYPHEN :LOWER))
  "laboratory-confirmed" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge180 85 however 86> #<edge181 86 COMMA 87> #<edge182 87 "we" 88>)
   (:LOWER :FORWARD-SLASH :LOWER))
  "demographic/clinical" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:CAPITALIZED #<edge43 13 "of" 14> :CAPITALIZED) (:CAPITALIZED :FORWARD-SLASH :CAPITALIZED))
  "Toronto/Ontario" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:FULL #<edge35 6 HYPHEN 7> #<edge36 7 reinitiation 8>) (:FULL :HYPHEN :FULL)) "BC-CDC"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:SHARP-SIGN #<edge240 131 detect 132>) (:SHARP-SIGN :RESIDUE-ON-PROTEIN)) "#H49187-32368"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:SHARP-SIGN #<edge186 90 "that" 91>) (:SHARP-SIGN :RESIDUE-ON-PROTEIN)) "#H9187-32565"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge325 167 bio-entity 168> #<edge326 168 "per" 169> #<edge327 168 per 169>)
   (:LOWER :HYPHEN :LOWER))
  "third-generation" MAKE-HYPHENATED-STRUCTURE)
 (((:TILDA #<edge189 91 the 92>) (:TILDA :SINGLE-DIGIT)) "∼1" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge173 82 following 84> #<edge174 74 ability 77> #<edge176 70 be 72>)
   (:LOWER :HYPHEN :LOWER))
  "paired-end" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge455 234 modifier 240> #<edge456 233 modifier 240> #<edge457 204 require 207>)
   (:LOWER :HYPHEN :LOWER))
  "host-pathogen" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge105 9 suggest 11> #<edge106 11 importance 13>) (:SINGLE-DIGIT :SINGLE-CAP)) "1X"
  REIFY-TWO-PART-LABEL)
 (((#<edge4 174 "but rather" 176> #<edge48 15 close 16> #<edge49 16 proximity 17>)
   (:AVIAN-FLU :HYPHEN :LOWER))
  "H1N1-infected" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge74 31 downstream-segment 32> #<edge75 31 downstream 32> #<edge76 32 protein 33>)
   (:LOWER :HYPHEN :LOWER))
  "well-studied" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge516 282 article-figure 284> #<edge517 274 such-as 281> #<edge519 248 circumstance 250>)
   (:LOWER :FORWARD-SLASH :LOWER))
  "reagent/sample" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge202 102 critical 103> #<edge203 103 "to" 104> #<edge204 103 to 104>)
   (:CAPITALIZED :HYPHEN :CAPITALIZED))
  "Ebola-Sudan" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge176 70 be 72> #<edge177 65 of 69> #<edge179 57 believe 60>) (:LOWER :HYPHEN :LOWER))
  "paired-end" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge141 66 the 67> #<edge142 67 tethere 68> #<edge143 68 bio-complex 69>)
   (:LOWER :FORWARD-SLASH :LOWER))
  "clinical/public" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge5 174 but-rather 176> #<edge6 184 "by virtue of" 187> #<edge7 184 by-virtue-of 187>)
   (:LOWER :HYPHEN :LOWER))
  "post-extraction" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge278 121 place 123> #<edge279 126 bio-entity 128> #<edge280 125 bio-entity 128>)
   (:LOWER :HYPHEN :LOWER))
  "post-extraction" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge187 90 that 91> #<edge188 91 "the" 92> #<edge190 92 distance 93>)
   (:LOWER :HYPHEN :LOWER))
  "paired-end" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge151 74 modal 75> #<edge152 75 be 76> #<edge153 76 ability 77>) (:LOWER :HYPHEN :LOWER))
  "broad-based" MAKE-HYPHENATED-STRUCTURE)
 (((:DOLLAR-SIGN #<edge87 46 digit-sequence 47>) (:DOLLAR-SIGN :DIGITS)) "$1,200"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge73 30 the 31> #<edge74 31 downstream-segment 32> #<edge75 31 downstream 32>)
   (:LOWER :HYPHEN :LOWER))
  "whole-genome" MAKE-HYPHENATED-STRUCTURE)
 (((:TILDA :DOLLAR-SIGN #<edge46 14 the 15>) (:TILDA :DOLLAR-SIGN :DIGITS)) "∼$10"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:FULL #<edge28 2 study-bio-method 3> #<edge30 3 "on" 4>) (:FULL :FORWARD-SLASH :LOWER))
  "USD/sample" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:TILDA :DOLLAR-SIGN #<edge24 415 "eif3" 417> #<edge25 415 protein 417> :DOLLAR-SIGN
    #<edge27 1 sequencer 2>)
   (:TILDA :DOLLAR-SIGN :DIGITS :HYPHEN :DOLLAR-SIGN :DIGITS))
  "∼$200-$1000" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge351 191 "the" 192> #<edge352 191 the 192> #<edge354 193 terminate 194>)
   (:PROTEIN :HYPHEN :FULL))
  "PHI-BLAST" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge176 70 be 72> #<edge177 65 of 69> #<edge178 62 mobility 69>) (:LOWER :HYPHEN :LOWER))
  "high-stringency" MAKE-HYPHENATED-STRUCTURE)
 (((:TILDA #<edge125 9 suggest 13>) (:TILDA :DIGITS)) "∼11.5 million" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:TILDA #<edge410 227 modifier 228> #<edge421 236 reinitiation 237>)
   (:TILDA :DIGITS :FOLD-ENDURANT))
  "∼100-fold" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge256 143 downstream 144> #<edge257 144 "of" 145> #<edge258 144 of 145>)
   (:DIGITS :HYPHEN :PROTEIN))
  "60-bp" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge220 116 "of" 117> #<edge221 116 of 117> #<edge222 117 "the" 118>)
   (:DIGITS :HYPHEN :PROTEIN))
  "60-bp" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge159 81 movement 82> #<edge160 82 following-adj 83> #<edge162 83 terminate 84>)
   (:LOWER :HYPHEN :LOWER))
  "longer-read" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge127 57 "this" 58> #<edge128 57 this 58> #<edge129 58 be 59>) (:PROTEIN :HYPHEN :LOWER))
  "homology-based" PACKAGE-QUALIFYING-PAIR)
 (((#<edge311 157 be 158> #<edge312 158 not 159> #<edge313 159 solely 160>)
   (:LOWER :HYPHEN :LOWER))
  "broad-based" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge53 18 the 19> #<edge54 19 stop 20> #<edge55 19 stop-endurant 20>)
   (:LOWER :HYPHEN :LOWER))
  "broad-spectrum" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge43 13 "of" 14> #<edge44 13 of 14> #<edge45 14 "the" 15>) (:LOWER :HYPHEN :LOWER))
  "metagenomics-based" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge457 204 require 207> #<edge458 246 under 247> #<edge459 247 "the" 248>)
   (:LOWER :HYPHEN :LOWER))
  "low-complexity" MAKE-HYPHENATED-STRUCTURE)
 (((:TILDA #<edge462 249 circumstance 250>) (:TILDA :PERCENT)) "∼90%" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge190 92 distance 93> #<edge191 93 between 94> #<edge193 94 the 95>)
   (:LOWER :HYPHEN :LOWER))
  "paired-end" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge493 277 HYPHEN 278> #<edge494 278 digit-sequence 279>) (:SINGLE-DIGIT :SINGLE-CAP)) "1X"
  REIFY-TWO-PART-LABEL)
 (((:CAPITALIZED #<edge234 126 stop 127> :CAPITALIZED) (:CAPITALIZED :HYPHEN :CAPITALIZED))
  "Kleine-Levin" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge67 26 the 27> #<edge68 27 start 28> #<edge69 28 bio-entity 29>) (:LOWER :HYPHEN :LOWER))
  "post-extraction" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge324 167 bio-entity 168> #<edge325 167 bio-entity 168> #<edge326 168 "per" 169>
    #<edge327 168 per 169> #<edge329 170 "that" 171> #<edge330 170 that 171>
    #<edge331 171 affect 172>)
   (:SINGLE-CAP :FORWARD-SLASH :CAPITALIZED :FORWARD-SLASH :DIGITS :FORWARD-SLASH :DIGITS))
  "A/California/06/2009" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge70 29 "of" 30> #<edge71 29 of 30> #<edge72 30 "the" 31> #<edge73 30 the 31>
    #<edge75 31 downstream 32> #<edge76 32 protein 33> #<edge77 32 open-reading-frame 33>)
   (:SINGLE-CAP :FORWARD-SLASH :CAPITALIZED :FORWARD-SLASH :DIGITS :FORWARD-SLASH :DIGITS))
  "A/California/06/2009" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge63 24 protein 25> #<edge64 24 open-reading-frame 25> #<edge65 25 and 26>)
   (:LOWER :HYPHEN :LOWER))
  "full-genome" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge220 116 "of" 117> #<edge221 116 of 117> :FULL #<edge223 117 the 118>)
   (:PROTEIN :HYPHEN :FULL :SINGLE-DIGIT))
  "Cal-UC2" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:CLOSE-ANGLE-BRACKET #<edge225 120 open-reading-frame 121>) (:CLOSE-ANGLE-BRACKET :PERCENT))
  ">99.9%" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge138 65 "of" 66> #<edge139 65 of 66> #<edge140 66 "the" 67>) (:LOWER :HYPHEN :LOWER))
  "full-genome" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge130 59 believe 60> #<edge131 60 "to" 61>) (:SINGLE-DIGIT :SINGLE-CAP)) "1X"
  REIFY-TWO-PART-LABEL)
 (((#<edge118 21 of 25> #<edge119 17 of 21> :FULL #<edge121 15 close 16>)
   (:PROTEIN :HYPHEN :FULL :SINGLE-DIGIT))
  "Cal-UC2" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge115 30 open-reading-frame 36> #<edge116 29 of 36>) (:SINGLE-DIGIT :SINGLE-CAP)) "1X"
  REIFY-TWO-PART-LABEL)
 (((#<edge293 116 of 121> :SINGLE-LOWER) (:SINGLE-DIGIT :SINGLE-LOWER)) "3x" REIFY-TWO-PART-LABEL)
 (((#<edge278 121 place 123> :SINGLE-LOWER) (:SINGLE-DIGIT :SINGLE-LOWER)) "1x"
  REIFY-TWO-PART-LABEL)
 (((#<edge230 124 "of" 125> #<edge231 124 of 125> #<edge232 125 "the" 126>)
   (:LOWER :HYPHEN :LOWER))
  "post-extraction" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge89 48 COMMA 49> #<edge91 50 number 51>) (:SINGLE-CAP :SINGLE-DIGIT)) "S1"
  REIFY-TWO-PART-LABEL)
 (((#<edge378 153 suggest 155> #<edge379 155 that 156> :FULL #<edge381 200 COMMA 201>)
   (:PROTEIN :HYPHEN :FULL :DIGITS))
  "Cal-UC12" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge292 123 downstream 128> :MULTIPLICATION-SIGN #<edge294 114 start 116>)
   (:DIGITS :MULTIPLICATION-SIGN :DIGITS))
  "4.74×103" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge286 144 of 152> :MULTIPLICATION-SIGN #<edge288 135 start 137>)
   (:DIGITS :MULTIPLICATION-SIGN :DIGITS))
  "1.82×104" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge264 149 article-figure 150> #<edge265 150 digit-sequence 151> :FULL
    #<edge267 85 subordinate-conjunction 87>)
   (:PROTEIN :HYPHEN :FULL :DIGITS))
  "Cal-UC12" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge103 5 bio-process 9> #<edge104 4 bio-process 9> #<edge105 9 suggest 11>)
   (:LOWER :HYPHEN :PROTEIN))
  "post-DNase" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge99 45 square-brackets 48> #<edge100 49 square-brackets 52>
    #<edge101 53 square-brackets 56>)
   (:LOWER :HYPHEN :PROTEIN))
  "pre-DNase" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge304 153 "this" 154> :MULTIPLICATION-SIGN #<edge307 155 "that" 156>)
   (:SINGLE-DIGIT :MULTIPLICATION-SIGN :HYPHENATED-NUMBER))
  "9×10−39" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge294 114 start 116> #<edge295 103 to 110> #<edge296 101 critical 103>)
   (:CAPITALIZED :HYPHEN :CAPITALIZED))
  "Ebola-Sudan" MAKE-HYPHENATED-STRUCTURE)
 (((:FULL #<edge279 126 bio-entity 128> #<edge281 137 move-something-somewhere 139>)
   (:FULL :HYPHEN :DIGITS))
  "BC-22" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge271 95 bio-complex 97> #<edge272 95 lambda-expression 96> #<edge274 98 bio-entity 100>)
   (:LOWER :HYPHEN :LOWER))
  "paired-end" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge268 141 bio-entity 143> #<edge269 106 parentheses 110> #<edge270 148 parentheses 152>)
   (:DIGITS :HYPHEN :LOWER))
  "97-nt" MAKE-HYPHENATED-STRUCTURE)
 (((:FULL #<edge138 65 "of" 66> #<edge140 66 "the" 67>) (:FULL :HYPHEN :DIGITS)) "BC-76"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:FULL #<edge276 118 open-reading-frame 121> #<edge278 121 place 123>) (:FULL :HYPHEN :DIGITS))
  "BC-59" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge131 60 "to" 61> #<edge132 60 to 61> #<edge133 61 reflect 62>) (:LOWER :HYPHEN :LOWER))
  "post-extraction" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge80 36 COMMA 37> #<edge81 38 digit-sequence 39> #<edge82 38 number 39>)
   (:LOWER :HYPHEN :LOWER))
  "post-extraction" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge11 274 such-as 276> #<edge217 113 the 114>) (:BIO-ENTITY :HYPHENATED-NUMBER)) "1×10−5"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge9 214 wild-type 217> #<edge213 111 that 112>) (:BIO-ENTITY :HYPHENATED-NUMBER)) "1×10−10"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge208 107 article-figure 108> #<edge209 108 digit-sequence 109> #<edge210 108 number 109>)
   (:SINGLE-CAP :HYPHEN :LOWER))
  "E-value" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge131 60 "to" 61> #<edge132 60 to 61> #<edge133 61 reflect 62>) (:DIGITS :HYPHEN :PROTEIN))
  "60-bp" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge127 57 "this" 58> #<edge128 57 this 58> #<edge129 58 be 59>) (:LOWER :HYPHEN :LOWER))
  "high-quality" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge115 30 open-reading-frame 36> #<edge116 29 of 36> #<edge117 27 start 29>)
   (:LOWER :HYPHEN :LOWER))
  "low-complexity" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge53 18 the 19> #<edge54 19 stop 20> #<edge56 20 bio-entity 21>) (:LOWER :HYPHEN :LOWER))
  "paired-end" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge838 inactive, resource 838> #<edge839 inactive, resource 839>
    #<edge841 inactive, resource 841> #<edge842 inactive, resource 842>
    #<edge843 inactive, resource 843> #<edge844 inactive, resource 844>
    #<edge846 inactive, resource 846> #<edge847 inactive, resource 847>
    #<edge849 inactive, resource 849>)
   (:SINGLE-CAP :FORWARD-SLASH :LOWER :FORWARD-SLASH :CAPITALIZED :FORWARD-SLASH :DIGITS
    :FORWARD-SLASH :DIGITS))
  "A/swine/Wisconsin/464/98" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge700 366 require 368> #<edge701 381 site 383> #<edge702 376 site 383>)
   (:LOWER :HYPHEN :LOWER))
  "cross-hybridization" MAKE-HYPHENATED-STRUCTURE)
 (((:CAPITALIZED #<edge578 328 reinitiation 329> #<edge580 331 figure 332>
    #<edge581 331 article-figure 332> #<edge583 332 number 333>)
   (:CAPITALIZED :FORWARD-SLASH :SINGLE-DIGIT :FORWARD-SLASH :DIGITS))
  "Rico/8/34" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge574 326 "of" 327> #<edge575 326 of 327> #<edge576 327 "the" 328> #<edge577 327 the 328>
    :CAPITALIZED)
   (:SINGLE-CAP :FORWARD-SLASH :LOWER :FORWARD-SLASH :CAPITALIZED))
  "A/human/Puerto" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge553 305 number 306> #<edge554 306 locate 307> #<edge556 307 downstream 308>
    #<edge557 308 COMMA 309> #<edge558 309 "the" 310> #<edge559 309 the 310>
    #<edge561 311 always 312> #<edge562 312 select 313> #<edge564 313 the 314>)
   (:SINGLE-CAP :FORWARD-SLASH :LOWER :FORWARD-SLASH :CAPITALIZED :FORWARD-SLASH :DIGITS
    :FORWARD-SLASH :DIGITS))
  "A/swine/Wisconsin/464/98" PACKAGE-SLASHED-SEQUENCE)
 (((:CAPITALIZED #<edge390 207 at 208> #<edge392 209 or 210>) (:CAPITALIZED :HYPHEN :DIGITS))
  "Mex-730" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:CAPITALIZED #<edge386 205 "an" 206> #<edge388 206 bio-entity 207>)
   (:CAPITALIZED :HYPHEN :DIGITS))
  "Mex-1225" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge9 214 wild-type 217> #<edge221 116 of 117> #<edge222 117 "the" 118>)
   (:AVIAN-FLU :HYPHEN :LOWER))
  "H1N1-associated" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge45 14 "the" 15> #<edge47 15 close-bio-process 16>) (:SINGLE-CAP :SINGLE-DIGIT)) "S1"
  REIFY-TWO-PART-LABEL)
 (((#<edge465 252 modal 253> #<edge466 253 bio-entity 254> #<edge5 174 but-rather 176>)
   (:LOWER :HYPHEN :ORGAN-TRANSPLANT))
  "solid-organ transplant" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge296 101 critical 103> #<edge297 100 critical 103> #<edge299 93 between 97>)
   (:LOWER :HYPHEN :LOWER))
  "broad-range" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge58 21 of 22> #<edge59 22 "the" 23> #<edge61 23 upstream-segment 24>
    #<edge62 23 upstream 24> #<edge64 24 open-reading-frame 25>)
   (:LOWER :HYPHEN :LOWER :HYPHEN :LOWER))
  "point-of-care" MAKE-HYPHENATED-TRIPLE)
 (((#<edge202 102 critical 103> #<edge203 103 "to" 104> #<edge204 103 to 104>
    #<edge205 104 reinitiation 105> #<edge208 107 article-figure 108>
    #<edge209 108 digit-sequence 109> #<edge210 108 number 109> :UNDER-BAR
    #<edge212 111 "that" 112> :UNDER-BAR #<edge214 112 when 113> #<edge215 112 when 113>
    #<edge216 113 "the" 114> #<edge217 113 the 114> #<edge219 115 bio-entity 116>)
   (:PROTEIN :FORWARD-SLASH :PROTEIN :FORWARD-SLASH :LOWER :FORWARD-SLASH :DIGITS :UNDER-BAR
    :DIGITS :UNDER-BAR :DIGITS :FORWARD-SLASH :LOWER :FORWARD-SLASH :LOWER))
  "int/csr/don/2010_08_06/en/index" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge105 9 suggest 11> #<edge106 11 importance 13> #<edge108 14 proximity 17>
    #<edge109 19 bio-entity 21> #<edge110 18 bio-entity 21>)
   (:LOWER :HYPHEN :LOWER :HYPHEN :LOWER))
  "human-to-human" MAKE-HYPHENATED-TRIPLE)
 (((#<edge84 42 digit-sequence 43> #<edge85 42 number 43> #<edge86 44 COMMA 45>)
   (:LOWER :HYPHEN :LOWER))
  "swine-origin" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge152 75 be 76> #<edge153 76 ability 77> #<edge154 77 "to" 78>) (:LOWER :HYPHEN :LOWER))
  "whole-killed" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge144 69 semicolon 70> #<edge145 70 "that" 71> #<edge147 71 be 72>)
   (:LOWER :HYPHEN :LOWER))
  "large-scale" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge7 184 by-virtue-of 187> #<edge64 24 open-reading-frame 25> #<edge65 25 and 26>)
   (:PROTEIN :HYPHEN :LOWER))
  "spike protein-based" PACKAGE-QUALIFYING-PAIR)
 (((#<edge32 4 "the" 5> #<edge33 4 the 5> #<edge34 5 terminate 6>) (:FULL :HYPHEN :MIXED))
  "PHE-CoV" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge62 23 upstream 24> #<edge63 24 protein 25> #<edge65 25 and 26> #<edge1 118 protein 120>)
   (:SINGLE-LOWER :HYPHEN :NUMBER-SEQUENCE :MOLECULE))
  "a-2,8-polysialic acid" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge441 205 bio-entity 207> #<edge442 214 site 218> #<edge443 213 site 218>)
   (:FULL :HYPHEN :MIXED))
  "PHE-CoV" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge427 242 "at" 243> #<edge428 242 at 243> #<edge429 243 comparative-modifier 244>)
   (:FULL :HYPHEN :MIXED))
  "PHE-CoV" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge405 222 and 223> #<edge406 223 digit-sequence 224> #<edge407 223 number 224>)
   (:LOWER :HYPHEN :LOWER))
  "multi-step" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge399 219 figure 220> #<edge400 219 article-figure 220> #<edge401 220 digit-sequence 221>)
   (:FULL :HYPHEN :MIXED))
  "PHE-CoV" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge41 11 the 12> #<edge42 12 importance 13> #<edge43 13 "of" 14>) (:LOWER :HYPHEN :LOWER))
  "multi-step" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge262 147 position 148> #<edge263 149 figure 150> #<edge264 149 article-figure 150>)
   (:LOWER :HYPHEN :PROTEIN))
  "neuronal-glial" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge145 70 "that" 71> #<edge146 70 that 71> #<edge148 72 COMMA 73> #<edge149 73 "it" 74>)
   (:SINGLE-LOWER :HYPHEN :NUMBER-SEQUENCE :LOWER))
  "a-2,8-linked" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge94 54 number 55> #<edge95 5 hyphenated-pair 8> #<edge96 33 square-brackets 36>)
   (:FULL :HYPHEN :MIXED))
  "PHE-CoV" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge41 11 the 12> #<edge42 12 importance 13> #<edge43 13 "of" 14>) (:FULL :HYPHEN :MIXED))
  "PHE-CoV" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge68 27 start 28> #<edge69 28 bio-entity 29> #<edge70 29 "of" 30>) (:FULL :HYPHEN :MIXED))
  "PHE-CoV" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge395 212 COMMA 213> #<edge396 213 "the" 214> #<edge397 213 the 214>)
   (:FULL :HYPHEN :MIXED))
  "PHE-CoV" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge344 181 be 182> #<edge345 182 tethere 183> #<edge346 187 "the" 188>)
   (:FULL :HYPHEN :MIXED))
  "PHE-CoV" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge99 45 square-brackets 48> #<edge100 49 square-brackets 52>
    #<edge101 53 square-brackets 56>)
   (:LOWER :HYPHEN :LOWER))
  "super-gene" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge214 112 when 113> #<edge215 112 when 113> #<edge216 113 "the" 114>)
   (:FULL :HYPHEN :MIXED))
  "PHE-CoV" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge185 89 deictic-location 90> #<edge186 90 "that" 91> #<edge187 90 that 91>)
   (:FULL :HYPHEN :MIXED))
  "PHE-CoV" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge104 4 bio-process 9> #<edge105 9 suggest 11> #<edge106 11 importance 13>)
   (:FULL :HYPHEN :MIXED))
  "PHE-CoV" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge94 54 number 55> #<edge95 5 hyphenated-pair 8> #<edge96 33 square-brackets 36>)
   (:FULL :HYPHEN :MIXED))
  "PHE-CoV" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge78 34 digit-sequence 35> #<edge79 34 number 35> #<edge80 36 COMMA 37>)
   (:LOWER :HYPHEN :LOWER))
  "display-based" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge42 12 importance 13> #<edge43 13 "of" 14> #<edge44 13 of 14>) (:FULL :HYPHEN :MIXED))
  "PHE-CoV" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge388 206 bio-entity 207> #<edge389 207 "at" 208> #<edge390 207 at 208>)
   (:FULL :HYPHEN :MIXED))
  "PHE-CoV" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge334 176 how 177> #<edge335 177 well-bio-process 178> #<edge336 177 well-endurant 178>)
   (:FULL :HYPHEN :MIXED))
  "PHE-CoV" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge209 108 digit-sequence 109> #<edge210 108 number 109> #<edge211 110 and 111>)
   (:FULL :HYPHEN :MIXED))
  "PHE-CoV" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge154 77 "to" 78> #<edge155 77 to 78> #<edge156 78 undergo 79>) (:FULL :HYPHEN :MIXED))
  "PHE-CoV" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge65 25 and 26> :UNDER-BAR #<edge67 26 the 27>) (:FULL :UNDER-BAR :DIGITS)) "NC_000075"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge268 141 bio-entity 143> #<edge269 106 parentheses 110> #<edge270 148 parentheses 152>)
   (:FULL :HYPHEN :MIXED))
  "PHE-CoV" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge139 65 of 66> #<edge140 66 "the" 67> #<edge141 66 the 67>) (:FULL :HYPHEN :MIXED))
  "PHE-CoV" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge99 45 square-brackets 48> #<edge100 49 square-brackets 52>
    #<edge101 53 square-brackets 56>)
   (:FULL :HYPHEN :MIXED))
  "PHE-CoV" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge66 26 "the" 27> #<edge67 26 the 27> #<edge68 27 start 28>) (:FULL :HYPHEN :MIXED))
  "PHE-CoV" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge41 11 the 12> #<edge42 12 importance 13> #<edge43 13 "of" 14>) (:FULL :HYPHEN :MIXED))
  "PHE-CoV" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge275 104 efficiency 106> #<edge276 118 open-reading-frame 121>
    #<edge277 117 open-reading-frame 121>)
   (:FULL :HYPHEN :MIXED))
  "PHE-CoV" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge266 150 number 151> #<edge267 85 subordinate-conjunction 87>
    #<edge268 141 bio-entity 143>)
   (:LOWER :HYPHEN :LOWER))
  "high-affinity" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge205 104 reinitiation 105> #<edge206 105 efficiency 106> #<edge207 107 figure 108>)
   (:FULL :HYPHEN :MIXED))
  "PHE-CoV" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge198 98 the 99> #<edge199 99 bio-entity 100> #<edge201 101 comparative 102>)
   (:FULL :HYPHEN :DIGITS))
  "SC-162098" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge196 97 and 98> #<edge197 98 "the" 99>) (:PROTEIN :COLON)) "antibody:" :NO-EDGE)
 (((#<edge190 92 distance 93> #<edge191 93 between 94> #<edge193 94 the 95>)
   (:FULL :HYPHEN :DIGITS))
  "SC-7899" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge188 91 "the" 92> #<edge189 91 the 92>) (:PROTEIN :COLON)) "antibody:" :NO-EDGE)
 (((#<edge182 87 "we" 88> #<edge183 87 pronoun/first/plural 88> #<edge185 89 deictic-location 90>)
   (:FULL :HYPHEN :DIGITS))
  "SC-101133" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge180 85 however 86> #<edge181 86 COMMA 87>) (:PROTEIN :COLON)) "antibody:" :NO-EDGE)
 (((#<edge72 30 "the" 31> :UNDER-BAR #<edge74 31 downstream-segment 32>)
   (:FULL :UNDER-BAR :DIGITS))
  "NM_026533" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge66 26 "the" 27> :UNDER-BAR #<edge68 27 start 28>) (:FULL :UNDER-BAR :DIGITS)) "NM_008229"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge60 22 the 23> :UNDER-BAR #<edge62 23 upstream 24>) (:FULL :UNDER-BAR :DIGITS))
  "NM_030109" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge55 19 stop-endurant 20> :UNDER-BAR #<edge57 21 "of" 22> #<edge1 118 protein 120>
    #<edge58 21 of 22>)
   (:FULL :UNDER-BAR :DIGITS :PROTEIN :COLON))
  "NM_001081445Sf3b2:" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:CLOSE-ANGLE-BRACKET #<edge177 65 of 69>) (:CLOSE-ANGLE-BRACKET :DIGITS)) ">300"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:CLOSE-ANGLE-BRACKET #<edge179 57 believe 60>) (:CLOSE-ANGLE-BRACKET :PERCENT)) ">90%"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge115 30 open-reading-frame 36> #<edge116 29 of 36> #<edge117 27 start 29>)
   (:LOWER :FORWARD-SLASH :MIXED))
  "pfu/mL" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge64 24 open-reading-frame 25> #<edge65 25 and 26> #<edge66 26 "the" 27>)
   (:LOWER :HYPHEN :LOWER))
  "mock-transfected" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge16 314 "wild-type" 317> #<edge17 314 wild-type 317> #<edge18 319 "even if" 321>)
   (:FULL :HYPHEN :MIXED))
  "PHE-CoV" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge473 257 bio-entity 258> #<edge474 258 bio-entity 259> #<edge475 260 figure 261>)
   (:SINGLE-CAP :PLUS-SIGN :SINGLE-CAP))
  "H+L" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge437 220 point-mutation 225> #<edge440 202 reinitiation 204>) (:MIXED :DIGITS)) "pH7.4"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge402 220 number 221> #<edge403 221 amino-acid 222> #<edge406 223 digit-sequence 224>)
   (:SINGLE-DIGIT :COLON :DIGITS))
  "1:1,000" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge25 415 protein 417> #<edge395 212 COMMA 213> #<edge396 213 "the" 214>
    #<edge397 213 the 214>)
   (:PROTEIN :FULL :HYPHEN :MIXED))
  "anti-PHE-CoV" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge366 176 well 178> #<edge367 178 bio-complex 180> #<edge368 181 tethere 183>)
   (:FULL :HYPHEN :MIXED))
  "PHE-CoV" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge354 193 terminate 194> #<edge355 194 and 195> #<edge356 195 "the" 196>)
   (:FULL :HYPHEN :MIXED))
  "PHE-CoV" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge256 143 downstream 144> #<edge257 144 "of" 145> #<edge262 147 position 148>)
   (:LOWER :FORWARD-SLASH :LOWER))
  "plaques/well" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge235 126 stop-endurant 127> #<edge236 127 bio-entity 128> #<edge237 128 COMMA 129>)
   (:FULL :HYPHEN :MIXED))
  "PHE-CoV" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge156 78 undergo 79> #<edge157 79 only 80> #<edge159 81 movement 82>)
   (:SINGLE-DIGIT :COLON :DIGITS))
  "1:1000" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge65 25 and 26> #<edge66 26 "the" 27> #<edge67 26 the 27>) (:FULL :HYPHEN :MIXED))
  "PHE-CoV" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge59 22 "the" 23> #<edge60 22 the 23> #<edge62 23 upstream 24>) (:FULL :HYPHEN :DIGITS))
  "SC-10735" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:FULL #<edge58 21 of 22>) (:FULL :COLON)) "CATALOG:" :NO-EDGE)
 (((#<edge274 98 bio-entity 100> #<edge275 104 efficiency 106> #<edge278 121 place 123>)
   (:SINGLE-DIGIT :COLON :DIGITS))
  "1:2,000" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge13 285 close-to 287> #<edge215 112 when 113> #<edge216 113 "the" 114>)
   (:MOLECULE :HYPHEN :LOWER))
  "sodium dodecyl sulfate-polyacrylamide" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge155 77 to 78> #<edge156 78 undergo 79> #<edge157 79 only 80>)
   (:LOWER :HYPHEN :CAPITALIZED))
  "glutathione-Sepharose" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge48 15 close 16> #<edge49 16 proximity 17> #<edge50 17 "of" 18>)
   (:PROTEIN :HYPHEN :MIXED))
  "Tris-HCl" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge95 5 hyphenated-pair 8> :PERIOD #<edge69 28 bio-entity 29>)
   (:PROTEIN :PERIOD :SINGLE-DIGIT))
  "pcDNA3.1" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge45 14 "the" 15> #<edge46 14 the 15> #<edge47 15 close-bio-process 16>)
   (:FULL :HYPHEN :MIXED))
  "PHE-CoV" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge10 274 "such as" 276> #<edge11 274 such-as 276> #<edge12 285 "close to" 287>)
   (:FULL :HYPHEN :MIXED))
  "PHE-CoV" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge44 13 of 14> #<edge45 14 "the" 15> #<edge47 15 close-bio-process 16>)
   (:PROTEIN :FORWARD-SLASH :LOWER))
  "gov/blast" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge29 2 study-data 3> #<edge30 3 "on" 4> #<edge31 3 on 4>) (:FULL :HYPHEN :MIXED)) "PHE-CoV"
  MAKE-HYPHENATED-STRUCTURE)
 (((#<edge138 65 "of" 66> :ASTERISK #<edge139 65 of 66>) (:DIGITS :ASTERISK :SINGLE-CAP)) "50°C"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge82 38 number 39> :FULL #<edge83 40 COMMA 41> #<edge85 42 number 43>)
   (:HYPHEN :FULL :HYPHEN :SINGLE-DIGIT))
  "-AACCCCTCAAGACCCGTTTA-3" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge64 24 open-reading-frame 25> :FULL #<edge65 25 and 26> #<edge67 26 the 27>)
   (:HYPHEN :FULL :HYPHEN :SINGLE-DIGIT))
  "-GGAGCTGTCGTATTCCAGTC-3" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge400 219 article-figure 220> #<edge401 220 digit-sequence 221> #<edge402 220 number 221>)
   (:FULL :HYPHEN :MIXED))
  "PHE-CoV" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge159 81 movement 82> #<edge160 82 following-adj 83> #<edge161 82 following 83>)
   (:FULL :FORWARD-SLASH :LOWER))
  "PFU/ml" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge371 178 tethere 198> #<edge372 170 affect 172>) (:HYPHENATED-NUMBER :SINGLE-LOWER))
  "10-3b" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge228 123 downstream-segment 124> #<edge229 123 downstream 124> #<edge231 124 of 125>)
   (:SINGLE-CAP :FORWARD-SLASH :CAPITALIZED))
  "I/Hind" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge160 82 following-adj 83> #<edge161 82 following 83> #<edge162 83 terminate 84>)
   (:SINGLE-DIGIT :HYPHEN :LOWER))
  "5-methyl" MAKE-HYPHENATED-STRUCTURE)
 (((:MIXED #<edge206 105 efficiency 106> #<edge207 107 figure 108>)
   (:MIXED :SINGLE-LOWER :PROTEIN))
  "pPICZαAS" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge197 98 "the" 99> #<edge199 99 bio-entity 100>) (:PROTEIN :DIGITS)) "GS115"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:MIXED #<edge168 66 bio-complex 69> #<edge169 74 be 76>) (:MIXED :SINGLE-LOWER :PROTEIN))
  "pPICZαAS" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:MIXED #<edge156 78 undergo 79> #<edge158 80 limit 81>) (:MIXED :SINGLE-LOWER :SINGLE-CAP))
  "pPICZαA" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge90 50 digit-sequence 51> :FULL #<edge91 50 number 51> #<edge93 54 digit-sequence 55>)
   (:HYPHEN :FULL :HYPHEN :SINGLE-DIGIT))
  "-TTGCGGCCGCAAGTATGCCCTGGCCTGTAATG-3" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge70 29 "of" 30> :FULL #<edge71 29 of 30> #<edge73 30 the 31>)
   (:HYPHEN :FULL :HYPHEN :SINGLE-DIGIT))
  "-CGGAATTCGTGCCATCTATTAGCTCTGAAGT-3" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge13 285 close-to 287> #<edge14 300 "wild-type" 303> #<edge15 300 wild-type 303>)
   (:FULL :HYPHEN :MIXED))
  "PHE-CoV" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge115 30 open-reading-frame 36> #<edge116 29 of 36> #<edge118 21 of 25>)
   (:PROTEIN :HYPHEN :DIGITS))
  "CRL-11268" MAKE-HYPHENATED-PAIR)
 (((#<edge109 19 bio-entity 21> #<edge110 18 bio-entity 21> #<edge112 22 open-reading-frame 25>)
   (:FULL :HYPHEN :DIGITS))
  "CCL-131" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge61 23 upstream-segment 24> #<edge62 23 upstream 24> #<edge63 24 protein 25>)
   (:LOWER :HYPHEN :LOWER))
  "plaque-forming" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge23 393 due-to 395> #<edge24 415 "eif3" 417> #<edge25 415 protein 417>)
   (:FULL :HYPHEN :MIXED))
  "PHE-CoV" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge59 22 "the" 23> #<edge60 22 the 23> #<edge61 23 upstream-segment 24>)
   (:LOWER :HYPHEN :LOWER))
  "experimental-challenge" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge25 415 protein 417> #<edge26 415 bio-complex 417> #<edge27 1 sequencer 2>)
   (:FULL :HYPHEN :MIXED))
  "PHE-CoV" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge103 5 bio-process 9> #<edge104 4 bio-process 9> #<edge105 9 suggest 11>)
   (:FULL :HYPHEN :MIXED))
  "PHE-CoV" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge47 15 close-bio-process 16> #<edge48 15 close 16> #<edge49 16 proximity 17>)
   (:FULL :HYPHEN :MIXED))
  "PHE-CoV" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge4 174 "but rather" 176> #<edge5 174 but-rather 176> #<edge6 184 "by virtue of" 187>)
   (:FULL :HYPHEN :MIXED))
  "PHE-CoV" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge134 62 "a" 63> #<edge135 62 a 63> #<edge136 63 restrict 64>) (:FULL :HYPHEN :MIXED))
  "PHE-CoV" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge53 18 the 19> #<edge54 19 stop 20> #<edge55 19 stop-endurant 20>) (:FULL :HYPHEN :MIXED))
  "PHE-CoV" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge4 174 "but rather" 176> #<edge5 174 but-rather 176> #<edge6 184 "by virtue of" 187>)
   (:FULL :HYPHEN :MIXED))
  "PHE-CoV" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge233 125 the 126> #<edge234 126 stop 127> #<edge235 126 stop-endurant 127>)
   (:LOWER :HYPHEN :LOWER))
  "pristine-primed" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge9 214 wild-type 217> #<edge295 103 to 110>) (:PROTEIN :LOWER)) "anti-pig"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge256 143 downstream 144> #<edge257 144 "of" 145> #<edge260 146 modifier 147>)
   (:SINGLE-DIGIT :COLON :DIGITS))
  "1:5,000" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge124 13 of 25> #<edge125 9 suggest 13> #<edge126 3 on 9>) (:PROTEIN :HYPHEN :LOWER))
  "SDS-polyacrylamide" PACKAGE-QUALIFYING-PAIR)
 (((#<edge39 10 suggest 11> #<edge40 11 "the" 12> #<edge41 11 the 12>) (:PROTEIN :HYPHEN :MIXED))
  "Tris-HCl" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge229 123 downstream 124> #<edge231 124 of 125> #<edge3 139 up-to 141>)
   (:SINGLE-CAP :SINGLE-DIGIT :PROTEIN))
  "H2SO4" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge6 184 "by virtue of" 187> #<edge7 184 by-virtue-of 187> #<edge9 214 wild-type 217>
    #<edge10 274 "such as" 276> #<edge15 300 wild-type 303>)
   (:CAPITALIZED :HYPHEN :DIGITS :HYPHEN :LOWER))
  "Ninety-six-well" MAKE-HYPHENATED-TRIPLE)
 (((#<edge368 181 tethere 183> #<edge369 180 tethere 183> #<edge370 180 tethere 198>)
   (:PROTEIN :HYPHEN :MIXED))
  "Tris-HCl" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge234 126 stop 127> #<edge235 126 stop-endurant 127> #<edge236 127 bio-entity 128>
    #<edge237 128 COMMA 129> :LOWER)
   (:LOWER :HYPHEN :SINGLE-CAP :HYPHEN :LOWER))
  "isopropyl-D-thiogalactopyranoside" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge95 5 hyphenated-pair 8> :PERIOD) (:POINT-MUTATION :PERIOD)) "1A."
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge81 38 digit-sequence 39> #<edge85 42 number 43>) (:FULL :HYPHENATED-NUMBER)) "SA14-14-2"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge27 1 sequencer 2> #<edge28 2 study-bio-method 3> #<edge30 3 "on" 4>)
   (:PROTEIN :HYPHEN :DIGITS))
  "RPMI-1640" MAKE-HYPHENATED-PAIR)
 (((#<edge3 139 up-to 141> #<edge18 319 "even if" 321> #<edge20 376 "wild-type" 379>)
   (:PROTEIN :FORWARD-SLASH :SINGLE-DIGIT))
  "SP2/0" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge95 5 hyphenated-pair 8> #<edge96 33 square-brackets 36> #<edge97 37 square-brackets 40>)
   (:LOWER :HYPHEN :LOWER))
  "epitope-based" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge296 101 critical 103> #<edge297 100 critical 103> #<edge298 98 critical 103>)
   (:LOWER :HYPHEN :PROTEIN))
  "swine-anti" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge106 11 importance 13> #<edge107 15 proximity 17> #<edge108 14 proximity 17>)
   (:LOWER :HYPHEN :LOWER))
  "cross-reactivity" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge22 393 "due to" 395> #<edge23 393 due-to 395> #<edge24 415 "eif3" 417>)
   (:CAPITALIZED :HYPHEN :LOWER))
  "Cross-reactivity" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge302 85 show 90> #<edge334 176 how 177> #<edge305 153 this 154>) (:LOWER :DASH :LOWER))
  "strain--has" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge13 285 close-to 287> #<edge333 173 efficiency 174> #<edge295 103 to 110>)
   (:BIO-ENTITY :DASH :SINGLE-LOWER))
  "JKT6468--a" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge214 112 when 113> #<edge215 112 when 113> #<edge217 113 the 114>)
   (:DIGITS :FULL :DIGITS))
  "108KEAWLDSTKAT118" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge147 71 be 72> #<edge148 72 COMMA 73> #<edge150 73 pronoun/inanimate 74>)
   (:DIGITS :FULL :DIGITS))
  "105VNKKEAWLDSTKATRY120" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge35 6 HYPHEN 7> #<edge36 7 reinitiation 8> #<edge37 8 bio-process 9> #<edge38 9 have 10>
    #<edge39 10 suggest 11>)
   (:DIGITS :HYPHEN :LOWER :HYPHEN :LOWER))
  "16-amino-acid" MAKE-HYPHENATED-TRIPLE)
 (((#<edge134 62 "a" 63> #<edge136 63 restrict 64>) (:FULL :DIGITS)) "JKT6468"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge254 142 bio-entity 143> #<edge255 143 downstream-segment 144>
    #<edge256 143 downstream 144> #<edge257 144 "of" 145> #<edge258 144 of 145>)
   (:SINGLE-DIGIT :HYPHEN :LOWER :HYPHEN :LOWER))
  "6-amino-acid" MAKE-HYPHENATED-TRIPLE)
 (((#<edge119 17 of 21> #<edge120 14 proximity 21> #<edge121 15 close 16>
    #<edge122 14 proximity 25> #<edge123 15 close 16>)
   (:SINGLE-DIGIT :HYPHEN :LOWER :HYPHEN :LOWER))
  "6-amino-acid" MAKE-HYPHENATED-TRIPLE)
 (((#<edge242 132 even 133> #<edge243 133 when 134> #<edge244 133 when 134>)
   (:DIGITS :HYPHEN :LOWER))
  "19-kd" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge66 26 "the" 27> #<edge25 415 protein 417>) (:POINT-MUTATION :SINGLE-DIGIT)) "2F7"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge13 285 close-to 287> #<edge117 27 start 29>) (:PROTEIN :FULL)) "anti-DENV"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge5 174 but-rather 176> #<edge58 21 of 22>) (:PROTEIN :FULL)) "anti-DENV"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge1 118 protein 120> #<edge25 415 protein 417>) (:PROTEIN :FULL)) "anti-DENV"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge163 58 believe 60> #<edge164 60 reflect 62> #<edge165 62 mobility 65>)
   (:CAPITALIZED :HYPHEN :CAPITALIZED))
  "Amersham-Pharmacia" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge124 13 of 25> #<edge125 9 suggest 13> #<edge127 57 "this" 58> #<edge9 214 wild-type 217>
    #<edge129 58 be 59>)
   (:PROTEIN :HYPHEN :SINGLE-DIGIT :PHOSPHORYLATE :SINGLE-DIGIT))
  "pGEX-6p-1" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge56 20 bio-entity 21> #<edge57 21 "of" 22> #<edge58 21 of 22> #<edge59 22 "the" 23>
    #<edge60 22 the 23>)
   (:DIGITS :HYPHEN :LOWER :HYPHEN :LOWER))
  "15-amino-acid" MAKE-HYPHENATED-TRIPLE)
 (((#<edge37 8 bio-process 9> #<edge38 9 have 10> #<edge39 10 suggest 11> #<edge40 11 "the" 12>
    #<edge41 11 the 12>)
   (:DIGITS :HYPHEN :LOWER :HYPHEN :LOWER))
  "16-amino-acid" MAKE-HYPHENATED-TRIPLE)
 (((#<edge17 314 wild-type 317> #<edge163 58 believe 60>) (:PROTEIN :SINGLE-CAP)) "NS2B"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge148 72 COMMA 73> #<edge149 73 "it" 74> #<edge150 73 pronoun/inanimate 74>)
   (:PROTEIN :FORWARD-SLASH :SINGLE-CAP))
  "prM/M" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge117 27 start 29> #<edge118 21 of 25> #<edge120 14 proximity 21>) (:LOWER :HYPHEN :LOWER))
  "positive-sense" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge60 22 the 23> #<edge61 23 upstream-segment 24> #<edge62 23 upstream 24>)
   (:LOWER :HYPHEN :LOWER))
  "cross-react" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge104 4 bio-process 9> #<edge106 11 importance 13>) (:FULL :DIGITS)) "PRNT80"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge111 23 open-reading-frame 25> #<edge112 22 open-reading-frame 25>
    #<edge114 30 open-reading-frame 33>)
   (:CAPITALIZED :HYPHEN :DIGITS))
  "Twenty-eight" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge10 274 "such as" 276> #<edge11 274 such-as 276> #<edge13 285 close-to 287>)
   (:SINGLE-DIGIT :HYPHEN :LOWER))
  "6-to" MAKE-HYPHENATED-STRUCTURE)
 (((:ASTERISK :FULL) (:ASTERISK :FULL)) "*CGGCCGCA" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge177 65 of 69> :ASTERISK #<edge11 274 such-as 276>) (:DIGITS :ASTERISK :INITIAL)) "16°C."
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge399 219 figure 220> #<edge400 219 article-figure 220> #<edge402 220 number 221>)
   (:FULL :HYPHEN :SINGLE-DIGIT))
  "POP-7" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge281 137 move-something-somewhere 139> :ASTERISK #<edge282 146 position 148>)
   (:DIGITS :ASTERISK :SINGLE-CAP))
  "95°C" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge23 393 due-to 395> #<edge24 415 "eif3" 417> #<edge25 415 protein 417>)
   (:CAPITALIZED :FORWARD-SLASH :CAPITALIZED))
  "Biosystems/Ambion" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:FULL #<edge17 314 wild-type 317> #<edge18 319 "even if" 321>) (:FULL :HYPHEN :PROTEIN))
  "RLM-RACE" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge268 141 bio-entity 143> #<edge269 106 parentheses 110> #<edge270 148 parentheses 152>)
   (:SINGLE-DIGIT :HYPHEN :PROTEIN))
  "6-FAM" MAKE-HYPHENATED-STRUCTURE)
 (((:FULL #<edge197 98 "the" 99>) (:FULL :DIGITS)) "BBU021" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:FULL #<edge194 95 terminate 96>) (:FULL :DIGITS)) "BBU010" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:FULL #<edge191 93 between 94>) (:FULL :DIGITS)) "BBU020" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:FULL #<edge188 91 "the" 92>) (:FULL :DIGITS)) "BBU008" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:FULL #<edge185 89 deictic-location 90>) (:FULL :DIGITS)) "BBU019" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:FULL #<edge182 87 "we" 88>) (:FULL :DIGITS)) "BBU006" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:FULL #<edge179 57 believe 60>) (:FULL :DIGITS)) "BBU018" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:FULL #<edge176 70 be 72>) (:FULL :DIGITS)) "BBU004" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:FULL #<edge173 82 following 84>) (:FULL :DIGITS)) "BBU017" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:FULL #<edge170 77 undergo 79>) (:FULL :DIGITS)) "BBU002" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge50 17 "of" 18> #<edge51 17 of 18> #<edge52 18 "the" 19>) (:CAPITALIZED :HYPHEN :PROTEIN))
  "Trizol-LS" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge104 4 bio-process 9> #<edge127 57 "this" 58>) (:PLUS-SIGN :PERCENT)) "+10%"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:SHARP-SIGN #<edge348 188 distance 189>) (:SHARP-SIGN :RESIDUE-ON-PROTEIN)) "#L01442"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge137 64 mobility 65> #<edge139 65 of 66>) (:MIXED :DIGITS)) "pBB306"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge113 31 open-reading-frame 33> #<edge114 30 open-reading-frame 33>
    #<edge115 30 open-reading-frame 36>)
   (:PROTEIN :HYPHEN :MIXED))
  "ApaI-AscI" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge99 45 square-brackets 48> #<edge100 49 square-brackets 52>
    #<edge101 53 square-brackets 56>)
   (:PROTEIN :HYPHEN :MIXED))
  "ApaI-AscI" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge87 46 digit-sequence 47> #<edge89 48 COMMA 49>) (:MIXED :DIGITS)) "pBB306"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge54 19 stop 20> #<edge56 20 bio-entity 21>) (:MIXED :DIGITS)) "pBB306"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge483 266 at 267> #<edge484 267 "a" 268> #<edge485 267 a 268>) (:PROTEIN :HYPHEN :MIXED))
  "ApaI-AscI" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge471 256 downstream-segment 257> #<edge472 256 downstream 257>
    #<edge473 257 bio-entity 258>)
   (:PROTEIN :HYPHEN :MIXED))
  "ApaI-AscI" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge368 181 tethere 183> #<edge369 180 tethere 183> #<edge370 180 tethere 198>)
   (:MIXED :HYPHEN :MIXED))
  "AvrII-BsiWI" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge188 91 "the" 92> #<edge190 92 distance 93> #<edge191 93 between 94>)
   (:PROTEIN :SINGLE-DIGIT :SINGLE-LOWER))
  "DH5α" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge131 60 "to" 61> :ASTERISK #<edge132 60 to 61>) (:DIGITS :ASTERISK :SINGLE-CAP)) "75°C"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge116 29 of 36> :ASTERISK #<edge7 184 by-virtue-of 187>) (:DIGITS :ASTERISK :INITIAL))
  "30°C." REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge5 174 but-rather 176> #<edge85 42 number 43> :MIXED) (:CELL-LINE :HYPHEN :MIXED))
  "M1-KanR" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge1 118 protein 120> #<edge35 6 HYPHEN 7> :MIXED) (:CELL-LINE :HYPHEN :MIXED)) "M1-KanR"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge293 116 of 121> #<edge295 103 to 110>) (:MIXED :DIGITS)) "pBB305"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge283 145 position 148> #<edge285 104 efficiency 110>) (:PROTEIN :DIGITS)) "pV3000"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge275 104 efficiency 106> #<edge277 117 open-reading-frame 121>) (:MIXED :DIGITS)) "pBB300"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge198 98 the 99> :FULL #<edge199 99 bio-entity 100> #<edge201 101 comparative 102>)
   (:HYPHEN :FULL :HYPHEN :SINGLE-DIGIT))
  "-GGCCGGCGCGCC-3" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge164 60 reflect 62> #<edge166 67 bio-complex 69>) (:PROTEIN :DIGITS)) "pV3000"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge90 50 digit-sequence 51> #<edge92 52 COMMA 53>) (:PROTEIN :DIGITS)) "pV3000"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge3 139 up-to 141> #<edge131 60 "to" 61> #<edge133 61 reflect 62>)
   (:PROTEIN :FORWARD-SLASH :DIGITS))
  "C6/36" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge87 46 digit-sequence 47> :ASTERISK #<edge1 118 protein 120>)
   (:DIGITS :ASTERISK :INITIAL))
  "40°C." REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge217 113 the 114> #<edge218 114 start 115>) (:DIGITS :PLUS-SIGN)) "35+"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:TILDA #<edge37 8 bio-process 9>) (:TILDA :DIGITS)) "∼100" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge219 115 bio-entity 116> #<edge220 116 "of" 117> #<edge222 117 "the" 118>)
   (:LOWER :HYPHEN :LOWER))
  "low-dose" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge201 101 comparative 102> #<edge202 102 critical 103> #<edge204 103 to 104>)
   (:LOWER :HYPHEN :LOWER))
  "low-dose" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge45 14 "the" 15> #<edge46 14 the 15> #<edge47 15 close-bio-process 16>)
   (:LOWER :HYPHEN :LOWER))
  "live-attenuated" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge98 41 square-brackets 44> #<edge100 49 square-brackets 52>) (:SINGLE-CAP :SINGLE-DIGIT))
  "S3" REIFY-TWO-PART-LABEL)
 (((#<edge138 65 "of" 66> #<edge139 65 of 66> #<edge141 66 the 67>) (:LOWER :HYPHEN :LOWER))
  "low-dose" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge106 11 importance 13> #<edge107 15 proximity 17> #<edge109 19 bio-entity 21>)
   (:LOWER :HYPHEN :LOWER))
  "high-dose" MAKE-HYPHENATED-STRUCTURE)
 (((:CAPITALIZED #<edge16 314 "wild-type" 317> #<edge18 319 "even if" 321>)
   (:CAPITALIZED :FORWARD-SLASH :SINGLE-LOWER))
  "Balb/c" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge12 285 "close to" 287> #<edge13 285 close-to 287> #<edge14 300 "wild-type" 303>)
   (:CAPITALIZED :HYPHEN :LOWER))
  "Temperature-sensitive" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge452 213 site 226> #<edge454 238 modifier 240>) (:LOWER :DIGITS)) "ts11"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge415 232 bio-use 233> #<edge418 234 "the" 235>) (:LOWER :HYPHENATED-NUMBER)) "ts3-3"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge410 227 modifier 228> #<edge413 230 modal 231>) (:LOWER :HYPHENATED-NUMBER)) "ts3-1"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge319 163 the 164> #<edge321 165 and 166>) (:LOWER :DIGITS)) "ts11"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge231 124 of 125> #<edge233 125 the 126>) (:LOWER :SINGLE-DIGIT)) "ts8"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge227 122 place 123> #<edge229 123 downstream 124>) (:LOWER :SINGLE-DIGIT)) "ts7"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge188 91 "the" 92> #<edge190 92 distance 93>) (:LOWER :DIGITS)) "ts11"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge123 15 close 16> #<edge124 13 of 25> #<edge125 9 suggest 13>) (:LOWER :HYPHEN :LOWER))
  "single-cycle" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge184 88 show 89> #<edge186 90 "that" 91>) (:SINGLE-CAP :SINGLE-DIGIT)) "S1"
  REIFY-TWO-PART-LABEL)
 (((#<edge80 36 COMMA 37> #<edge82 38 number 39>) (:SINGLE-CAP :SINGLE-DIGIT)) "S3"
  REIFY-TWO-PART-LABEL)
 (((#<edge9 214 wild-type 217> #<edge148 72 COMMA 73> #<edge150 73 pronoun/inanimate 74>)
   (:PROTEIN :FORWARD-SLASH :SINGLE-DIGIT))
  "nsP3/4" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge135 62 a 63> #<edge137 64 mobility 65>) (:SINGLE-CAP :SINGLE-DIGIT)) "S1"
  REIFY-TWO-PART-LABEL)
 (((:TILDA #<edge55 19 stop-endurant 20>) (:TILDA :DIGITS)) "∼11.5" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge9 214 wild-type 217> #<edge10 274 "such as" 276> #<edge11 274 such-as 276>)
   (:LOWER :HYPHEN :LOWER))
  "whole-genome" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge828 inactive, resource 828> #<edge829 inactive, resource 829>
    #<edge830 inactive, resource 830>)
   (:SINGLE-CAP :HYPHEN :LOWER))
  "Y-axis" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge805 inactive, resource 805> #<edge806 inactive, resource 806>
    #<edge807 inactive, resource 807>)
   (:SINGLE-CAP :HYPHEN :LOWER))
  "X-axis" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge737 399 be 400> #<edge738 400 transfer 401>) (:DIGITS :FULL)) "3130XL"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge576 327 "the" 328> #<edge578 328 reinitiation 329>) (:SINGLE-CAP :SINGLE-DIGIT)) "S1"
  REIFY-TWO-PART-LABEL)
 (((#<edge489 271 initiate 272> #<edge490 272 bio-entity 273> #<edge491 276 "the" 277>)
   (:LOWER :HYPHEN :LOWER))
  "temperature-dependent" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge476 260 article-figure 261> :ASTERISK #<edge477 261 digit-sequence 262>)
   (:DIGITS :ASTERISK :SINGLE-CAP))
  "40°C" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge421 236 reinitiation 237> #<edge422 237 bio-entity 238> #<edge423 238 be 239>)
   (:LOWER :HYPHEN :LOWER))
  "trans-complementation" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge282 146 position 148> #<edge284 145 position 152>) (:SINGLE-CAP :SINGLE-DIGIT)) "S1"
  REIFY-TWO-PART-LABEL)
 (((#<edge69 28 bio-entity 29> :MULTIPLICATION-SIGN #<edge71 29 of 30>)
   (:DIGITS :MULTIPLICATION-SIGN :DIGITS))
  "6.2×106" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge222 117 "the" 118> #<edge223 117 the 118> #<edge224 120 protein 121>)
   (:LOWER :HYPHEN :LOWER))
  "next-generation" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge202 102 critical 103> #<edge203 103 "to" 104> #<edge204 103 to 104>)
   (:LOWER :HYPHEN :LOWER))
  "high-resolution" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge220 116 "of" 117> :DOUBLE_PRIME #<edge221 116 of 117> #<edge222 117 "the" 118>)
   (:SINGLE-DIGIT :DOUBLE_PRIME :HYPHEN :PROTEIN))
  "1″-phosphatase" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge58 21 of 22> #<edge59 22 "the" 23> #<edge60 22 the 23>) (:LOWER :HYPHEN :LOWER))
  "plus-strand" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge54 19 stop 20> #<edge55 19 stop-endurant 20> #<edge56 20 bio-entity 21>)
   (:LOWER :HYPHEN :LOWER))
  "minus-strand" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge86 44 COMMA 45> #<edge87 46 digit-sequence 47> #<edge88 46 number 47>)
   (:LOWER :HYPHEN :LOWER))
  "minus-strand" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge314 160 "the" 161> #<edge315 160 the 161> #<edge316 161 distance 162>)
   (:LOWER :HYPHEN :LOWER))
  "minus-strand" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge251 138 move-to 139> #<edge252 141 digit-sequence 142> #<edge253 141 number 142>)
   (:LOWER :HYPHEN :LOWER))
  "minus-strand" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge124 13 of 25> #<edge126 3 on 9>) (:SINGLE-CAP :SINGLE-DIGIT)) "E1" REIFY-TWO-PART-LABEL)
 (((#<edge100 49 square-brackets 52> #<edge101 53 square-brackets 56>
    #<edge102 1 study-bio-method 3>)
   (:DIGITS :HYPHEN :LOWER))
  "one-third" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge52 18 "the" 19> #<edge53 18 the 19> #<edge55 19 stop-endurant 20>)
   (:DIGITS :HYPHEN :LOWER))
  "two-thirds" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge31 3 on 4> #<edge32 4 "the" 5> #<edge34 5 terminate 6>) (:LOWER :HYPHEN :LOWER))
  "positive-sense" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge24 415 "eif3" 417> #<edge25 415 protein 417> #<edge26 415 bio-complex 417>)
   (:LOWER :HYPHEN :LOWER))
  "single-strand" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge441 205 bio-entity 207> #<edge442 214 site 218> #<edge444 228 site 230>)
   (:SINGLE-LOWER :FORWARD-SLASH :SINGLE-LOWER))
  "n/a" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge311 157 be 158> #<edge312 158 not 159> #<edge313 159 solely 160>)
   (:LOWER :HYPHEN :LOWER))
  "data-mining" MAKE-HYPHENATED-STRUCTURE)
 (((:ASTERISK :ASTERISK :ASTERISK :ASTERISK :ASTERISK :ASTERISK :ASTERISK :ASTERISK :ASTERISK
    :ASTERISK)
   (:ASTERISK :ASTERISK :ASTERISK :ASTERISK :ASTERISK :ASTERISK :ASTERISK :ASTERISK :ASTERISK
    :ASTERISK))
  "**********" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge492 276 the 277> #<edge493 277 HYPHEN 278> #<edge494 278 digit-sequence 279>
    #<edge495 278 number 279> #<edge496 279 bio-entity 280> #<edge497 280 bio-entity 281>
    #<edge498 281 COMMA 282> #<edge499 282 figure 283>)
   (:DASH :DASH :DASH :DASH :DASH :DASH :DASH :DASH))
  "----------------" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge215 112 when 113> #<edge217 113 the 114>) (:SINGLE-CAP :SINGLE-DIGIT)) "S1"
  REIFY-TWO-PART-LABEL)
 (((:CAPITALIZED :REGISTERED_SIGN) (:CAPITALIZED :REGISTERED_SIGN)) "Metathesaurus®"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge8 214 "wild-type" 217> #<edge9 214 wild-type 217> #<edge10 274 "such as" 276>)
   (:LOWER :HYPHEN :LOWER))
  "free-text" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge192 94 "the" 95> #<edge193 94 the 95> #<edge194 95 terminate 96>)
   (:CAPITALIZED :HYPHEN :CAPITALIZED))
  "Receiver-Operating" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge116 29 of 36> #<edge117 27 start 29> #<edge119 17 of 21> #<edge120 14 proximity 21>
    :CAPITALIZED)
   (:CAPITALIZED :HYPHEN :CAPITALIZED :HYPHEN :CAPITALIZED))
  "Drop-In-Deviance" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge27 1 sequencer 2> #<edge28 2 study-bio-method 3> #<edge29 2 study-data 3>)
   (:LOWER :HYPHEN :LOWER))
  "clinician-selected" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge647 340 cause 347> #<edge648 338 cause 347> #<edge649 337 cause 347>)
   (:LOWER :FORWARD-SLASH :LOWER))
  "amoxicillin/clavulanate" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge631 321 bio-complex 323> #<edge632 323 terminate 325> #<edge634 327 window 330>)
   (:PROTEIN :HYPHEN :SINGLE-DIGIT))
  "ICD-9" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge594 341 cause 342> #<edge595 342 "the" 343> #<edge596 342 the 343>)
   (:LOWER :FORWARD-SLASH :LOWER))
  "amoxicillin/clavulanate" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge531 255 bio-entity 264> #<edge532 285 close-to 291> #<edge534 254 at 264>)
   (:FULL :HYPHEN :DIGITS))
  "AM-051" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:SINGLE-LOWER #<edge515 276 bio-entity 281>) (:SINGLE-LOWER :COLON)) "i:" :NO-EDGE)
 (((#<edge496 279 bio-entity 280> #<edge497 280 bio-entity 281> #<edge499 282 figure 283>)
   (:FULL :HYPHEN :DIGITS))
  "GA-400" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge486 268 near 269> #<edge487 269 HYPHEN 270> #<edge489 271 initiate 272>)
   (:FULL :HYPHEN :DIGITS))
  "GA-700" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge472 256 downstream 257> #<edge473 257 bio-entity 258> #<edge475 260 figure 261>)
   (:FULL :HYPHEN :DIGITS))
  "RE-99" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge455 234 modifier 240> #<edge456 233 modifier 240> #<edge458 246 under 247>)
   (:FULL :HYPHEN :DIGITS))
  "NT-100" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge449 235 bio-entity 238> #<edge450 234 bio-entity 238> #<edge452 213 site 226>)
   (:FULL :HYPHEN :DIGITS))
  "MS-102" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge442 214 site 218> #<edge443 213 site 218> #<edge445 227 site 230>)
   (:PROTEIN :HYPHEN :DIGITS))
  "CN-900" MAKE-HYPHENATED-PAIR)
 (((#<edge394 211 near 212> #<edge395 212 COMMA 213> #<edge397 213 the 214>)
   (:FULL :HYPHEN :DIGITS))
  "RE-200" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:GREATER-THAN_OR_EQUAL_TO #<edge252 141 digit-sequence 142>)
   (:GREATER-THAN_OR_EQUAL_TO :DIGITS))
  "≥100" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:GREATER-THAN_OR_EQUAL_TO #<edge243 133 when 134>) (:GREATER-THAN_OR_EQUAL_TO :DIGITS)) "≥22"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge187 90 that 91> #<edge188 91 "the" 92> #<edge190 92 distance 93>)
   (:PROTEIN :HYPHEN :SINGLE-DIGIT))
  "ICD-9" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge141 66 the 67> #<edge142 67 tethere 68> #<edge144 69 semicolon 70>)
   (:PROTEIN :HYPHEN :SINGLE-DIGIT))
  "ICD-9" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge89 48 COMMA 49> #<edge90 50 digit-sequence 51> #<edge92 52 COMMA 53>)
   (:PROTEIN :HYPHEN :SINGLE-DIGIT))
  "ICD-9" MAKE-HYPHENATED-STRUCTURE)
 (((:TILDA #<edge375 168 per 172>) (:TILDA :DIGITS)) "∼140" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge239 130 be 131> #<edge240 131 detect 132> #<edge242 132 even 133>)
   (:LOWER :HYPHEN :LOWER))
  "sub-sample" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge144 69 semicolon 70> #<edge145 70 "that" 71> #<edge146 70 that 71>)
   (:LOWER :FORWARD-SLASH :LOWER))
  "culture/antigen" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge152 75 be 76> #<edge153 76 ability 77> #<edge155 77 to 78>)
   (:PROTEIN :HYPHEN :SINGLE-DIGIT))
  "ICD-9" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge114 30 open-reading-frame 33> #<edge115 30 open-reading-frame 36> #<edge116 29 of 36>)
   (:LOWER :HYPHEN :LOWER))
  "case-detection" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge41 11 the 12> #<edge42 12 importance 13> #<edge43 13 "of" 14>) (:LOWER :HYPHEN :LOWER))
  "case-detection" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge33 4 the 5> #<edge34 5 terminate 6> #<edge35 6 HYPHEN 7>) (:LOWER :HYPHEN :LOWER))
  "free-text" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge267 85 subordinate-conjunction 87> #<edge268 141 bio-entity 143>) (:LOWER :COLON))
  "approach:" :NO-EDGE)
 (((#<edge154 77 "to" 78> #<edge155 77 to 78> #<edge157 79 only 80>) (:LOWER :HYPHEN :LOWER))
  "quality-control" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge32 4 "the" 5> #<edge33 4 the 5>) (:LOWER :COLON)) "results:" :NO-EDGE)
 (((#<edge799 inactive, resource 799> #<edge800 inactive, resource 800>
    #<edge802 inactive, resource 802> #<edge803 inactive, resource 803>
    #<edge804 inactive, resource 804>)
   (:LOWER :HYPHEN :LOWER :HYPHEN :LOWER))
  "signal-to-noise" MAKE-HYPHENATED-TRIPLE)
 (((#<edge576 327 "the" 328> #<edge577 327 the 328> #<edge579 329 window 330>)
   (:LOWER :HYPHEN :LOWER))
  "common-sense" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge525 268 bio-entity 273> #<edge526 267 bio-entity 273> #<edge528 288 site 291>)
   (:LOWER :HYPHEN :LOWER))
  "near-perfect" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge456 233 modifier 240> #<edge457 204 require 207> #<edge458 246 under 247>)
   (:LOWER :HYPHEN :LOWER))
  "free-text" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge358 196 bio-entity 197> #<edge359 191 bio-complex 193> #<edge360 195 bio-entity 197>)
   (:LOWER :HYPHEN :LOWER))
  "free-text" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge339 177 well 178> #<edge340 178 "the" 179> #<edge341 178 the 179>
    #<edge342 179 bio-complex 180> #<edge343 180 modal 181>)
   (:LOWER :HYPHEN :LOWER :HYPHEN :LOWER))
  "copy-and-pasting" MAKE-HYPHENATED-TRIPLE)
 (((#<edge296 101 critical 103> #<edge297 100 critical 103> #<edge298 98 critical 103>)
   (:LOWER :HYPHEN :LOWER))
  "free-text" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge296 101 critical 103> #<edge297 100 critical 103> #<edge299 93 between 97>)
   (:PROTEIN :HYPHEN :SINGLE-DIGIT))
  "ICD-9" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge256 143 downstream 144> #<edge257 144 "of" 145> #<edge258 144 of 145>)
   (:LOWER :HYPHEN :LOWER))
  "codes-only" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge252 141 digit-sequence 142> #<edge253 141 number 142>
    #<edge255 143 downstream-segment 144>)
   (:PROTEIN :HYPHEN :SINGLE-DIGIT))
  "ICD-9" MAKE-HYPHENATED-STRUCTURE)
 (((:CLOSE-ANGLE-BRACKET #<edge230 124 "of" 125> :ASTERISK #<edge231 124 of 125>)
   (:CLOSE-ANGLE-BRACKET :DIGITS :ASTERISK :SINGLE-CAP))
  ">37.8°C" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge221 116 of 117> #<edge222 117 "the" 118> #<edge224 120 protein 121>)
   (:PROTEIN :HYPHEN :SINGLE-DIGIT))
  "ICD-9" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge166 67 bio-complex 69> #<edge167 67 lambda-expression 68> #<edge168 66 bio-complex 69>
    #<edge169 74 be 76> #<edge171 79 limit 81>)
   (:LOWER :HYPHEN :PROTEIN :HYPHEN :SINGLE-DIGIT))
  "non-ICD-9" MAKE-HYPHENATED-TRIPLE)
 (((#<edge24 415 "eif3" 417> #<edge25 415 protein 417> #<edge26 415 bio-complex 417>
    #<edge27 1 sequencer 2> #<edge29 2 study-data 3>)
   (:LOWER :HYPHEN :PROTEIN :HYPHEN :SINGLE-DIGIT))
  "non-ICD-9" MAKE-HYPHENATED-TRIPLE)
 (((#<edge290 130 detect 133> #<edge1 118 protein 120>) (:LOWER :-LIKE)) "flu-like"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge28 2 study-bio-method 3> #<edge29 2 study-data 3> #<edge31 3 on 4>)
   (:PROTEIN :HYPHEN :SINGLE-DIGIT))
  "ICD-9" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge276 118 open-reading-frame 121> #<edge277 117 open-reading-frame 121>
    #<edge278 121 place 123>)
   (:LOWER :HYPHEN :LOWER))
  "single-patient" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge59 22 "the" 23> #<edge60 22 the 23> #<edge62 23 upstream 24> #<edge63 24 protein 25>
    #<edge64 24 open-reading-frame 25>)
   (:LOWER :HYPHEN :LOWER :HYPHEN :LOWER))
  "over-the-counter" MAKE-HYPHENATED-TRIPLE)
 (((#<edge9 214 wild-type 217> #<edge10 274 "such as" 276> #<edge11 274 such-as 276>
    #<edge12 285 "close to" 287> #<edge14 300 "wild-type" 303>)
   (:LOWER :HYPHEN :PROTEIN :HYPHEN :SINGLE-DIGIT))
  "non-ICD-9" MAKE-HYPHENATED-TRIPLE)
 (((#<edge277 117 open-reading-frame 121> #<edge278 121 place 123> #<edge280 125 bio-entity 128>)
   (:PROTEIN :HYPHEN :SINGLE-DIGIT))
  "ICD-9" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge193 94 the 95> #<edge194 95 terminate 96> #<edge196 97 and 98>)
   (:PROTEIN :HYPHEN :SINGLE-DIGIT))
  "ICD-9" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge60 22 the 23> #<edge61 23 upstream-segment 24> #<edge63 24 protein 25>)
   (:PROTEIN :HYPHEN :SINGLE-DIGIT))
  "ICD-9" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge21 376 wild-type 379> #<edge22 393 "due to" 395> #<edge24 415 "eif3" 417>)
   (:PROTEIN :HYPHEN :SINGLE-DIGIT))
  "ICD-9" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge349 189 between 190> #<edge350 190 where 191> #<edge352 191 the 192>)
   (:PROTEIN :HYPHEN :SINGLE-DIGIT))
  "ICD-9" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge292 123 downstream 128> #<edge293 116 of 121> #<edge295 103 to 110>
    #<edge296 101 critical 103> #<edge297 100 critical 103> #<edge298 98 critical 103>
    #<edge299 93 between 97>)
   (:PROTEIN :HYPHEN :SINGLE-DIGIT :HYPHEN :FULL :HYPHEN :CAPITALIZED))
  "ICD-9-OR-Text" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge230 124 "of" 125> :ASTERISK #<edge231 124 of 125>) (:DIGITS :ASTERISK :SINGLE-CAP))
  "37.8°C" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge208 107 article-figure 108> #<edge209 108 digit-sequence 109> #<edge211 110 and 111>)
   (:PROTEIN :HYPHEN :SINGLE-DIGIT))
  "ICD-9" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge117 27 start 29> #<edge118 21 of 25> #<edge120 14 proximity 21> #<edge121 15 close 16>
    #<edge122 14 proximity 25>)
   (:PROTEIN :HYPHEN :SINGLE-DIGIT :HYPHEN :LOWER))
  "ICD-9-only" MAKE-HYPHENATED-TRIPLE)
 (((#<edge103 5 bio-process 9> #<edge104 4 bio-process 9> #<edge105 9 suggest 11>)
   (:CAPITALIZED :HYPHEN :LOWER))
  "Text-only" MAKE-HYPHENATED-STRUCTURE)
 (((:GREATER-THAN_OR_EQUAL_TO #<edge37 8 bio-process 9> :ASTERISK #<edge38 9 have 10>)
   (:GREATER-THAN_OR_EQUAL_TO :DIGITS :ASTERISK :SINGLE-CAP))
  "≥37.8°C" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge22 393 "due to" 395> #<edge1 118 protein 120>) (:LOWER :-LIKE)) "influenza-like"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge364 166 bio-entity 168> #<edge365 172 efficiency 174> #<edge367 178 bio-complex 180>)
   (:PROTEIN :HYPHEN :SINGLE-DIGIT))
  "ICD-9" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge276 118 open-reading-frame 121> #<edge277 117 open-reading-frame 121>
    #<edge279 126 bio-entity 128>)
   (:PROTEIN :HYPHEN :SINGLE-DIGIT))
  "ICD-9" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge73 30 the 31> #<edge74 31 downstream-segment 32> #<edge76 32 protein 33>)
   (:PROTEIN :HYPHEN :SINGLE-DIGIT))
  "ICD-9" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge27 1 sequencer 2> #<edge28 2 study-bio-method 3> #<edge30 3 "on" 4>)
   (:PROTEIN :HYPHEN :SINGLE-DIGIT))
  "ICD-9" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge8 214 "wild-type" 217> #<edge9 214 wild-type 217> #<edge10 274 "such as" 276>)
   (:CAPITALIZED :HYPHEN :LOWER))
  "Text-only" MAKE-HYPHENATED-STRUCTURE)
 (((:GREATER-THAN_OR_EQUAL_TO #<edge348 188 distance 189> :ASTERISK #<edge349 189 between 190>)
   (:GREATER-THAN_OR_EQUAL_TO :DIGITS :ASTERISK :SINGLE-CAP))
  "≥38°C" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:GREATER-THAN_OR_EQUAL_TO #<edge339 177 well 178> :ASTERISK #<edge1 118 protein 120>)
   (:GREATER-THAN_OR_EQUAL_TO :DIGITS :ASTERISK :INITIAL))
  "≥38°C." REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge307 155 "that" 156> #<edge308 155 that 156> #<edge310 156 pronoun/inanimate 157>)
   (:PROTEIN :HYPHEN :SINGLE-DIGIT))
  "ICD-9" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge241 132 even 133> #<edge242 132 even 133> #<edge244 133 when 134>)
   (:PROTEIN :HYPHEN :SINGLE-DIGIT))
  "ICD-9" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge167 67 lambda-expression 68> #<edge168 66 bio-complex 69> #<edge170 77 undergo 79>)
   (:PROTEIN :HYPHEN :SINGLE-DIGIT))
  "ICD-9" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge128 57 this 58> #<edge129 58 be 59> #<edge131 60 "to" 61> #<edge132 60 to 61>
    #<edge133 61 reflect 62>)
   (:PROTEIN :HYPHEN :SINGLE-DIGIT :HYPHEN :LOWER))
  "ICD-9-only" MAKE-HYPHENATED-TRIPLE)
 (((#<edge83 40 COMMA 41> #<edge84 42 digit-sequence 43> #<edge86 44 COMMA 45>)
   (:PROTEIN :HYPHEN :SINGLE-DIGIT))
  "ICD-9" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge14 300 "wild-type" 303> #<edge15 300 wild-type 303> #<edge17 314 wild-type 317>)
   (:PROTEIN :HYPHEN :SINGLE-DIGIT))
  "ICD-9" MAKE-HYPHENATED-STRUCTURE)
 (((:SINGLE-LOWER #<edge89 48 COMMA 49> #<edge91 50 number 51>) (:SINGLE-LOWER :HYPHEN :LOWER))
  "x-rays" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge23 393 due-to 395> #<edge24 415 "eif3" 417> #<edge26 415 bio-complex 417>
    #<edge27 1 sequencer 2> #<edge28 2 study-bio-method 3>)
   (:LOWER :FORWARD-SLASH :LOWER :FORWARD-SLASH :LOWER))
  "fever/chills/night" PACKAGE-SLASHED-SEQUENCE)
 (((:TILDA #<edge258 144 of 145>) (:TILDA :PERCENT)) "∼8%" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge228 123 downstream-segment 124> #<edge257 144 "of" 145> #<edge231 124 of 125>
    #<edge233 125 the 126> #<edge234 126 stop 127> #<edge236 127 bio-entity 128>)
   (:LOWER :TIME-UNIT :FORWARD-SLASH :LOWER :HYPHEN :LOWER))
  "same-day/walk-in" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge206 105 efficiency 106> #<edge207 107 figure 108> #<edge209 108 digit-sequence 109>)
   (:CAPITALIZED :HYPHEN :LOWER))
  "Two-thirds" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge263 149 figure 150> #<edge264 149 article-figure 150> #<edge266 150 number 151>)
   (:PROTEIN :HYPHEN :SINGLE-DIGIT))
  "ICD-9" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge221 116 of 117> #<edge222 117 "the" 118> #<edge223 117 the 118>) (:LOWER :HYPHEN :LOWER))
  "free-text" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge38 9 have 10> #<edge39 10 suggest 11> #<edge40 11 "the" 12>) (:LOWER :HYPHEN :LOWER))
  "current-generation" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge187 90 that 91> #<edge188 91 "the" 92> #<edge189 91 the 92>) (:LOWER :HYPHEN :LOWER))
  "so-called" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge88 46 number 47> #<edge89 48 COMMA 49> #<edge91 50 number 51> #<edge92 52 COMMA 53>
    #<edge93 54 digit-sequence 55>)
   (:LOWER :HYPHEN :LOWER :HYPHEN :LOWER))
  "over-the-counter" MAKE-HYPHENATED-TRIPLE)
 (((#<edge41 11 the 12> #<edge42 12 importance 13> #<edge43 13 "of" 14>) (:LOWER :HYPHEN :LOWER))
  "paper-based" MAKE-HYPHENATED-STRUCTURE)
 (((:LOWER #<edge198 98 the 99> #<edge200 100 be 101>) (:LOWER :HYPHEN :DIGITS)) "tween-20"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge185 89 deictic-location 90> #<edge186 90 "that" 91>) (:SINGLE-DIGIT :SINGLE-CAP)) "1X"
  REIFY-TWO-PART-LABEL)
 (((:LOWER #<edge158 80 limit 81> #<edge159 81 movement 82>) (:LOWER :HYPHEN :LOWER))
  "retro-orbitally" :NO-EDGE)
 (((#<edge147 71 be 72> #<edge163 58 believe 60>) (:CAPITALIZED :FOLD-ENDURANT)) "Two-fold"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge467 254 "at" 255> #<edge468 254 at 255> #<edge471 256 downstream-segment 257>)
   (:FULL :HYPHEN :HYPHENATED-NUMBER))
  "AP-07-040" MAKE-HYPHENATED-STRUCTURE)
 (((:TILDA #<edge253 141 number 142>) (:TILDA :HYPHENATED-NUMBER)) "∼25–40"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge248 136 bio-entity 137> #<edge250 138 move-something-somewhere 139>) (:PROTEIN :DIGITS))
  "LD50" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge147 71 be 72> :ASTERISK #<edge148 72 COMMA 73>) (:DIGITS :ASTERISK :SINGLE-CAP)) "28°C"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge83 40 COMMA 41> #<edge84 42 digit-sequence 43> #<edge85 42 number 43>)
   (:LOWER :HYPHEN :LOWER))
  "post-challenge" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge648 338 cause 347> #<edge649 337 cause 347> #<edge650 336 suggest 347>)
   (:LOWER :HYPHEN :LOWER))
  "whole-cells" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge518 273 parentheses 285> #<edge519 248 circumstance 250> #<edge521 257 bio-entity 259>)
   (:SINGLE-DIGIT :COLON :DIGITS))
  "1∶100" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge492 276 the 277> #<edge493 277 HYPHEN 278> #<edge494 278 digit-sequence 279>)
   (:PROTEIN :HYPHEN :FULL))
  "IgG-FITC" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge481 265 or 266> #<edge482 266 "at" 267> #<edge483 266 at 267>) (:PROTEIN :HYPHEN :FULL))
  "IgG-FITC" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge17 314 wild-type 317> #<edge340 178 "the" 179>) (:BIO-ENTITY :DIGITS)) "1×107"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:SINGLE-LOWER #<edge183 87 pronoun/first/plural 88> #<edge184 88 show 89>)
   (:SINGLE-LOWER :FORWARD-SLASH :SINGLE-LOWER))
  "o/n" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge58 21 of 22> #<edge59 22 "the" 23> #<edge60 22 the 23>) (:LOWER :HYPHEN :LOWER))
  "whole-cells" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge17 314 wild-type 317> #<edge19 319 even-if 321> #<edge20 376 "wild-type" 379>)
   (:SINGLE-CAP :SINGLE-DIGIT :HYPHEN))
  "F1-" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge236 127 bio-entity 128> #<edge237 128 COMMA 129> #<edge239 130 be 131> :LOWER)
   (:PROTEIN :HYPHEN :NUMBER-SEQUENCE :LOWER))
  "peroxidase-3,3′,5,5′-tetramethylbenzidine" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge13 285 close-to 287> #<edge182 87 "we" 88> #<edge183 87 pronoun/first/plural 88>
    #<edge15 300 wild-type 303> #<edge184 88 show 89> #<edge186 90 "that" 91>)
   (:PROTEIN :LOWER :HYPHEN :MOLECULE :HYPHEN :PROTEIN))
  "anti-flag-M2-peroxidase" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge142 67 tethere 68> #<edge143 68 bio-complex 69> #<edge144 69 semicolon 70>)
   (:LOWER :HYPHEN :LOWER))
  "biotinylated-mouse" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge135 62 a 63> #<edge136 63 restrict 64> #<edge137 64 mobility 65>)
   (:LOWER :HYPHEN :LOWER))
  "flag-labeled" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge63 24 protein 25> :FULL) (:SINGLE-DIGIT :FULL)) "2HB" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge36 7 reinitiation 8> #<edge38 9 have 10> #<edge39 10 suggest 11> #<edge40 11 "the" 12>)
   (:SINGLE-CAP :SINGLE-DIGIT :HYPHEN :PROTEIN))
  "F1-protein" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge312 158 not 159> #<edge314 160 "the" 161>) (:FULL :DIGITS)) "OD405"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge231 124 of 125> :ASTERISK #<edge13 285 close-to 287>) (:DIGITS :ASTERISK :INITIAL))
  "37°C." REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge9 214 wild-type 217> #<edge199 99 bio-entity 100> #<edge200 100 be 101>
    #<edge201 101 comparative 102> #<edge202 102 critical 103>)
   (:BIO-ENTITY :HYPHEN :CAPITALIZED :HYPHEN :PROTEIN))
  "anti-human-Fc-HRP" MAKE-HYPHENATED-TRIPLE)
 (((#<edge7 184 by-virtue-of 187> #<edge187 90 that 91> #<edge188 91 "the" 92>
    #<edge189 91 the 92>)
   (:PROTEIN :CAPITALIZED :HYPHEN :LOWER))
  "anti-His-horse" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge50 17 "of" 18> #<edge52 18 "the" 19> #<edge53 18 the 19>)
   (:SINGLE-CAP :SINGLE-DIGIT :HYPHEN))
  "F1-" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge24 415 "eif3" 417> #<edge564 313 the 314> #<edge565 317 bio-entity 318>)
   (:PROTEIN :HYPHEN :LOWER))
  "protein A-sepharose" PACKAGE-QUALIFYING-PAIR)
 (((:MIXED #<edge512 259 parentheses 264> #<edge513 279 bio-entity 281>)
   (:MIXED :SINGLE-DIGIT :PROTEIN))
  "HyQSFM4CHO" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge207 107 figure 108> #<edge208 107 article-figure 108> #<edge209 108 digit-sequence 109>)
   (:CAPITALIZED :HYPHEN :FULL))
  "Ni-NTA" MAKE-HYPHENATED-PAIR)
 (((#<edge156 78 undergo 79> :ASTERISK #<edge157 79 only 80>) (:DIGITS :ASTERISK :SINGLE-CAP))
  "30°C" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge116 29 of 36> #<edge118 21 of 25>) (:FULL :DIGITS)) "OD600" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge71 29 of 30> #<edge72 30 "the" 31>) (:SINGLE-DIGIT :FULL)) "2YT"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:FULL #<edge42 12 importance 13>) (:FULL :DIGITS)) "HB2151" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge2 139 "up to" 141> #<edge38 9 have 10>) (:INITIAL :LOWER)) "E.coli"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge635 338 bio-entity 340> #<edge637 344 fragment 347> :CLOSE-ANGLE-BRACKET
    #<edge640 342 fragment 347>)
   (:FULL :DIGITS :CLOSE-ANGLE-BRACKET :DIGITS))
  "OD405>2.0" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge452 213 site 226> #<edge453 242 at 245> #<edge454 238 modifier 240>)
   (:LOWER :FORWARD-SLASH :LOWER))
  "antigen/phage" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge371 178 tethere 198> #<edge372 170 affect 172> #<edge390 207 at 208>)
   (:PROTEIN :PLUS-SIGN :PERCENT))
  "PBS+2%" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge334 176 how 177> #<edge336 177 well-endurant 178> #<edge337 177 well-adverbial 178>)
   (:SINGLE-CAP :SINGLE-DIGIT :HYPHEN))
  "F1-" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge193 94 the 95> #<edge195 96 bio-complex 97> #<edge196 97 and 98>)
   (:SINGLE-CAP :SINGLE-DIGIT :HYPHEN))
  "F1-" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge1 118 protein 120> #<edge60 22 the 23> #<edge61 23 upstream-segment 24>
    #<edge62 23 upstream 24> #<edge63 24 protein 25>)
   (:DRUG :HYPHEN :PROTEIN :HYPHEN :CAPITALIZED))
  "Sulfo-NHS-LC-Biotin" MAKE-HYPHENATED-TRIPLE)
 (((:FULL #<edge57 21 "of" 22> #<edge59 22 "the" 23>) (:FULL :HYPHEN :LOWER)) "EZ-link" :NO-EDGE)
 (((#<edge11 274 such-as 276> #<edge13 285 close-to 287> #<edge14 300 "wild-type" 303>
    #<edge15 300 wild-type 303>)
   (:SINGLE-CAP :SINGLE-DIGIT :HYPHEN :LOWER))
  "F1-and" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge14 300 "wild-type" 303> #<edge76 32 protein 33>) (:PROTEIN :CAPITALIZED))
  "anti-Burkholderia" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge129 58 be 59> #<edge31 3 on 4> #<edge3 139 up-to 141> #<edge33 4 the 5>)
   (:RESIDUE-ON-PROTEIN :HYPHEN :PROTEIN :SINGLE-DIGIT))
  "F1-04-A-G1" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge150 73 pronoun/inanimate 74> #<edge151 74 modal 75> #<edge152 75 be 76>)
   (:DIGITS :HYPHEN :LOWER))
  "17-mers" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge131 60 "to" 61> #<edge132 60 to 61> #<edge133 61 reflect 62>) (:DIGITS :HYPHEN :LOWER))
  "53-peptide" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge76 32 protein 33> #<edge77 32 open-reading-frame 33> #<edge78 34 digit-sequence 35>)
   (:DIGITS :HYPHEN :LOWER))
  "17-mers" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge60 22 the 23> #<edge61 23 upstream-segment 24> #<edge62 23 upstream 24>)
   (:DIGITS :HYPHEN :LOWER))
  "27-peptide" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge17 314 wild-type 317> #<edge19 319 even-if 321> #<edge20 376 "wild-type" 379>
    #<edge21 376 wild-type 379>)
   (:SINGLE-CAP :SINGLE-DIGIT :HYPHEN :SINGLE-CAP))
  "F1-V" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge10 274 "such as" 276> #<edge12 285 "close to" 287>) (:SINGLE-CAP :SINGLE-DIGIT)) "F1"
  REIFY-TWO-PART-LABEL)
 (((#<edge73 30 the 31> #<edge74 31 downstream-segment 32> #<edge75 31 downstream 32>)
   (:LOWER :HYPHEN :LOWER))
  "half-life" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge229 123 downstream 124> #<edge230 124 "of" 125> #<edge231 124 of 125>)
   (:LOWER :HYPHEN :PROTEIN))
  "ligand-receptor" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge5 174 but-rather 176> #<edge88 46 number 47>) (:PROTEIN :LOWER)) "anti-phagocytic"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge40 11 "the" 12> #<edge42 12 importance 13>) (:SINGLE-CAP :SINGLE-DIGIT)) "F1"
  REIFY-TWO-PART-LABEL)
 (((#<edge507 290 site 291> #<edge508 261 point-mutation 263> #<edge509 268 hyphenated-pair 271>)
   (:LOWER :HYPHEN :LOWER))
  "amino-terminal" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge272 95 lambda-expression 96> #<edge273 94 bio-complex 97> #<edge274 98 bio-entity 100>)
   (:LOWER :HYPHEN :LOWER))
  "amino-terminal" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge105 9 suggest 11> #<edge106 11 importance 13> #<edge107 15 proximity 17>)
   (:LOWER :HYPHEN :LOWER))
  "amino-terminal" MAKE-HYPHENATED-STRUCTURE)
 (((:MIXED #<edge96 33 square-brackets 36>) (:MIXED :SINGLE-DIGIT)) "antiF1"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge290 130 detect 133> #<edge292 123 downstream 128> #<edge293 116 of 121>)
   (:SINGLE-CAP :SINGLE-DIGIT :HYPHEN))
  "F1-" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge230 124 "of" 125> #<edge231 124 of 125> #<edge232 125 "the" 126>)
   (:PROTEIN :HYPHEN :LOWER))
  "antibody-based" PACKAGE-QUALIFYING-PAIR)
 (((#<edge165 62 mobility 65> #<edge166 67 bio-complex 69> #<edge167 67 lambda-expression 68>)
   (:PROTEIN :HYPHEN :LOWER))
  "antibody-based" PACKAGE-QUALIFYING-PAIR)
 (((#<edge132 60 to 61> #<edge133 61 reflect 62> #<edge134 62 "a" 63>) (:PROTEIN :HYPHEN :LOWER))
  "antibody-based" PACKAGE-QUALIFYING-PAIR)
 (((#<edge86 44 COMMA 45> #<edge87 46 digit-sequence 47> #<edge88 46 number 47>)
   (:LOWER :HYPHEN :LOWER))
  "post-challenge" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge303 90 that 91> #<edge304 153 "this" 154> #<edge305 153 this 154>)
   (:LOWER :HYPHEN :LOWER))
  "half-life" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge290 130 detect 133> #<edge291 124 of 128> #<edge292 123 downstream 128>)
   (:LOWER :HYPHEN :LOWER))
  "half-life" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge766 424 HYPHEN 425> #<edge767 425 loop 426> #<edge47 15 close-bio-process 16>)
   (:CAPITALIZED :HYPHEN :BIO-COMPLEX))
  "Hu-IgG1" MAKE-HYPHENATED-STRUCTURE)
 (((:CAPITALIZED #<edge723 389 downstream-segment 390> :MIXED #<edge725 390 bio-entity 391>)
   (:CAPITALIZED :HYPHEN :MIXED :SINGLE-DIGIT))
  "Hu-antiF1" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:CAPITALIZED #<edge711 359 show 363> #<edge45 14 "the" 15>)
   (:CAPITALIZED :HYPHEN :BIO-COMPLEX))
  "Hu-IgG1" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:CAPITALIZED #<edge627 309 bio-complex 311> #<edge41 11 the 12>)
   (:CAPITALIZED :HYPHEN :BIO-COMPLEX))
  "Hu-IgG1" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:CAPITALIZED #<edge608 350 direction 351> #<edge37 8 bio-process 9>)
   (:CAPITALIZED :HYPHEN :BIO-COMPLEX))
  "Hu-IgG1" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:CAPITALIZED #<edge492 276 the 277> #<edge33 4 the 5>) (:CAPITALIZED :HYPHEN :BIO-COMPLEX))
  "Hu-IgG1" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge495 278 number 279> :PERIOD) (:POINT-MUTATION :PERIOD)) "6B."
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:CAPITALIZED #<edge431 243 lower 244> #<edge23 393 due-to 395>)
   (:CAPITALIZED :HYPHEN :BIO-COMPLEX))
  "Hu-IgG1" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:CAPITALIZED #<edge371 178 tethere 198> #<edge17 314 wild-type 317>)
   (:CAPITALIZED :HYPHEN :BIO-COMPLEX))
  "Hu-IgG1" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:CAPITALIZED #<edge262 147 position 148> #<edge7 184 by-virtue-of 187>)
   (:CAPITALIZED :HYPHEN :BIO-COMPLEX))
  "Hu-IgG1" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge635 338 bio-entity 340> #<edge636 340 cause 342> #<edge638 343 fragment 347>)
   (:SINGLE-DIGIT :FORWARD-SLASH :SINGLE-DIGIT))
  "5/6" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge592 340 modal 341> #<edge593 341 cause 342> #<edge595 342 "the" 343>)
   (:SINGLE-DIGIT :FORWARD-SLASH :SINGLE-DIGIT))
  "2/6" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge423 238 be 239> #<edge424 239 modifier 240> #<edge426 241 albeit 242>)
   (:SINGLE-DIGIT :FORWARD-SLASH :SINGLE-DIGIT))
  "6/6" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge322 166 stop 167> #<edge371 178 tethere 198> #<edge326 168 "per" 169>
    #<edge328 169 bio-entity 170> #<edge329 170 "that" 171> #<edge331 171 affect 172>)
   (:LOWER :TIME :HYPHEN :LOWER :HYPHEN :LOWER))
  "mean-time-to-death" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge241 132 even 133> #<edge242 132 even 133> #<edge244 133 when 134>)
   (:SINGLE-DIGIT :FORWARD-SLASH :SINGLE-DIGIT))
  "0/6" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge211 110 and 111> #<edge212 111 "that" 112> #<edge214 112 when 113>)
   (:SINGLE-DIGIT :FORWARD-SLASH :SINGLE-DIGIT))
  "1/6" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge177 65 of 69> #<edge252 141 digit-sequence 142> #<edge181 86 COMMA 87>
    #<edge183 87 pronoun/first/plural 88> #<edge184 88 show 89> #<edge186 90 "that" 91>)
   (:LOWER :TIME :HYPHEN :LOWER :HYPHEN :LOWER))
  "mean-time-to-death" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge469 255 "a" 256> #<edge470 255 a 256> #<edge471 256 downstream-segment 257>)
   (:LOWER :HYPHEN :LOWER))
  "whole-cells" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge371 178 tethere 198> #<edge372 170 affect 172> #<edge373 169 bio-entity 172>)
   (:LOWER :HYPHEN :LOWER))
  "whole-cells" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge121 15 close 16> :ASTERISK #<edge11 274 such-as 276>) (:DIGITS :ASTERISK :INITIAL))
  "26°C." REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge86 44 COMMA 45> #<edge151 74 modal 75>) (:SINGLE-CAP :MEASUREMENT)) "F1m"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge649 337 cause 347> #<edge650 336 suggest 347> #<edge651 326 of 335>)
   (:LOWER :HYPHEN :FULL))
  "competition-ELISA" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge501 283 digit-sequence 284> #<edge502 283 number 284>) (:SINGLE-DIGIT :SINGLE-LOWER))
  "2b" REIFY-TWO-PART-LABEL)
 (((#<edge362 189 between 191> #<edge364 166 bio-entity 168>) (:SINGLE-DIGIT :SINGLE-LOWER)) "3c"
  REIFY-TWO-PART-LABEL)
 (((#<edge308 155 that 156> #<edge309 156 "it" 157>) (:SINGLE-DIGIT :SINGLE-LOWER)) "3b"
  REIFY-TWO-PART-LABEL)
 (((#<edge196 97 and 98> #<edge198 98 the 99> #<edge199 99 bio-entity 100> #<edge200 100 be 101>)
   (:SINGLE-CAP :SINGLE-DIGIT :HYPHEN :LOWER))
  "F1-antigen" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge119 17 of 21> #<edge121 15 close 16>) (:SINGLE-CAP :SINGLE-DIGIT)) "F1"
  REIFY-TWO-PART-LABEL)
 (((#<edge40 11 "the" 12> #<edge42 12 importance 13> #<edge43 13 "of" 14>)
   (:SINGLE-CAP :SINGLE-DIGIT :HYPHEN))
  "F1-" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge53 18 the 19> #<edge697 369 protein 372>) (:PROTEIN :SINGLE-CAP)) "anti-V"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge51 17 of 18> #<edge690 375 either 376>) (:PROTEIN :SINGLE-CAP)) "anti-V"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge47 15 close-bio-process 16> #<edge681 369 protein 370> #<edge683 370 number 371>)
   (:PROTEIN :SINGLE-CAP :SINGLE-DIGIT))
  "anti-F1" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge45 14 "the" 15> #<edge670 363 that 364> #<edge706 372 in 383>
    #<edge676 366 acknowledgement 367>)
   (:PROTEIN :SINGLE-CAP :MEASUREMENT :DIGITS))
  "anti-F1 m252" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge43 13 "of" 14> #<edge656 298 of 304>) (:PROTEIN :SINGLE-CAP)) "anti-V"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge41 11 the 12> #<edge652 321 terminate 325> #<edge654 311 select 318>)
   (:PROTEIN :SINGLE-CAP :SINGLE-DIGIT))
  "anti-F1" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge39 10 suggest 11> #<edge633 328 window 330>) (:PROTEIN :SINGLE-CAP)) "anti-V"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge37 8 bio-process 9> #<edge629 314 bio-entity 318> #<edge631 321 bio-complex 323>)
   (:PROTEIN :SINGLE-CAP :SINGLE-DIGIT))
  "anti-F1" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge610 352 "to" 353> #<edge611 352 to 353> #<edge612 353 "the" 354>) (:LOWER :HYPHEN :FULL))
  "competition-ELISA" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge561 311 always 312> #<edge562 312 select 313>) (:SINGLE-DIGIT :SINGLE-LOWER)) "2d"
  REIFY-TWO-PART-LABEL)
 (((#<edge35 6 HYPHEN 7> #<edge539 295 modifier 296>) (:PROTEIN :SINGLE-CAP)) "anti-V"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge33 4 the 5> #<edge519 248 circumstance 250>) (:PROTEIN :SINGLE-CAP)) "anti-V"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge423 238 be 239> #<edge425 240 COMMA 241> #<edge426 241 albeit 242> #<edge428 242 at 243>
    #<edge429 243 comparative-modifier 244>)
   (:SINGLE-DIGIT :SINGLE-LOWER :HYPHEN :SINGLE-DIGIT :SINGLE-LOWER))
  "2a–2c" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge347 187 the 188> #<edge348 188 distance 189>) (:SINGLE-DIGIT :SINGLE-LOWER)) "2c"
  REIFY-TWO-PART-LABEL)
 (((#<edge27 1 sequencer 2> #<edge336 177 well-endurant 178> #<edge338 177 modifier 178>)
   (:PROTEIN :SINGLE-CAP :SINGLE-DIGIT))
  "anti-F1" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge25 415 protein 417> #<edge322 166 stop 167> #<edge349 189 between 190>
    #<edge328 169 bio-entity 170>)
   (:PROTEIN :SINGLE-CAP :MEASUREMENT :DIGITS))
  "anti-F1 m252" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge271 95 bio-complex 97> #<edge272 95 lambda-expression 96>) (:SINGLE-DIGIT :SINGLE-LOWER))
  "2b" REIFY-TWO-PART-LABEL)
 (((#<edge23 393 due-to 395> #<edge260 146 modifier 147>) (:PROTEIN :SINGLE-CAP)) "anti-V"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge21 376 wild-type 379> #<edge228 123 downstream-segment 124>) (:PROTEIN :SINGLE-CAP))
  "anti-V" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge19 319 even-if 321> #<edge213 111 that 112>) (:PROTEIN :SINGLE-CAP)) "anti-V"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge183 87 pronoun/first/plural 88> #<edge185 89 deictic-location 90>)
   (:SINGLE-DIGIT :SINGLE-LOWER))
  "2a" REIFY-TWO-PART-LABEL)
 (((#<edge17 314 wild-type 317> #<edge178 62 mobility 69>) (:PROTEIN :SINGLE-CAP)) "anti-V"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge15 300 wild-type 303> #<edge168 66 bio-complex 69>) (:PROTEIN :SINGLE-CAP)) "anti-V"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge13 285 close-to 287> #<edge118 21 of 25>) (:PROTEIN :SINGLE-CAP)) "anti-V"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge11 274 such-as 276> #<edge111 23 open-reading-frame 25>) (:PROTEIN :SINGLE-CAP)) "anti-V"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge7 184 by-virtue-of 187> #<edge96 33 square-brackets 36> #<edge98 41 square-brackets 44>)
   (:PROTEIN :SINGLE-CAP :SINGLE-DIGIT))
  "anti-F1" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge64 24 open-reading-frame 25> #<edge65 25 and 26> #<edge66 26 "the" 27>)
   (:LOWER :HYPHEN :MIXED))
  "competition-ELISAs" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge177 65 of 69> #<edge183 87 pronoun/first/plural 88>) (:LOWER :UNIT-OF-MEASURE)) "sub-nM"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge154 77 "to" 78> #<edge155 77 to 78>) (:SINGLE-DIGIT :SINGLE-LOWER)) "1b"
  REIFY-TWO-PART-LABEL)
 (((#<edge116 29 of 36> #<edge123 15 close 16>) (:LOWER :UNIT-OF-MEASURE)) "sub-nM"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge3 139 up-to 141> #<edge100 49 square-brackets 52> #<edge102 1 study-bio-method 3>)
   (:PROTEIN :SINGLE-CAP :SINGLE-DIGIT))
  "Anti-F1" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge78 34 digit-sequence 35> #<edge79 34 number 35>) (:SINGLE-DIGIT :SINGLE-LOWER)) "1b"
  REIFY-TWO-PART-LABEL)
 (((#<edge452 213 site 226> #<edge453 242 at 245>) (:SINGLE-DIGIT :SINGLE-LOWER)) "1c"
  REIFY-TWO-PART-LABEL)
 (((#<edge9 214 wild-type 217> #<edge440 202 reinitiation 204>) (:CELL-LINE :SINGLE-CAP))
  "HEK 293F" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge403 221 amino-acid 222> #<edge405 222 and 223>) (:SINGLE-DIGIT :SINGLE-LOWER)) "1a"
  REIFY-TWO-PART-LABEL)
 (((:FULL #<edge388 206 bio-entity 207>) (:FULL :DIGITS)) "HB2152" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:FULL #<edge264 149 article-figure 150> :ASTERISK #<edge266 150 number 151>)
   (:FULL :HYPHENATED-NUMBER :ASTERISK :DIGITS))
  "IGKV1-27*01" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:FULL #<edge258 144 of 145> :ASTERISK #<edge260 146 modifier 147>)
   (:FULL :HYPHENATED-NUMBER :ASTERISK :DIGITS))
  "IGHV3-43*01" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:FULL #<edge243 133 when 134> :ASTERISK #<edge245 134 "the" 135>)
   (:FULL :HYPHENATED-NUMBER :ASTERISK :DIGITS))
  "IGKV1-9*01" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:FULL #<edge237 128 COMMA 129> :ASTERISK #<edge239 130 be 131>)
   (:FULL :HYPHENATED-NUMBER :ASTERISK :DIGITS))
  "IGHV1-18*01" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge1 118 protein 120> :ASTERISK #<edge215 112 when 113>) (:PROTEIN :ASTERISK :DIGITS))
  "IGKV1-16*01" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:FULL #<edge210 108 number 109> :ASTERISK #<edge212 111 "that" 112>)
   (:FULL :HYPHENATED-NUMBER :ASTERISK :DIGITS))
  "IGHV1-2*02" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge43 13 "of" 14> #<edge45 14 "the" 15>) (:SINGLE-CAP :SINGLE-DIGIT)) "F1"
  REIFY-TWO-PART-LABEL)
 (((#<edge15 300 wild-type 303> #<edge17 314 wild-type 317>) (:SINGLE-CAP :SINGLE-DIGIT)) "F1"
  REIFY-TWO-PART-LABEL)
 (((#<edge57 21 "of" 22> #<edge59 22 "the" 23> #<edge60 22 the 23>)
   (:SINGLE-CAP :SINGLE-DIGIT :HYPHEN))
  "F1-" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge17 314 wild-type 317> #<edge380 199 however 200>) (:PROTEIN :LOWER)) "anti-plague"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge7 184 by-virtue-of 187> #<edge203 103 "to" 104>) (:PROTEIN :LOWER)) "anti-plague"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge147 71 be 72> #<edge148 72 COMMA 73> #<edge150 73 pronoun/inanimate 74>
    #<edge151 74 modal 75> #<edge152 75 be 76>)
   (:LOWER :HYPHEN :LOWER :HYPHEN :LOWER))
  "proof-of-concept" MAKE-HYPHENATED-TRIPLE)
 (((#<edge93 54 digit-sequence 55> #<edge95 5 hyphenated-pair 8>) (:SINGLE-CAP :SINGLE-DIGIT)) "F1"
  REIFY-TWO-PART-LABEL)
 (((#<edge22 393 "due to" 395> #<edge23 393 due-to 395> #<edge24 415 "eif3" 417>
    #<edge25 415 protein 417> #<edge26 415 bio-complex 417>)
   (:LOWER :HYPHEN :LOWER :HYPHEN :LOWER))
  "multiple-antibiotic-resistant" MAKE-HYPHENATED-TRIPLE)
 (((#<edge250 138 move-something-somewhere 139> #<edge251 138 move-to 139>
    #<edge252 141 digit-sequence 142>)
   (:LOWER :HYPHEN :LOWER))
  "whole-cell" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge243 133 when 134> #<edge244 133 when 134> #<edge245 134 "the" 135>)
   (:LOWER :HYPHEN :LOWER))
  "whole-cell" MAKE-HYPHENATED-STRUCTURE)
 (((:LOWER #<edge157 79 only 80> #<edge159 81 movement 82>) (:LOWER :HYPHEN :LOWER))
  "biodefense-related" :NO-EDGE)
 (((#<edge21 376 wild-type 379> #<edge23 393 due-to 395>) (:SINGLE-CAP :SINGLE-DIGIT)) "S1"
  REIFY-TWO-PART-LABEL)
 (((#<edge320 164 start 165> #<edge321 165 and 166> #<edge322 166 stop 167>)
   (:LOWER :HYPHEN :LOWER))
  "self-efficacy" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge261 147 position-bio-process 148> #<edge262 147 position 148> #<edge263 149 figure 150>
    #<edge264 149 article-figure 150> #<edge265 150 digit-sequence 151>)
   (:LOWER :FORWARD-SLASH :LOWER :HYPHEN :LOWER))
  "worry/affect-driven" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge448 236 bio-entity 238> #<edge449 235 bio-entity 238>) (:DIGITS :LOWER)) "10pm"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge315 160 the 161> #<edge316 161 distance 162> #<edge317 162 between 163>)
   (:LOWER :HYPHEN :LOWER))
  "self-efficacy" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge2 139 "up to" 141> #<edge3 139 up-to 141> #<edge4 174 "but rather" 176>)
   (:CAPITALIZED :HYPHEN :LOWER))
  "Self-efficacy" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge337 177 well-adverbial 178> #<edge338 177 modifier 178> #<edge341 178 the 179>)
   (:DIGITS :FORWARD-SLASH :DIGITS))
  "997/14,297" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge300 88 show 90> #<edge301 87 show 90> #<edge303 90 that 91>) (:LOWER :HYPHEN :LOWER))
  "high-risk" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge23 393 due-to 395> #<edge1 118 protein 120>) (:LOWER :-LIKE)) "herd-like"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge7 184 by-virtue-of 187> #<edge8 214 "wild-type" 217> #<edge9 214 wild-type 217>)
   (:CAPITALIZED :HYPHEN :LOWER))
  "Self-efficacy" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge224 120 protein 121> #<edge225 120 open-reading-frame 121> #<edge226 121 be 122>)
   (:LOWER :HYPHEN :CAPITALIZED))
  "information-Understanding" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge194 95 terminate 96> #<edge195 96 bio-complex 97> #<edge196 97 and 98>)
   (:CAPITALIZED :HYPHEN :LOWER))
  "Self-efficacy" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge117 27 start 29> #<edge118 21 of 25> #<edge119 17 of 21>) (:LOWER :HYPHEN :LOWER))
  "marginally-significantly" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge361 191 bio-complex 197> #<edge362 189 between 191> #<edge363 183 parentheses 198>)
   (:CAPITALIZED :HYPHEN :LOWER))
  "Self-efficacy" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge275 104 efficiency 106> #<edge276 118 open-reading-frame 121>
    #<edge277 117 open-reading-frame 121>)
   (:FULL :HYPHEN :PROTEIN))
  "SARS-type" MAKE-HYPHENATED-PAIR)
 (((#<edge263 149 figure 150> #<edge264 149 article-figure 150> #<edge265 150 digit-sequence 151>)
   (:LOWER :HYPHEN :LOWER))
  "self-efficacy" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge3 139 up-to 141> #<edge177 65 of 69>) (:BIO-ENTITY :LOWER)) "A/H1N1influenza"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge103 5 bio-process 9> #<edge104 4 bio-process 9> #<edge105 9 suggest 11>)
   (:LOWER :HYPHEN :LOWER))
  "action-oriented" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge78 34 digit-sequence 35> #<edge79 34 number 35> #<edge80 36 COMMA 37>)
   (:LOWER :HYPHEN :LOWER))
  "self-efficacy" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge47 15 close-bio-process 16> #<edge48 15 close 16> #<edge49 16 proximity 17>)
   (:CAPITALIZED :HYPHEN :LOWER))
  "Self-efficacy" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge42 12 importance 13> #<edge43 13 "of" 14> #<edge44 13 of 14>)
   (:CAPITALIZED :HYPHEN :LOWER))
  "Self-efficacy" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge150 73 pronoun/inanimate 74> #<edge151 74 modal 75> #<edge152 75 be 76>)
   (:LOWER :HYPHEN :LOWER))
  "self-efficacy" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge105 9 suggest 11> #<edge106 11 importance 13> #<edge107 15 proximity 17>)
   (:CAPITALIZED :HYPHEN :LOWER))
  "Self-efficacy" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge25 415 protein 417> #<edge27 1 sequencer 2>) (:SINGLE-CAP :SINGLE-DIGIT)) "S4"
  REIFY-TWO-PART-LABEL)
 (((#<edge49 16 proximity 17> :LESS-THAN_OR_EQUAL_TO #<edge52 18 "the" 19>)
   (:FULL :LESS-THAN_OR_EQUAL_TO :DIGITS))
  "RMSEA≤0.030" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge43 13 "of" 14> :GREATER-THAN_OR_EQUAL_TO #<edge46 14 the 15>)
   (:FULL :GREATER-THAN_OR_EQUAL_TO :DIGITS))
  "TLI≥0.950" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge38 9 have 10> :CLOSE-ANGLE-BRACKET #<edge41 11 the 12>)
   (:PROTEIN :CLOSE-ANGLE-BRACKET :DIGITS))
  "CFI>0.960" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge90 50 digit-sequence 51> #<edge91 50 number 51> #<edge92 52 COMMA 53>)
   (:CAPITALIZED :HYPHEN :LOWER))
  "Self-efficacy" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge153 76 ability 77> #<edge154 77 "to" 78> #<edge155 77 to 78>)
   (:CAPITALIZED :HYPHEN :LOWER))
  "Self-efficacy" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge36 7 reinitiation 8> :GREATER-THAN_OR_EQUAL_TO #<edge39 10 suggest 11>)
   (:FULL :GREATER-THAN_OR_EQUAL_TO :DIGITS))
  "TLI≥0.970" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge31 3 on 4> :CLOSE-ANGLE-BRACKET #<edge34 5 terminate 6>)
   (:PROTEIN :CLOSE-ANGLE-BRACKET :DIGITS))
  "CFI>0.970" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge6 184 "by virtue of" 187> #<edge655 309 select 318> :CLOSE-ANGLE-BRACKET
    #<edge658 294 give 298>)
   (:PHOSPHORYLATE :LOWER :CLOSE-ANGLE-BRACKET :DIGITS))
  "p-value>0.05" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge392 209 or 210> :GREATER-THAN_OR_EQUAL_TO #<edge395 212 COMMA 213>)
   (:LITTLE-P :GREATER-THAN_OR_EQUAL_TO :DIGITS))
  "p≥0.05" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge353 192 bio-complex 193> #<edge354 193 terminate 194> #<edge356 195 "the" 196>)
   (:LOWER :HYPHEN :LOWER))
  "multi-group" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge314 160 "the" 161> #<edge315 160 the 161> #<edge317 162 between 163>)
   (:DIGITS :HYPHEN :LOWER))
  "four-group" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge14 300 "wild-type" 303> #<edge15 300 wild-type 303> #<edge17 314 wild-type 317>)
   (:LOWER :HYPHEN :LOWER))
  "multi-group" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge429 243 comparative-modifier 244> #<edge431 243 lower 244>)
   (:SINGLE-LOWER :SINGLE-DIGIT))
  "χ2" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge400 219 article-figure 220> #<edge402 220 number 221>) (:SINGLE-LOWER :SINGLE-DIGIT))
  "χ2" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge295 103 to 110> #<edge296 101 critical 103> #<edge297 100 critical 103>)
   (:LOWER :HYPHEN :LOWER))
  "in-laws" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge282 146 position 148> #<edge283 145 position 148> #<edge284 145 position 152>)
   (:LOWER :HYPHEN :LOWER))
  "educationally-favoured" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge205 104 reinitiation 105> #<edge206 105 efficiency 106> #<edge207 107 figure 108>)
   (:LOWER :FORWARD-SLASH :LOWER))
  "college/university" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge116 29 of 36> #<edge117 27 start 29> #<edge5 174 but-rather 176>)
   (:LOWER :HYPHEN :OFF-OF))
  "cut-off of" MAKE-HYPHENATED-STRUCTURE)
 (((:CLOSE-ANGLE-BRACKET #<edge57 21 "of" 22>) (:CLOSE-ANGLE-BRACKET :DIGITS)) ">45"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:OPEN-ANGLE-BRACKET #<edge53 18 the 19>) (:OPEN-ANGLE-BRACKET :DIGITS)) "<45"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge257 144 "of" 145> :OPEN-ANGLE-BRACKET #<edge260 146 modifier 147>)
   (:FULL :OPEN-ANGLE-BRACKET :DIGITS))
  "RMSEA<0.05" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge251 138 move-to 139> :CLOSE-ANGLE-BRACKET #<edge254 142 bio-entity 143>)
   (:FULL :CLOSE-ANGLE-BRACKET :DIGITS))
  "TLI>0.95" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge246 134 the 135> :CLOSE-ANGLE-BRACKET #<edge249 137 be 138>)
   (:PROTEIN :CLOSE-ANGLE-BRACKET :DIGITS))
  "CFI>0.95" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge196 97 and 98> #<edge197 98 "the" 99> #<edge198 98 the 99>)
   (:CAPITALIZED :HYPHEN :CAPITALIZED))
  "Tucker-Lewis" MAKE-HYPHENATED-STRUCTURE)
 (((:LOWER #<edge167 67 lambda-expression 68> #<edge171 79 limit 81>) (:LOWER :HYPHEN :LOWER))
  "chi-square" :NO-EDGE)
 (((#<edge110 18 bio-entity 21> #<edge111 23 open-reading-frame 25>
    #<edge112 22 open-reading-frame 25>)
   (:LOWER :HYPHEN :LOWER))
  "variance-adjusted" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge306 154 suggest 155> #<edge307 155 "that" 156> #<edge308 155 that 156>)
   (:LOWER :FORWARD-SLASH :LOWER))
  "cognitive/affective" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge189 91 the 92> #<edge190 92 distance 93> #<edge191 93 between 94>)
   (:LOWER :HYPHEN :LOWER))
  "self-efficacy" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge174 74 ability 77> #<edge175 73 ability 77>) (:LOWER :COLON)) "premises:" :NO-EDGE)
 (((#<edge137 64 mobility 65> #<edge138 65 "of" 66> #<edge139 65 of 66>)
   (:LOWER :FORWARD-SLASH :LOWER))
  "cognitive/affective" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge119 17 of 21> #<edge121 15 close 16>) (:SINGLE-CAP :SINGLE-DIGIT)) "S1"
  REIFY-TWO-PART-LABEL)
 (((#<edge166 67 bio-complex 69> #<edge168 66 bio-complex 69>) (:SINGLE-CAP :SINGLE-DIGIT)) "S1"
  REIFY-TWO-PART-LABEL)
 (((#<edge116 29 of 36> #<edge117 27 start 29> #<edge119 17 of 21>) (:SINGLE-DIGIT :HYPHEN :LOWER))
  "4-point" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge34 5 terminate 6> #<edge35 6 HYPHEN 7>) (:LOWER :COLON)) "interview:" :NO-EDGE)
 (((#<edge75 31 downstream 32> #<edge77 32 open-reading-frame 33>) (:SINGLE-CAP :SINGLE-DIGIT))
  "S1" REIFY-TWO-PART-LABEL)
 (((#<edge51 17 of 18> #<edge52 18 "the" 19> #<edge54 19 stop 20>) (:SINGLE-DIGIT :HYPHEN :LOWER))
  "5-point" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge50 17 "of" 18> #<edge52 18 "the" 19>) (:SINGLE-CAP :SINGLE-DIGIT)) "S1"
  REIFY-TWO-PART-LABEL)
 (((#<edge101 53 square-brackets 56> #<edge103 5 bio-process 9>) (:SINGLE-CAP :SINGLE-DIGIT)) "S1"
  REIFY-TWO-PART-LABEL)
 (((#<edge83 40 COMMA 41> #<edge84 42 digit-sequence 43> #<edge86 44 COMMA 45>)
   (:SINGLE-DIGIT :HYPHEN :LOWER))
  "5-point" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge23 393 due-to 395> #<edge24 415 "eif3" 417> #<edge25 415 protein 417>)
   (:LOWER :HYPHEN :LOWER))
  "self-efficacy" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge38 9 have 10> #<edge39 10 suggest 11> #<edge41 11 the 12>) (:DIGITS :HYPHEN :LOWER))
  "five-point" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge17 314 wild-type 317> #<edge19 319 even-if 321>) (:SINGLE-CAP :SINGLE-DIGIT)) "S1"
  REIFY-TWO-PART-LABEL)
 (((#<edge51 17 of 18> #<edge52 18 "the" 19> #<edge54 19 stop 20>) (:DIGITS :HYPHEN :LOWER))
  "five-point" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge27 1 sequencer 2> #<edge29 2 study-data 3>) (:SINGLE-CAP :SINGLE-DIGIT)) "S1"
  REIFY-TWO-PART-LABEL)
 (((#<edge8 214 "wild-type" 217> #<edge9 214 wild-type 217> #<edge10 274 "such as" 276>)
   (:LOWER :FORWARD-SLASH :LOWER))
  "government/media" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge33 4 the 5> #<edge34 5 terminate 6> #<edge35 6 HYPHEN 7>) (:LOWER :HYPHEN :LOWER))
  "mid-way" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge194 95 terminate 96> #<edge195 96 bio-complex 97> #<edge196 97 and 98>)
   (:LOWER :HYPHEN :LOWER))
  "formally-announced" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge797 384 as 386> #<edge798 384 copular-predication 400> #<edge799 inactive, resource 799>)
   (:LOWER :HYPHEN :LOWER))
  "intention-based" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge237 128 COMMA 129> #<edge238 129 reinitiation 130> #<edge239 130 be 131>)
   (:LOWER :HYPHEN :LOWER))
  "sexually-transmitted" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge165 62 mobility 65> #<edge166 67 bio-complex 69> #<edge167 67 lambda-expression 68>)
   (:FULL :FORWARD-SLASH :FULL))
  "HIV/AIDS" MAKE-HYPHENATED-PAIR)
 (((#<edge64 24 open-reading-frame 25> #<edge65 25 and 26> #<edge66 26 "the" 27>)
   (:LOWER :HYPHEN :LOWER))
  "evidence-based" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge37 8 bio-process 9> #<edge38 9 have 10> #<edge41 11 the 12>) (:LOWER :HYPHEN :LOWER))
  "behaviour-change" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge152 75 be 76> #<edge129 58 be 59> #<edge153 76 ability 77>) (:ORDINAL :HYPHEN :ORDINAL))
  "23rd–25th" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge112 22 open-reading-frame 25> #<edge113 31 open-reading-frame 33>
    #<edge115 30 open-reading-frame 36> #<edge116 29 of 36> #<edge117 27 start 29>
    #<edge119 17 of 21> #<edge120 14 proximity 21> #<edge122 14 proximity 25>
    #<edge123 15 close 16>)
   (:SINGLE-DIGIT :COLON :DIGITS :LOWER :HYPHEN :DIGITS :COLON :DIGITS :LOWER))
  "8:30pm–10:45pm" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:CLOSE-ANGLE-BRACKET #<edge70 29 "of" 30>) (:CLOSE-ANGLE-BRACKET :SINGLE-DIGIT)) ">4"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge63 24 protein 25> :GREATER-THAN_OR_EQUAL_TO #<edge65 25 and 26>)
   (:LOWER :GREATER-THAN_OR_EQUAL_TO :DIGITS))
  "age≥18" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:CAPITALIZED #<edge58 21 of 22> #<edge59 22 "the" 23>) (:CAPITALIZED :HYPHEN :LOWER))
  "Cantonese-speaking" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge20 376 "wild-type" 379> #<edge22 393 "due to" 395>) (:SINGLE-CAP :SINGLE-DIGIT)) "S1"
  REIFY-TWO-PART-LABEL)
 (((#<edge320 164 start 165> #<edge321 165 and 166> #<edge323 166 stop-endurant 167>)
   (:LOWER :HYPHEN :LOWER))
  "telephone-survey" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge57 21 "of" 22> #<edge58 21 of 22> #<edge59 22 "the" 23>) (:LOWER :HYPHEN :LOWER))
  "cost-effective" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge48 15 close 16> #<edge49 16 proximity 17> #<edge50 17 "of" 18>) (:LOWER :HYPHEN :LOWER))
  "random-sampling" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge45 14 "the" 15> #<edge46 14 the 15> #<edge47 15 close-bio-process 16>)
   (:LOWER :HYPHEN :LOWER))
  "within-household" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge37 8 bio-process 9> #<edge38 9 have 10> #<edge39 10 suggest 11>)
   (:CAPITALIZED :HYPHEN :LOWER))
  "Random-digit" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge1 118 protein 120> #<edge24 415 "eif3" 417> #<edge25 415 protein 417>)
   (:REGION-TYPE :FORWARD-SLASH :CAPITALIZED))
  "Hong Kong/Hospital" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge588 337 that 338> #<edge589 338 "the" 339> #<edge590 338 the 339>)
   (:LOWER :FORWARD-SLASH :LOWER))
  "risk/prevention" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge567 321 "the" 322> #<edge569 322 bio-complex 323>) (:SINGLE-CAP :SINGLE-DIGIT)) "S1"
  REIFY-TWO-PART-LABEL)
 (((#<edge460 247 the 248> #<edge461 248 sequencer 249> #<edge462 249 circumstance 250>)
   (:LOWER :HYPHEN :LOWER))
  "self-efficacy" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge392 209 or 210> #<edge393 210 very 211> #<edge394 211 near 212>)
   (:CAPITALIZED :HYPHEN :LOWER))
  "Self-efficacy" MAKE-HYPHENATED-STRUCTURE)
 (((:TILDA #<edge359 191 bio-complex 193>) (:TILDA :PERCENT)) "∼25%" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge337 177 well-adverbial 178> #<edge338 177 modifier 178> #<edge339 177 well 178>)
   (:LOWER :HYPHEN :LOWER))
  "self-efficacy" MAKE-HYPHENATED-STRUCTURE)
 (((:TILDA #<edge358 196 bio-entity 197>) (:TILDA :PERCENT)) "∼35%" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge176 70 be 72> #<edge177 65 of 69> #<edge178 62 mobility 69>) (:LOWER :HYPHEN :LOWER))
  "self-efficacy" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge126 3 on 9> #<edge127 57 "this" 58> #<edge128 57 this 58>) (:LOWER :HYPHEN :LOWER))
  "self-efficacy" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge113 31 open-reading-frame 33> #<edge114 30 open-reading-frame 33>
    #<edge115 30 open-reading-frame 36>)
   (:CAPITALIZED :FORWARD-SLASH :CAPITALIZED))
  "Action/Planned" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge205 104 reinitiation 105> #<edge206 105 efficiency 106>
    #<edge209 108 digit-sequence 109>)
   (:LOWER :HYPHEN :PROTEIN))
  "face-mask" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge102 1 study-bio-method 3> #<edge103 5 bio-process 9> #<edge104 4 bio-process 9>)
   (:LOWER :FORWARD-SLASH :LOWER))
  "epidemic/pandemic" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge8 214 "wild-type" 217> #<edge9 214 wild-type 217> #<edge2 139 "up to" 141>)
   (:SINGLE-CAP :FORWARD-SLASH :AVIAN-FLU))
  "A/H1N1" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge413 230 modal 231> #<edge414 231 be 232> #<edge415 232 bio-use 233>)
   (:CAPITALIZED :HYPHEN :LOWER))
  "Co-localization" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge11 274 such-as 276> #<edge85 42 number 43>) (:PROTEIN :PLUS-SIGN)) "D35+"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge7 184 by-virtue-of 187> #<edge82 38 number 39>) (:PROTEIN :PLUS-SIGN)) "CD68+"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge508 261 point-mutation 263> #<edge509 268 hyphenated-pair 271> #<edge510 277 number 279>)
   (:LOWER :HYPHEN :LOWER))
  "in-vitro" MAKE-HYPHENATED-STRUCTURE)
 (((:LOWER #<edge396 213 "the" 214> #<edge398 217 site 218> #<edge399 219 figure 220>
    #<edge400 219 article-figure 220> #<edge401 220 digit-sequence 221>
    #<edge403 221 amino-acid 222> #<edge404 221 a 222> :LOWER #<edge405 222 and 223>
    #<edge407 223 number 224> #<edge408 224 amino-acid 225> :LOWER)
   (:LOWER :FORWARD-SLASH :SINGLE-DIGIT :HYPHEN :LOWER :HYPHEN :SINGLE-DIGIT :HYPHEN :LOWER :HYPHEN
    :SINGLE-DIGIT :HYPHEN :LOWER))
  "tetrazolium/5-bromo-4-choloro-3-indolyl" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge370 180 tethere 198> #<edge371 178 tethere 198> #<edge373 169 bio-entity 172>)
   (:SINGLE-DIGIT :COLON :DIGITS))
  "1∶1000" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge355 194 and 195> #<edge356 195 "the" 196> #<edge358 196 bio-entity 197>)
   (:SINGLE-DIGIT :COLON :DIGITS))
  "1∶100" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge307 155 "that" 156> :TILDA #<edge312 158 not 159>) (:DIGITS :TILDA :AMOUNT-OF-TIME))
  "16∼18 h" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge192 94 "the" 95> #<edge193 94 the 95> #<edge194 95 terminate 96>)
   (:LOWER :HYPHEN :LOWER))
  "positive-stranded" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge175 73 ability 77> #<edge176 70 be 72> #<edge177 65 of 69>) (:LOWER :HYPHEN :LOWER))
  "negative-stranded" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge153 76 ability 77> #<edge154 77 "to" 78> #<edge155 77 to 78>) (:LOWER :HYPHEN :LOWER))
  "negative-stranded" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge100 49 square-brackets 52> #<edge101 53 square-brackets 56>
    #<edge102 1 study-bio-method 3>)
   (:LOWER :HYPHEN :NUCLEOTIDE))
  "digoxigenin-UTP" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge230 124 "of" 125> #<edge231 124 of 125> #<edge233 125 the 126>)
   (:SINGLE-DIGIT :COLON :DIGITS))
  "1∶100" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge153 76 ability 77> #<edge154 77 "to" 78> #<edge155 77 to 78>)
   (:PROTEIN :FORWARD-SLASH :FULL))
  "TRIS/EDTA" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge145 70 "that" 71> #<edge146 70 that 71> #<edge147 71 be 72>) (:LOWER :HYPHEN :LOWER))
  "heat-treated" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge37 8 bio-process 9> #<edge38 9 have 10> #<edge39 10 suggest 11>)
   (:DIGITS :HYPHEN :LOWER))
  "two-step" MAKE-HYPHENATED-STRUCTURE)
 (((:TILDA #<edge476 260 article-figure 261>) (:TILDA :DIGITS)) "∼10" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge406 223 digit-sequence 224> :ASTERISK #<edge407 223 number 224>)
   (:DIGITS :ASTERISK :SINGLE-CAP))
  "72°C" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge395 212 COMMA 213> :ASTERISK #<edge396 213 "the" 214>) (:DIGITS :ASTERISK :SINGLE-CAP))
  "55°C" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge371 178 tethere 198> :ASTERISK #<edge372 170 affect 172>)
   (:DIGITS :ASTERISK :SINGLE-CAP))
  "94°C" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge332 172 reinitiation 173> :ASTERISK :CAPITALIZED) (:DIGITS :ASTERISK :CAPITALIZED))
  "50°Cfor" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge100 49 square-brackets 52> #<edge102 1 study-bio-method 3>) (:SINGLE-CAP :SINGLE-DIGIT))
  "H5" REIFY-TWO-PART-LABEL)
 (((#<edge245 134 "the" 135> #<edge246 134 the 135> #<edge247 135 start 136>)
   (:LOWER :FORWARD-SLASH :LOWER))
  "phenyl/chloroform" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge155 77 to 78> #<edge156 78 undergo 79> #<edge158 80 limit 81>) (:LOWER :HYPHEN :LOWER))
  "clean-up" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge39 10 suggest 11> #<edge40 11 "the" 12> :CAPITALIZED #<edge41 11 the 12>
    #<edge43 13 "of" 14> #<edge44 13 of 14> #<edge45 14 "the" 15>)
   (:SINGLE-CAP :FORWARD-SLASH :CAPITALIZED :FORWARD-SLASH :SINGLE-DIGIT :FORWARD-SLASH :DIGITS))
  "A/Anhui/1/2005" PACKAGE-SLASHED-SEQUENCE)
 (((:FULL #<edge234 126 stop 127> #<edge236 127 bio-entity 128>) (:FULL :HYPHEN :SINGLE-DIGIT))
  "BSL-3" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge198 98 the 99> #<edge199 99 bio-entity 100> #<edge201 101 comparative 102>)
   (:LOWER :HYPHEN :LOWER))
  "hemagglutination-negative" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge159 81 movement 82> :ASTERISK #<edge3 139 up-to 141>) (:DIGITS :ASTERISK :INITIAL))
  "35°C." REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge67 26 the 27> #<edge68 27 start 28> #<edge70 29 "of" 30>) (:CAPITALIZED :HYPHEN :DIGITS))
  "Twenty-four" MAKE-HYPHENATED-STRUCTURE)
 (((:MIXED #<edge387 205 an 206> #<edge388 206 bio-entity 207>) (:MIXED :HYPHEN :FULL)) "rRT-PCR"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge212 111 "that" 112> :ASTERISK #<edge213 111 that 112>) (:DIGITS :ASTERISK :SINGLE-CAP))
  "40.3°C" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge102 1 study-bio-method 3> #<edge103 5 bio-process 9> #<edge104 4 bio-process 9>)
   (:LOWER :HYPHEN :LOWER))
  "open-air" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge15 300 wild-type 303> #<edge166 67 bio-complex 69>) (:PROTEIN :PLUS-SIGN)) "CD3+"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge187 90 that 91> #<edge188 91 "the" 92> #<edge189 91 the 92>) (:LOWER :HYPHEN :LOWER))
  "immuno-response" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge300 88 show 90> #<edge301 87 show 90> #<edge302 85 show 90>)
   (:LOWER :FORWARD-SLASH :LOWER))
  "lytic/replicative" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge351 191 "the" 192> #<edge352 191 the 192> #<edge353 192 bio-complex 193>)
   (:LOWER :HYPHEN :LOWER))
  "in-vivo" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge347 187 the 188> #<edge348 188 distance 189> #<edge349 189 between 190>)
   (:LOWER :HYPHEN :LOWER))
  "in-vitro" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge107 15 proximity 17> #<edge108 14 proximity 17> #<edge109 19 bio-entity 21>)
   (:LOWER :HYPHEN :LOWER))
  "lymph-node" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge541 296 "a" 297> #<edge542 296 a 297> #<edge543 297 choice-endurant 298>)
   (:LOWER :HYPHEN :LOWER))
  "lymph-nodes" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge27 1 sequencer 2> #<edge258 144 of 145>) (:PROTEIN :LOWER)) "anti-sense"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge230 124 "of" 125> #<edge231 124 of 125> #<edge232 125 "the" 126>)
   (:LOWER :HYPHEN :LOWER))
  "negative-strand" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge128 57 this 58> #<edge129 58 be 59> #<edge130 59 believe 60>) (:LOWER :HYPHEN :LOWER))
  "lymph-node" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge140 66 "the" 67> #<edge141 66 the 67> #<edge142 67 tethere 68>) (:LOWER :HYPHEN :LOWER))
  "lymph-node" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge569 322 bio-complex 323> :CLOSE-ANGLE-BRACKET #<edge572 325 downstream-segment 326>)
   (:SINGLE-CAP :CLOSE-ANGLE-BRACKET :DIGITS))
  "P>0.05" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge547 299 "a" 300> #<edge549 303 bio-entity 304>) (:SINGLE-CAP :SINGLE-DIGIT)) "S1"
  REIFY-TWO-PART-LABEL)
 (((#<edge318 163 "the" 164> #<edge319 163 the 164> #<edge320 164 start 165>)
   (:LOWER :HYPHEN :LOWER))
  "lymph-node" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge291 124 of 128> #<edge292 123 downstream 128>) (:SINGLE-DIGIT :SINGLE-LOWER)) "3β"
  REIFY-TWO-PART-LABEL)
 (((#<edge259 145 pronoun/inanimate 146> #<edge261 147 position-bio-process 148>)
   (:SINGLE-CAP :SINGLE-DIGIT))
  "S1" REIFY-TWO-PART-LABEL)
 (((#<edge159 81 movement 82> #<edge160 82 following-adj 83> #<edge161 82 following 83>)
   (:LOWER :HYPHEN :LOWER))
  "lymph-node" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge390 207 at 208> #<edge391 208 COMMA 209> #<edge392 209 or 210>) (:LOWER :HYPHEN :LOWER))
  "multi-organs" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge317 162 between 163> #<edge318 163 "the" 164> #<edge320 164 start 165>
    #<edge321 165 and 166> #<edge322 166 stop 167>)
   (:LOWER :HYPHEN :LOWER :HYPHEN :LOWER))
  "person-to-person" MAKE-HYPHENATED-TRIPLE)
 (((#<edge262 147 position 148> #<edge263 149 figure 150> #<edge265 150 digit-sequence 151>
    #<edge266 150 number 151> #<edge267 85 subordinate-conjunction 87>)
   (:LOWER :HYPHEN :LOWER :HYPHEN :LOWER))
  "human-to-human" MAKE-HYPHENATED-TRIPLE)
 (((#<edge37 8 bio-process 9> #<edge38 9 have 10> #<edge39 10 suggest 11>)
   (:SINGLE-LOWER :HYPHEN :LOWER))
  "β-sheet" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge98 41 square-brackets 44> #<edge99 45 square-brackets 48>
    #<edge101 53 square-brackets 56>)
   (:LOWER :COLON :CAPITALIZED))
  "activity:The" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge185 89 deictic-location 90> #<edge186 90 "that" 91> :LOWER)
   (:SINGLE-DIGIT :HYPHEN :LOWER))
  "2-carboxyethyl" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge68 27 start 28> :MULTIPLICATION-SIGN #<edge70 29 "of" 30>)
   (:DIGITS :MULTIPLICATION-SIGN :SINGLE-DIGIT))
  "19×8" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge38 9 have 10> #<edge24 415 "eif3" 417> #<edge25 415 protein 417>
    #<edge26 415 bio-complex 417> :FULL #<edge27 1 sequencer 2> #<edge28 2 study-bio-method 3>)
   (:RESIDUE-ON-PROTEIN :HYPHEN :PROTEIN :HYPHEN :FULL :HYPHEN :PROTEIN))
  "His6-CFP-TSAVLQSGFRKM-YFP" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge13 285 close-to 287> #<edge1 118 protein 120>) (:MIXED :PROTEIN)) "pET3a"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:LOWER #<edge453 242 at 245> #<edge454 238 modifier 240>) (:LOWER :HYPHEN :LOWER))
  "pre-equilibrated" :NO-EDGE)
 (((:MIXED #<edge402 220 number 221>) (:MIXED :SINGLE-DIGIT)) "CaCl2" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge210 108 number 109> #<edge211 110 and 111> #<edge213 111 that 112>)
   (:LOWER :HYPHEN :LOWER))
  "mid-log" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge195 96 bio-complex 97> #<edge196 97 and 98> #<edge197 98 "the" 99> #<edge198 98 the 99>
    #<edge200 100 be 101> #<edge201 101 comparative 102> :LOWER)
   (:SINGLE-LOWER :HYPHEN :SINGLE-CAP :HYPHEN :SINGLE-DIGIT :HYPHEN :LOWER))
  "β-D-1-thiogalactopyranoside" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge96 33 square-brackets 36> #<edge97 37 square-brackets 40> #<edge98 41 square-brackets 44>
    #<edge99 45 square-brackets 48> #<edge100 49 square-brackets 52>)
   (:LOWER :HYPHEN :CAPITALIZED :HYPHEN :LOWER))
  "poly-Histidine-maltose" MAKE-HYPHENATED-TRIPLE)
 (((#<edge86 44 COMMA 45> #<edge87 46 digit-sequence 47> #<edge88 46 number 47>)
   (:LOWER :HYPHEN :PROTEIN))
  "fusion-protein" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge45 14 "the" 15> #<edge47 15 close-bio-process 16>) (:FULL :DIGITS)) "AY282752"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:FULL #<edge39 10 suggest 11> #<edge40 11 "the" 12> #<edge42 12 importance 13>)
   (:FULL :HYPHEN :PROTEIN :DIGITS))
  "CUHK-Su10" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge35 6 HYPHEN 7> #<edge391 208 COMMA 209> #<edge392 209 or 210> #<edge393 210 very 211>
    #<edge394 211 near 212>)
   (:BIO-ENTITY :HYPHEN :LOWER :FORWARD-SLASH :LOWER))
  "3CLpro-substrate/inhibitor" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge346 187 "the" 188> #<edge347 187 the 188> #<edge348 188 distance 189>)
   (:LOWER :HYPHEN :LOWER))
  "structure-activity" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge31 3 on 4> #<edge315 160 the 161> #<edge316 161 distance 162>)
   (:PROTEIN :HYPHEN :CAPITALIZED))
  "P1-Met" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge29 2 study-data 3> #<edge312 158 not 159> #<edge313 159 solely 160>)
   (:PROTEIN :HYPHEN :CAPITALIZED))
  "P1-His" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge255 143 downstream-segment 144> #<edge256 143 downstream 144> #<edge257 144 "of" 145>)
   (:SINGLE-LOWER :HYPHEN :LOWER))
  "β-sheet" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge7 184 by-virtue-of 187> #<edge95 5 hyphenated-pair 8> #<edge96 33 square-brackets 36>)
   (:PROTEIN :HYPHEN :CAPITALIZED))
  "P2-Phe" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge3 139 up-to 141> #<edge28 2 study-bio-method 3> #<edge29 2 study-data 3>)
   (:PROTEIN :HYPHEN :CAPITALIZED))
  "P2-Phe" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge51 17 of 18> #<edge600 345 direction 346> #<edge601 345 amino-acid 346>)
   (:PROTEIN :HYPHEN :CAPITALIZED))
  "P1-His" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge49 16 proximity 17> #<edge594 341 cause 342> #<edge595 342 "the" 343>)
   (:PROTEIN :HYPHEN :CAPITALIZED))
  "P1-Gln" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge45 14 "the" 15> #<edge573 325 downstream 326> #<edge574 326 "of" 327>)
   (:PROTEIN :HYPHEN :CAPITALIZED))
  "P1-His" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge33 4 the 5> #<edge393 210 very 211> #<edge394 211 near 212>)
   (:PROTEIN :HYPHEN :CAPITALIZED))
  "P1-His" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge31 3 on 4> #<edge343 180 modal 181> #<edge344 181 be 182>)
   (:PROTEIN :HYPHEN :CAPITALIZED))
  "P1-Gln" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge25 415 protein 417> #<edge327 168 per 169> #<edge328 169 bio-entity 170>)
   (:PROTEIN :HYPHEN :CAPITALIZED))
  "P1-His" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge320 164 start 165> #<edge321 165 and 166> #<edge323 166 stop-endurant 167>)
   (:SINGLE-CAP :SINGLE-LOWER :SINGLE-DIGIT))
  "Nε1" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge307 155 "that" 156> #<edge309 156 "it" 157>) (:SINGLE-CAP :SINGLE-DIGIT)) "S1"
  REIFY-TWO-PART-LABEL)
 (((#<edge19 319 even-if 321> #<edge248 136 bio-entity 137> #<edge249 137 be 138>)
   (:PROTEIN :HYPHEN :CAPITALIZED))
  "P1-His" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge15 300 wild-type 303> #<edge221 116 of 117> #<edge222 117 "the" 118>)
   (:PROTEIN :HYPHEN :CAPITALIZED))
  "P1-Gln" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge13 285 close-to 287> #<edge207 107 figure 108> #<edge208 107 article-figure 108>)
   (:PROTEIN :HYPHEN :CAPITALIZED))
  "P1-His" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge103 5 bio-process 9> #<edge104 4 bio-process 9> #<edge105 9 suggest 11>)
   (:LOWER :HYPHEN :LOWER))
  "sub-libraries" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge27 1 sequencer 2> #<edge219 115 bio-entity 116> #<edge220 116 "of" 117>)
   (:PROTEIN :HYPHEN :CAPITALIZED))
  "P3-Val" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge25 415 protein 417> #<edge204 103 to 104> #<edge205 104 reinitiation 105>)
   (:PROTEIN :HYPHEN :CAPITALIZED))
  "P3-Lys" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge19 319 even-if 321> #<edge156 78 undergo 79> #<edge157 79 only 80>)
   (:BIO-ENTITY :HYPHEN :LOWER))
  "3CLpro-substrate" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge35 6 HYPHEN 7> #<edge36 7 reinitiation 8> #<edge37 8 bio-process 9>)
   (:LOWER :HYPHEN :LOWER))
  "single-substitutions" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge15 300 wild-type 303> #<edge303 90 that 91> #<edge304 153 "this" 154>)
   (:BIO-ENTITY :HYPHEN :LOWER))
  "3CLpro-substrate" MAKE-HYPHENATED-STRUCTURE)
 (((:FULL :DOWNWARDS_ARROW #<edge288 135 start 137>) (:FULL :DOWNWARDS_ARROW :PROTEIN)) "TVRLQ↓AGF"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:FULL :DOWNWARDS_ARROW #<edge286 144 of 152>) (:FULL :DOWNWARDS_ARROW :PROTEIN)) "TVKLQ↓AGF"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:FULL :DOWNWARDS_ARROW :FULL) (:FULL :DOWNWARDS_ARROW :FULL)) "VVRLQ↓SGF"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:FULL :DOWNWARDS_ARROW :FULL) (:FULL :DOWNWARDS_ARROW :FULL)) "TVRLQ↓SGF"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:FULL :DOWNWARDS_ARROW :FULL) (:FULL :DOWNWARDS_ARROW :FULL)) "FVRLQ↓SGF"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge143 68 bio-complex 69> #<edge144 69 semicolon 70> #<edge145 70 "that" 71>)
   (:LOWER :HYPHEN :LOWER))
  "triple-substitution" MAKE-HYPHENATED-STRUCTURE)
 (((:FULL :DOWNWARDS_ARROW :FULL) (:FULL :DOWNWARDS_ARROW :FULL)) "VVVLQ↓SGF"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:FULL :DOWNWARDS_ARROW :FULL) (:FULL :DOWNWARDS_ARROW :FULL)) "TVVLQ↓SGF"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:FULL :DOWNWARDS_ARROW :FULL) (:FULL :DOWNWARDS_ARROW :FULL)) "FVVLQ↓SGF"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge132 60 to 61> #<edge133 61 reflect 62> #<edge134 62 "a" 63>) (:LOWER :HYPHEN :LOWER))
  "double-substitution" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge180 85 however 86> #<edge182 87 "we" 88>) (:SINGLE-CAP :SINGLE-DIGIT)) "Å3"
  REIFY-TWO-PART-LABEL)
 (((#<edge21 376 wild-type 379> #<edge303 90 that 91> #<edge304 153 "this" 154>)
   (:PROTEIN :HYPHEN :CAPITALIZED))
  "P1-Gln" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge19 319 even-if 321> #<edge295 103 to 110> #<edge296 101 critical 103>)
   (:PROTEIN :HYPHEN :CAPITALIZED))
  "P1-His" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge282 146 position 148> #<edge283 145 position 148> #<edge284 145 position 152>)
   (:PROTEIN :HYPHEN :LOWER))
  "enzyme-substrate" PACKAGE-QUALIFYING-PAIR)
 (((#<edge15 300 wild-type 303> #<edge223 117 the 118> #<edge224 120 protein 121>)
   (:PROTEIN :HYPHEN :CAPITALIZED))
  "P1-His" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge216 113 "the" 114> #<edge217 113 the 114> #<edge219 115 bio-entity 116>)
   (:SINGLE-CAP :SINGLE-LOWER :SINGLE-DIGIT))
  "Nε2" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge11 274 such-as 276> #<edge139 65 of 66> #<edge140 66 "the" 67>)
   (:PROTEIN :HYPHEN :CAPITALIZED))
  "P1-His" MAKE-HYPHENATED-STRUCTURE)
 (((:FULL #<edge119 17 of 21> :MIXED) (:FULL :HYPHEN :MIXED)) "SWISS-PDBViewer"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge9 214 wild-type 217> #<edge116 29 of 36> #<edge117 27 start 29>)
   (:PROTEIN :HYPHEN :CAPITALIZED))
  "P1-His" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge62 23 upstream 24> #<edge63 24 protein 25> #<edge65 25 and 26>)
   (:SINGLE-CAP :SINGLE-LOWER :SINGLE-DIGIT))
  "Nε2" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge55 19 stop-endurant 20> #<edge56 20 bio-entity 21> #<edge57 21 "of" 22>)
   (:LOWER :HYPHEN :LOWER))
  "hydrogen-bonds" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge3 139 up-to 141> #<edge51 17 of 18> #<edge52 18 "the" 19>)
   (:PROTEIN :HYPHEN :CAPITALIZED))
  "P1-Gln" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge44 13 of 14> #<edge45 14 "the" 15> #<edge47 15 close-bio-process 16>)
   (:SINGLE-CAP :SINGLE-LOWER :SINGLE-DIGIT))
  "Nε2" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge37 8 bio-process 9> #<edge38 9 have 10> #<edge40 11 "the" 12>)
   (:SINGLE-CAP :SINGLE-LOWER :SINGLE-DIGIT))
  "Oε1" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge1 118 protein 120> #<edge31 3 on 4> #<edge32 4 "the" 5>) (:BIO-ENTITY :HYPHEN :LOWER))
  "3CLpro-substrate" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge13 285 close-to 287> #<edge223 117 the 118> #<edge224 120 protein 121>)
   (:PROTEIN :HYPHEN :CAPITALIZED))
  "P1-Gln" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge11 274 such-as 276> #<edge203 103 "to" 104> #<edge204 103 to 104>)
   (:PROTEIN :HYPHEN :CAPITALIZED))
  "P1-His" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge7 184 by-virtue-of 187> #<edge152 75 be 76> #<edge153 76 ability 77>)
   (:PROTEIN :HYPHEN :CAPITALIZED))
  "P1-His" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge240 131 detect 132> #<edge241 132 even 133> #<edge242 132 even 133>)
   (:SINGLE-LOWER :HYPHEN :LOWER))
  "β-sheet" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge11 274 such-as 276> #<edge196 97 and 98> #<edge197 98 "the" 99>)
   (:PROTEIN :HYPHEN :CAPITALIZED))
  "P3-Val" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge173 82 following 84> #<edge174 74 ability 77> #<edge175 73 ability 77>)
   (:SINGLE-LOWER :HYPHEN :LOWER))
  "β-sheet" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge9 214 wild-type 217> #<edge168 66 bio-complex 69> #<edge169 74 be 76>)
   (:PROTEIN :HYPHEN :CAPITALIZED))
  "P3-Val" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge7 184 by-virtue-of 187> #<edge162 83 terminate 84> #<edge163 58 believe 60>)
   (:BIO-ENTITY :HYPHEN :LOWER))
  "3CLpro-substrate" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge105 9 suggest 11> #<edge106 11 importance 13> #<edge107 15 proximity 17>)
   (:SINGLE-LOWER :HYPHEN :LOWER))
  "β-sheet" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge30 3 "on" 4> #<edge31 3 on 4> #<edge32 4 "the" 5>) (:SINGLE-LOWER :HYPHEN :LOWER))
  "β-sheet" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge3 139 up-to 141> #<edge164 60 reflect 62> #<edge165 62 mobility 65>)
   (:BIO-ENTITY :HYPHEN :LOWER))
  "3CLpro-substrate" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge118 21 of 25> #<edge120 14 proximity 21>) (:SINGLE-CAP :SINGLE-DIGIT)) "Å3"
  REIFY-TWO-PART-LABEL)
 (((:CLOSE-ANGLE-BRACKET #<edge117 27 start 29>) (:CLOSE-ANGLE-BRACKET :DIGITS)) ">80"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge167 67 lambda-expression 68> :OPEN-ANGLE-BRACKET #<edge170 77 undergo 79>)
   (:LITTLE-P :OPEN-ANGLE-BRACKET :DIGITS))
  "p<0.001" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge157 79 only 80> #<edge158 80 limit 81> #<edge159 81 movement 82>)
   (:SINGLE-LOWER :HYPHEN :LOWER))
  "β-sheet" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge105 9 suggest 11> #<edge123 15 close 16>) (:SINGLE-CAP :POINT-MUTATION)) "S5T"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge92 52 COMMA 53> #<edge120 14 proximity 21>) (:SINGLE-CAP :POINT-MUTATION)) "S5F"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge68 27 start 28> #<edge117 27 start 29>) (:SINGLE-CAP :POINT-MUTATION)) "S5V"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge7 184 by-virtue-of 187> #<edge98 41 square-brackets 44> :OPEN-ANGLE-BRACKET
    #<edge101 53 square-brackets 56>)
   (:PHOSPHORYLATE :LOWER :OPEN-ANGLE-BRACKET :DIGITS))
  "p-value<0.01" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge5 174 but-rather 176> #<edge77 32 open-reading-frame 33>) (:PHOSPHORYLATE :LOWER))
  "p-values" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge37 8 bio-process 9> #<edge38 9 have 10> #<edge39 10 suggest 11>)
   (:SINGLE-LOWER :HYPHEN :LOWER))
  "β-sheet" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge25 415 protein 417> #<edge26 415 bio-complex 417> #<edge28 2 study-bio-method 3>)
   (:LOWER :HYPHEN :LOWER))
  "long-range" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge60 22 the 23> #<edge61 23 upstream-segment 24> #<edge62 23 upstream 24>
    #<edge63 24 protein 25> #<edge64 24 open-reading-frame 25>)
   (:CAPITALIZED :FORWARD-SLASH :CAPITALIZED :HYPHEN :LOWER))
  "Asp/Glu-substituting" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge43 13 "of" 14> #<edge44 13 of 14> #<edge45 14 "the" 15> #<edge46 14 the 15>
    #<edge47 15 close-bio-process 16>)
   (:CAPITALIZED :FORWARD-SLASH :CAPITALIZED :HYPHEN :LOWER))
  "Arg/Lys-substituting" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge90 50 digit-sequence 51> #<edge92 52 COMMA 53>) (:SINGLE-CAP :SINGLE-DIGIT)) "S1"
  REIFY-TWO-PART-LABEL)
 (((#<edge284 145 position 152> #<edge285 104 efficiency 110> #<edge287 139 up-to 143>)
   (:MIXED :HYPHEN :SINGLE-DIGIT))
  "mM−1" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge253 141 number 142> #<edge254 142 bio-entity 143>) (:LOWER :FORWARD-SLASH)) "kobs/"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge197 98 "the" 99> #<edge198 98 the 99> #<edge199 99 bio-entity 100>)
   (:SINGLE-LOWER :HYPHEN :LOWER))
  "β-sheet" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge194 95 terminate 96> #<edge195 96 bio-complex 97> :LOWER) (:SINGLE-LOWER :HYPHEN :LOWER))
  "α-helix" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:FULL :DOWNWARDS_ARROW :FULL) (:FULL :DOWNWARDS_ARROW :FULL)) "TSAVLQ↓SGFRKM"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge75 31 downstream 32> #<edge76 32 protein 33> #<edge77 32 open-reading-frame 33>)
   (:LOWER :HYPHEN :LOWER))
  "small-sized" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge120 14 proximity 21> :MIXED) (:SINGLE-DIGIT :MIXED)) "3CLpro"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge101 53 square-brackets 56> :MIXED) (:SINGLE-DIGIT :MIXED)) "3CLpro"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge102 1 study-bio-method 3> #<edge13 285 close-to 287>) (:POINT-MUTATION :-LIKE)) "3C-like"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge93 54 digit-sequence 55> #<edge11 274 such-as 276>) (:PROTEIN :-LIKE)) "papain-like"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge438 219 figure 225> #<edge439 218 parentheses 226> #<edge440 202 reinitiation 204>)
   (:LOWER :HYPHEN :PROTEIN))
  "post-hoc" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge138 65 "of" 66> #<edge139 65 of 66> #<edge140 66 "the" 67>) (:LOWER :HYPHEN :LOWER))
  "out-competed" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge79 34 number 35> #<edge80 36 COMMA 37> #<edge81 38 digit-sequence 39>)
   (:LOWER :FORWARD-SLASH :LOWER))
  "autumn/winter" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge89 48 COMMA 49> #<edge90 50 digit-sequence 51> #<edge92 52 COMMA 53>)
   (:LOWER :HYPHEN :LOWER))
  "high-risk" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge157 79 only 80> #<edge158 80 limit 81> #<edge159 81 movement 82>)
   (:LOWER :HYPHEN :LOWER))
  "well-conducted" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge170 77 undergo 79> #<edge171 79 limit 81> #<edge173 82 following 84>
    #<edge174 74 ability 77> #<edge177 65 of 69>)
   (:LOWER :HYPHEN :LOWER :HYPHEN :LOWER))
  "mild-to-moderate" MAKE-HYPHENATED-TRIPLE)
 (((#<edge494 278 digit-sequence 279> #<edge495 278 number 279> #<edge496 279 bio-entity 280>)
   (:LOWER :FORWARD-SLASH :LOWER))
  "spring/summer" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge317 162 between 163> #<edge318 163 "the" 164> #<edge320 164 start 165>)
   (:SINGLE-DIGIT :COLON :DIGITS))
  "1∶80" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge292 123 downstream 128> #<edge293 116 of 121> #<edge295 103 to 110>)
   (:SINGLE-DIGIT :COLON :DIGITS))
  "1∶32" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge74 31 downstream-segment 32> #<edge75 31 downstream 32> #<edge76 32 protein 33>)
   (:LOWER :HYPHEN :LOWER))
  "age-specific" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge133 61 reflect 62> #<edge148 72 COMMA 73>) (:LOWER :MONTH)) "mid-January"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge120 14 proximity 21> #<edge147 71 be 72>) (:LOWER :MONTH)) "mid-February"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge283 145 position 148> #<edge284 145 position 152> #<edge285 104 efficiency 110>)
   (:LOWER :HYPHEN :LOWER))
  "age-specific" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge262 147 position 148> #<edge263 149 figure 150> #<edge265 150 digit-sequence 151>
    #<edge266 150 number 151> #<edge267 85 subordinate-conjunction 87>
    #<edge268 141 bio-entity 143> #<edge269 106 parentheses 110>)
   (:LOWER :HYPHEN :LOWER :HYPHEN :LOWER :HYPHEN :LOWER))
  "years-of-life-lost" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge247 135 start 136> #<edge248 136 bio-entity 137> #<edge249 137 be 138>)
   (:LOWER :HYPHEN :LOWER))
  "high-quality" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge67 26 the 27> #<edge68 27 start 28> #<edge69 28 bio-entity 29>) (:MIXED :HYPHEN :LOWER))
  "shRNA-cassettes" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge189 91 the 92> #<edge190 92 distance 93> #<edge192 94 "the" 95>) (:LOWER :HYPHEN :LOWER))
  "back-up" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge139 65 of 66> #<edge140 66 "the" 67> #<edge141 66 the 67>)
   (:PROTEIN :FORWARD-SLASH :LOWER))
  "gag/pol" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge61 23 upstream-segment 24> #<edge62 23 upstream 24> #<edge63 24 protein 25>)
   (:PROTEIN :FORWARD-SLASH :LOWER))
  "gag/pol" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:LOWER #<edge19 319 even-if 321> #<edge20 376 "wild-type" 379>) (:LOWER :HYPHEN :LOWER))
  "semi-replicative" :NO-EDGE)
 (((:CLOSE-ANGLE-BRACKET #<edge115 30 open-reading-frame 36>) (:CLOSE-ANGLE-BRACKET :PERCENT))
  ">99%" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge164 60 reflect 62> #<edge165 62 mobility 65> #<edge166 67 bio-complex 69>)
   (:LOWER :HYPHEN :LOWER))
  "self-targeting" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge152 75 be 76> #<edge153 76 ability 77> #<edge155 77 to 78>) (:PROTEIN :HYPHEN :LOWER))
  "nef-sequences" PACKAGE-QUALIFYING-PAIR)
 (((:LOWER #<edge44 13 of 14> #<edge45 14 "the" 15>) (:LOWER :HYPHEN :LOWER))
  "doxycyclin-dependent" :NO-EDGE)
 (((#<edge19 319 even-if 321> #<edge20 376 "wild-type" 379> #<edge21 376 wild-type 379>)
   (:PROTEIN :HYPHEN :LOWER))
  "antisense-strategy" PACKAGE-QUALIFYING-PAIR)
 (((#<edge168 66 bio-complex 69> #<edge169 74 be 76> #<edge170 77 undergo 79>)
   (:DIGITS :HYPHEN :LOWER))
  "937-base" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge161 82 following 83> #<edge162 83 terminate 84> #<edge163 58 believe 60>)
   (:PROTEIN :HYPHEN :SINGLE-CAP))
  "VSV-G" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge181 86 COMMA 87> #<edge182 87 "we" 88> #<edge183 87 pronoun/first/plural 88>)
   (:LOWER :FORWARD-SLASH :LOWER))
  "transduced/infected" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge9 214 wild-type 217> #<edge10 274 "such as" 276> #<edge11 274 such-as 276>)
   (:LOWER :HYPHEN :LOWER))
  "gene-based" MAKE-HYPHENATED-STRUCTURE)
 (((:CAPITALIZED #<edge294 114 start 116> :CAPITALIZED) (:CAPITALIZED :HYPHEN :CAPITALIZED))
  "Epstein-Barr" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge188 91 "the" 92> #<edge189 91 the 92> #<edge190 92 distance 93>)
   (:CAPITALIZED :HYPHEN :LOWER))
  "Baculovirus-based" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge102 1 study-bio-method 3> #<edge103 5 bio-process 9> #<edge104 4 bio-process 9>)
   (:LOWER :HYPHEN :LOWER))
  "well-established" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge37 8 bio-process 9> #<edge38 9 have 10> #<edge39 10 suggest 11>)
   (:PROTEIN :HYPHEN :SINGLE-CAP))
  "VSV-G" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge11 274 such-as 276> #<edge12 285 "close to" 287> #<edge13 285 close-to 287>)
   (:LOWER :HYPHEN :LOWER))
  "gamma-retroviruses" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge91 50 number 51> #<edge3 139 up-to 141>) (:LOWER :-LIKE)) "wildtype-like"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge31 3 on 4> #<edge33 4 the 5>) (:SINGLE-CAP :SINGLE-DIGIT)) "U3" REIFY-TWO-PART-LABEL)
 (((#<edge16 314 "wild-type" 317> #<edge17 314 wild-type 317> #<edge18 319 "even if" 321>)
   (:LOWER :HYPHEN :LOWER))
  "self-inactivating" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge257 144 "of" 145> #<edge258 144 of 145> #<edge259 145 pronoun/inanimate 146>)
   (:LOWER :HYPHEN :LOWER))
  "large-scale" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge211 110 and 111> #<edge212 111 "that" 112> #<edge213 111 that 112>)
   (:LOWER :HYPHEN :LOWER))
  "retrovirus-based" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge65 25 and 26> #<edge66 26 "the" 27> #<edge67 26 the 27>) (:LOWER :HYPHEN :FULL))
  "hairpin-RNA" MAKE-HYPHENATED-STRUCTURE)
 (((:LOWER #<edge171 79 limit 81> #<edge172 79 movement 82> #<edge173 82 following 84>
    #<edge174 74 ability 77>)
   (:LOWER :FORWARD-SLASH :LOWER :FORWARD-SLASH :MIXED))
  "sh/mi/siRNAs" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge5 174 but-rather 176> #<edge170 77 undergo 79>) (:PROTEIN :LOWER)) "anti-tumoral"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge347 187 the 188> #<edge348 188 distance 189>) (:SINGLE-CAP :PLUS-SIGN)) "Ψ+"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge306 154 suggest 155> #<edge307 155 "that" 156> :LOWER) (:LOWER :FORWARD-SLASH :LOWER))
  "promoter/enhancer" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:LOWER #<edge8 214 "wild-type" 217> #<edge9 214 wild-type 217>) (:LOWER :HYPHEN :LOWER))
  "adeno-associated" :NO-EDGE)
 (((#<edge11 274 such-as 276> #<edge96 33 square-brackets 36>) (:PROTEIN :LOWER))
  "anti-proliferative" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge1 118 protein 120> #<edge43 13 "of" 14>) (:PROTEIN :LOWER)) "anti-tumor"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge137 64 mobility 65> #<edge138 65 "of" 66> #<edge139 65 of 66>) (:LOWER :HYPHEN :LOWER))
  "high-level" MAKE-HYPHENATED-STRUCTURE)
 (((:CAPITALIZED #<edge10 274 "such as" 276> #<edge11 274 such-as 276>)
   (:CAPITALIZED :HYPHEN :LOWER))
  "Adeno-associated" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge66 26 "the" 27> #<edge67 26 the 27> #<edge68 27 start 28>) (:MIXED :HYPHEN :LOWER))
  "RNAi-based" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge164 60 reflect 62> #<edge165 62 mobility 65> #<edge166 67 bio-complex 69>)
   (:MIXED :HYPHEN :LOWER))
  "miRNA-based" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge121 15 close 16> #<edge122 14 proximity 25> #<edge123 15 close 16>)
   (:PROTEIN :HYPHEN :FULL))
  "Pol-II" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge83 40 COMMA 41> #<edge84 42 digit-sequence 43> #<edge85 42 number 43>)
   (:LOWER :FORWARD-SLASH :PROTEIN))
  "endosomal/lysosomal" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge16 314 "wild-type" 317> #<edge17 314 wild-type 317> #<edge19 319 even-if 321>)
   (:LOWER :HYPHEN :LOWER))
  "knock-down" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge129 58 be 59> #<edge130 59 believe 60> #<edge132 60 to 61> #<edge133 61 reflect 62>
    #<edge134 62 "a" 63>)
   (:LOWER :HYPHEN :LOWER :HYPHEN :PROTEIN))
  "first-in-class" MAKE-HYPHENATED-TRIPLE)
 (((#<edge79 34 number 35> #<edge80 36 COMMA 37> #<edge82 38 number 39>)
   (:CAPITALIZED :HYPHEN :DIGITS))
  "Sirna-027" MAKE-HYPHENATED-STRUCTURE)
 (((:FULL #<edge74 31 downstream-segment 32> #<edge76 32 protein 33>) (:FULL :HYPHEN :DIGITS))
  "AGN-745" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge64 24 open-reading-frame 25> #<edge65 25 and 26> #<edge66 26 "the" 27>)
   (:MIXED :HYPHEN :LOWER))
  "RNAi-based" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge3 139 up-to 141> #<edge130 59 believe 60>) (:PROTEIN :LOWER)) "anti-viral"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge37 8 bio-process 9> #<edge38 9 have 10> #<edge40 11 "the" 12>) (:LOWER :HYPHEN :LOWER))
  "off-target" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge58 21 of 22> #<edge59 22 "the" 23> #<edge60 22 the 23>) (:DIGITS :HYPHEN :LOWER))
  "one-third" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge22 393 "due to" 395> #<edge23 393 due-to 395> #<edge24 415 "eif3" 417>)
   (:MIXED :HYPHEN :LOWER))
  "RNAi-based" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge472 256 downstream 257> #<edge473 257 bio-entity 258> #<edge475 260 figure 261>)
   (:LOWER :HYPHEN :LOWER))
  "knock-down" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge207 107 figure 108> #<edge208 107 article-figure 108> #<edge210 108 number 109>)
   (:LOWER :HYPHEN :LOWER))
  "off-target" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge26 415 bio-complex 417> #<edge27 1 sequencer 2> #<edge29 2 study-data 3>)
   (:LOWER :HYPHEN :LOWER))
  "knock-down" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge154 77 "to" 78> #<edge155 77 to 78> #<edge157 79 only 80>) (:LOWER :HYPHEN :LOWER))
  "knock-down" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge79 34 number 35> #<edge80 36 COMMA 37> #<edge82 38 number 39>) (:LOWER :HYPHEN :LOWER))
  "knock-in" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge19 319 even-if 321> #<edge20 376 "wild-type" 379> #<edge21 376 wild-type 379>)
   (:PROTEIN :HYPHEN :LOWER))
  "spin-off" PACKAGE-QUALIFYING-PAIR)
 (((#<edge109 19 bio-entity 21> #<edge110 18 bio-entity 21>) (:FULL :COLON)) "IEF:" :NO-EDGE)
 (((#<edge13 285 close-to 287> #<edge106 11 importance 13> #<edge15 300 wild-type 303>)
   (:MOLECULE :HYPHEN :BIO-METHOD))
  "sodium dodecyl sulfate-polyacrylamide gel electrophoresis" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge65 25 and 26> #<edge66 26 "the" 27> #<edge67 26 the 27>) (:DIGITS :HYPHEN :LOWER))
  "two-dimensional" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge60 22 the 23> #<edge61 23 upstream-segment 24> #<edge62 23 upstream 24>
    #<edge63 24 protein 25>)
   (:SINGLE-DIGIT :HYPHEN :FULL :COLON))
  "2-DE:" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge50 17 "of" 18> #<edge51 17 of 18> #<edge54 19 stop 20> #<edge55 19 stop-endurant 20>)
   (:PROTEIN :HYPHEN :FULL :COLON))
  "LC-MS:" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge42 12 importance 13> #<edge147 71 be 72>) (:LOWER :TIME)) "ionization-time"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge285 104 efficiency 110> #<edge286 144 of 152> #<edge287 139 up-to 143>)
   (:PROTEIN :FORWARD-SLASH :FULL))
  "BSA/TBS" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge279 126 bio-entity 128> #<edge280 125 bio-entity 128> #<edge282 146 position 148>)
   (:SINGLE-DIGIT :COLON :DIGITS))
  "1:100" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge94 54 number 55> #<edge95 5 hyphenated-pair 8> #<edge96 33 square-brackets 36>)
   (:PROTEIN :HYPHEN :CAPITALIZED))
  "Tris-Cl" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge265 150 digit-sequence 151> #<edge266 150 number 151> #<edge268 141 bio-entity 143>)
   (:LOWER :HYPHEN :PROTEIN))
  "milk-Tris" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge144 69 semicolon 70> #<edge145 70 "that" 71> #<edge146 70 that 71>)
   (:PROTEIN :HYPHEN :MIXED))
  "Tris-HCl" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge168 66 bio-complex 69> :GREATER-THAN_OR_EQUAL_TO #<edge171 79 limit 81>)
   (:LOWER :GREATER-THAN_OR_EQUAL_TO :DIGITS))
  "charge≥1.9" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:GREATER-THAN_OR_EQUAL_TO #<edge160 82 following-adj 83>) (:GREATER-THAN_OR_EQUAL_TO :DIGITS))
  "≥0.1" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge8 214 "wild-type" 217> #<edge9 214 wild-type 217> #<edge12 285 "close to" 287>)
   (:FULL :FORWARD-SLASH :FULL))
  "MS/MS" MAKE-HYPHENATED-PAIR)
 (((#<edge381 200 COMMA 201> #<edge382 201 whilst 202> #<edge385 204 require 205>)
   (:FULL :FORWARD-SLASH :FULL))
  "MS/MS" MAKE-HYPHENATED-PAIR)
 (((#<edge341 178 the 179> #<edge342 179 bio-complex 180> #<edge345 182 tethere 183>)
   (:FULL :FORWARD-SLASH :FULL))
  "MS/MS" MAKE-HYPHENATED-PAIR)
 (((#<edge15 300 wild-type 303> #<edge237 128 COMMA 129> #<edge238 129 reinitiation 130>)
   (:BIO-ENTITY :FORWARD-SLASH :LOWER))
  "μl/min" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge237 128 COMMA 129> :LESS-THAN_OR_EQUAL_TO #<edge240 131 detect 132>)
   (:LITTLE-P :LESS-THAN_OR_EQUAL_TO :DIGITS))
  "p≤0.05" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge224 120 protein 121> #<edge225 120 open-reading-frame 121>
    #<edge228 123 downstream-segment 124>)
   (:FULL :FORWARD-SLASH :FULL))
  "MS/MS" MAKE-HYPHENATED-PAIR)
 (((#<edge206 105 efficiency 106> :LESS-THAN_OR_EQUAL_TO #<edge209 108 digit-sequence 109>)
   (:LITTLE-P :LESS-THAN_OR_EQUAL_TO :DIGITS))
  "p≤0.05" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge193 94 the 95> #<edge194 95 terminate 96> #<edge197 98 "the" 99>)
   (:FULL :FORWARD-SLASH :FULL))
  "MS/MS" MAKE-HYPHENATED-PAIR)
 (((#<edge115 30 open-reading-frame 36> #<edge116 29 of 36> #<edge119 17 of 21>)
   (:FULL :FORWARD-SLASH :FULL))
  "MS/MS" MAKE-HYPHENATED-PAIR)
 (((#<edge7 184 by-virtue-of 187> #<edge8 214 "wild-type" 217> #<edge11 274 such-as 276>)
   (:FULL :FORWARD-SLASH :FULL))
  "MS/MS" MAKE-HYPHENATED-PAIR)
 (((#<edge136 63 restrict 64> #<edge137 64 mobility 65> #<edge140 66 "the" 67>)
   (:FULL :FORWARD-SLASH :FULL))
  "MS/MS" MAKE-HYPHENATED-PAIR)
 (((:MIXED #<edge63 24 protein 25>) (:MIXED :SINGLE-DIGIT)) "CalMix5" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge140 66 "the" 67> #<edge141 66 the 67> #<edge142 67 tethere 68>) (:LOWER :HYPHEN :LOWER))
  "air-dry" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge54 19 stop 20> #<edge55 19 stop-endurant 20> #<edge56 20 bio-entity 21>
    #<edge57 21 "of" 22> #<edge59 22 "the" 23> #<edge60 22 the 23> #<edge61 23 upstream-segment 24>
    #<edge62 23 upstream 24> #<edge63 24 protein 25> #<edge64 24 open-reading-frame 25>
    #<edge5 174 but-rather 176>)
   (:SINGLE-LOWER :HYPHEN :LOWER :HYPHEN :SINGLE-DIGIT :HYPHEN :LOWER :HYPHEN :LOWER :HYPHEN
    :MOLECULE))
  "α-cyano-4-hydroxy-trans-cinnamic acid" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge37 8 bio-process 9> #<edge38 9 have 10> #<edge40 11 "the" 12>)
   (:SINGLE-DIGIT :COLON :SINGLE-DIGIT))
  "1:1" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge7 184 by-virtue-of 187> #<edge156 78 undergo 79> #<edge157 79 only 80>)
   (:BIO-ENTITY :FORWARD-SLASH :LOWER))
  "μg/ml" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge76 32 protein 33> #<edge5 174 but-rather 176>) (:PATH :MOLECULE)) "NH4HCO3"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge59 22 "the" 23> #<edge61 23 upstream-segment 24> #<edge62 23 upstream 24>)
   (:SINGLE-CAP :SINGLE-DIGIT :CAPITALIZED))
  "K3Fe" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge49 16 proximity 17> #<edge50 17 "of" 18> #<edge52 18 "the" 19>)
   (:SINGLE-DIGIT :COLON :SINGLE-DIGIT))
  "1:1" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge1 118 protein 120> #<edge43 13 "of" 14>) (:PROTEIN :SINGLE-CAP)) "ddH2O"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge396 213 "the" 214> #<edge397 213 the 214> #<edge398 217 site 218>)
   (:LOWER :HYPHEN :LOWER))
  "second-dimensional" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge316 161 distance 162> #<edge317 162 between 163> #<edge318 163 "the" 164>)
   (:PROTEIN :HYPHEN :MIXED))
  "Tris-HCl" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge191 93 between 94> #<edge253 141 number 142>) (:CAPITALIZED :TIME-UNIT)) "Volt-Hours"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge181 86 COMMA 87> #<edge182 87 "we" 88> #<edge184 88 show 89>) (:LOWER :COLON :DIGITS))
  "follows:100" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge131 60 "to" 61> :ASTERISK #<edge132 60 to 61>) (:DIGITS :ASTERISK :SINGLE-CAP)) "20°C"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge13 285 close-to 287> #<edge14 300 "wild-type" 303> #<edge15 300 wild-type 303>)
   (:LOWER :HYPHEN :LOWER))
  "first-dimension" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge119 17 of 21> #<edge120 14 proximity 21> #<edge121 15 close 16>)
   (:SINGLE-DIGIT :HYPHEN :FULL))
  "2-DE" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge42 12 importance 13> :ASTERISK #<edge43 13 "of" 14>) (:DIGITS :ASTERISK :SINGLE-CAP))
  "100°C" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge82 38 number 39> #<edge83 40 COMMA 41> #<edge85 42 number 43> #<edge86 44 COMMA 45>
    #<edge87 46 digit-sequence 47> #<edge88 46 number 47>)
   (:FULL :HYPHEN :DIGITS :PROTEIN :HYPHEN :FULL))
  "JEM-100CX-II" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge76 32 protein 33> #<edge77 32 open-reading-frame 33> #<edge79 34 number 35>)
   (:FULL :HYPHEN :DIGITS))
  "JEM-1400" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge12 285 "close to" 287> #<edge13 285 close-to 287> #<edge14 300 "wild-type" 303>)
   (:CAPITALIZED :HYPHEN :LOWER))
  "Formavar-supported" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge196 97 and 98> #<edge197 98 "the" 99> #<edge198 98 the 99>) (:PROTEIN :HYPHEN :MIXED))
  "Tris-HCl" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge142 67 tethere 68> :ASTERISK #<edge143 68 bio-complex 69>)
   (:SINGLE-DIGIT :ASTERISK :SINGLE-CAP))
  "4°C" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge75 31 downstream 32> #<edge77 32 open-reading-frame 33>) (:FULL :DIGITS)) "GQ374442"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge73 30 the 31> #<edge74 31 downstream-segment 32>) (:LOWER :COLON)) "no:" :NO-EDGE)
 (((#<edge79 34 number 35> #<edge80 36 COMMA 37> #<edge81 38 digit-sequence 39>)
   (:LOWER :HYPHEN :LOWER))
  "immuno-gold" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge3 139 up-to 141> #<edge46 14 the 15> #<edge47 15 close-bio-process 16>)
   (:BIO-METHOD :FORWARD-SLASH :PROTEIN))
  "MALDI-TOF/TOF" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge41 11 the 12> #<edge42 12 importance 13> #<edge43 13 "of" 14>)
   (:SINGLE-DIGIT :HYPHEN :FULL))
  "2-DE" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge227 122 place 123> #<edge228 123 downstream-segment 124> #<edge229 123 downstream 124>
    #<edge230 124 "of" 125> #<edge232 125 "the" 126>)
   (:LOWER :HYPHEN :LOWER :HYPHEN :LOWER))
  "beta-galactoside-binding" MAKE-HYPHENATED-TRIPLE)
 (((#<edge23 393 due-to 395> #<edge205 104 reinitiation 105>) (:PROTEIN :PLUS-SIGN)) "CD8+"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge135 62 a 63> #<edge117 27 start 29> #<edge118 21 of 25> #<edge119 17 of 21>
    #<edge9 214 wild-type 217>)
   (:RESIDUE-ON-PROTEIN :HYPHEN :PROTEIN :FORWARD-SLASH :PROTEIN))
  "Tyrosine 3-monooxygenase/tryptophan 5-monooxygenase" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge70 29 "of" 30> #<edge51 17 of 18> #<edge52 18 "the" 19> #<edge53 18 the 19>
    #<edge3 139 up-to 141>)
   (:RESIDUE-ON-PROTEIN :HYPHEN :PROTEIN :FORWARD-SLASH :PROTEIN))
  "tyrosine 3-monooxygenase/tryptophan 5-monooxygenase" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge138 65 "of" 66> #<edge139 65 of 66> #<edge140 66 "the" 67>) (:LOWER :HYPHEN :LOWER))
  "exon-exon" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge15 300 wild-type 303> #<edge199 99 bio-entity 100>) (:PROTEIN :SINGLE-CAP))
  "non-structural protein 5A" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge112 22 open-reading-frame 25> #<edge113 31 open-reading-frame 33>
    #<edge115 30 open-reading-frame 36>)
   (:LOWER :HYPHEN :LOWER))
  "heat-shock" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge243 133 when 134> #<edge245 134 "the" 135>) (:SINGLE-CAP :SINGLE-DIGIT)) "A2"
  REIFY-TWO-PART-LABEL)
 (((:LOWER #<edge341 178 the 179> #<edge342 179 bio-complex 180>) (:LOWER :HYPHEN :LOWER))
  "bisphosphate-containing" :NO-EDGE)
 (((#<edge156 78 undergo 79> #<edge157 79 only 80> #<edge11 274 such-as 276>)
   (:LOWER :HYPHEN :CELLULAR-PROCESS))
  "heat-stress response" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge50 17 "of" 18> #<edge52 18 "the" 19>) (:SINGLE-CAP :SINGLE-DIGIT)) "A5"
  REIFY-TWO-PART-LABEL)
 (((#<edge44 13 of 14> #<edge46 14 the 15>) (:SINGLE-CAP :SINGLE-DIGIT)) "A2" REIFY-TWO-PART-LABEL)
 (((#<edge140 66 "the" 67> #<edge141 66 the 67> #<edge142 67 tethere 68>)
   (:SINGLE-DIGIT :HYPHEN :FULL))
  "2-DE" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge62 23 upstream 24> #<edge63 24 protein 25> #<edge64 24 open-reading-frame 25>)
   (:SINGLE-DIGIT :HYPHEN :FULL))
  "2-DE" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge110 18 bio-entity 21> #<edge111 23 open-reading-frame 25>
    #<edge112 22 open-reading-frame 25> #<edge113 31 open-reading-frame 33> #<edge116 29 of 36>)
   (:SINGLE-DIGIT :HYPHEN :FULL :FORWARD-SLASH :FULL))
  "2-DE/MS" PACKAGE-SLASHED-SEQUENCE)
 (((:LOWER #<edge40 11 "the" 12> #<edge41 11 the 12>) (:LOWER :HYPHEN :LOWER)) "immuno-gold"
  :NO-EDGE)
 (((#<edge229 123 downstream 124> #<edge230 124 "of" 125> #<edge231 124 of 125>)
   (:LOWER :HYPHEN :FULL))
  "non-PRRSV" MAKE-HYPHENATED-STRUCTURE)
 (((:CAPITALIZED #<edge30 3 "on" 4> #<edge31 3 on 4> #<edge32 4 "the" 5> :MIXED)
   (:CAPITALIZED :HYPHEN :PROTEIN :FORWARD-SLASH :MIXED))
  "Swiss-Prof/TrEMBL" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge218 114 start 115> #<edge219 115 bio-entity 116> #<edge222 117 "the" 118>
    #<edge223 117 the 118> #<edge226 121 be 122>)
   (:PROTEIN :HYPHEN :FULL :FORWARD-SLASH :FULL))
  "LC-MS/MS" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge89 48 COMMA 49> #<edge90 50 digit-sequence 51> #<edge93 54 digit-sequence 55>)
   (:FULL :FORWARD-SLASH :FULL))
  "MS/MS" MAKE-HYPHENATED-PAIR)
 (((#<edge1 118 protein 120> #<edge63 24 protein 25> #<edge64 24 open-reading-frame 25>)
   (:BIO-METHOD :HYPHEN :PROTEIN))
  "MALDI-TOF-TOF" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge56 20 bio-entity 21> #<edge57 21 "of" 22> #<edge58 21 of 22>) (:LOWER :HYPHEN :LOWER))
  "in-gel" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge41 11 the 12> #<edge42 12 importance 13> #<edge43 13 "of" 14>)
   (:SINGLE-DIGIT :HYPHEN :FULL))
  "2-DE" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge104 4 bio-process 9> #<edge105 9 suggest 11> #<edge106 11 importance 13>)
   (:SINGLE-DIGIT :HYPHEN :FULL))
  "2-DE" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge81 38 digit-sequence 39> #<edge82 38 number 39> #<edge84 42 digit-sequence 43>)
   (:LOWER :HYPHEN :LOWER))
  "inter-sample" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge34 5 terminate 6> #<edge35 6 HYPHEN 7>) (:SINGLE-LOWER :SINGLE-LOWER)) "μg"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge28 2 study-bio-method 3> #<edge29 2 study-data 3> #<edge30 3 "on" 4>)
   (:SINGLE-DIGIT :HYPHEN :FULL))
  "2-DE" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge5 174 but-rather 176> #<edge81 38 digit-sequence 39>) (:WITH :SINGLE-LOWER)) "w/v"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:FULL #<edge38 9 have 10>) (:FULL :SINGLE-DIGIT)) "GDBY1" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge103 5 bio-process 9> #<edge104 4 bio-process 9> #<edge105 9 suggest 11>)
   (:SINGLE-DIGIT :HYPHEN :FULL))
  "2-DE" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge99 45 square-brackets 48> #<edge100 49 square-brackets 52>
    #<edge101 53 square-brackets 56>)
   (:DIGITS :HYPHEN :LOWER))
  "two-dimensional" MAKE-HYPHENATED-STRUCTURE)
 (((:MIXED #<edge131 60 "to" 61> #<edge133 61 reflect 62>) (:MIXED :HYPHEN :DIGITS)) "EhV-86"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge16 314 "wild-type" 317> #<edge183 87 pronoun/first/plural 88>) (:PROTEIN :SINGLE-LOWER))
  "ORF1b" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge109 19 bio-entity 21> #<edge110 18 bio-entity 21>) (:SINGLE-DIGIT :SINGLE-LOWER)) "2b"
  REIFY-TWO-PART-LABEL)
 (((#<edge1 118 protein 120> #<edge102 1 study-bio-method 3>) (:CELL-LINE :SINGLE-LOWER)) "GP2a"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge98 41 square-brackets 44> #<edge100 49 square-brackets 52>)
   (:SINGLE-DIGIT :SINGLE-LOWER))
  "2a" REIFY-TWO-PART-LABEL)
 (((#<edge44 13 of 14> #<edge45 14 "the" 15> #<edge46 14 the 15>) (:LOWER :HYPHEN :LOWER))
  "positive-stranded" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge140 66 "the" 67> #<edge141 66 the 67> #<edge142 67 tethere 68>) (:LOWER :HYPHEN :LOWER))
  "swine-producing" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge45 14 "the" 15> #<edge47 15 close-bio-process 16> #<edge49 16 proximity 17>)
   (:INITIAL :INITIAL :INITIAL))
  "J.P.D." REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge41 11 the 12> #<edge43 13 "of" 14> #<edge666 361 "we" 362>)
   (:INITIAL :INITIAL :SINGLE-CAP))
  "N.D.H" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge335 177 well-bio-process 178> #<edge336 177 well-endurant 178>
    #<edge337 177 well-adverbial 178>)
   (:PROTEIN :FORWARD-SLASH :FULL))
  "NOD/SCID" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge589 338 "the" 339> #<edge591 339 bio-entity 340>) (:PROTEIN :SINGLE-DIGIT)) "IgG3"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge185 89 deictic-location 90> #<edge186 90 "that" 91> #<edge187 90 that 91>)
   (:LOWER :HYPHEN :LOWER))
  "hyper-mutation" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge218 114 start 115> #<edge11 274 such-as 276>) (:LOWER :-LIKE)) "plasmablast-like"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge60 22 the 23> #<edge61 23 upstream-segment 24> #<edge62 23 upstream 24>)
   (:LOWER :HYPHEN :LOWER))
  "cross-react" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge268 141 bio-entity 143> #<edge270 148 parentheses 152>) (:SINGLE-CAP :SINGLE-DIGIT)) "S4"
  REIFY-TWO-PART-LABEL)
 (((#<edge262 147 position 148> #<edge264 149 article-figure 150>) (:SINGLE-CAP :SINGLE-DIGIT))
  "S3" REIFY-TWO-PART-LABEL)
 (((#<edge146 70 that 71> #<edge147 71 be 72> #<edge148 72 COMMA 73>) (:LOWER :HYPHEN :LOWER))
  "hyper-mutations" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge114 30 open-reading-frame 33> #<edge116 29 of 36>) (:SINGLE-CAP :SINGLE-DIGIT)) "S4"
  REIFY-TWO-PART-LABEL)
 (((#<edge108 14 proximity 17> #<edge110 18 bio-entity 21>) (:SINGLE-CAP :SINGLE-DIGIT)) "S3"
  REIFY-TWO-PART-LABEL)
 (((:LOWER #<edge102 1 study-bio-method 3> #<edge103 5 bio-process 9>) (:LOWER :HYPHEN :LOWER))
  "hyper-mutations" :NO-EDGE)
 (((#<edge373 169 bio-entity 172> #<edge374 170 lambda-expression 172> #<edge376 157 be 159>)
   (:LOWER :FORWARD-SLASH :SINGLE-DIGIT))
  "cells/3" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge369 180 tethere 183> #<edge370 180 tethere 198> #<edge372 170 affect 172>)
   (:SINGLE-LOWER :FORWARD-SLASH :DIGITS))
  "g/105" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge295 103 to 110> #<edge296 101 critical 103> #<edge298 98 critical 103>)
   (:SINGLE-DIGIT :FORWARD-SLASH :DIGITS))
  "1/350" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge15 300 wild-type 303> #<edge215 112 when 113>) (:PROTEIN :MIXED)) "anti-HBsAg"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge108 14 proximity 17> #<edge109 19 bio-entity 21> #<edge110 18 bio-entity 21>)
   (:LOWER :HYPHEN :LOWER))
  "micro-cell" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge278 121 place 123> #<edge279 126 bio-entity 128>) (:PROTEIN :PLUS-SIGN)) "IgG+"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge1 118 protein 120> #<edge58 21 of 22> #<edge59 22 "the" 23>)
   (:BIO-ENTITY :FORWARD-SLASH :PROTEIN))
  "CD27+CD38lo/int" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge73 30 the 31> #<edge545 298 "of" 299> #<edge75 31 downstream 32> #<edge546 298 of 299>
    #<edge547 299 "a" 300> #<edge548 299 a 300> #<edge549 303 bio-entity 304>)
   (:PROTEIN :PLUS-SIGN :PROTEIN :PROTEIN :FORWARD-SLASH :MIXED :HYPHEN))
  "CD27+CD38lo/intIgD−" PACKAGE-SLASHED-SEQUENCE)
 (((:CLOSE-ANGLE-BRACKET #<edge552 305 ones-number 306>) (:CLOSE-ANGLE-BRACKET :PERCENT)) ">80%"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge69 28 bio-entity 29> #<edge492 276 the 277> #<edge493 277 HYPHEN 278>
    #<edge494 278 digit-sequence 279> #<edge495 278 number 279> #<edge496 279 bio-entity 280>)
   (:PROTEIN :PLUS-SIGN :PROTEIN :HYPHEN :PROTEIN :PLUS-SIGN))
  "CD27+IgM−IgG+" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge63 24 protein 25> #<edge473 257 bio-entity 258> #<edge65 25 and 26>
    #<edge474 258 bio-entity 259> #<edge475 260 figure 261> #<edge476 260 article-figure 261>
    #<edge477 261 digit-sequence 262>)
   (:PROTEIN :PLUS-SIGN :PROTEIN :PROTEIN :FORWARD-SLASH :MIXED :HYPHEN))
  "CD27+CD38lo/intIgD−" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge57 21 "of" 22> #<edge407 223 number 224> #<edge408 224 amino-acid 225>
    #<edge409 226 COMMA 227> #<edge410 227 modifier 228> #<edge411 228 reinitiation 229>)
   (:PROTEIN :PLUS-SIGN :PROTEIN :HYPHEN :PROTEIN :PLUS-SIGN))
  "CD27+IgM−IgG+" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge53 18 the 19> #<edge400 219 article-figure 220> #<edge55 19 stop-endurant 20>
    #<edge401 220 digit-sequence 221> #<edge402 220 number 221> #<edge403 221 amino-acid 222>
    #<edge404 221 a 222>)
   (:PROTEIN :PLUS-SIGN :PROTEIN :PROTEIN :FORWARD-SLASH :MIXED :HYPHEN))
  "CD27+CD38lo/intIgD−" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge390 207 at 208> #<edge391 208 COMMA 209> #<edge392 209 or 210>)
   (:PROTEIN :HYPHEN :LOWER))
  "IgM-memory" PACKAGE-QUALIFYING-PAIR)
 (((#<edge41 11 the 12> #<edge375 168 per 172> #<edge43 13 "of" 14> #<edge376 157 be 159>
    #<edge377 157 be 160> #<edge378 153 suggest 155> #<edge379 155 that 156>)
   (:PROTEIN :PLUS-SIGN :PROTEIN :PROTEIN :FORWARD-SLASH :MIXED :PLUS-SIGN))
  "CD27+CD38lo/intIgD+" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge35 6 HYPHEN 7> :MIXED #<edge324 167 bio-entity 168> #<edge325 167 bio-entity 168>)
   (:PROTEIN :MIXED :DIGITS :LOWER))
  "CD27hiCD38hi" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge33 4 the 5> #<edge243 133 when 134> #<edge244 133 when 134> #<edge245 134 "the" 135>
    #<edge246 134 the 135> #<edge247 135 start 136>)
   (:PROTEIN :PLUS-SIGN :PROTEIN :HYPHEN :PROTEIN :PLUS-SIGN))
  "CD27+IgM−IgG+" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge25 415 protein 417> #<edge213 111 that 112> #<edge27 1 sequencer 2>
    #<edge214 112 when 113> #<edge215 112 when 113> :MIXED #<edge216 113 "the" 114>)
   (:PROTEIN :PLUS-SIGN :PROTEIN :PROTEIN :FORWARD-SLASH :MIXED :HYPHEN))
  "CD27+CD38lo/intIgD−" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge21 376 wild-type 379> #<edge207 107 figure 108> #<edge23 393 due-to 395>
    #<edge208 107 article-figure 108> #<edge209 108 digit-sequence 109> :MIXED
    #<edge210 108 number 109>)
   (:PROTEIN :PLUS-SIGN :PROTEIN :PROTEIN :FORWARD-SLASH :MIXED :PLUS-SIGN))
  "CD27+CD38lo/intIgD+" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge19 319 even-if 321> :MIXED #<edge204 103 to 104> #<edge205 104 reinitiation 105>)
   (:PROTEIN :MIXED :DIGITS :LOWER))
  "CD27hiCD38hi" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge15 300 wild-type 303> #<edge189 91 the 92> #<edge17 314 wild-type 317>)
   (:PROTEIN :PLUS-SIGN :BIO-ENTITY))
  "CD45+CD19+" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge7 184 by-virtue-of 187> #<edge9 214 wild-type 217> #<edge155 77 to 78>)
   (:BIO-ENTITY :PROTEIN :PLUS-SIGN))
  "CD19+CD27+" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge1 118 protein 120> #<edge88 46 number 47>) (:PROTEIN :PLUS-SIGN)) "CD27+"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge123 15 close 16> #<edge125 9 suggest 13>) (:SINGLE-CAP :SINGLE-DIGIT)) "S1"
  REIFY-TWO-PART-LABEL)
 (((#<edge59 22 "the" 23> #<edge60 22 the 23> #<edge61 23 upstream-segment 24>)
   (:LOWER :HYPHEN :LOWER))
  "mock-injected" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge86 44 COMMA 45> #<edge102 1 study-bio-method 3>) (:HYPHENATED-NUMBER :TIME-UNIT))
  "10–14-week" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge241 132 even 133> #<edge243 133 when 134>) (:SINGLE-CAP :SINGLE-DIGIT)) "S1"
  REIFY-TWO-PART-LABEL)
 (((#<edge175 73 ability 77> #<edge176 70 be 72> #<edge178 62 mobility 69>)
   (:PROTEIN :HYPHEN :LOWER))
  "VH-family" PACKAGE-QUALIFYING-PAIR)
 (((#<edge155 77 to 78> #<edge156 78 undergo 79>) (:PROTEIN :PLUS-SIGN)) "IgM+"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:TILDA #<edge695 382 site 383>) (:TILDA :SINGLE-DIGIT)) "∼3" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge648 338 cause 347> #<edge649 337 cause 347> #<edge650 336 suggest 347>)
   (:PROTEIN :FORWARD-SLASH :LOWER))
  "IgG/ml" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge640 342 fragment 347> #<edge641 349 direction 351> #<edge642 354 site 356>)
   (:PROTEIN :FORWARD-SLASH :LOWER))
  "IgM/ml" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge561 311 always 312> #<edge562 312 select 313> #<edge563 313 "the" 314>)
   (:SINGLE-LOWER :FORWARD-SLASH :LOWER))
  "g/ml" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge551 305 indefinite-pronoun 306> #<edge552 305 ones-number 306> #<edge553 305 number 306>)
   (:SINGLE-LOWER :FORWARD-SLASH :LOWER))
  "g/ml" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge522 256 bio-entity 259> #<edge523 255 bio-entity 259> #<edge524 271 bio-entity 273>)
   (:LOWER :HYPHEN :LOWER))
  "post-transplantation" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge3 139 up-to 141> #<edge5 174 but-rather 176> #<edge7 184 by-virtue-of 187>
    #<edge60 22 the 23> #<edge61 23 upstream-segment 24> #<edge9 214 wild-type 217>)
   (:PROTEIN :-/- :PROTEIN :SINGLE-LOWER :SINGLE-LOWER :-/-))
  "Rag2−/−IL-2Rγc−/−" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge34 5 terminate 6> #<edge35 6 HYPHEN 7> #<edge36 7 reinitiation 8>)
   (:DIGITS :HYPHEN :LOWER))
  "two-tailed" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge589 338 "the" 339> #<edge590 338 the 339> #<edge592 340 modal 341>)
   (:LOWER :FORWARD-SLASH :LOWER))
  "substrate/stop" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge548 299 a 300> #<edge549 303 bio-entity 304> #<edge551 305 indefinite-pronoun 306>)
   (:SINGLE-DIGIT :COLON :DIGITS))
  "1∶5000" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge531 255 bio-entity 264> #<edge532 285 close-to 291> #<edge534 254 at 264>)
   (:SINGLE-DIGIT :COLON :DIGITS))
  "1∶2500" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge481 265 or 266> #<edge482 266 "at" 267> #<edge484 267 "a" 268>)
   (:SINGLE-DIGIT :COLON :SINGLE-DIGIT))
  "1∶2" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge463 250 COMMA 251> #<edge464 251 bio-complex 252> #<edge466 253 bio-entity 254>)
   (:SINGLE-DIGIT :COLON :SINGLE-DIGIT))
  "1∶5" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((:CAPITALIZED #<edge406 223 digit-sequence 224> #<edge408 224 amino-acid 225>)
   (:CAPITALIZED :HYPHEN :DIGITS))
  "Tween-20" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge292 123 downstream 128> :MULTIPLICATION-SIGN) (:DIGITS :MULTIPLICATION-SIGN)) "10×"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge159 81 movement 82> #<edge160 82 following-adj 83>) (:CAPITALIZED :SINGLE-LOWER)) "Fcγ"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge148 72 COMMA 73> #<edge150 73 pronoun/inanimate 74> #<edge151 74 modal 75>
    #<edge152 75 be 76> #<edge153 76 ability 77>)
   (:CAPITALIZED :SINGLE-DIGIT :SINGLE-LOWER :HYPHEN :LOWER))
  "Fc5μ-specific" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge39 10 suggest 11> :MULTIPLICATION-SIGN #<edge41 11 the 12>)
   (:SINGLE-DIGIT :MULTIPLICATION-SIGN :DIGITS))
  "5×105" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:MIXED #<edge414 231 be 232> #<edge416 233 when 234>) (:MIXED :HYPHEN :DIGITS)) "rmIL-21"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge391 208 COMMA 209> #<edge392 209 or 210> #<edge393 210 very 211>)
   (:LOWER :FORWARD-SLASH :LOWER))
  "cells/ml" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge23 393 due-to 395> #<edge386 205 "an" 206> #<edge387 205 an 206>)
   (:PROTEIN :HYPHEN :SINGLE-CAP))
  "CD40L-L" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge240 131 detect 132> :AND-SIGN #<edge241 132 even 133>)
   (:SINGLE-CAP :AND-SIGN :SINGLE-CAP))
  "R&D" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:MIXED #<edge236 127 bio-entity 128> #<edge238 129 reinitiation 130>) (:MIXED :HYPHEN :DIGITS))
  "rmIL-21" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge11 274 such-as 276> #<edge221 116 of 117> #<edge222 117 "the" 118>)
   (:PROTEIN :HYPHEN :SINGLE-CAP))
  "CD40L-L" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge172 79 movement 82> #<edge173 82 following 84> :FULL) (:CAPITALIZED :HYPHEN :FULL))
  "Phoenix-GALV" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge5 174 but-rather 176> #<edge141 66 the 67> #<edge143 68 bio-complex 69>
    #<edge145 70 "that" 71> #<edge147 71 be 72> #<edge148 72 COMMA 73> #<edge149 73 "it" 74>
    #<edge150 73 pronoun/inanimate 74> #<edge152 75 be 76> #<edge153 76 ability 77>
    #<edge154 77 "to" 78>)
   (:PROTEIN :HYPHEN :SINGLE-CAP :SINGLE-DIGIT :SINGLE-CAP :HYPHEN :PROTEIN :HYPHEN :FULL :HYPHEN
    :PROTEIN))
  "BCL6-T2A-BCLXL-IRES-GFP" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge59 22 "the" 23> #<edge61 23 upstream-segment 24> #<edge63 24 protein 25>)
   (:SINGLE-CAP :SINGLE-DIGIT :SINGLE-CAP))
  "T2A" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge361 191 bio-complex 197> #<edge362 189 between 191> #<edge363 183 parentheses 198>)
   (:PROTEIN :HYPHEN :FULL))
  "LSR-II" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge246 134 the 135> #<edge242 132 even 133>) (:POINT-MUTATION :SINGLE-DIGIT)) "7F9"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:MIXED #<edge155 77 to 78> :CAPITALIZED) (:MIXED :HYPHEN :CAPITALIZED)) "AbD-Serotec"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge143 68 bio-complex 69> #<edge43 13 "of" 14>) (:SINGLE-DIGIT :CELL-LINE)) "3D12"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge39 10 suggest 11> #<edge138 65 "of" 66> #<edge140 66 "the" 67>)
   (:PROTEIN :HYPHEN :DIGITS))
  "G18-145" MAKE-HYPHENATED-PAIR)
 (((#<edge160 82 following-adj 83> #<edge114 30 open-reading-frame 33>)
   (:POINT-MUTATION :SINGLE-DIGIT))
  "2D1" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge102 1 study-bio-method 3> #<edge104 4 bio-process 9>) (:FULL :DIGITS)) "HIB19"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:FULL #<edge94 54 number 55>) (:FULL :DIGITS)) "CLT16" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge74 31 downstream-segment 32> #<edge75 31 downstream 32> :CAPITALIZED
    #<edge77 32 open-reading-frame 33>)
   (:PROTEIN :HYPHEN :CAPITALIZED :SINGLE-DIGIT))
  "APC-Cy7" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge67 26 the 27> #<edge68 27 start 28> :CAPITALIZED #<edge70 29 "of" 30>)
   (:PROTEIN :HYPHEN :CAPITALIZED :SINGLE-DIGIT))
  "PE-Cy7" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:MIXED #<edge62 23 upstream 24> #<edge1 118 protein 120>) (:MIXED :HYPHEN :CELL-LINE))
  "PerCP-Cy5" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:LOWER #<edge258 144 of 145> #<edge259 145 pronoun/inanimate 146>)
   (:LOWER :FORWARD-SLASH :LOWER))
  "isofluran/oxygen" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge202 102 critical 103> #<edge203 103 "to" 104> #<edge205 104 reinitiation 105>)
   (:SINGLE-DIGIT :FORWARD-SLASH :DIGITS))
  "1/10" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:CAPITALIZED #<edge122 14 proximity 25> #<edge123 15 close 16>)
   (:CAPITALIZED :HYPHEN :SINGLE-CAP))
  "Engerix-B" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge74 31 downstream-segment 32> #<edge76 32 protein 33> #<edge77 32 open-reading-frame 33>)
   (:PROTEIN :DIGITS :PLUS-SIGN))
  "hCD45+" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge353 192 bio-complex 193> :MULTIPLICATION-SIGN #<edge355 194 and 195>)
   (:HYPHENATED-NUMBER :MULTIPLICATION-SIGN :DIGITS))
  "5–12×106" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge248 136 bio-entity 137> #<edge249 137 be 138>
    #<edge250 138 move-something-somewhere 139>)
   (:LOWER :HYPHEN :LOWER))
  "run-off" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge115 30 open-reading-frame 36> #<edge116 29 of 36> #<edge118 21 of 25>)
   (:DIGITS :HYPHEN :LOWER))
  "21-gauge" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge1 118 protein 120> #<edge3 139 up-to 141> #<edge23 393 due-to 395>)
   (:BIO-ENTITY :PROTEIN :HYPHEN))
  "CD34+CD38−" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge283 145 position 148> :MULTIPLICATION-SIGN #<edge285 104 efficiency 110>)
   (:HYPHENATED-NUMBER :MULTIPLICATION-SIGN :DIGITS))
  "5–10×104" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:LOWER #<edge277 117 open-reading-frame 121> #<edge278 121 place 123>) (:LOWER :HYPHEN :LOWER))
  "intra-hepatic" :NO-EDGE)
 (((#<edge21 376 wild-type 379> #<edge23 393 due-to 395> #<edge25 415 protein 417>
    #<edge271 95 bio-complex 97> #<edge272 95 lambda-expression 96> #<edge27 1 sequencer 2>)
   (:PROTEIN :-/- :PROTEIN :SINGLE-LOWER :SINGLE-LOWER :-/-))
  "Rag2−/−IL-2Rγc−/−" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge263 149 figure 150> #<edge264 149 article-figure 150> #<edge265 150 digit-sequence 151>)
   (:LOWER :HYPHEN :LOWER))
  "sub-lethally" MAKE-HYPHENATED-STRUCTURE)
 (((:OPEN-ANGLE-BRACKET #<edge259 145 pronoun/inanimate 146>) (:OPEN-ANGLE-BRACKET :SINGLE-DIGIT))
  "<5" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:CLOSE-ANGLE-BRACKET #<edge219 115 bio-entity 116>) (:CLOSE-ANGLE-BRACKET :PERCENT)) ">98%"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge13 285 close-to 287> #<edge177 65 of 69>) (:PROTEIN :PLUS-SIGN)) "CD34+"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge107 15 proximity 17> #<edge108 14 proximity 17> #<edge110 18 bio-entity 21>)
   (:FULL :HYPHEN :DIGITS))
  "DHL-100970" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge3 139 up-to 141> #<edge5 174 but-rather 176> #<edge7 184 by-virtue-of 187>
    #<edge36 7 reinitiation 8> #<edge37 8 bio-process 9> #<edge9 214 wild-type 217>)
   (:PROTEIN :-/- :PROTEIN :SINGLE-LOWER :SINGLE-LOWER :-/-))
  "Rag2−/−IL-2Rγc−/−" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:FULL #<edge42 12 importance 13> :MIXED) (:FULL :HYPHEN :MIXED)) "AMC-UvA"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge10 274 "such as" 276> #<edge11 274 such-as 276> #<edge13 285 close-to 287>
    #<edge14 300 "wild-type" 303> #<edge15 300 wild-type 303>)
   (:LOWER :HYPHEN :LOWER :HYPHEN :LOWER))
  "proof-of-concept" MAKE-HYPHENATED-TRIPLE)
 (((#<edge49 16 proximity 17> #<edge576 327 "the" 328>) (:PROTEIN :PLUS-SIGN)) "CD19+"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge33 4 the 5> #<edge35 6 HYPHEN 7> #<edge37 8 bio-process 9>
    #<edge508 261 point-mutation 263> #<edge509 268 hyphenated-pair 271> #<edge39 10 suggest 11>)
   (:PROTEIN :-/- :PROTEIN :SINGLE-LOWER :SINGLE-LOWER :-/-))
  "Rag2−/−IL-2Rγc−/−" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge345 182 tethere 183> #<edge346 187 "the" 188> #<edge348 188 distance 189>)
   (:LOWER :HYPHEN :SINGLE-DIGIT))
  "gene-2" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge97 37 square-brackets 40> #<edge98 41 square-brackets 44>
    #<edge99 45 square-brackets 48>)
   (:LOWER :HYPHEN :LOWER))
  "off-label" MAKE-HYPHENATED-STRUCTURE)
 (((:CAPITALIZED #<edge24 415 "eif3" 417> #<edge25 415 protein 417>) (:CAPITALIZED :HYPHEN :LOWER))
  "Hyper-immune" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge114 30 open-reading-frame 33> #<edge115 30 open-reading-frame 36> #<edge116 29 of 36>)
   (:LOWER :FORWARD-SLASH :LOWER))
  "virus/viral" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge101 53 square-brackets 56> #<edge102 1 study-bio-method 3> #<edge103 5 bio-process 9>)
   (:CAPITALIZED :HYPHEN :LOWER))
  "In-depth" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge94 54 number 55> #<edge95 5 hyphenated-pair 8> #<edge96 33 square-brackets 36>)
   (:LOWER :HYPHEN :LOWER))
  "pandemic-causing" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge158 80 limit 81> #<edge159 81 movement 82> #<edge160 82 following-adj 83>)
   (:PROTEIN :FORWARD-SLASH :LOWER))
  "chemokines/inflammatory" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge134 62 "a" 63> #<edge136 63 restrict 64>) (:SINGLE-CAP :SINGLE-DIGIT)) "S1"
  REIFY-TWO-PART-LABEL)
 (((#<edge39 10 suggest 11> #<edge40 11 "the" 12> #<edge41 11 the 12> #<edge42 12 importance 13>
    #<edge44 13 of 14> #<edge45 14 "the" 15> #<edge46 14 the 15>)
   (:SINGLE-CAP :FORWARD-SLASH :CAPITALIZED :FORWARD-SLASH :DIGITS :FORWARD-SLASH :DIGITS))
  "A/California/07/2009" PACKAGE-SLASHED-SEQUENCE)
 (((:CLOSE-ANGLE-BRACKET #<edge78 34 digit-sequence 35>) (:CLOSE-ANGLE-BRACKET :PERCENT)) ">20%"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge50 17 "of" 18> #<edge51 17 of 18>) (:SINGLE-DIGIT :SINGLE-LOWER)) "3b"
  REIFY-TWO-PART-LABEL)
 (((#<edge106 11 importance 13> #<edge107 15 proximity 17> #<edge108 14 proximity 17>)
   (:LOWER :HYPHEN :LOWER))
  "mild-recovered" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge45 14 "the" 15> #<edge47 15 close-bio-process 16>) (:SINGLE-CAP :SINGLE-DIGIT)) "S3"
  REIFY-TWO-PART-LABEL)
 (((#<edge3 139 up-to 141> #<edge111 23 open-reading-frame 25> #<edge112 22 open-reading-frame 25>)
   (:CELLULAR-PROCESS :FORWARD-SLASH :LOWER))
  "immune response/tissue" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge98 41 square-brackets 44> #<edge99 45 square-brackets 48>
    #<edge100 49 square-brackets 52>)
   (:PROTEIN :FORWARD-SLASH :LOWER))
  "DCs/macrophages" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge59 22 "the" 23> #<edge60 22 the 23>) (:SINGLE-DIGIT :SINGLE-LOWER)) "3b"
  REIFY-TWO-PART-LABEL)
 (((#<edge53 18 the 19> #<edge55 19 stop-endurant 20>) (:SINGLE-CAP :SINGLE-DIGIT)) "S1"
  REIFY-TWO-PART-LABEL)
 (((#<edge21 376 wild-type 379> #<edge147 71 be 72>) (:PROTEIN :LOWER)) "anti-inflammatory"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge142 67 tethere 68> #<edge143 68 bio-complex 69> #<edge7 184 by-virtue-of 187>
    #<edge9 214 wild-type 217>)
   (:PROTEIN :HYPHEN :PROTEIN :BIO-ENTITY))
  "IgG-anti-p-H1N1-09" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge39 10 suggest 11> #<edge40 11 "the" 12> #<edge1 118 protein 120> #<edge3 139 up-to 141>)
   (:PROTEIN :HYPHEN :PROTEIN :BIO-ENTITY))
  "IgG-anti-p-H1N1-09" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge32 4 "the" 5> #<edge33 4 the 5> #<edge35 6 HYPHEN 7>)
   (:SINGLE-DIGIT :FORWARD-SLASH :SINGLE-DIGIT))
  "4/4" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge21 376 wild-type 379> #<edge22 393 "due to" 395> #<edge24 415 "eif3" 417>)
   (:SINGLE-DIGIT :FORWARD-SLASH :DIGITS))
  "2/10" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge14 300 "wild-type" 303> #<edge15 300 wild-type 303> #<edge17 314 wild-type 317>
    #<edge18 319 "even if" 321>)
   (:SINGLE-DIGIT :FORWARD-SLASH :DIGITS :LOWER))
  "1/15mild" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge3 139 up-to 141> #<edge4 174 "but rather" 176> #<edge6 184 "by virtue of" 187>)
   (:FULL :HYPHEN :PROTEIN))
  "HI-antibody" MAKE-HYPHENATED-PAIR)
 (((#<edge351 191 "the" 192> #<edge352 191 the 192> #<edge354 193 terminate 194>)
   (:SINGLE-DIGIT :FORWARD-SLASH :SINGLE-DIGIT))
  "0/5" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge344 181 be 182> #<edge345 182 tethere 183> #<edge347 187 the 188>)
   (:SINGLE-DIGIT :FORWARD-SLASH :DIGITS))
  "9/11" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge297 100 critical 103> #<edge298 98 critical 103> #<edge300 88 show 90>)
   (:LOWER :FORWARD-SLASH :LOWER))
  "limited/no" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge291 124 of 128> #<edge292 123 downstream 128> #<edge293 116 of 121>)
   (:LOWER :HYPHEN :LOWER))
  "cases-derived" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge195 96 bio-complex 97> #<edge196 97 and 98> #<edge197 98 "the" 99> #<edge198 98 the 99>
    #<edge199 99 bio-entity 100> #<edge200 100 be 101> #<edge201 101 comparative 102>
    #<edge202 102 critical 103> #<edge203 103 "to" 104> #<edge204 103 to 104>
    #<edge9 214 wild-type 217>)
   (:PROTEIN :FORWARD-SLASH :PROTEIN :FORWARD-SLASH :LOWER :FORWARD-SLASH :LOWER :FORWARD-SLASH
    :LOWER :FORWARD-SLASH :BIO-ENTITY))
  "int/csr/resources/publications/swineflu/CDCRealtimeRTPCRprotocol_SwineH1Ass-2009_20090428"
  PACKAGE-SLASHED-SEQUENCE)
 (((#<edge231 124 of 125> #<edge232 125 "the" 126> #<edge234 126 stop 127>)
   (:SINGLE-DIGIT :FORWARD-SLASH :DIGITS))
  "7/13" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge294 114 start 116> #<edge295 103 to 110> #<edge297 100 critical 103>)
   (:DIGITS :FORWARD-SLASH :DIGITS))
  "73/87" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge7 184 by-virtue-of 187> #<edge206 105 efficiency 106> #<edge208 107 article-figure 108>)
   (:PROTEIN :SINGLE-CAP :SINGLE-DIGIT))
  "pH1N1" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge139 65 of 66> #<edge141 66 the 67>) (:SINGLE-CAP :SINGLE-DIGIT)) "S4"
  REIFY-TWO-PART-LABEL)
 (((#<edge134 62 "a" 63> #<edge136 63 restrict 64>) (:SINGLE-CAP :SINGLE-DIGIT)) "S3"
  REIFY-TWO-PART-LABEL)
 (((#<edge128 57 this 58> #<edge130 59 believe 60>) (:SINGLE-CAP :SINGLE-DIGIT)) "S1"
  REIFY-TWO-PART-LABEL)
 (((#<edge92 52 COMMA 53> #<edge93 54 digit-sequence 55>) (:SINGLE-DIGIT :SINGLE-LOWER)) "3b"
  REIFY-TWO-PART-LABEL)
 (((#<edge76 32 protein 33> #<edge77 32 open-reading-frame 33> #<edge78 34 digit-sequence 35>)
   (:LOWER :FORWARD-SLASH :LOWER))
  "cases/healthy" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge30 3 "on" 4> #<edge31 3 on 4> #<edge32 4 "the" 5>) (:LOWER :FORWARD-SLASH :LOWER))
  "aspirates/cells" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge5 174 but-rather 176> #<edge7 184 by-virtue-of 187>) (:SINGLE-CAP :SINGLE-DIGIT)) "S1"
  REIFY-TWO-PART-LABEL)
 (((#<edge84 42 digit-sequence 43> #<edge86 44 COMMA 45>) (:SINGLE-CAP :SINGLE-DIGIT)) "C3"
  REIFY-TWO-PART-LABEL)
 (((#<edge111 23 open-reading-frame 25> #<edge112 22 open-reading-frame 25>
    #<edge7 184 by-virtue-of 187>)
   (:LOWER :HYPHEN :H1N1-09))
  "pandemic-H1N1-09" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge97 37 square-brackets 40> #<edge98 41 square-brackets 44>) (:SINGLE-DIGIT :SINGLE-LOWER))
  "2b" REIFY-TWO-PART-LABEL)
 (((#<edge24 415 "eif3" 417> #<edge26 415 bio-complex 417>) (:SINGLE-DIGIT :SINGLE-LOWER)) "2a"
  REIFY-TWO-PART-LABEL)
 (((:CLOSE-ANGLE-BRACKET #<edge170 77 undergo 79>) (:CLOSE-ANGLE-BRACKET :MEASUREMENT)) ">4 fold"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge98 41 square-brackets 44> :OPEN-ANGLE-BRACKET #<edge101 53 square-brackets 56>)
   (:LITTLE-P :OPEN-ANGLE-BRACKET :DIGITS))
  "p<0.0001" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge102 1 study-bio-method 3> #<edge103 5 bio-process 9> #<edge50 17 "of" 18>
    #<edge51 17 of 18> #<edge52 18 "the" 19> #<edge53 18 the 19>)
   (:PROTEIN :RESIDUE-ON-PROTEIN :HYPHEN :FULL :HYPHEN :PROTEIN))
  "anti-rpH1N1-09-HA-IgG" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge115 30 open-reading-frame 36> #<edge116 29 of 36> #<edge117 27 start 29>)
   (:LOWER :FORWARD-SLASH :LOWER))
  "copies/ml" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge111 23 open-reading-frame 25> :MULTIPLICATION-SIGN #<edge113 31 open-reading-frame 33>)
   (:DIGITS :MULTIPLICATION-SIGN :DIGITS))
  "1.51×105" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge54 19 stop 20> #<edge55 19 stop-endurant 20> #<edge56 20 bio-entity 21>)
   (:LOWER :FORWARD-SLASH :LOWER))
  "gradual/continued" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge160 82 following-adj 83> #<edge163 58 believe 60>) (:FULL :DIGITS)) "SPSS11.0"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge76 32 protein 33> #<edge77 32 open-reading-frame 33> :CAPITALIZED)
   (:CAPITALIZED :HYPHEN :CAPITALIZED))
  "Mann-Whitney" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge21 376 wild-type 379> #<edge22 393 "due to" 395> #<edge23 393 due-to 395>)
   (:LOWER :FORWARD-SLASH :LOWER))
  "pg/ml" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge329 170 "that" 171> #<edge330 170 that 171>) (:DIGITS :FULL)) "7900HT"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge283 145 position 148> #<edge284 145 position 152> #<edge285 104 efficiency 110>)
   (:DIGITS :HYPHEN :LOWER))
  "one-step" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge273 94 bio-complex 97> #<edge274 98 bio-entity 100>) (:SINGLE-DIGIT :SINGLE-CAP)) "2X"
  REIFY-TWO-PART-LABEL)
 (((#<edge5 174 but-rather 176> #<edge7 184 by-virtue-of 187>) (:INITIAL :INITIAL)) "U.K."
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:GREATER-THAN_OR_EQUAL_TO #<edge170 77 undergo 79>) (:GREATER-THAN_OR_EQUAL_TO :SINGLE-DIGIT))
  "≥7" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge3 139 up-to 141> #<edge140 66 "the" 67>) (:COUNTRY :SINGLE-CAP)) "U.S.A"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge123 15 close 16> #<edge124 13 of 25> #<edge126 3 on 9>) (:FULL :HYPHEN :DIGITS))
  "ND-1000" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:CAPITALIZED #<edge96 33 square-brackets 36>) (:CAPITALIZED :UNIT-OF-MEASURE)) "Bio-Rad"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:CAPITALIZED #<edge74 31 downstream-segment 32> :CAPITALIZED)
   (:CAPITALIZED :HYPHEN :CAPITALIZED))
  "Bio-Plex" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge19 319 even-if 321> #<edge21 376 wild-type 379>) (:PROTEIN :PROTEIN)) "IL12p40"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge40 11 "the" 12> #<edge41 11 the 12> #<edge42 12 importance 13>)
   (:LOWER :FORWARD-SLASH :LOWER))
  "plasma/lung" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge5 174 but-rather 176> #<edge208 107 article-figure 108>) (:PROTEIN :LOWER)) "anti-human"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge191 93 between 94> #<edge192 94 "the" 95> #<edge194 95 terminate 96>)
   (:CAPITALIZED :HYPHEN :LOWER))
  "Perm-wash" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge3 139 up-to 141> #<edge112 22 open-reading-frame 25>) (:PROTEIN :LOWER)) "anti-human"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge1 118 protein 120> #<edge8 214 "wild-type" 217>) (:PROTEIN :LOWER)) "Anti-human"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge3 139 up-to 141> #<edge46 14 the 15> #<edge47 15 close-bio-process 16>
    #<edge48 15 close 16> #<edge49 16 proximity 17> #<edge50 17 "of" 18>)
   (:PROTEIN :LOWER :HYPHEN :PROTEIN :HYPHEN :PROTEIN))
  "anti-human-IgG-HRP" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge40 11 "the" 12> #<edge41 11 the 12> #<edge43 13 "of" 14>) (:SINGLE-DIGIT :COLON :DIGITS))
  "1∶100" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((:CAPITALIZED #<edge334 176 how 177> #<edge335 177 well-bio-process 178>)
   (:CAPITALIZED :HYPHEN :CAPITALIZED))
  "Ficoll-Hypaque" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge225 120 open-reading-frame 121> #<edge226 121 be 122>
    #<edge228 123 downstream-segment 124>)
   (:SINGLE-DIGIT :COLON :SINGLE-DIGIT))
  "1∶3" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge63 24 protein 25> #<edge64 24 open-reading-frame 25> #<edge65 25 and 26>)
   (:LOWER :FORWARD-SLASH :LOWER))
  "blood/lung" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge239 130 be 131> #<edge7 184 by-virtue-of 187>) (:CAPITALIZED :-LIKE)) "Influenza-like"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge116 29 of 36> #<edge117 27 start 29> :LOWER #<edge118 21 of 25> #<edge119 17 of 21>
    #<edge120 14 proximity 21> #<edge121 15 close 16> #<edge122 14 proximity 25> :LOWER
    #<edge123 15 close 16> :MIXED :UNDER-BAR :MIXED #<edge125 9 suggest 13> #<edge126 3 on 9>
    #<edge127 57 "this" 58> #<edge128 57 this 58> :UNDER-BAR #<edge130 59 believe 60>)
   (:PROTEIN :FORWARD-SLASH :LOWER :FORWARD-SLASH :LOWER :FORWARD-SLASH :LOWER :FORWARD-SLASH
    :LOWER :FORWARD-SLASH :MIXED :UNDER-BAR :MIXED :SINGLE-DIGIT :PROTEIN :HYPHEN :DIGITS
    :UNDER-BAR :DIGITS))
  "int/csr/resources/publications/swineflu/CDCRealtimeRTPCRprotocol_SwineH1Ass-2009_20090428"
  PACKAGE-SLASHED-SEQUENCE)
 (((#<edge91 50 number 51> #<edge92 52 COMMA 53> #<edge93 54 digit-sequence 55>)
   (:LOWER :FORWARD-SLASH :LOWER))
  "parent/guardian" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge176 70 be 72> #<edge1 118 protein 120> #<edge177 65 of 69> #<edge178 62 mobility 69>)
   (:CAPITALIZED :-LIKE :HYPHEN :PROTEIN))
  "Toll-like-receptor" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge108 14 proximity 17> #<edge109 19 bio-entity 21> #<edge110 18 bio-entity 21>)
   (:LOWER :FORWARD-SLASH :LOWER))
  "presentation/outcome" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:LOWER #<edge123 15 close 16> :LOWER) (:LOWER :HYPHEN :LOWER)) "maha-arogya" :NO-EDGE)
 (((#<edge96 33 square-brackets 36> #<edge97 37 square-brackets 40> #<edge99 45 square-brackets 48>
    #<edge101 53 square-brackets 56> #<edge134 62 "a" 63> #<edge105 9 suggest 11>
    #<edge107 15 proximity 17> #<edge109 19 bio-entity 21> #<edge135 62 a 63>)
   (:LOWER :FORWARD-SLASH :SINGLE-LOWER :SINGLE-DIGIT :RESIDUE-ON-PROTEIN :FORWARD-SLASH
    :SINGLE-LOWER :SINGLE-DIGIT :RESIDUE-ON-PROTEIN))
  "in/h1n1/h1n1" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge5 174 but-rather 176> :LOWER) (:|HTTP://| :LOWER)) "http://pib"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge7 184 by-virtue-of 187> #<edge9 214 wild-type 217>) (:PHOSPHORYLATE :H1N1-09))
  "p-H1N1-09" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge32 4 "the" 5> #<edge33 4 the 5> #<edge34 5 terminate 6>) (:LOWER :HYPHEN :LOWER))
  "swine-origin" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge18 319 "even if" 321> #<edge19 319 even-if 321>) (:LOWER :COLON)) "research:" :NO-EDGE)
 (((#<edge279 126 bio-entity 128> #<edge280 125 bio-entity 128> #<edge282 146 position 148>)
   (:LOWER :HYPHEN :LOWER))
  "intermediate-stage" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge496 279 bio-entity 280> #<edge497 280 bio-entity 281> #<edge499 282 figure 283>
    #<edge500 282 article-figure 283> #<edge501 283 digit-sequence 284>)
   (:LOWER :HYPHEN :LOWER :HYPHEN :LOWER))
  "human-to-human" MAKE-HYPHENATED-TRIPLE)
 (((#<edge389 207 "at" 208> #<edge390 207 at 208> #<edge392 209 or 210> #<edge393 210 very 211>
    #<edge394 211 near 212>)
   (:LOWER :HYPHEN :LOWER :HYPHEN :LOWER))
  "human-to-human" MAKE-HYPHENATED-TRIPLE)
 (((#<edge75 31 downstream 32> #<edge76 32 protein 33> #<edge77 32 open-reading-frame 33>)
   (:LOWER :HYPHEN :LOWER))
  "village-city" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge104 4 bio-process 9> #<edge105 9 suggest 11> #<edge106 11 importance 13>)
   (:LOWER :HYPHEN :LOWER))
  "well-adapted" MAKE-HYPHENATED-STRUCTURE)
 (((:LOWER #<edge369 180 tethere 183> #<edge371 178 tethere 198>) (:LOWER :HYPHEN :LOWER))
  "multi-strain" :NO-EDGE)
 (((#<edge93 54 digit-sequence 55> #<edge94 54 number 55> #<edge95 5 hyphenated-pair 8>)
   (:LOWER :HYPHEN :LOWER))
  "village-city" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge196 97 and 98> #<edge197 98 "the" 99> #<edge198 98 the 99>) (:LOWER :HYPHEN :LOWER))
  "village-city" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge201 101 comparative 102> #<edge202 102 critical 103> #<edge203 103 "to" 104>)
   (:LOWER :HYPHEN :LOWER))
  "branching-process" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge111 23 open-reading-frame 25> #<edge112 22 open-reading-frame 25>
    #<edge113 31 open-reading-frame 33>)
   (:LOWER :HYPHEN :LOWER))
  "short-term" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge504 287 the 288> #<edge505 288 native 289> #<edge506 289 reinitiation 290>)
   (:LOWER :HYPHEN :LOWER))
  "village-city" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge8 214 "wild-type" 217> #<edge371 178 tethere 198>) (:INITIAL :SINGLE-DIGIT)) "A.2"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge366 176 well 178> #<edge368 181 tethere 183>) (:SINGLE-CAP :SINGLE-DIGIT)) "S1"
  REIFY-TWO-PART-LABEL)
 (((#<edge153 76 ability 77> #<edge154 77 "to" 78> #<edge155 77 to 78>) (:LOWER :HYPHEN :LOWER))
  "short-term" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge2 139 "up to" 141> #<edge45 14 "the" 15>) (:INITIAL :DIGITS)) "A.1.2"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge39 10 suggest 11> #<edge41 11 the 12>) (:SINGLE-CAP :SINGLE-DIGIT)) "S1"
  REIFY-TWO-PART-LABEL)
 (((#<edge16 314 "wild-type" 317> #<edge17 314 wild-type 317> #<edge18 319 "even if" 321>)
   (:LOWER :HYPHEN :LOWER))
  "branching-process" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge20 376 "wild-type" 379> #<edge22 393 "due to" 395>) (:SINGLE-CAP :SINGLE-DIGIT)) "S1"
  REIFY-TWO-PART-LABEL)
 (((#<edge4 174 "but rather" 176> #<edge64 24 open-reading-frame 25>) (:INITIAL :DIGITS)) "A.1.3"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge58 21 of 22> #<edge60 22 the 23>) (:SINGLE-CAP :SINGLE-DIGIT)) "S1" REIFY-TWO-PART-LABEL)
 (((#<edge4 174 "but rather" 176> #<edge90 50 digit-sequence 51>) (:INITIAL :DIGITS)) "A.1.1"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge84 42 digit-sequence 43> #<edge86 44 COMMA 45>) (:SINGLE-CAP :SINGLE-DIGIT)) "S1"
  REIFY-TWO-PART-LABEL)
 (((#<edge56 20 bio-entity 21> #<edge57 21 "of" 22> #<edge58 21 of 22>) (:LOWER :HYPHEN :LOWER))
  "branching-process" MAKE-HYPHENATED-STRUCTURE)
 (((:LOWER #<edge37 8 bio-process 9> #<edge38 9 have 10>) (:LOWER :HYPHEN :LOWER))
  "uni-directional" :NO-EDGE)
 (((#<edge31 3 on 4> #<edge32 4 "the" 5> #<edge33 4 the 5>) (:LOWER :HYPHEN :LOWER))
  "self-sustaining" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge11 274 such-as 276> #<edge12 285 "close to" 287> #<edge14 300 "wild-type" 303>)
   (:PROTEIN :HYPHEN :LOWER))
  "SIR-model" PACKAGE-QUALIFYING-PAIR)
 (((#<edge196 97 and 98> #<edge197 98 "the" 99> #<edge199 99 bio-entity 100> #<edge200 100 be 101>
    #<edge201 101 comparative 102>)
   (:LOWER :HYPHEN :LOWER :HYPHEN :LOWER))
  "human-to-human" MAKE-HYPHENATED-TRIPLE)
 (((#<edge87 46 digit-sequence 47> #<edge88 46 number 47>) (:LOWER :COLON)) "questions:" :NO-EDGE)
 (((#<edge27 1 sequencer 2> #<edge28 2 study-bio-method 3> #<edge29 2 study-data 3>)
   (:LOWER :HYPHEN :LOWER))
  "between-host" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge22 393 "due to" 395> #<edge23 393 due-to 395> #<edge24 415 "eif3" 417>)
   (:LOWER :HYPHEN :LOWER))
  "within-host" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge52 18 "the" 19> #<edge53 18 the 19> :CAPITALIZED) (:CAPITALIZED :HYPHEN :CAPITALIZED))
  "Mann–Whitney" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge49 16 proximity 17> #<edge50 17 "of" 18> #<edge51 17 of 18>) (:DIGITS :HYPHEN :LOWER))
  "two-tailed" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge29 2 study-data 3> #<edge30 3 "on" 4> #<edge31 3 on 4>) (:DIGITS :HYPHEN :LOWER))
  "two-tailed" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge15 300 wild-type 303> :LOWER) (:|HTTP://| :LOWER)) "http://rsb"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge215 112 when 113> :ASTERISK #<edge216 113 "the" 114>) (:DIGITS :ASTERISK :SINGLE-CAP))
  "22°C" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:TILDA #<edge210 108 number 109>) (:TILDA :DIGITS)) "∼15,000" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge193 94 the 95> #<edge194 95 terminate 96> #<edge195 96 bio-complex 97>)
   (:PROTEIN :HYPHEN :MIXED))
  "Tris-HCl" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge162 83 terminate 84> #<edge163 58 believe 60> #<edge164 60 reflect 62>)
   (:LOWER :FORWARD-SLASH :LOWER))
  "units/ml" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge131 60 "to" 61> #<edge132 60 to 61> #<edge134 62 "a" 63>)
   (:CAPITALIZED :HYPHEN :SINGLE-CAP))
  "Trichostatin-A" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge66 26 "the" 27> #<edge67 26 the 27>) (:SINGLE-DIGIT :SINGLE-CAP)) "1X"
  REIFY-TWO-PART-LABEL)
 (((#<edge7 184 by-virtue-of 187> #<edge69 28 bio-entity 29> #<edge70 29 "of" 30>)
   (:PROTEIN :HYPHEN :FULL))
  "Annexin V-FITC" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge5 174 but-rather 176> #<edge64 24 open-reading-frame 25>) (:BIO-ENTITY :PROTEIN)) "1×PBS"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge1 118 protein 120> #<edge24 415 "eif3" 417> :FULL) (:PROTEIN :FORWARD-SLASH :FULL))
  "Annexin V/PI" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge97 37 square-brackets 40> #<edge98 41 square-brackets 44>
    #<edge99 45 square-brackets 48>)
   (:LOWER :FORWARD-SLASH :LOWER))
  "mg/ml" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge5 174 but-rather 176> #<edge7 184 by-virtue-of 187>) (:CELL-LINE :PROTEIN)) "U266B1"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge40 11 "the" 12> #<edge42 12 importance 13>) (:SINGLE-CAP :DIGITS)) "X005"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge175 73 ability 77> :FULL #<edge176 70 be 72> #<edge178 62 mobility 69>)
   (:HYPHEN :FULL :HYPHEN :SINGLE-DIGIT))
  "-CCCCCTTGCCCCTCCAAAG-3" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge181 86 COMMA 87> :RIGHTWARDS_ARROW #<edge172 79 movement 82>)
   (:RESIDUE-ON-PROTEIN :RIGHTWARDS_ARROW :CAPITALIZED))
  "Ser38→Ala" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge163 58 believe 60> :FULL #<edge164 60 reflect 62> #<edge166 67 bio-complex 69>)
   (:HYPHEN :FULL :HYPHEN :SINGLE-DIGIT))
  "-GCTGATTCTCGCCCCTCGGTC-3" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge180 85 however 86> :RIGHTWARDS_ARROW #<edge160 82 following-adj 83>)
   (:RESIDUE-ON-PROTEIN :RIGHTWARDS_ARROW :CAPITALIZED))
  "Ser25→Ala" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:FULL #<edge152 75 be 76> #<edge154 77 "to" 78>) (:FULL :HYPHEN :SINGLE-DIGIT))
  "AGCGTGCCGCAGGCCAG-3" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge179 57 believe 60> :RIGHTWARDS_ARROW #<edge148 72 COMMA 73>)
   (:RESIDUE-ON-PROTEIN :RIGHTWARDS_ARROW :CAPITALIZED))
  "Ser16→Ala" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:MIXED #<edge16 314 "wild-type" 317> #<edge17 314 wild-type 317> #<edge19 319 even-if 321>)
   (:MIXED :HYPHEN :SINGLE-CAP :DIGITS))
  "pReceiver-M01" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge444 228 site 230> #<edge445 227 site 230> #<edge446 231 bio-use 233>)
   (:SINGLE-DIGIT :COLON :DIGITS))
  "1∶2000" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge57 21 "of" 22> #<edge422 237 bio-entity 238>) (:PROTEIN :LOWER)) "anti-goat"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge53 18 the 19> #<edge419 234 the 235>) (:PROTEIN :LOWER)) "anti-mouse"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge51 17 of 18> #<edge321 165 and 166>) (:MOLECULE :SINGLE-CAP)) "DM1A"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge337 177 well-adverbial 178> #<edge305 153 this 154> #<edge338 177 modifier 178>)
   (:RESIDUE-ON-PROTEIN :FORWARD-SLASH :RESIDUE-ON-PROTEIN))
  "Thr202/Tyr204" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge41 11 the 12> #<edge299 93 between 97> #<edge300 88 show 90> #<edge43 13 "of" 14>)
   (:PROTEIN :LOWER :HYPHEN :BIO-ENTITY))
  "anti-phospho-p44/42" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge37 8 bio-process 9> #<edge39 10 suggest 11>) (:PROTEIN :BIO-ENTITY)) "anti-p44/42"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge35 6 HYPHEN 7> #<edge286 144 of 152> #<edge287 139 up-to 143> #<edge288 135 start 137>)
   (:PROTEIN :LOWER :HYPHEN :PROTEIN))
  "anti-phospho-stathmin" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge33 4 the 5> #<edge277 117 open-reading-frame 121> #<edge278 121 place 123>
    #<edge279 126 bio-entity 128>)
   (:PROTEIN :LOWER :HYPHEN :PROTEIN))
  "anti-phospho-stathmin" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge29 2 study-data 3> #<edge267 85 subordinate-conjunction 87> #<edge268 141 bio-entity 143>
    #<edge269 106 parentheses 110>)
   (:PROTEIN :CAPITALIZED :HYPHEN :LOWER))
  "anti-His-tag" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge25 415 protein 417> #<edge251 138 move-to 139> #<edge252 141 digit-sequence 142>
    #<edge253 141 number 142>)
   (:PROTEIN :LOWER :HYPHEN :PROTEIN))
  "anti-phospho-stathmin" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge21 376 wild-type 379> #<edge243 133 when 134> #<edge244 133 when 134>
    #<edge23 393 due-to 395>)
   (:PROTEIN :LOWER :HYPHEN :PROTEIN))
  "anti-phospho-CDK2" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge11 274 such-as 276> #<edge218 114 start 115> #<edge219 115 bio-entity 116>
    #<edge222 117 "the" 118>)
   (:PROTEIN :LOWER :HYPHEN :PROTEIN))
  "anti-phospho-CaMKII" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge131 60 "to" 61> #<edge132 60 to 61> #<edge133 61 reflect 62>)
   (:CAPITALIZED :HYPHEN :SINGLE-CAP))
  "Immobilon-P" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge73 30 the 31> #<edge74 31 downstream-segment 32> #<edge75 31 downstream 32>)
   (:PROTEIN :HYPHEN :MIXED))
  "Tris-HCl" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge9 214 wild-type 217> :LOWER) (:|HTTP://| :LOWER)) "http://scansite"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge242 132 even 133> #<edge243 133 when 134>) (:LOWER :FORWARD-SLASH)) "org/"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge97 37 square-brackets 40> #<edge98 41 square-brackets 44>
    #<edge99 45 square-brackets 48>)
   (:CAPITALIZED :FORWARD-SLASH :PROTEIN))
  "Genes/Proteins" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:OPEN-ANGLE-BRACKET #<edge536 292 however 293>) (:OPEN-ANGLE-BRACKET :DIGITS)) "<0.25"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:CLOSE-ANGLE-BRACKET #<edge486 268 near 269>) (:CLOSE-ANGLE-BRACKET :DIGITS)) ">0.75"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:CLOSE-ANGLE-BRACKET #<edge293 116 of 121>) (:CLOSE-ANGLE-BRACKET :DIGITS)) ">10"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge82 38 number 39> #<edge85 42 number 43>) (:SINGLE-CAP :DIGITS)) "V3.56"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge630 313 bio-entity 318> #<edge631 321 bio-complex 323> #<edge632 323 terminate 325>)
   (:LOWER :HYPHEN :LOWER))
  "micro-scan" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge634 327 window 330> #<edge624 296 choice-endurant 298> #<edge625 300 bio-entity 304>)
   (:MEASUREMENT :FORWARD-SLASH :SINGLE-LOWER))
  "3 m/z" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge592 340 modal 341> #<edge593 341 cause 342> #<edge596 342 the 343>)
   (:FULL :FORWARD-SLASH :FULL))
  "MS/MS" MAKE-HYPHENATED-PAIR)
 (((#<edge17 314 wild-type 317> #<edge478 261 number 262>) (:BIO-ENTITY :DIGITS)) "1×106"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge352 191 the 192> :ASTERISK #<edge7 184 by-virtue-of 187>) (:DIGITS :ASTERISK :INITIAL))
  "200°C." REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge285 104 efficiency 110> #<edge286 144 of 152> :CAPITALIZED) (:FULL :HYPHEN :CAPITALIZED))
  "LTQ-Orbitrap" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge51 17 of 18> #<edge52 18 "the" 19> :CAPITALIZED) (:FULL :HYPHEN :CAPITALIZED))
  "LTQ-Oribitrap" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge526 267 bio-entity 273> #<edge527 289 site 291> #<edge528 288 site 291>
    #<edge529 287 site 291> #<edge532 285 close-to 291> #<edge533 266 at 285>
    #<edge536 292 however 293>)
   (:FULL :HYPHEN :PROTEIN :HYPHEN :FULL :FORWARD-SLASH :FULL))
  "SCX-LC–MS/MS" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge403 221 amino-acid 222> #<edge404 221 a 222>) (:NUMBER-SEQUENCE :LOWER))
  "2,5-dihydroxybenzoic" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge399 219 figure 220> #<edge400 219 article-figure 220> #<edge401 220 digit-sequence 221>)
   (:SINGLE-LOWER :FORWARD-SLASH :SINGLE-CAP))
  "g/L" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge7 184 by-virtue-of 187> #<edge230 124 "of" 125>) (:WITH :SINGLE-LOWER)) "w/w"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge226 121 be 122> #<edge227 122 place 123> #<edge229 123 downstream 124>)
   (:SINGLE-DIGIT :COLON :DIGITS))
  "1∶25" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge3 139 up-to 141> #<edge55 19 stop-endurant 20> #<edge56 20 bio-entity 21>)
   (:BIO-ENTITY :HYPHEN :LOWER))
  "12C6-lysine" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge1 118 protein 120> #<edge49 16 proximity 17> #<edge50 17 "of" 18>)
   (:BIO-ENTITY :HYPHEN :LOWER))
  "13C6-lysine" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge575 326 of 327> :ASTERISK #<edge37 8 bio-process 9>) (:SINGLE-DIGIT :ASTERISK :INITIAL))
  "4°C." REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge514 277 bio-entity 281> #<edge515 276 bio-entity 281> #<edge516 282 article-figure 284>)
   (:LOWER :FORWARD-SLASH :MIXED))
  "mg/mL" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge477 261 digit-sequence 262> #<edge478 261 number 262> #<edge479 262 amino-acid 263>)
   (:PROTEIN :HYPHEN :MIXED))
  "Tris-HCl" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge411 228 reinitiation 229> #<edge412 229 site 230> #<edge413 230 modal 231>)
   (:PROTEIN :HYPHEN :MIXED))
  "Tris–HCl" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge254 142 bio-entity 143> #<edge17 314 wild-type 317>) (:DIGITS :PROTEIN)) "12C6"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge247 135 start 136> #<edge15 300 wild-type 303>) (:DIGITS :PROTEIN)) "13C6"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge242 132 even 133> #<edge243 133 when 134> #<edge244 133 when 134>)
   (:LOWER :FORWARD-SLASH :MIXED))
  "mg/mL" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge231 124 of 125> #<edge232 125 "the" 126> #<edge233 125 the 126>)
   (:SINGLE-LOWER :FORWARD-SLASH :SINGLE-LOWER))
  "v/v" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge104 4 bio-process 9> :ASTERISK #<edge105 9 suggest 11>) (:DIGITS :ASTERISK :SINGLE-CAP))
  "37°C" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge93 54 digit-sequence 55> #<edge94 54 number 55> #<edge95 5 hyphenated-pair 8>)
   (:LOWER :FORWARD-SLASH :SINGLE-CAP))
  "mmol/L" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge87 46 digit-sequence 47> #<edge88 46 number 47> #<edge89 48 COMMA 49>)
   (:LOWER :FORWARD-SLASH :LOWER))
  "penicillin/streptomycin" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge3 139 up-to 141> #<edge24 415 "eif3" 417> #<edge25 415 protein 417>
    #<edge26 415 bio-complex 417>)
   (:BIO-COMPLEX :SINGLE-LOWER :HYPHEN :LOWER))
  "eIF2α-dependent" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge321 165 and 166> #<edge322 166 stop 167> #<edge323 166 stop-endurant 167>)
   (:LOWER :HYPHEN :LOWER))
  "long-lived" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge11 274 such-as 276> #<edge128 57 this 58>) (:PROTEIN :LOWER)) "anti-apoptotic"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:CLOSE-ANGLE-BRACKET #<edge166 67 bio-complex 69>) (:CLOSE-ANGLE-BRACKET :DIGITS)) ">1.5"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:OPEN-ANGLE-BRACKET #<edge159 81 movement 82>) (:OPEN-ANGLE-BRACKET :DIGITS)) "<0.75"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge57 21 "of" 22> #<edge58 21 of 22> #<edge61 23 upstream-segment 24>)
   (:PROTEIN :FORWARD-SLASH :FULL))
  "LC/MS" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge134 62 "a" 63> #<edge8 214 "wild-type" 217>) (:RESIDUE-ON-PROTEIN :INITIAL)) "S38A."
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge5 174 but-rather 176> #<edge70 29 "of" 30>) (:PROTEIN :SINGLE-CAP)) "S25A"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge3 139 up-to 141> #<edge67 26 the 27>) (:PROTEIN :SINGLE-CAP)) "S16A"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:TILDA #<edge237 128 COMMA 129>) (:TILDA :PERCENT)) "∼60–90%" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:TILDA #<edge235 126 stop-endurant 127>) (:TILDA :PERCENT)) "∼43%" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge452 213 site 226> :OPEN-ANGLE-BRACKET #<edge455 234 modifier 240>)
   (:SINGLE-CAP :OPEN-ANGLE-BRACKET :DIGITS))
  "P<0.01" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge434 199 subordinate-conjunction 201> :OPEN-ANGLE-BRACKET
    #<edge437 220 point-mutation 225>)
   (:SINGLE-CAP :OPEN-ANGLE-BRACKET :DIGITS))
  "P<0.05" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge240 131 detect 132> #<edge242 132 even 133>) (:SINGLE-CAP :SINGLE-DIGIT)) "S1"
  REIFY-TWO-PART-LABEL)
 (((#<edge218 114 start 115> #<edge219 115 bio-entity 116> #<edge220 116 "of" 117>)
   (:LOWER :HYPHEN :LOWER))
  "colony-forming" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge13 285 close-to 287> #<edge128 57 this 58> #<edge15 300 wild-type 303>
    #<edge130 59 believe 60>)
   (:CELL-LINE :HYPHEN :PROTEIN :SINGLE-CAP))
  "U266-S25A" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge9 214 wild-type 217> #<edge124 13 of 25> #<edge11 274 such-as 276> #<edge126 3 on 9>)
   (:CELL-LINE :HYPHEN :PROTEIN :SINGLE-CAP))
  "U266-S16A" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge11 274 such-as 276> #<edge257 144 "of" 145>) (:PHOSPHORYLATE :RESIDUE-ON-PROTEIN))
  "p-Ser38" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge9 214 wild-type 217> #<edge256 143 downstream 144>) (:PHOSPHORYLATE :RESIDUE-ON-PROTEIN))
  "p-Ser16" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge68 27 start 28> #<edge69 28 bio-entity 29> #<edge71 29 of 30>)
   (:PROTEIN :HYPHEN :SINGLE-DIGIT))
  "kinase-2" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge88 46 number 47> #<edge90 50 digit-sequence 51>) (:SINGLE-CAP :SINGLE-DIGIT)) "S5"
  REIFY-TWO-PART-LABEL)
 (((#<edge84 42 digit-sequence 43> #<edge86 44 COMMA 45>) (:SINGLE-CAP :SINGLE-DIGIT)) "S4"
  REIFY-TWO-PART-LABEL)
 (((#<edge76 32 protein 33> #<edge78 34 digit-sequence 35>) (:SINGLE-CAP :SINGLE-DIGIT)) "S3"
  REIFY-TWO-PART-LABEL)
 (((#<edge1 118 protein 120> :LOWER) (:|HTTP://| :LOWER)) "http://www" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge122 14 proximity 25> #<edge123 15 close 16> #<edge125 9 suggest 13>)
   (:LOWER :HYPHEN :PROTEIN))
  "steady-state" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge1 118 protein 120> #<edge31 3 on 4> #<edge32 4 "the" 5> #<edge39 10 suggest 11>)
   (:PROTEIN :LOWER :HYPHEN :RESIDUE-ON-PROTEIN))
  "anti-phospho-Ser38" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge173 82 following 84> #<edge194 95 terminate 96>) (:DIGITS :FOLD-ENDURANT)) "1.5-fold"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge144 69 semicolon 70> #<edge191 93 between 94>) (:DIGITS :FOLD-ENDURANT)) "1.5-fold"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge640 342 fragment 347> #<edge642 354 site 356>) (:SINGLE-CAP :SINGLE-DIGIT)) "S1"
  REIFY-TWO-PART-LABEL)
 (((#<edge622 331 figure 334> #<edge623 330 parentheses 335> #<edge626 299 bio-entity 304>)
   (:FULL :FORWARD-SLASH :FULL))
  "MS/MS" MAKE-HYPHENATED-PAIR)
 (((:LOWER #<edge608 350 direction 351> #<edge609 351 SINGLE-QUOTE 352>) (:LOWER :HYPHEN :LOWER))
  "phosphosite-containing" :NO-EDGE)
 (((#<edge598 344 digit-sequence 345> #<edge599 344 number 345> #<edge602 346 fragment 347>)
   (:FULL :FORWARD-SLASH :FULL))
  "MS/MS" MAKE-HYPHENATED-PAIR)
 (((#<edge535 246 under 250> #<edge537 293 COMMA 294>) (:SINGLE-CAP :SINGLE-DIGIT)) "S1"
  REIFY-TWO-PART-LABEL)
 (((#<edge486 268 near 269> #<edge487 269 HYPHEN 270> #<edge490 272 bio-entity 273>)
   (:FULL :FORWARD-SLASH :FULL))
  "MS/MS" MAKE-HYPHENATED-PAIR)
 (((#<edge471 256 downstream-segment 257> #<edge473 257 bio-entity 258>)
   (:SINGLE-CAP :SINGLE-DIGIT))
  "S1" REIFY-TWO-PART-LABEL)
 (((#<edge226 121 be 122> #<edge227 122 place 123> #<edge230 124 "of" 125>)
   (:FULL :FORWARD-SLASH :FULL))
  "MS/MS" MAKE-HYPHENATED-PAIR)
 (((#<edge206 105 efficiency 106> #<edge207 107 figure 108> #<edge210 108 number 109>
    #<edge211 110 and 111> #<edge214 112 when 113>)
   (:PROTEIN :HYPHEN :FULL :FORWARD-SLASH :FULL))
  "LC-MS/MS" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge176 70 be 72> #<edge177 65 of 69> #<edge180 85 however 86> #<edge181 86 COMMA 87>
    #<edge184 88 show 89>)
   (:PROTEIN :HYPHEN :FULL :FORWARD-SLASH :FULL))
  "LC-MS/MS" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge162 83 terminate 84> #<edge163 58 believe 60> #<edge165 62 mobility 65>)
   (:SINGLE-DIGIT :COLON :SINGLE-DIGIT))
  "1∶1" MAKE-NUMBER-OR-WORD-COLON-STRUCTURE)
 (((#<edge30 3 "on" 4> #<edge31 3 on 4> #<edge34 5 terminate 6> #<edge35 6 HYPHEN 7>
    #<edge38 9 have 10>)
   (:PROTEIN :HYPHEN :FULL :FORWARD-SLASH :FULL))
  "LC-MS/MS" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge156 78 undergo 79> #<edge157 79 only 80> #<edge158 80 limit 81>) (:LOWER :HYPHEN :LOWER))
  "stable-isotope" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge84 42 digit-sequence 43> #<edge85 42 number 43> #<edge86 44 COMMA 45>)
   (:LOWER :HYPHEN :LOWER))
  "large-scale" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge1 118 protein 120> #<edge72 30 "the" 31> #<edge73 30 the 31>)
   (:MASS-SPECTROMETRY :HYPHEN :LOWER))
  "mass spectrometry-based" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge26 415 bio-complex 417> #<edge27 1 sequencer 2> #<edge28 2 study-bio-method 3>)
   (:LOWER :HYPHEN :LOWER))
  "large-scale" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge41 11 the 12> #<edge145 70 "that" 71> #<edge147 71 be 72>)
   (:PROTEIN :FORWARD-SLASH :DIGITS))
  "p44/42" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:FULL #<edge0 118 "BM2" 120>) (:FULL :COLON)) "JPT:" :NO-EDGE)
 (((#<edge52 18 "the" 19> #<edge53 18 the 19> #<edge54 19 stop 20>) (:LOWER :HYPHEN :LOWER))
  "post-inoculation" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge139 65 of 66> #<edge140 66 "the" 67> #<edge141 66 the 67>) (:LOWER :HYPHEN :LOWER))
  "post-infection" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge474 258 bio-entity 259> #<edge475 260 figure 261> #<edge476 260 article-figure 261>)
   (:LOWER :HYPHEN :LOWER))
  "post-inoculation" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge339 177 well 178> #<edge340 178 "the" 179> #<edge341 178 the 179>)
   (:LOWER :HYPHEN :LOWER))
  "post-inoculation" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge281 137 move-something-somewhere 139> #<edge282 146 position 148>
    #<edge283 145 position 148>)
   (:LOWER :HYPHEN :LOWER))
  "post-inoculation" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge97 37 square-brackets 40> #<edge98 41 square-brackets 44>
    #<edge99 45 square-brackets 48>)
   (:LOWER :HYPHEN :LOWER))
  "post-inoculation" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge413 230 modal 231> #<edge415 232 bio-use 233> #<edge416 233 when 234>
    #<edge418 234 "the" 235>)
   (:SINGLE-DIGIT :SINGLE-CAP :HYPHEN :SINGLE-CAP))
  "6A-H" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge403 221 amino-acid 222> #<edge404 221 a 222> #<edge405 222 and 223>)
   (:LOWER :HYPHEN :LOWER))
  "post-infection" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge291 124 of 128> #<edge292 123 downstream 128> #<edge293 116 of 121>)
   (:LOWER :HYPHEN :LOWER))
  "post-inoculation" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge170 77 undergo 79> #<edge171 79 limit 81> #<edge172 79 movement 82>)
   (:LOWER :HYPHEN :LOWER))
  "post-inoculation" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge111 23 open-reading-frame 25> #<edge112 22 open-reading-frame 25>
    #<edge113 31 open-reading-frame 33>)
   (:LOWER :HYPHEN :LOWER))
  "post-infection" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge259 145 pronoun/inanimate 146> #<edge260 146 modifier 147>
    #<edge261 147 position-bio-process 148>)
   (:LOWER :HYPHEN :LOWER))
  "post-inoculation" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge129 58 be 59> #<edge130 59 believe 60> #<edge131 60 "to" 61>) (:FULL :HYPHEN :FULL))
  "HI-RSV" MAKE-HYPHENATED-PAIR)
 (((#<edge96 33 square-brackets 36> #<edge97 37 square-brackets 40>
    #<edge98 41 square-brackets 44>)
   (:LOWER :HYPHEN :LOWER))
  "post-inoculation" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge48 15 close 16> #<edge49 16 proximity 17> #<edge50 17 "of" 18>) (:LOWER :HYPHEN :LOWER))
  "post-inoculation" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge35 6 HYPHEN 7> #<edge36 7 reinitiation 8> #<edge37 8 bio-process 9>)
   (:FULL :HYPHEN :FULL))
  "HI-RSV" MAKE-HYPHENATED-PAIR)
 (((#<edge44 13 of 14> #<edge47 15 close-bio-process 16> #<edge48 15 close 16>
    #<edge49 16 proximity 17> #<edge51 17 of 18>)
   (:HYPHEN :DIGITS :FORWARD-SLASH :HYPHEN :SINGLE-DIGIT))
  "-0.9/-1" PACKAGE-SLASHED-SEQUENCE)
 (((#<edge34 5 terminate 6> #<edge35 6 HYPHEN 7> #<edge36 7 reinitiation 8>)
   (:LOWER :HYPHEN :LOWER))
  "post-inoculation" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge254 142 bio-entity 143> #<edge255 143 downstream-segment 144>
    #<edge256 143 downstream 144>)
   (:FULL :HYPHEN :FULL))
  "HI-RSV" MAKE-HYPHENATED-PAIR)
 (((#<edge205 104 reinitiation 105> #<edge206 105 efficiency 106> #<edge207 107 figure 108>)
   (:LOWER :HYPHEN :LOWER))
  "post-inoculation" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge62 23 upstream 24> #<edge63 24 protein 25> #<edge64 24 open-reading-frame 25>)
   (:LOWER :HYPHEN :LOWER))
  "post-inoculation" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge25 415 protein 417> #<edge26 415 bio-complex 417> #<edge27 1 sequencer 2>)
   (:FULL :HYPHEN :FULL))
  "HI-RSV" MAKE-HYPHENATED-PAIR)
 (((#<edge223 117 the 118> #<edge225 120 open-reading-frame 121> #<edge226 121 be 122>
    #<edge227 122 place 123>)
   (:SINGLE-DIGIT :SINGLE-CAP :HYPHEN :SINGLE-CAP))
  "4A-D" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge212 111 "that" 112> #<edge213 111 that 112> #<edge214 112 when 113>)
   (:FULL :HYPHEN :FULL))
  "HI-RSV" MAKE-HYPHENATED-PAIR)
 (((#<edge144 69 semicolon 70> #<edge145 70 "that" 71> #<edge146 70 that 71>)
   (:LOWER :HYPHEN :LOWER))
  "post-inoculation" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge66 26 "the" 27> #<edge67 26 the 27> #<edge69 28 bio-entity 29>)
   (:PROTEIN :HYPHEN :SINGLE-DIGIT))
  "Th-2" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge61 23 upstream-segment 24> #<edge62 23 upstream 24> #<edge64 24 open-reading-frame 25>)
   (:PROTEIN :HYPHEN :SINGLE-DIGIT))
  "Th-1" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge17 314 wild-type 317> #<edge224 120 protein 121> #<edge225 120 open-reading-frame 121>)
   (:PROTEIN :HYPHEN :SINGLE-CAP))
  "3A-C" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge171 79 limit 81> #<edge172 79 movement 82> #<edge173 82 following 84>)
   (:LOWER :HYPHEN :LOWER))
  "post-inoculation" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge44 13 of 14> #<edge45 14 "the" 15> #<edge46 14 the 15>) (:LOWER :HYPHEN :LOWER))
  "post-inoculation" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge452 213 site 226> #<edge453 242 at 245> #<edge454 238 modifier 240>)
   (:FULL :HYPHEN :FULL))
  "HI-RSV" MAKE-HYPHENATED-PAIR)
 (((#<edge357 195 the 196> #<edge358 196 bio-entity 197> #<edge359 191 bio-complex 193>)
   (:LOWER :HYPHEN :LOWER))
  "post-inoculation" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge344 181 be 182> #<edge345 182 tethere 183> #<edge346 187 "the" 188>)
   (:LOWER :FORWARD-SLASH :MIXED))
  "copies/mL" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge327 168 per 169> #<edge328 169 bio-entity 170> #<edge329 170 "that" 171>)
   (:LOWER :FORWARD-SLASH :MIXED))
  "copies/mL" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge307 155 "that" 156> #<edge308 155 that 156> #<edge309 156 "it" 157>)
   (:LOWER :HYPHEN :FULL))
  "live-RSV" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge132 60 to 61> #<edge133 61 reflect 62> #<edge134 62 "a" 63>) (:LOWER :HYPHEN :LOWER))
  "post-inoculation" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge75 31 downstream 32> #<edge76 32 protein 33> #<edge77 32 open-reading-frame 33>)
   (:LOWER :HYPHEN :FULL))
  "live-RSV" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge8 214 "wild-type" 217> #<edge9 214 wild-type 217> #<edge10 274 "such as" 276>)
   (:FULL :HYPHEN :FULL))
  "HI-RSV" MAKE-HYPHENATED-PAIR)
 (((#<edge210 108 number 109> #<edge211 110 and 111> #<edge212 111 "that" 112>)
   (:LOWER :HYPHEN :LOWER))
  "post-inoculation" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge119 17 of 21> #<edge120 14 proximity 21> #<edge121 15 close 16>) (:LOWER :HYPHEN :LOWER))
  "post-inoculation" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge86 44 COMMA 45> #<edge87 46 digit-sequence 47> #<edge88 46 number 47>)
   (:LOWER :HYPHEN :LOWER))
  "post-inoculation" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge149 73 "it" 74> #<edge150 73 pronoun/inanimate 74> #<edge151 74 modal 75>)
   (:LOWER :HYPHEN :LOWER))
  "post-inoculation" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge140 66 "the" 67> #<edge141 66 the 67> #<edge142 67 tethere 68>) (:DIGITS :HYPHEN :LOWER))
  "two-tailed" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge45 14 "the" 15> #<edge46 14 the 15> :CAPITALIZED) (:CAPITALIZED :HYPHEN :CAPITALIZED))
  "Kruskal-Wallis" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge40 11 "the" 12> #<edge41 11 the 12> #<edge42 12 importance 13>) (:DIGITS :HYPHEN :LOWER))
  "one-way" MAKE-HYPHENATED-STRUCTURE)
 (((:GREEK_CAPITAL_LETTER_DELTA :GREEK_CAPITAL_LETTER_DELTA #<edge106 11 importance 13>)
   (:GREEK_CAPITAL_LETTER_DELTA :GREEK_CAPITAL_LETTER_DELTA :CAPITALIZED))
  "ΔΔCt" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge46 14 the 15> :UNDER-BAR #<edge17 314 wild-type 317>) (:DIGITS :UNDER-BAR :MOLECULE))
  "99999056_m1" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge40 11 "the" 12> :UNDER-BAR #<edge11 274 such-as 276>) (:DIGITS :UNDER-BAR :MOLECULE))
  "00433859_m1" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge32 4 "the" 5> :UNDER-BAR #<edge7 184 by-virtue-of 187>) (:DIGITS :UNDER-BAR :MOLECULE))
  "00445259_m1" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge27 1 sequencer 2> :UNDER-BAR #<edge3 139 up-to 141>) (:DIGITS :UNDER-BAR :MOLECULE))
  "00801778_m1" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge153 76 ability 77> #<edge154 77 "to" 78> #<edge155 77 to 78>) (:LOWER :HYPHEN :LOWER))
  "mini-columns" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge142 67 tethere 68> #<edge143 68 bio-complex 69> #<edge144 69 semicolon 70>)
   (:LOWER :HYPHEN :LOWER))
  "whole-lung" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge71 29 of 30> #<edge72 30 "the" 31> #<edge73 30 the 31>) (:LOWER :FORWARD-SLASH :LOWER))
  "quality/purity" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge237 128 COMMA 129> #<edge238 129 reinitiation 130> #<edge239 130 be 131>)
   (:LOWER :HYPHEN :LOWER))
  "chromogen-based" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge7 184 by-virtue-of 187> #<edge177 65 of 69>) (:PROTEIN :LOWER)) "anti-rabbit"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge105 9 suggest 11> :ASTERISK #<edge106 11 importance 13>)
   (:HYPHENATED-NUMBER :ASTERISK :SINGLE-CAP))
  "95-100°C" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge71 29 of 30> #<edge86 44 COMMA 45>) (:CAPITALIZED :UNIT-OF-MEASURE)) "Four-μm"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge99 45 square-brackets 48> :AND-SIGN #<edge2 139 "up to" 141>)
   (:SINGLE-CAP :AND-SIGN :INITIAL))
  "H&E." REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge90 50 digit-sequence 51> #<edge91 50 number 51> #<edge93 54 digit-sequence 55>)
   (:LOWER :HYPHEN :LOWER))
  "whole-mount" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge36 7 reinitiation 8> #<edge37 8 bio-process 9> #<edge38 9 have 10>)
   (:LOWER :HYPHEN :LOWER))
  "whole-body" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge289 130 detect 132> #<edge290 130 detect 133> #<edge292 123 downstream 128>)
   (:LOWER :HYPHEN :LOWER))
  "time-point" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge208 107 article-figure 108> :MULTIPLICATION-SIGN) (:SINGLE-DIGIT :MULTIPLICATION-SIGN))
  "1×" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge165 62 mobility 65> #<edge166 67 bio-complex 69> #<edge168 66 bio-complex 69>)
   (:DIGITS :HYPHEN :LOWER))
  "25-gauge" MAKE-HYPHENATED-STRUCTURE)
 (((:CAPITALIZED :REGISTERED_SIGN) (:CAPITALIZED :REGISTERED_SIGN)) "Tempus®"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge1 118 protein 120> #<edge13 285 close-to 287> #<edge14 300 "wild-type" 303>)
   (:BIO-ENTITY :FORWARD-SLASH :LOWER))
  "μL/mouse" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:TILDA #<edge12 285 "close to" 287>) (:TILDA :DIGITS)) "~500" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge351 191 "the" 192> #<edge352 191 the 192> #<edge353 192 bio-complex 193>)
   (:LOWER :HYPHEN :LOWER))
  "post-inoculation" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge174 74 ability 77> #<edge175 73 ability 77> #<edge176 70 be 72>) (:LOWER :HYPHEN :LOWER))
  "post-inoculation" MAKE-HYPHENATED-STRUCTURE)
 (((#<edge165 62 mobility 65> #<edge166 67 bio-complex 69>) (:SINGLE-LOWER :SINGLE-LOWER)) "μl"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge158 80 limit 81> #<edge159 81 movement 82> #<edge160 82 following-adj 83>)
   (:LOWER :FORWARD-SLASH :LOWER))
  "mg/kg" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge150 73 pronoun/inanimate 74> #<edge151 74 modal 75> #<edge153 76 ability 77>)
   (:LOWER :FORWARD-SLASH :LOWER))
  "mg/per" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge65 25 and 26> #<edge66 26 "the" 27>) (:SINGLE-LOWER :SINGLE-CAP)) "μL"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge14 300 "wild-type" 303> #<edge15 300 wild-type 303>) (:SINGLE-LOWER :SINGLE-CAP)) "μL"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((:FULL #<edge6 184 "by virtue of" 187> #<edge7 184 by-virtue-of 187>)
   (:FULL :FORWARD-SLASH :SINGLE-LOWER))
  "BALB/c" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge2 139 "up to" 141> #<edge37 8 bio-process 9>) (:CAPITALIZED :TIME-UNIT)) "Seven-week"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge140 66 "the" 67> #<edge141 66 the 67> #<edge142 67 tethere 68>)
   (:LOWER :FORWARD-SLASH :LOWER))
  "copies/reaction" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge71 29 of 30> #<edge72 30 "the" 31> #<edge73 30 the 31>) (:FULL :FORWARD-SLASH :MIXED))
  "PFU/mL" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge68 27 start 28> #<edge70 29 "of" 30>) (:LOWER :DIGITS)) "log10"
  REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge19 319 even-if 321> #<edge20 376 "wild-type" 379> #<edge22 393 "due to" 395>)
   (:PROTEIN :HYPHEN :SINGLE-DIGIT))
  "Hep-2" MAKE-HYPHENATED-STRUCTURE)
 (((:FULL #<edge10 274 "such as" 276> #<edge12 285 "close to" 287>) (:FULL :HYPHEN :DIGITS))
  "ATCC-1540" REIFY-NS-NAME-AS-BIO-ENTITY)
 (((#<edge7 184 by-virtue-of 187> #<edge9 214 wild-type 217>) (:SINGLE-CAP :SINGLE-DIGIT)) "A2"
  REIFY-TWO-PART-LABEL))